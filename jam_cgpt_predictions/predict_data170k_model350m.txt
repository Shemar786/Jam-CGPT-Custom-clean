10001320		takes a connection and a buffer and parses the buffer into various blocks and bytes. It then processes the header and data blocks, reads the message, and adds the received message to the connection. It also increments the closed buffer count and sends
10001325		closes the connection object, releases its buffer, and then calls the super class close method.
This method releases the buffer associated with the Connection object.
This method releases the buffer associated with the Connection object.
This method calls the super
10214587		converts a value to a Property object by parsing the value using the DOMParser.

This method converts an XML string to a Document object by merging all properties and values from the XML string with the Document Object Model (OMT).

10215017		updates the UI from the DOM model and also updates the SWT table with the DOM list of shapes (rectangle, ellipse) if the DOM model is not null.
SUMMARY
This method is used to update
10215277		adds a controller error listener to the tkui document if the controller is not null and has a layout container.

This method adds an error listener to the tkui document's control context.
SUMMARY
This
10216042		performs the 'editElement' method of an 'TreeEditor' class by getting the selected element, setting it as the current element, and modifying settings, including setting the selection and changing the cursor.
SUMMARY
This method
10216064		saves the value of a CellEditor and saves it to a tree item.

This method saves the editor value to a cell editor.
SUMMARY
This method is used to save editor value to a cell editor.


10216942		inserts a MenuItem into a Menubar at a given index position with a specified label and type.

This method inserts a single MenuItem into the menu by creating an MenubarMesage handler, adding menu items to
10217229		sets shared variables in a model using a map of key-value pairs.
This method throws an exception if the input is not a valid template model.
This method initializes the project by setting properties, loading models, getting symbols and variables
10217245		retrieves the template engine for a given type, using Spring configuration ID to obtain configuration parameters.

This method processes a chain of IBeans and returns an initialized IFetchContext.

This method determines which chain is open and
10217907		creates and returns a SWT Composite component with a given parent and number of columns.

This method builds the SWT Composite widget by adding custom children if they don't exist, and then invoking the initCustom widgets method.


10218506		returns a Part object for a specified model element. The Part object can be one, a diagram element or an element reference. If the model element is not recognized, an IllegalArgumentException is thrown. If the element is wrapped in a
10218943		saves the table's column settings by writing the table's settings, column settings, sort column, and sort order.

This method saves the table's column settings by writing the table's settings, column settings, sort column, and sort
10219363		retrieves patterns from preferences and adds them to a list of matching patterns, removing unwanted ones from the list.

This method retrieves the selected item from an argument and updates the matching patterns and update the count of matching patterns.

10219398		resets the instance document by invoking the reset method of the initializedInstanceDocument, creating an instance document, and notifying the rootNodeObservable with the instance document. If there are no events posted by an unmarshallTarget, the
10221933		sets the bounds of the decoration within the specified x and y coordinates, or to the specified dimensions if the bounds parameters are null. It then synchronizes to ensure that only one thread at a time can access the rectangle.
SUMMARY
10221965		fills a textarea with HTML content from a stream
10222579		checks if another CSSConditionalSelector is equal to the current CSSConditionalSelector.                This method checks if two CSSConditionalSelector instances are the same by
10222898		returns any computed CSS style declaration for the given element and pseudo element, if any.

This method checks the type of the given element and compares it with the image type if it's a CSS image.

This method checks if
10223338		retrieves the handler class name for the specified property by creating string and adding the class name from the 'src' property descriptor.

This method checks if the property is processed by retrieving the handler class name, getting the property store,
10227347		returns a command based on a request. It first retrieves the request, then it tries to fetch the appropriate command for the given request and adds it to the `getExcutRequest` if it's not null.

This method
10228059		adds a property descriptor for the return value of the operation to the item property list.

This method overrides the superclass method to add items to the list of property descriptors for a given object.
SUMMARY

10228096		adds a property descriptor for the "isIn" attribute of a parameter object.

This method returns a list of property descriptors for the given object.
SUMMARY
This method is used to add a property descriptor for
10228099		adds a property descriptor for the "isOut" feature to the given object.

This method adds a property descriptor for the "isIn" feature to the given object.
SUMMARY
This method is used to add
10228107		adds a property descriptor for the referenced instances feature of the current instance.

This method overrides the superclass's method to retrieve the property descriptors for the current instance and then calls the superclass version of this method.


10228580		This method parses two XML documents from InputStream objects, compares their root elements, and returns a Boolean value.

This method compares the first XML element of two Document objects, returning true if the first is not null.

This
10237254		logs the reception of aelfred with an event when it is created with the name "MessageEvent" and the message "MessageEvent".
This method processes incoming]: Gets rcvMsgReceived, rcvMsgMsgComplete, and
10237266		removes a user from the system, throwing an exception if the operation fails.

This method removes a user from the list of users, throwing an exception if the operation fails.
SUMMARY
This method is used to remove
10237358		sends a message to the peer by creating a thread to be joined with the connection and handling interruptions. It sends the message to the caller, waits for any pending disconnections, and sends a success message or an error message. It catches
10262852		determines if there is a convergence for a VectorTransform matrix to search for Closest Centroid by comparing the current vectors to a known nearest centroid vector.
SUMMARY
This method is used to normalize vectors and
10262853		updates the nearest neighbours of a vector probe by clearing the current list of nearest neighbors and updating the current list of nearest centroid. It then iterates through the all vectors, updating the Nearest centroids if applicable.

This
10262887		calculates the squared error of the current node divided by the sum of squared errors within its parent and child nodes, excluding the root node for Leafness.
SUMMARY
This method is used to calculate the squared error of the
10262922		updates the mean of a parent entry if it has no children or if the number of children is less than 2, and that the mean is within a specified maximum count of children.

This method initializes an instance of the class with
10263089		converts vectors of vectors to Euclidean centers by iterating through the vectors, and for each vector, it determines if it has converged to the next vector, considers its next point, and converts the vector to nearest centroid.

10263190		removes an element from the heap by shifting its left child down, removing it from the heap, and updating the size of the heap.

This method replaces the first child node of a given node by shifting its right child down.

10263895		calculates the distance between the calling centroids and neighboring centroids by summing their distances.

This method calculates the distortion factor for matching clusters of each cluster by comparing the distance between the centroid and locabilties
10347019		inserts content into an element with the specified name and method.
This method sets the type of the component.
This method sets the preferred and maximum sizes of the component.
SUMMARY
This method is used to set the
1046747		creates a Tiles container by creating a ServletContextAdapter, an AutoTilesApplicationContextFactory, and InstantiationFactory. It then uses the AbstractTilesApplicationContextFactory to create and use it to create a TilesContainer.
1046774		tests the deletion of the blob data type by insertion the blank value into the database and then asserts that the blob data type is now cleared.
SUMMARY
This method is used to test the deletion of the blob data type.


1046788		tests the generation of a new country with an existing sequence generator for various countries and generates a new one with the updated sequence generator.

This method tests the generation of a new country with a sequence generator for the correct sequence generators. It ver
1046802		tests the addCountryWithUUIDGenerator() method by creating a CountryWithUUID object with a CountryWithUUID Generator and adding it to the session. It then asserts that the newly created CountryWithUUID is not null and has
1046818		tests the deletion of a clob data type. It inserts test data, opens and updates records, and checks if the clob record still exists and deleted successfully.

This method tests the ability to perform SQL statements to delete a clob
10576200		verifies the user's permissions and disposes any resources associated with them before calling the superclass's cleanup method.

This method tests the constructor and setter methods for the IMAPListener class.

This method tests the constructor and
10576314		takes a URI string and returns a string with the host information extracted from the URI.

This method retrieves the host information from the URI for use in the program. It supports creating a new instance of the Host class, passing the
10576712		tests the interface of a given test case by asserting that the name of the test is "TestInetAddress," which can be "localhost", "1.0.0.0", I use the Java API, and the information provided in
10576766		tests the hasCorrectArguments method of the CmdLine class by testing for the correct number of arguments in the cmdLine command.

This method tests the hasCorrectArguments method of the CmdLine class by various input arguments and
10576888		retrieves the last updated timestamp of a given node from a Node, by first checking if the node has children. If no children, it returns 0. Otherwise, it getting the node's last modified timestamp from the Node's property node.
10576918		returns the name of the resource or object based on its label or ignore case.
SUMMARY
This method is used to obtain the associated name from the object repository.


10577072		rejects a remote email address for a recipient and updates the flags of the received message.

This method rejects a remote email address for a recipient and deletes the recipient if it exists.

This method rejects a remote email address
10577109		rejects an attempt for a loss of unknown mail message by updating the message status to `MailNotification.STATUS_INFORMATIONAL_OTHER` and updating the user's message not indicate received due to the loss.

This
10577222		handles whether a mail needs to be processed and handles sending the message to an error repository if it does not require a message to be processed.

This method deletes a mail from an error repository, clears the message store, and updates
10577360		updates a given object with the lock and returns true if the lock is successful, otherwise it returns false.
SUMMARY
This method is used to compute the lock ID for a given key's caller.


10577422		sets the destination directory for the configuration, throwing a ConfigurationException if the specified destination is not valid by attempting to find it in the file system.
SUMMARY
This method is used to set the destination directory for the configuration, throwing
10577428		encodes a path into a byte buffer, returning ASCII characters as String.
This method encodes a path into a Date object, replacing invalid characters with hexadecimal representations of the date and time represented with 'T'.
This method
10577511		sets the message seen flag to true if the read message flag is not set already, false otherwise. It also sets the read message flag to true if the read message flag is set and false otherwise.

This method sets the message seen flag
10577532		This method tests the functionality of the `removeDomain` method by adding and removing domains, and checking the number of domains in the list.

This method tests the `addRemove` method by adding and removing domains, and verifying the number
10577617		reads a chunk of data from the input stream and returns it as an Object. If the end of the stream is reached, a ByteBuffer is appended with the end of the chunk. If the end of the stream is encountered, the next
10577622		reads the next character from the stream of characters in the buffer, throwing an exception if there are no more characters or if the buffer is too small.

This method returns a single character from the string buffer without skipping the desired number of characters
10577759		handles POP3 commands by executing the corresponding command, and processes commands based on their types. If the command is 'NORD', it converts the specified integer parameter to a string. If a 'ODPT', it creates a new date object
10577824		builds a read-only LDAP connection and generates a user object. It associates the base DN with the user ID attribute.

This method builds a read-only LDAP connection and assigns a userDN, user attributes, and host
10577846		registers MBeans with the MBean server.

This method registers MBeans with the MBean server.
SUMMARY
This method is used to register MBeans with the MBean server using
10577848		registers a mail processor with the specified base object name and processor name.

This method registers the mail processor MMBase with the specified base object name and processor name.
SUMMARY
This method is used to register a
10577856		updates the process time and updates the process time and success or error count based on the success reason.

This method updates the process time based on the success reason.

This method updates the process time and checks if the process time
10578060		checks if a table with a given name exists in the current database, using either case-sensitive or case-insensitive flags (LUCENE-2.1 and lowercase).

**tableUpperCase:** This method tests
10578061		updates the ham tokens and message counts for a given connection and query ID.
SUMMARY
This method is used to update the ham tokens for a given connection and query ID by calling updateTokens, setting message counts, and potentially
10578063		updates information for spam tokens in the database. It takes a Connection object and throws a SQLException if there is an error. It then calls three other methods to update the spam tokens, including the message count, whether to merge the
10578066		resets data by deleting statements from database tables based on the "sql.deleteQuery" with the "sql.select_new_space."key value.
This method initializes content parameters by setting the "contentPage" parameter with an
10578067		checks whether a given column with the given name exists in the specified table in a ResultSet.

This method checks whether a given field with the given name exists in the ResultSet.
SUMMARY
This method is used to
10578077		initializes the SQL queries for the connection and an analyzer, checking if all tables have been reset. If not reset, it initializes the analyzer and runs each one in a loop, which removes an error from a specific table and checks
10578158		retrieves the size of the message, assuming it is multipart/mixed or a single-part encrypted message. If the source is multipart/mixed or a single-part encrypted message, it calculates the size using the maximum
10578274		tests cloning via `CoW3` messages using the context of the `ProxyMessage` class and ensures that the output message is not null after write to it is handled by `ProxyMessage`.

This method verifies that the `write
10578279		writes objects to an object output stream as serialized objects.

This method writes a header object to an object output stream.

This method writes a state object to an object output stream.

This method returns an empty sequence
10578360		closes the output streams associated with the header and body of an HTTP response. It closes the headers, body streams, and the body stream.
SUMMARY
This method is used to close the header and body of an HTTP response
10578424		calculates the number of parameters for a given SQL string by iteratively adding 2 to the total number of parameters specified in the SQL string.
SUMMARY
This method is used to calculate the total number of parameters in a given
10578470		creates a string representation of an exception and handles potential errors during message delivery, class retrieval, parameter retrieval, failed state, and classifier relationships. The exception is then logged as a logging message.
SUMMARY
This method is
10578526		saves configuration mappings to a file and registers all existing configuration mappings.
SUMMARY
This method is used to register all configuration mappings after a properties-set test.


10578609		populates an object mail message, which includes details such as subject, body, size, sender and recipient addresses. It parses details such as date, sender, body, and size.

This method sets custom properties such as user ID
10578654		retrieves the primary name of the username who performed it, which is a username, and uses a statement to update the user's alias in a database. 
This method sets up the username and password fields, persists the user database,
10578705		initializes the MailRepository object, including setting the repositoryPath and passThrough parameters, and initializing the MailSender object.

This method sets the mailStore database connection and initializes the mailSender.

This method
10578707		sends and receives a mail, performing specific actions based on the value of the message received, such as sending an email, receiving an email, and executing managed commands.

This method authenticates a user by sending an email to the server
10578741		returns the username of a MailAddress, either as a String or from the superclass's getUsername method if the MailAddress support isvisible.
SUMMARY
This method is used to return the username of a MailAddress
10578805		takes a string as input and returns a string with a separator between two parts separated by commas.
SUMMARY
This method is used to provide a separator between the second part of the string.


10579053		takes a Mail object as input, and returns a list of recipients.
This method gets a collection of recipients associated with an email message.
This method checks if a MailAddress has a PRINCED.
This method retrieves a
10579057		sets the recipients of a new mail and the original mail to the transformed values of the new mail parameter. It handles conversion of recipients to local java objects and setting the new recipients to send the via multipart mail.

This method handles mail
10579062		takes a Session object as input and returns an ActiveMQSession object, which can be either a SessionProxy or a org.apache.qalab.castor.TopicSession. It handles cases where the session is no longer an Active
10579064		sets an external recipient in a JavaMail object, with the specified address array.

This method sets the content-type to "application/x-www-form-urlencoded" and returns the resulting JSP page.
S
10579092		returns the mail address for the source recipient, based on the original mail address or the sender address if the source recipient is unknown.
SUMMARY
This method is used to obtain or update a mail address for reply-to based
10579340		retrieves all the headers from a MimeMessage.
This method returns a string containing the message headers.
This method returns an enumeration of the header lines in the message.
SUMMARY
This method is used to
10579412		assigns a value to the MimeMessageId of the originalMail variable.
This method assigns a value to the MimeMessageId of the newMessage variable.
SUMMARY
This method is used to restore the M
10855978		tests the configuration of the RFC2965Spec cookie by parsing the version attribute and checking if it throws an exception when the password is not set to "Basic".

This method tests the validation of the version attribute by parsing the version attribute and
10856115		sets up a client-side cookie with specific domain, path, and default value for testing.

This method sets up a test connection and cookie wrapper. It then adds specific values to a cookie, including domain, path, domain attribute,
10856252		creates a temporary file with the name "CsvPartTest_TempTest.txt" and writes a series of partner data to it.
This method creates a temporary file with the name "ResultsPart_TempTest.txt" and
10856281		tests the removal of a specified parameter from the PostMethod object and verifies that the removeParameter method returns the correct value for each parameter with the same name with "param" which should be removed.

This method tests the removal of a
10856285		tests setting the cause of an IOException and verifying that the cause was retrieved correctly.
This method sets a throwable as the cause of the HttpException and verifies that it was not set correctly.
This method catches an Http
10856530		tests sending an HTTP GET request to the server and asserts that the response status code is 200.

This method tests sending an HTTP POST request to the server and asserts that the response body length is not greater than 0.
SUMM
10856746		computes the hash code for the object based on its default port, scheme, port, and SSL properties.

This method returns a hash code for the object based on the object's class name, name, and optional attributes for the port
10856923		returns the next byte in the stream as an integer, throwing an exception if the stream is already closed or the end of the stream.

This method reads bytes from the input stream into a buffer and returns an integer.

This
1086025		sets the player server and creates a human player object and an action to lauch it, and enables server actions based on the player's existence and availability.

This method disables several actions, ensures that the server object is not null
1086054		triggers user move when a move is made on the board, including playback of player movements, exiting the game, and playing the game if there is no human move.

This method updates the game board and player list when a user
1086087		takes a Board object as an argument and attempts to cast it to BTMove. It first retrieves the BTMove, then calculates the best move found on the board. If the best move is greater than 0 and less than 100
1086099		initializes the score generation steps and prints all possible moves. It creates children nodes for each move and adds them to the node, then adds the node to the list of children.

- This method creates a B-Tree, traverses
1086124		randomizes the weights of each unit in the structure by every 1.2e5th step at the mean.

This method initializes the weights arrays, weighters array, and weights array for each structure.

This method is
1086158		selects a node from the tree with the first search result set and returns its UBC value.
This method returns the UBC value of the root node.
If the root node is null, it returns a new MyNode with an
1086160		generates a random number of moves for a given node by randomly selecting moves and assigning a color to each node based on game information.
SUMMARY
This method is used to determine which child move to take to perform the move by
10891981		sets properties for interceptors by iterating through the properties map and calling the setProperties method on each property.

This first method iterates through the properties map and performs actions based on the mapping of the property name to the interceptor
10892009		pre-registers a server with a specific object name, registers JMX (Java Beans) for testing purposes, and returns the name of the server.

This method registers JMX objects with the MBeanServer for testing purposes that
10892019		checks if both percentages and perc properties should be abandoned for the pool, returning true if so and false if not.
SUMMARY
This method is used to check if all Active Interval nodes in the pool areolt.
10892076		initializes a new JdbcPool instance with the specified name, starts it, and prints a warning message if the initial pool fails to start, indicating that a connection pool cannot be started with the specified pool.
SUMMARY

10892115		cancels all active Executions in the pool by closing them, ensuring that the remaining tasks are deleted afterwards, and then setting them to null.

This method runs the application's main loop, checking if there is an error, and
10892455		resets statistics for the current pool by removing all query statistics from suchStatistics.
SUMMARY
This method is used to reset statistics for the current pool by removing query statistics from all concurrency points.


10892817		retrieves the timeout value from the servlet configuration and returns it as an integer.

This method validates the HTTP POST request and returns an integer indicating the result of the validation.

This method validates the HTTP POST request
10892933		validates HTTP metadata for the necessary requests and responses. It retrieves metadata about client requests and responses. It checks for HTTP Version 2 or HTTP Version 3. 
When an HTTP request matches Http Version 3, it checks if the HTTP
10892966		records a set of cookies by recording each cookie's domains and adding it to a cookie list if it contains the given domain.

This method records the cookie's domains as a vector in the syncConf object.
SUMMARY
10893093		sets the expected headers for the HTTP Response. It takes a message and does the same as the response's status code in method and headers.
This method checks the status code of an HTTP Response's headers and compares it to those in the assert
10893117		sets the request headers for the servlet by iterating over the strings of the parameters and setting the appropriate headers in the request.

This method sets the request headers for the servlet using a hashmap between the request names and corresponding values
10893420		retrieves or creates a server object for security measures.  If the pool size is greater than or equal to 0, a shutdown hook is initiated and an exception is thrown.

This method registers an application with the Base64 format.
10893655		returns a Buffer object that wraps the ByteBuffer. It combines the values of the buffers into a single buffer with a comma-separated list of possible positions in the resulting ByteBuffer.

This method creates a ByteBuffer object and combines
10893671		checks if the current string starts with any of the characters in the given string, ignoring case.

This method checks if this string starts with any of the characters in the given string, ignoring case.

This method checks if this string
10893712		reads a single byte from the stream and returns it as an integer, using the underlying data structure to set it as the data of the underlying buffer.

This method skips a certain number of bytes in the buffer before returning a value.
10893856		sets the head of a channel, creates a new channel, and configures a listener for data received events.
This method sets up the data channel for a file transfer and includes an IoThread for handling I/O events.
This
10893924		returns true if the channel is open or not.

This method returns true if the channel is open and not appending closed, and the channel is not open.
SUMMARY
This method is used to determine if a
10893929		reads bytes from the buffer specified in param by the user and stores them as characters. It then computes the section in which they may be formatted based on the requested block type.

CONTEXT
This method checks if an actual byte has
10894097		creates and starts an HttpChannel and returns it. If an IOException is encountered, it throws a new IOException.

This method creates and starts an HttpChannel, which takes a HttpConncetion and establishes
10894173		determines if a request has a body. If the status is either 200, 200 or an HTTP status (status is 204), it checks the response to determine if the request method is POST. If the response is an Status code of either
10894293		performs a check to ensure that the current connection state is ready and handles potential exceptions that may occur during the process. It then releases the connection's resources and resumes any threads that may have initialized.
SUMMARY
This method is
10894341		aborts a HTTP channel by sending an abort message, closing the system network, and starting and cleaning up connections with null connections.

This method is used to abort a local address connection by accepting a handshake packet, cancels it, and
10894400		c Coyote data from a HTTP request to an HTTP response. It initializes the request and response objects, and calls the coyoteService method on the HTTP response to handle the request.
SUMMARY
This method is used to
10894538		handles query parameters, by sending back the encoded query and the query parameter if it exists.
SUMMARY
This method is used to handle query parameters, send back the encoded query, and extract query parameters for use by the query
10895951		retrieves a function with the specified name from the system by comparing function names and parameters.
SUMMARY
This method is used to retrieve a function that has the specified name.


10897840		stops aMXBean object, stopping its adapter and managing their components if they are not null.

This method stops all MBeans registered with the specific MBean server.

This method stops a Lifecycle2M
10899292		sets the attribute filter with the given value.
This method sets the attribute pattern with the given value.
SUMMARY
This method is used to set the attribute filter with a given value.


10903479		waits for the queue to be empty, then checks events for in the outer event and executes them.
This method checks outer events and executes them. It removes all except events from the queue and releases the list buffers and a semaphore
1106630		retrieves the foreground points for a single image by iterating over the images and checking if any of them are in the current state. If so, it creates new foreground points, iterates over the pixels and checks if any new background pixels
1118165		modifies the fields of a role in the cache by preloading the user's information and then recursively calling itself to modify its roles within the user's roles.

This method retrieves the roles associated with the role and checks the
11297970		serializes an object tree into a string separated by slashes.
This method converts a BaseTree object into a string using a serializer to serialize the tree.
This method appends the serialized childSequence tree to a string
11297996		returns a string representation of the current object, including the name, shorthand pointer, and encoding attributes.

This method returns a string representation of the XML representation of the object, with the option to ignore the top tag if its opening tag
11298083		returns a string representation of a WSDL binding operation.
This method returns a string representation of an operation.
This method tests the parseResponse method of the generated Java interface to ensure it is parsable and supports exceptions.
This
11298105		takes a QName input and returns a QName object with the prefix and namespace URI of the local part of the QName.
This method returns a QName object with the prefix and namespace URI of the local part of the QName
11298468		tests the "abcd" method of the "HttpAuthentication.getHttpAuthenticationRealm()" class. It tests the functionality of the "abcd" method.
SUMMARY
This method is used to test the
11298735		tests if a null target namespace is used as an interface to an operation description.
This method tests if a WS-Schema namespace contains the correct attributes and values.
This method tests the WSDLOperationDescription class by setting different attributes
11298866		determines if the given Interface array contains any other Interface objects.

This method iterates through the array of Interface objects and checks if each object is an instance of Interface. If it is, it checks if the interface is contained within
11299440		declares a new XML declaration with the specified encoding and prints it to the output stream if it is not null.
This method loops through the declared XML declarations and prints each declaration to the output stream.
SUMMARY
This method
11299443		begins a new XML element, using the provided name and attributes, and it does the following:
- Creates an XMLOutputStreamWriter, which handles the output of the underlying DOM during element write.
- Creates XMLNamespace
11299894		sets the Xerces version based on the public and system identifier systems.

This method sets the WSDL context from a variable.
SUMMARY
This method is used to set the WSDL context from a variable
1150413		skips past the specified string.
This method executes the specified procedure and returns an array of the results.
SUMMARY
This method is used to skip past a specified string from the source during procedure execution.


1150448		joins an existing string into a new string with a specified separator.
This method returns an array of strings, representing the elements present in the new string array.
This method returns an array of integers.
This method returns an array
11758866		returns the global communication thread state so that if the communication system is running on server, it invokes it.
This method is the main method of the client, that calls a static global command method.
SUMMARY
This
11758890		processes incoming connections and sends them to log them. It then dispatches different types of exceptions to determine what to do. The method also retrieves an IConnectCommand and passes them along with the connecting command to the appropriate method for handling.
11758920		adds a bandwidth to the network and increases the number of connections in the logical neuron to use.
SUMMARY
This method is used to add a bandwidth to the network.


11758923		removes a bandwidth relation by first removing the relation from the Fix bandwidth to fix, then removing the relation from the Fix bandwidth to fix, and then resetting the Fix bandwidth to fix and the client to the connection.

This method removes
11758940		freezes a bandwidth in the bandwidth environment by temporarilyreating a Bandwidth object, clearing their bits, and then frees the Bandwidth object.

This method listens for a connection between a request and a connection ID. It checks if the
11758969		adds a set of bandwidth nodes to a set of other nodes, iteratively explores a set of related neighbors, and updates the set for each neighboring node.
SUMMARY
This method is used to update the total distance of relationships
11759001		defers the weighting of a bandwidth node to multiple neighbors and then updates the bandwidth's value to 1.
SUMMARY
This method is used to update the weighting of a bandwidth node by defreezing a node.


11759212		merges existing Scenarios with new Scenarios if they meet a specified time filter, otherwise it merges them into the current ScenarioTransitions object.
SUMMARY
This method is used to merge existing Scenarios
11759225		attempts to execute a method on a peer's object based on its type.  It takes a peer as an argument and calls the appropriate execute method on the peer object.
SUMMARY
This method is used to execute a
11759898		marks the start of a clock by adding a timer listener to the timer that runs when the timer finishes assigning a tag.
This method initializes tracking data, setting clock values, and creating random time intervals for each clock in the tracking data base
11759899		loads properties from a file and then calls another method to populate the properties with data.

This method catches an exception and throws a ConfigurationException.

This method increments the runNumber and sets the value of properties.

This method
11759954		initializes the peer cache with a specified number of start and end indexes, as well as a custom PeerFactory to handle any exceptions that may occur during initialization.

This method initializes the requests with the specified start index and number of peer
11761439		sets the bootstrap peers of the system.
This method sets the bootstrap peers of the system.
SUMMARY
This method is used to initialize the four seed finger peers.


11761448		selects a peer based on the provided identifier. It generates Random seed if none is provided, the name of a peer, or the group of peers. It retrieves the unique identifier until an identifier is found. If the identifier exists, the
11761458		returns the oldest FingerDescriptor in the given List of FingerDescriptors or null if the List is empty.
SUMMARY
This method is used to synchronize the successor FingerDescriptors of a FingerDescript
11761477		creates a deep copy of a finger descriptor object, including those related to its location.

This method creates a shallow copy of a finger descriptor object, including its location and the descriptors associated with it.
SUMMARY

11761494		initializes the bootstraps the network by creating an array of bootstrap peers and removing dead peers (if any). It then synchronizes the network with a round and passes the bootstrap peers to the layouter to perform the bootstrap.
11761563		initializes pointers and schedules a timer after executing the "keepOfferingFire": "retracting" service and handling potential exceptions. It initializes two timers and dispatches them to specific peer methods. If an exception occurs during this process,
11761627		allocates a video chunk and allocates blocks based on a given size. If the current block and size are both RTL and within an allowed number of blocksize, it allocates the chunk and allocates blocks based on the size of the
11761705		creates peers for connection peers, handling various states and managing leaf states such as read-only, client, leaf, TCP, and leaf. It creates necessary peers, starts listening for clients, starts the peerlet, and publishes a P2
11761754		starts transmission for a given piece message. If there are no available transfers, it restarts the transmission, including reassigning existing transfers with old transfers, enabling new transfers, and updating the transmission rate limit. It then updates the transfer rate and
11761778		updates the rate and clock based on the amount data, time, and rate. It subtracts the rate period from the data if it's larger.

This method updates the rate along a period. It also updates the clock based on
11761872		handles the cancellation of message handling, including removing the transfer protocol, finding the remote peer, and removing the corresponding BlockDescriptor sender.

This method removes a remote peer from the node's current connection state.
SUMM
11761882		handles choke messages received in network communication channel and updates the connection state of the remote peer for chunking based on the received message.

This method allows peers send messages by updating the transfer percentage, handling choke messages, and updating the
11761886		handles piece messages by setting it as downloaded, canceling possible requests, and waiting for recovery to complete.

This method handles piece messages, updating the state and routing status when it is a piece message to a peer.
SUM
11761909		sends a TrackerRequestMessage with the tracker's identifier, completed fraction and a number to the peer and then schedules a timer to run a tracker.

This method sends a TrackerRequestEvent to all peers, reschedules timer, and
11761989		handles network handshake messages by checking if the message source of the message is not the local neighbor, and if an incoming connection is allowed, it sends a handshake message.

This method accepts a handshake message, checking for certain conditions, and
1189466		calculates the number of records that have been accessed across all the slices within a specified block range.
SUMMARY
This method is used to calculate the number of records that have been accessed across all the slices within a specified block
1189496		determines which aggregation function the result is to apply and iterates over the result.
This method determines which aggregation function the result is to apply and calls the appropriate eval function based on the comparison of an aggregation function to the invoking functions with
1189507		returns a FileChannel instance for a given file and filename, creating the channel if it doesn't already exist. It initializes it if it is null.

This method tests the memory allocation capability of the FileChannel class by creating file
1189516		takes a plan and returns a join plan by creating either the join plan if it does not exist or the join plan for the current plan if it does
1189597		checks if the left operand is an algebraic field and if it is not already in the list. If it is, it checks if it is equal to the right operand. If it is not, it checks if it is equivalent to
1189603		checks whether a field is equivalent to a specified field name, specifically a token field name.
This method determines the equality of two tokens, taking into account the field names, the operator, and whether the left or right field name is present for
1189712		sets the specified value at the given offset for this block.
This method sets the integer value at the given offset for this block.
This method tests setting a short integer value at the given offset and a long integer value at the given offset
1189718		takes a buffer, offset, and a newvalue and sets the string at the offset and newvalue to the buffer.
This method sets the string at the offset and newvalue to a newvalue.
SUMMARY
This
1189726		performs a rollback operation by iterating through a collection of LogRecords, calling the doRollback method for each BTreeEntry and calling the doRollback method on the last entry of each DB entry.
SUMMARY
1189730		sets an integer value at a given block offset within the buffer identified by the primary key, using a transaction mapping and a lock context reference if necessary.

This method is synchronized and sets the value of a block at a given block offset in
1189741		sets a string value at the specified block offset within a block management system (MB) register.

This method acquires a mutex for the object and increments the offset of the block if the block is null. 

This method
1189764		searches for a given leaf block and its child block in a B-tree, starting from the specified block and creating a BTree Page object with the leaf and child blocks.

This method performs a search operation on a B-
1189767		resets the state of an entry by retrieving its directory entry data, creating a new root directory entry, loading its contents, placing it in the parent directory, and replacing it with the new root entry.
SUMMARY
This method
1189770		inserts a file or directory entry into the data store, creating a directory if necessary and returning the entry if successful.

This method translates the file into a directory tree.

This method inserts a directory entry into the data store at
1189778		formats a page by setting its integer value to a given boolean and adjusting the number of records.

This method sets the flag to 0, and then creates a new CrawlSpec object, which is used to build a CrawlJob
1189780		begins the search for a specified key point and if found, initializes and creates a temporary store.

This method updates the next key point and checks if the size of the store is in the specified range. If not, it sets
1189784		inserts a new record into the workbook after an existing record. It also inserts lines as other records in the record, ignoring blank lines.

**insertRecord**: This method inserts a record into the workbook after an existing record
1189825		inserts a constant value into the database, including its block number, id, and data value.

This method inserts four values into the array at random locations, where one is the base for intermediate cases and one is equal to the other
1189832		throws an IllegalArgumentException and inserts a leaf into a sorted set.
This method inserts a leaf into a sorted set.
This method clears the current leaf set and inserts a leaf into a sorted set.
SUMMARY
1189908		creates an index with the given index name, table name, field name, and transaction value. It retrieves the index for the file and stores it in the indexed table. If the field is unique, it goes to the index with the
1189911		returns the schema for the provided field name, or null if the field name is not recognized.

This method retrieves the name of the field for the given schema and extracts its length.

This method creates a string representation of
1189912		calculates the number of blocks accessed in the database by examining the number of chunks available in the session.
SUMMARY
This method is used to calculate the number of blocks accessed in the database after testing the number of chunks the
1189960		executes a query and returns the result set as a string.

This method executes a query and returns the query result as a string.

This method executes a query and returns the result set as a double.

This method
1189964		executes an update query with the given input SQL and executes it in the given query runner. If any exceptions occur during the process, they are caught and printed to the console.

This method executes an update query on the database using the
1189978		establishes a connection to a remote database using a provided URL and properties.
This method connects to a remote database using jndi (Java Naming and Directory Interface) and the Java Naming Interface and returns a Connection object.

11940205		searches for a matching WsmlEntityVo by its serial number from a list of WSML entities.

**testAllMethod()**: This test is a test method for the findMatchingWsmlEntityVo method of
11940210		returns the parent concept of the given object in a Java object. If the parent object is a Concept (exception) and the parent is a root concept, the method returns null. If the parent is not a root concept, the method
11940244		sets the page control for the resource container using the given Composite parent.
SUMMARY
This method is used to populate a group with labels and text fields for displaying the name, type, and parent entity of the resource container.


11940274		is responsible for overriding the setAction method of the EditPart class to set a new IAction.
This method sets the remapAction property of the EditPart to a new Action added to the registry if not overridden and then calls the
11940280		sets the selection in the XsdTreeViewer by expanding the tree at the currently expanded level. It also sets the selection in the xsdTreeViewer and sets the selection in the mapVo. If the selected MappingVo has no
11940291		creates a context menu for the control based on the action and which menu item should be the "Remap actions" menu item. It checks if removing actions are allowed, sets the selection to the current context, and adds an action to the
11940319		traverses nodes in the global nodes and processes them. It closes the input stream and then closes the input stream.

This method tests that the traverseGlobalNodes method returns null when traversing nodes. It collects global nodes, nodes
11940384		takes an absolute file path and processes its contents file name to generate an XML file string with the project name and project name.

This method adds a project name to an XML document and creates a top-level "Package" element with
11950086		This method sets the properties of the test instance to the values passed in the various tests. This method also tests the getNumeroBus method of the Cronograma class and prints the result.

This method sets the properties of the test
11950091		This is a test method that sets the number of bus in the Cronograma object to an empty string.
This method is a test method that is running the testSetNumeroBus method and sets the user to an empty string.

11950096		is a test function that verifies the functionality of the `getDestino` method in the `Cronograma` class by printing the result to the console and comparing it to an expected value.

This method is a test function
11950106		This method checks if the current date is a valid date using the equals method of the Cronograma class.

This method prints "testGetFecha" to the console, returns true if the getFecha() method returns
11950115		is a test case that creates a new instance of the Cronograma class, sets various properties of the instance, and calls the getHora method on the instance. After calling the getHora method on the instance, it calls the test
11950127		tests the toString method of the Cronograma class.
This method tests the toString method of the Juego class.
This method tests the toString method of the Miesteera class.
This method tests the to
11950130		This test method sets up various test cases, including creating a new instance of the Cronograma class and using the getCodigo() method to retrieve the value.
SUMMARY
This method is used to set up test cases for
12022371		returns the remote local date, which is a date in "GMT" format.

This method calculates a Date object representing a specific time in the UTC time zone.

This method converts a TimeZone object into a LocalDate object
12074406		This method loads preferences from a file "preferences.properties".
This method loads preferences from a file "preferences.properties.1" named with a string argument "filename".
This method loads preferences from a file named "
12074447		zooms in to visible region of the component when the view is resized.
This method zooms in to visible region of the component when the view is resized.
This method zooms out to the bottom of the client area when
12074448		zooms out the source image by a specified level.
This method zooms out the source image by a specified angle on the canvas.
This method performs an undo operation to record the action to the progress and then locks the source image to
12107446		starts an execution event and suspends execution after invoking the start() method of an execution executor with the node as argument.

This method attempts to start an execution event using a snapshot object. If an exception occurs, it throws a
1212818		calculates the overlap area between two cards in a specified area. It takes into account whether one or two cards overlap, and considers whether they overlap each other.
SUMMARY
This method is used to check the bounds of a
1212826		updates the action status of the specified widget by updating its position and adding new ones based on the mouse drag status.

This method updates the widget's actions based on the mouse drag status, including the presence of actions, the user's
1212944		logs a personal note by updating the username and the text and displaying the result in both the opponent and client panels. It also ensures the user can perform any actions such as playing orPausing.

This method handles log messages by determining
1213121		adds a new component to the game canvas, creating a rectangle with a position that includes 2 horizontal and 7 vertices and four rectangles to create a counter. When the component is added, the counter rectangle will be drawn to the screen.
1213163		sets the hover flag for the bin specified by Bin object and updates the canvas. It also checks for overlaying bins. If there are removed overlays, it triggers a redraw.

This method removes unchecked bins from bin with a given
1213319		shuffles the library if the player's player asks the library to shuffle.

This method logs an information message indicating how the shuffler is in use, then proceeds to shuffle the library.

This method logs an information message indicating
1227985		returns a string representation of the object, with the country, address, province, postal code, and city of the object's object.

This method returns a string representation of the object, with the country, address, province, postal
1228050		converts an object value to a string, using the `TS_FORMAT` delimiter and a `DateFormat` date formatting based on the type of the value.

This method converts a date value to a string using the `
1228078		This method receives a simple mail message and a model, then uses Velocity to merge a template into a model.

This method sends a email message with a specified subject and body using the SimpleMailMessage class.

This method sends a
1228112		prepares a method that executes POST and retrieves a user object from the session or creates a new user if none exists, with login functionality, ID, and creation date parameters.

This method processes data submitted by user and determines whether to
12283603		converts an Application object to a URL using a class name that is then converted to a .java file.

This method is used to create a .java file if it does not already exist.

This method adds a set of
12283615		displays help information for the program, including options for showing commands, providing help text, options for specifying game file, and user-specified options being available.
SUMMARY
This method is used to show the Help menu for the
12283616		replaces dots in a string with domain and subdirectory URLs. It only looks for forward slashes in the original string. If the original string contains a forward slash, replaces the forward slash to the root directory and the domain base URL.

12283636		checks if the classpath of an application contains any invalid application jar files. If it does, it prints a warning message indicating that no classpathentry JAR is defined in the application. If the Java version is less than 1, it
12283657		lists the files stored in "scaffolding/etc/config.properties" to load the file.

This method first lists the files stored in "scaffolding/etc/config.properties", then iterates over the files,
12283659		checks if a given key-value pair exists in the database and returns true if it does.
SUMMARY
This method is used to determine if a key-value pair exists in the database and returns true if it does.


12283729		processes POJOs by processing POJOs by extracting class names, establishing a processing controller, extracting classes, and saving them in the database.

This method generates a POJO for all classes by getting a main deployment base directory,
12283731		creates all classes specified by the given package and sets it as the current process.
This method generates a file containing all the necessary packages and writes the file to the output stream using PrintStream.
SUMMARY
This method is
12283746		returns a Configuration object that contains the configuration options for the Java application, including specifying the Java version, whether to use log4j, whether to include warnings, whether to show the window hidden status, and whether to ignore errors.
S
12283997		retrieves the configuration for the specified screen name, with error checking.


12284001		registers an update listener, removes the main window from the main desktop, and calls the signalUpdatedFile method. It also notifies the main window of a file change to update its configuration.

This method stops the current thread from issuing
12284057		This method registers the resource "to" for reload, which triggers a reload of the entity named "to" on the server and adds it to the cache manager.

This method registers the resource "to" to be reloaded, which
12284136		checks the type of a Java object and its associated type. If the type is a TypeToken or a ClassInfo, it gets the generic type of the type. If the generic type is type of type SQL, it retrieves the generic type
12284150		This method starts by loading the configuration, configuring ignored fields, and configuring ignore actions.
This method configures the exclusion criteria for the object.
This method configures the exclusion criteria for the object.
This method configures the
12284183		adds a resource to the list of resource resolvers. It updates the resource name and package prefix and package prefix. 

This method adds a resource to the list of resource resolvers using a loader. It checks if the
12284308		invokes before action execution for a given content, user object, and action object. For array notification events, it delegates actions to registered ActionControl, which control calls itself.

This method invokes after action callbacks with the given contribution
12284318		deletes objects of a specific class from the system based on a given object ID. It first creates an action to be performed on the object using the object class name. When the user clicks on another object using the object class name, it removes
12284510		signals the object to all listeners for a given class if it is not null.

This method signals the object to all listeners for a given class.
SUMMARY
This method is used to signal the object to all listeners
12284553		retrieves the features of a field given its associated with the given aspect name. It returns an empty object if the field does not exist or if the aspect is a complex type. If the field's specification name is "Complex", it
12285293		tests an aspect by iterating over a collection of generators and comparing the types of each generator with the aspect's fixture, tool, inherit type, and default values. It also checks if any of the generator's default types matched the aspect, sets
12285294		This method tests a template by iterating over a list of generators and generating various types of templates based on the context or command line parameters passed. It then evaluates the template and prints its output.

This method tests a unit by iterating
122853		retrieves model parameters from the model object and adds them to the properties object.
This method refreshes the simulation map by synchronizing the frames and creating and updating frames for each frame.
This method returns a list of properties with the
12285383		converts a given string to an Aspect enum value.
This method calls the this method to get the Aspect enum value from a given string.
SUMMARY
This method is used to get the Aspect enum value from
12285388		takes a string parameter and attempts to convert it to a tool object, returning the corresponding tool form.
This method checks if a tool form can be converted using a given string.
This method fails if an exception is not thrown.

12285396		converts a string to an array of class names called "Browser".
This method converts a string to an array of class names called "Browser".
This method converts a string to an array of class names called "Browser".
SUM
12285400		retrieves the value of the specified Enum constant with the provided String. 

This method reads the maximum level of all entities in the DICT node, sorted the levels by time. 
It then reads each level of the
12285766		removes saved files, and deletes directories before cleaning it and removing .eml files.
SUMMARY
This method is used to clean the .eml file after its contents have been cleared.


12286679		deletes a fixture from the model if it matches the provided aspect and the tool is the default unit.
This method tests the transformation of a fixture to an aspect or to a URL.
This method tests the transformation of a fixture to an
122874		iterates through a list of SimEventListener objects, firing each one for each registered listener
12287464		initializes the current object with a generic manager, table model listener, and a table model component, setting a container field reference.
SUMMARY
This method is used to initialize the editor support with a table model listener, and then
12287466		saves the current properties to an output stream, ensuring that any changes made to the file system are persisted or not.

This method saves the file system's modified properties to the file system and if the file system is not changed during a
12287897		fills a table with data from a 2D array of objects, handling column sizes and offsets.

This method catches any exceptions and displays them in a drop-down menu and clears the drop-down menu.
SUMMARY
12288918		updates a User object and sets its email address, latitude, and longitude if a token is provided, then validates the user data, loads company data, and updates the User object.

This method takes a token and updates the
12290005		builds a row of reports containing the total column names for each data row in a grid. For each data row, it adds the total column names to the row, and if totals are not empty, it builds the row using the getTotal
12290538		activates the user interface components, including the main panel and dialog field, and sets the focus on the "newNote" button when the user clicks the "editNote" button. It also creates a new property on the "projek
12290540		refreshes the game board by clearing old notes, adding new notes, and updating the list of oldNotes.

This method initialises the model by setting it to available lists, setting the default items to a list of all available entities
12291730		prints information about a role to a PrintWriter, including its object's type, port type, and name. This method also calls three print methods on the role, including extension points, address, and portTypes, in order to represent the element
12291930		handles the HTTP POST request and sets the character encoding, captures the real response string, handles the JSON object, and prints the JSON response to the HttpServletResponse.
 This method asserts that the JSON object returns the correct JSON representation
12291994		adds field editors to the parent class, including several StringFieldEditor objects.
SUMMARY
This method is used to add field editors to the parent class for a portlet configuration.


12335373		sets the reverse path for the object.

This method converts a reverse path to a linked list of ServerIDs.

This method copies the reverse path to the server ID list and returns the server ID list.
SUMMARY
12335549		retrieves the IP address of the first specified identifier in the Java Virtual Machine (JVM) object.
SUMMARY
This method is used to convert the Java Virtual Machine's default LongVarInstanceInt into an InetAddress
12335559		generates a local service port for thePGridP2P cluster using the given port. If the port cannot be parsed as a double, it prints an error message and returns null. If the port is not a string, it sets the
12335595		takes a GUID and a collection of results as input and lists the results of a query, first logging the results. 
This method queries the database to retrieve the first data item that is present in the results and then calls the new
12532667		overrides the default toString method and returns a string that represents the object's state.
This method overrides the default toString method and returns a string representation of the object's state.
SUMMARY
This method is
12532672		computes factor for a given value, creating an array of factors based on the number of factors and the original value at that value.

This method computes the factors.
It takes a kernel parameter, an integer and an integer,
12532891		removes elements from the model after any their removal from the model.
This method takes a boolean value and removes each element from the collection.
This method removes elements, deletes the collection, and updates the model to reflect this change.
12533000		sets the name of an object and constructs a default name if the name is null.

This method creates a new message body object with the name of the class passed as an argument.

This method creates a new message body object with
12533001		creates a process executor based on the provided entity.
This method creates a process executor by adding process executor pre-execution listeners if specified.
SUMMARY
This method is used to create a process executor
12533129		retrieves the coordinate at the given latitude and longitude by checking if both the latitude and longitude are greater than 90 and less than 180.
This method checks if the latitude is greater than 90 degrees and if so, throws an Illegal
12533135		handles outside spatial model movement. Depending on the modifier, it determines whether to perform the appropriate action based on the coordinates or not.

This method checks if the z-coordinate of the coordinate is outside the spatial model.


12533221		adds a rate segment to the list of rate segments, resizing the list if necessary.

This method adds a rate segment to the list of rate segments, resizing the list if necessary.

This method sets the start time
12533314		warm up the state machine, setting the current time to the last time change in the simulation and recording any changes that have already occurred.

This method calculates the time difference between the current time and the previous time, and then calls the
12533488		adds scheduled actions to a schedule, ensuring that the scheduled action is not already part of the current schedule. If the scheduled action does not allow starting the current schedule, it adds the scheduled action to the list of scheduled actions. If the scheduled
12533500		receives an object and throws an error if the object is not an instance of Load.
This method checks if the specified type is annotated with OWLEntity and if so, attempts to delete the object from the ontology.
12533515		sets the loading time distribution of the model and checks for valid values before using it.

This method initializes the time distribution using the given distribution if it is not null.

This method checks if the distribution has been set up correctly
12533516		sets the unloading time distribution for the current distribution if it does not already exist or if the model has not been loaded, and to show a random distribution to avoid loading the time.

This method applies the unloading time of the current
12533524		loads a task at a specified position with a delay of 5000 milliseconds and sends it to the registered dispatches. It notifies an event to each dispatch that the task has finished loading.

This method initializes the `myUnloadingEvent
12533567		returns the number of outgoing lanes for a given transport location object.
SUMMARY
This method is used to get the number of outgoing lanes for a given transport location object.


12533573		returns the number of incoming lanes for a given destination.

This method returns the number of outgoing lanes for a obtained location.

This method returns all lane objects from the network.
SUMMARY
This method is used
12533586		sets the origin and destination for a device and checks if the coordinates of the origin and destination have the same rectangle. If they do not have the same, the method sets the destination and origin to new objects.

This method sets the origin
12533591		sets the probability of a particular transport location in the ODE (Structured in Decomposed Value Diagnostic Language) protocol.
This method sets the probability of a transport location in the ODE (Structured in Decomposed Value Diagn
12533594		sets the last origin probability for the supplied location when the current location is the origin of a transport.

Checking if the supplied location is not a valid origin and if the previous location is not in the noc vs.
If the
12533595		sets the probability of a destination lane to a specified probability.
SUMMARY
This method is used to set the probability of a destination lane to a specified probability.


12533601		This private method divides a lane by the value of a neuron or the value of nothing, removes the neuron, and adds the source and destination lane to the lane's probability distribution set.

This method undoes the last steps of a step
12533698		returns the last free transport value for a given lane by iterating through a list of lanes. It retrieves the destination for each lane and checks if the given distance is less than or equal to the minimum distance chosen by the transport. If
12533793		sets the filler for a specified demand and throws an exception if the filler cannot be found. It checks the demand type, handles demand restrictions, and determines the filler type for the demand. It adds the filler to a cycle chain if needed, or
12533891		creates a new demand by invoking a method that extends an existing demand instance with the given quantity value.

This method creates a default demand instance with the given quantity value and then uses that instance.

This method creates a new demand
12533940		increments the number of successful requests made so far and prints a message indicating the result, then updates various statistics on the demand.

This method overrides the basic implementation and performs a clock action on demand.

This method writes the
12533964		initializes the location, its associated road segments, and its associated route segments.
This method creates a new road segment and label from the provided road segment points. It initializes the route and loads data based on the selected segment. It also
12533997		off-duty for a specified driver. If the driver is the first, don't do anything if the driver is the last, then it'll be busy and won't go until the driver has died.
SUMMARY
This method
12534001		updates the driver with a new input unit by filteringocate and distance.

This method updates the location and time, and updates the number of idle drivers and duty counts.

This method normalizes the location and adds the output unit
12534141		assigns a demand build builder to a destination supply, providing the source supply and specified fields.

This method registers a demand load builder for a source supply.

This method registers a demand loads builder for a source supply.

12534204		starts the movement of an object. It checks if the vehicle has already started its route. If not, it adds a route token and starts the movement. It checks if the vehicle has already started its route and adds it to a list of
12534270		generates an event generator with an event of "Event."
This method processes an event by generating an item event.
This method processes an event by generating an item event.
SUMMARY
This method is used to generate an
12534284		checks if the current customer inventory matches the desired customer that meets the requirements for the specified type.

This method checks if the desired customer inventory matches that have been requested.
SUMMARY
This method is used to ensure that an
12534414		handles the bus station, notifying listeners and potentially throwing an exception if the driver is disconnected or not idle. It installs the driver with the specified service and adds it to the system clock. This method also adds a callback to the task that
12534422		sets up the equipment location search list with the given RepairTask.
This method sets up the list with the waypoints of the RepairTask.
SUMMARY
This method is used to search in the equipment location list that is
12534434		adds a single EOGlobalID reader to the list of readers of the current FNode container, and initializes the new FNode container with specified parameters and a list of other EOGlobalIDs held down from the given parent
12534539		is used to check if a given task is available for transport. It checks if the store is unavailable and if the truck and trailer are available for transport. If either of these conditions is checked, it attempts to retrieve the truck and trailer data from
12534577		listens for changes in the state of a slider and updates the time panel accordingly.
This method handles property changes and updates the time panel accordingly.
This method handles a mouse drag event, detecting when the mouse moved outside the date range and
12535021		This method sets the default format values and converts and checks the number of nodes specified. If both nodes are valid, the default format values is retrieved. Otherwise, the `convert` method returns an error message.

This method takes an
12565222		calculates the page break position of a given page range. It first calculates the width of the statement within the specified units. Then, it loops through each character in the character array and calculates the break position based on the range of characters in
126267		selects all text in the TextEditor component when the gained element gains focus.

This method calls the focusGained method on the component which is currently being edited by the calling the focusGained method of the JFormattedTextField
126312		retrieves the component at the specified index from the answerComponents list.
This method returns the JTextField component of the form.
This method returns the JComboBox component of the form.
This method returns the J
126361		determines the inset of the component based on the presence of an attribute value and the parent row. If the attribute value is null or a floating position (PADDING) is present, the method returns null. Otherwise, it calls
126363		determines the stretch style of a row in a grid grid based on the attribute value provided. If the value is "horizontal", "vertical", or the "both" attribute value, then it computes the stretch based on the
126365		determines the alignment for the cell value based on the presence of a "left" or "right".

This method determines the alignement for the cell value based on the alignment value.

This method determines the alignment for the
126375		returns the minimum size of the component by calculate a width based on the component's minimum size and the fixed sum of its child components.

This method returns the minimum size of the component.

This method returns the minimum size of
12722988		evaluates a mathematical function given two numeric arguments. If the function is within an angle zero and the argument is not zero, it throws a ArithmeticException. For three arguments, it determines which to evaluate, the function type is a regular operation
12723050		generates a random integer within a specified range. If the "nextInt" method returns -1, the calculation will random the range less than or equal to the "nextInt" method to use and the "nextInt" method returns 0
12723198		takes an ArrayList of DoubleMatrix rows, along with several other DoubleMatrix columns, and sorts it into an ArrayList of DoubleMatrix rows, then returns a SparseArrayList of DoubleMatrix elements.
SUMMARY
This
12723322		takes two objects and assigns them to a 2D matrix, returning the result.

This method assigns a double value to the x and y dimensions, returning 0.

This method returns an object table that maps a domain to an
12723449		performs a matrix division between two 5D vectors and updates the dimensions of the basis vectors based on the diagonal, diagonal, and word spacing options.

This method divides two dense vectors by one, with the specified `dimension` being the
12723477		retrieves the element at the given row and column from the matrix.

This method retrieves the value at the given row and column index from the matrix at that location.

This method subtracts this element from this element in
12723734		calculates the sum of the squares of the products of two arrays.
This method returns the sum of the products of two constants.
This method returns the sum of the squares of the products of two arrays.
This method returns 1
12723775		returns the view of the last column of the matrix.
This method returns the view of the last row of the matrix.
This method returns the view of the last column of the matrix.
This method returns the view of the first
12723837		returns a DoubleMatrix2D that can be both horizontally flipped horizontally, wraps the result in a FloatMatrix2D, and returns the view the result as a DoubleMatrix2D.
SUMMARY
This method is used to
12723901		takes an array of objects and returns a new array with the length of the original array.
It tries to reorder the columns in both matrices and returns the new array if successful.
Otherwise, it initializes a new singular array
12724160		applies a given IntIntProcedure to each of the elements of an array, returning true if all elements were applied successfully.
SUMMARY
This method is used to determine if all elements were made applied to each other in
12724211		returns the rows of the first matrix including columns '1', '0', '100' by the specified duration.

This method returns the columns of the first matrix plus columns '1'.
SUMMARY
This method is
12724348		adds an element to the collection at the specified index and increases the size of the collection after the insertion.
This method inserts an element at the specified index in the collection.
This method adds a free object reference to the collection at the
12724384		finds the index of the first occurrence of the specified element in the list, or returns -1 if the element is not found.

This method takes an element and checks if it matches the specified criteria.

This method takes a
12724387		finds the index of a value in the list starting at the specified index and with the specified value within the specified range.

This method gets the last element from the list in the specified range.

This method updates the list in
12724485		sorts an array of elements in the quickSortFromTo method using the specified comparator and ensures that the sorted elements are in the correct order.

This method takes integer parameters and saves the elements in the QuickSort array.


12724499		removes the specified range of elements from this range from the list of elements.

This method returns an array of elements and removes any null elements.

This method returns a single element of this range. It removes it from the list
12724857		inserts a specified number of existing elements in a BoundedRangeModel at a given index, copying the existing elements into a new larger range.

This method inserts a specified number of existing elements into a BoundedRangeModel at a given
12724927		clears the contents of an array, calling the clear method of the superclass and then updating the size and capacity of the array.

This method takes a constant pool item and clears it based on the given action. It first tests the
12725302		returns the HelpSet object for a given helpset file.

This method retrieves the helpset file of a HelpSet object.

This method checks if the helpset file exists, if it does, it attempts to read
12725315		applies gain to audio samples, given focus gains, and a JTabbedPane for displaying and updating the recording information.

This method calls evaluateGain() when the focus is lost on an Item in a JTabbedP
12725438		sets the window size based on the window length specified in the string parameter.
This method sets the window size based on the window length specified in the fraction parameter.
This method sets the window size based on the window length specified in the number
12725461		sets the number of windows and initializes two double arrays with all their elements, respectively.

This method verifies the window length and verifies that an IllegalArgumentException is thrown when the specified value is less than 2.


12725466		sets the element at the specified index to the given value, throwing an exception if the index is not 0.

This method sets the chromosome of the rectangle specified by the argument.

This method sets the shape of the rectangle specified by
12725476		sets the number of windows while taking into account delta and visibility of the window, throwing an exception if the number of windows exceeds a certain threshold and setting focus to zero.
SUMMARY
This method is used to set the number of
12725520		sets the number of dimensions for a new feature, if the given number is greater than 1; otherwise, it throws an exception.

This method adds a name and description to the list of names and descriptions in a table.

This
12725523		sets the cutoff value for the current scans using the provided parameter, throwing an exception if the provided value is either invalid or not within the specified range.

This method sets the cutoff value for the current scans using the parameters selected by the user
12725536		sets the window of the feature definition to the specified value and throws an exception if the value is less than one.
SUMMARY
This method is used to set the window of the feature definition, including the sample width and dependency names
12725636		saves the values entered in the input fields and hides the window if the user confirms. Otherwise, it adds the input fields to the fields and saves the changes to the database. If the user does not confirm, it adds them to the fields
12725640		returns the JPanel for the GUI contents. If the JContentPane has not been initialized, it creates a new JPanel, sets its layout to BorderLayout, and adds the JContentPane to the BorderLayout.NORTH
12725660		creates and returns a JPanel that contains a description label, a JScrollPane, and a description text field.

This method creates and returns a JPanel that contains a description label and a JScrollPane.
S
12725663		returns a JPanel with OK and Cancel buttons, which trigger the shutdown function when clicked.
SUMMARY
This method is used to add a Cancel button to a JPanel when clicked.


12725670		defines an action performed when a button is clicked, triggering its associated actions.

This method sets the current visualizer, checking for changes to the aggregators array and updating the visualization based on changes.

This method initializes and
12725671		returns a JPanel named "FeatureChooser". It creates it if it does not already exist, sets its layout and adds a JLabel with the text "Feature Name". It also adds another JLabel to the west and the "Choose
12725682		creates and returns a JTable with a title of "Chosen Field". It sets the model of the JTable to use the AggFeatureListModel. It sets the autoCreateColumnsFromModel flag to true and disables autoCreate
12725684		creates and returns a JPanel that controls selected features. It initializes and adds various components to the panel, including a label and a checkbox. The panel controls allow for setting attributes for features and only allows elements of the specified type within
12725692		This method returns the feature list table object, creating it if it doesn't exist.  It sets the border, column widths, cell editors, and contains the feature list table, and ensures that the table is configured with the appropriate appearance.
12725774		handles events fired by a selection in the attribute table, sets the selected attribute to true, and executes the editor.
This method reverts the currently selected row to true and calls the save method.
This method selects the first row in
12725833		compares the contents of two objects.
This method checks if two objects are equal based on their type.
This method compares the instance field of the object with the data value of the argument.
This method compares the same instance field of
12751347		parses a string to an integer, which is a hexadecimal red, green, blue, or grey color based on a delimiter.

This method takes a string and a separator as arguments. It then parses
12751351		removes quotes from a string and attempts to convert it to an integer, resulting in a rectangle with a given delimiter. If the coordinates cannot be parsed, it parses invalid coordinates and returns null.

This method parses a string
12751355		displays a document from the specified URL. If the target parameter is not null, it forwards the current URL to the specified type. Otherwise, it forwards the current URL to the specified type.
SUMMARY
This method is used
12751365		opens a connection to a URL in either cache or version variable, and performs various operations based on the result.
This method loads a file from an HTTP request.
This method loads a file from an HTTP request and saves it to a file
12751455		overrides the `dims` method of the `Rectangle` class and adds two new Rectangles by calculating a new width within that new rectangle without modifying an existing one.
SUMMARY
This method is used to compute
12751471		adds the current object to the specified bounds.
If the bounds are shorter than the specified size, the new object does not completely add the larger bounds to the calling object.
If the bounds are longer than the specified size, the method
12752908		returns true if the variable isLastLevel is null and the code value is not null.
This method calls the isLastLevel method.
SUMMARY
This method is used to determine if the code value is the last level
12753307		updates the model based on the table rows in the data table, including adding data, removing the existing entry if the last row is a new row, and updating the model using a parent object's data from the parent object's parent object.
12753309		fills a JTable with the values from an array of Strings at a given row, ignoring the corresponding columns.
This method sets the editing mode to row 2 and fills the rows with values.
SUMMARY
This method
12753619		updates the selected item in the list. If the new item is the only selected element and the new item is not null, it sets the selected entity to the value of the new item. It then sets the selected item to the real value
12895211		initializes and returns the JMenu object 'aboutMenu' with the text "About". The JMenuItem sub elements include options to open the application
12895217		returns the JPanelJ that contains the OK button for the ModelListPanel. If the JPanel is not contained, it creates the JPanel and adds various buttons to it, including OK, Abort, Cancel, and Save As.
12922663		undoes the last turn in the game by updating the scores vector and player character, then calls the revert method of the game with the current turn.

This method iterates through the scores vector, specifically for each score (dartScore
1310482		adds components to the GUI by setting the layout, alignment, component orientation, and component sizes, and adding the buttons and separators.

This method creates a JPanel with a GridBagLayout, each of which contains a language
1310508		updates the view menu by calling the parent class method "updateViewMenu".
SUMMARY
This method is used to update the menu to display a menu for the application.


1310512		updates the format menu with a new index, setting the formatted text and calling the updateToggleMenu method on BasicMenu.setFormatMenu method.
SUMMARY
This method is used to update the format menu with a new
1310519		updates the menu for extras components by adding an exit option to the menu.
SUMMARY
This method is used to create an "Exit" option on the menu when the exit menu title is set to "extras.xml
1310605		calculates the size of the column in the table for the given column.

This method returns the fixed height of the tree.

This method returns the fixed width of the tree.
SUMMARY
This method is
1310830		takes a JMenuItem and an Action as input and checks if any of the options in the Action can be enabled, returning true if they can or false otherwise.

This method removes all menu items, sets a new selection index,
1310853		sends a map sharing stop request by creating a collaboration action, marshaling it to a message, and sending the action.
This method sends a stop map request with the map ID set to the missing ID of the given user.
S
1311294		sets the value of the year field to the specified integer value, and to updates the year chooser and spinner fields accordingly. It also calls the superclass's setValue method.
This method sets the year for the specified calendar target to
1311466		sets the month of the calendar to the specified integer value and updates the day accordingly. If this process is already started, it does not update the day and then notifies listeners of the new day.
SUMMARY
This method is
1312526		changes the iterative levels of child nodes with a specified delta level in all child nodes of a node, while preserving their iterative levels.

This method asynchronously changes the iterative levels of child nodes in anode map to match
1312533		sets the state icon for a mind map node. If the node is new and the current media type is not null, it creates a new note icon, sets it to be displayed, and adds it to the mind map.
SUMM
1312615		accepts a drag and drop event and updates the action.

This method takes a drop target and dragged object as parameters and responds to the drop, allowing for actions based on the drop action.

This method checks the action to see
1312929		creates an XML representation of a map, which includes the title, creator, and a person with their names. It can contain special XML formats, like the user agent, other information, group, and a contact list.

This method
1313748		sets the save status of the model and updates its title if it has changed since the last save or has been saved.

This method sets a model as the only title displayed for a specific mode. If the mode is not known, it
1313805		loads a model from a JAR file, using the model's load method to manage the model.

This method loads a model from a file, using the model's load method to manage the model. It creates a new JPanel and
1314006		copies the attributes and node attributes from a node into the current node. It first casts the target object to an "nodeAttribute." Then iterates through the child nodes of the current node and copies those attributes to the target node. If the
1314058		tracks mouse dragging and stops a timer, selects a node, removes the node, and checks if drag started. If not, it starts a drag operation.

**main method:** This method handles mouse events within a JComponent. It
1314216		starts/resumes the startup process for the controller. It checks if the map is being displayed and starts it accordingly. If the map is already being displayed, it restarts a timer. If the map is not being displayed, it registers
1314230		sets whether the node should be folded or not, by converting the node to a MindMapNode and then setting it as folded.
SUMMARY
This method is used to update the folded status of a MindMapNode.


13240419		This method launches a target in a specified project with an application.

This method launches a second specified target within a specified project with a project with a specified name.

This method plays a specified quick shortcut on a specified quick shortcut with
13240484		initializes and stores preference values in a preference store using a key provided as an argument.

This method sets the preference store for the code detail text.

This method initializes the values of various text fields in a preference store based
13278182		tests if there are any nodes in the node container that can be associated with the given typeID. If any nodes are found, it returns true. Otherwise, it returns false.
SUMMARY
This method is used to check if
13278188		compares two objects for equality based on the ascending or descending flag.
This method creates a list of StructuralConstraintGraphPart objects based on the number of connected parts.
This method asserts that the result of sorting objects is equal
13278217		accepts a node and a ConnectedNode as parameters and registers an expanded node with a newly created node.

This method registers a new node with a list of connected nodes and a connected node.

This method checks if a node
13278219		adds a new node to the simulation, and if the new node is an instance of a basic object, it registers the new node and adds it to all relevant nodes that can be added to the simulation.

This method registers a new
13278235		checks if all typesheets are checked by comparing the size of both types and if there are more than zero expanded nodes.

This method compares two child nodes based on their types and expanded nodes. If either nodes are both expanded nodes,
13278249		checks for intersection between interpretations and returns true or false depending on the success of the search.
SUMMARY
This method is used to check for intersection between interpretations.


13278316		returns a collection of all interpretations in the current molecule.
SUMMARY
This method is used to return all interpretations in the current molecule.


13278324		returns a collection of all connections in all parts of a subgraph.

This method takes a sub graph and traverses the first child of the subgraph to find the connection partition.

This method returns a connection partition.

13278329		checks if all the interpretations of a node have been checked and returns true if any interpretations were found, and false otherwise.
SUMMARY
This method is used to check if a node has been checked before continuing the search.


13278336		searches for all matching parts in a list of all parts and returns false if no matching parts are found.
SUMMARY
This method is used to search for all matching parts in a list of all parts and return false if
13278421		returns a container for the given test graph container component, which contains the type of the test graph for each nested test graph in the suite of the data, as well as the test graph and nested test graphs of each sub-test graph within
13278429		adds a new node to the graph with the given type ID, whether or not it is a leaf node, and auxiliary data.

This method adds a node to the graph with the given type ID and whether it is a leaf node
13278456		calculates a testing graph by assembling a vector of test data, a test graph with a predefined filename, and processing a test file.

This method clones the number of elements in the vector.

This method tests the basic
13278460		adds an application condition part to the connected main parts of an application condition part object.

This method adds an application condition part to the main parts of an application condition part object.
SUMMARY
This method is used to
13278535		finds all non-interpreted part machines that can be interpreted by all partitions, excluding the singleton.

This method iterates over all part machines, attempting to find uninterpreted parts while continuing, or to find broken parts.
13278580		returns the first child node that contains the content of the input link, given an input node.

This method returns the child node that contains the content of the input link, given an input node.
SUMMARY
This
13278610		verifies if all component conditions in the application contain any exceptions or predecessors, and prints them using an IOException.

This method tests the checkPartAC method by checking the presence of errors during iterating, all exceptions sent during iteration,
13278623		checks the validity of an object by comparing it to any items that are in the database.
This method checks the validity of an object based on its contents, ensuring that all parts in the object are deleted and that they are redundant.
13278646		checks for existing new nodes to add based on the specified type of each node in the input set. It recursively checks the input set for any types that are instances of TypeDockingUnconnectedNACPart and adds any new nodes to
13278697		creates a PartFrameContainer for inter-graph frames in a model by iterating through a list of main parts and adding non-default graphical components to the container. It asserts that the container is not null and contains one non-default part
13278699		generates the hash code of a Vector of StructuralConstraintGraphParts.

This method calculates the hash code of a given StructuralConstraintGraphPart.

This method calculates the hash code of a given Structural
13278704		adds missing main parts to a vector if there are no more main parts to add.

This method adds the expected type and pattern properties to the vector.
SUMMARY
This method is used to add missing main parts to
13278728		checks if all thePacD instances in the tree have the same AC from their deletedNodes set to their currentACs set, and returns true if they do.
SUMMARY
This method is used to ensure that all instances
13278733		destroys a part in the docking graph (SAC) and destroys its main part. If successful, it sets the feedback state to true and updates the feedback state accordingly.

This method creates a new docking graph in the SAC
13278742		destroys any NACs that are found in the repaired testgraph for an application to be removed from the testgraph.

This method destroys the appropriate NACs to be removed.

This method destroys each NAC in
13278764		checks if an edge is contained within a connected component. If the edge is an EmbeddingContainer, it updates the embedding count and returns false. Otherwise, it calls the embeddingContainsEdge method on the clone of the Embedd
13278811		sets all edges on the 'emulatedGraph' as 'added' and 'removed' as 'updated' if 'planInfo' list is not null.
SUMMARY
This method is used to add all edges to '
13278831		This method removes an edge from the graph, checking if it's a ConnectedNode and then adding it to the removedEdges list if it is. Additionally, it recursively checks if the source node is connecting to the target node,
13278842		enters a node in the waitForInterpretation method with a reference node and an object node object, and prints information about the node type.

It pushes the current node into the global waitForInterpretation and if the tree
13278902		resets all edges added to the repair plan, given that the repair plan is not null.
This method runs the worker thread for the worker thread.
This method overrides the run method and sets property variables to null.
SUM
13278910		resets the edge removed of a node by adding a connecting node to the edge and updating the incident sets. It also checks if the edge is a port of type IConnectedNode and if so, removes it.
SUMMARY
13279100		disconnects the first and last connections of the multiplicative pool to null.
This method updates the multiplicative pool when the product node is removed from the graph.
This method updates the product by removing product variables from the multiplicative pool
13279164		deletes a variable from the system.
This method deletes a given address to the system.
This method deletes an address from the system and notifies other systems of the deletion.
This method deletes a single double variable from
13279280		updates the capacity and cost of the interval, while also updating the costs associated with the interval.

This method, nextInTime, updates the capacity of the interval, and iterates through the list, updating the intervals in the interval
13279285		returns an ArrayList of tasks that have been determined by re-execution.

This method recursively retrieves the tasks to execute and iterates through them to retrieve the constraints of the task. For each constraint, it adds
13279308		creates a constraint based on a provided constraint ID, embedding, and cost mapping options. If the SAF mode is enabled, it calls the createConstraint_internal method to create the constraint.

This method assigns an ObjectContainer
13279359		sets the exponent of negative, even, and positive values to the given double and updates the mantissa with the round of the expulus. It checks if theexponent is positive and if the dependency is positive. This method performs necessary checks,
13279376		creates a constraint for an optional embedding with a given cost identifier and location. It adds the constraint to the embedding's list of constraints, and if enabled, triggers the propagation of the constraint.

This method creates a constraint with
13279465		creates an array for the auxiliar lists, or clears it if the list is null. It then iterates through the list and creates an auxiliary list for each element in the list using the createAuxiliarList method. Finally, it
13279481		returns a string representation of the object.

This method overrides the toString method and returns a string representation of the object.
SUMMARY
This method is used to provide a string representation of the object, including the
13279519		retrieves a CostMapping object with the specified name from the costMappings list, if it exists.

This method returns the costMapping associated with the specified costMappingName, or null if not found
13279656		This method notifies all registered ChangeListeners of a change made through the object changes.
SUMMARY
This method is used to notify registered ChangeListeners of a change made through the object changes.


13279707		returns the CostFunction object with the specified name if it exists in the costfunctions collection. Otherwise, it returns null.
This method retrieves the cost function from the collection of costfunctions. If the cost function is not found
13279740		returns a string containing the cost function information for the current thread.
This method sends a cost function to all clients in the clock and adds the cost function to the list of functions on the thread if the client is enabled.
This method
13279758		adds costs to the system to maintain consistency with existing constraint information. It also manages the internal cost table and costs defined by various constraints.
SUMMARY
This method is used to add costs to the system to maintain consistency with existing
13279814		removes a constraint from a connected node. It updates the layout of connected nodes and edges based on the visibility of the current node.

This method removes a constraint from an existing selected connection, updating the layout of the other connected and other
13279835		determines if a given path is enabled and meets specific criteria. It considers nodes that connect to the path in various ways, such as criterion, edge, direction, and is not already connected. If the path meets those criteria, it checks
13279873		updates the size of a graphical element to include its minimum and preferred size, and subtracts one from two.

This method scrolls the component's height by half from the minimum dimension.

This method sets the bounds of the component
13279912		recalculates the minimum and maximum values of the data points, sets the length of the data range set, and recalculates the lower and upper bounds of the set. It also computes the bounds of the first set, then sets
13279914		checks if the type of the value to be checked is either RangeConstraint or RangeConstraintType, respectively. If the type is TextComponentType, it returns the lower range constraint. If not, it returns null.
S
13279915		This method iterates through a list of range constraints and returns the constraint that satisfies the given range constraint, if it satisfies the constraint, it returns the constraint.

This method iterates through a list of range constraints and returns the constraint that
13279966		adds a menu item to the top of the stack. It first checks if the parent of the item already exists, and if so, creates a new submenu using the menu name provided as an argument. It then adds the menu item to
13279979		generates the menus for the graphical user interface (GUI) based on the specified menu map. It first retrieves a menus map from the XML user interface using a key generator and populates the menu in a hierarchical structure. The method then iter
13279980		displays a GraphObject by rendering it on a NodeGraphics panel, setting its bounds, and inserting it at the bottom of the panel.

This method sets the background color of the Node graphics object, drawing blocks, ports, and variables
13279992		displays the constraint by updating the node graphics and redrawing it. If the node is in the middle of the group or the cluster, it displays the constraint from the node graphics. If the node is in the middle of the group or
13280012		enables or disables the 'toString' button of the graph object object. It checks if variables have been set, and if not, it sets the name and GUI text to the default variable name or the "The object's superclass
13280125		checks if there are more costs available for a constraint based on the number of known costs and the number of unproprietary costs chosen.

This method calculates the number of unique costs in the specified constraint.

This method returns whether
13280133		enables whether a specific condition is met. It then sets the enable flag of an item in a control panel based on the state of the connection group to the isConnected state. 

This method sets the enable flag of a specific
13280158		enables editing to edit constraints related to constraint editing in the graph, enabling or disabling button lists for range and part variables based on allowed and unfrozen constraints types, and enabling button lists for part variable edits depending on type selection and constraints.

13280173		enables or disables various nodes type buttons based on the provided type ID and graph object.

This method applies state attributes to the graph based on the provided type, including the number of nodes, and optionally adding a selected operator and multiple
13280228		adjusts the height of a RetractButton and checks if the height has changed. If the height has changed, it updates the width or calls the superclass paintComponent method to paint the component.

This method paints the component to the
13482221		returns an element of type Swizzler based on the given integer value. If the value number is zero, it returns null. Otherwise, it iterates through a collection of IndStore objects to find a specific Swizzler object with a
13482232		displays the values stored in the IndStore map as a string.

This method iterates over the Values map and displays each value as a string.

This method handles integer and returns a string representation of the ind_var,
13482481		rebuilds a flow graph using the method `_fibTwice` and initializes it if it is null.

This method initializes the method `_block.\n`, sets the `doLabels` variable to
13482496		updates the morphicities with the specified values. It retrieves the morphicies from the object and checks if there is at least one morphicle, in this case, a non-fatal error occurs during movement. If there
13482721		This method transforms a CFG from a set of instructions, assigns the result of the transform method to the arguments in the method, and assigns the result of the transform method to the destination.
This method handles the case of a CFG instruction
13482724		takes a PrintWriter and an indent as parameters and prints the classes in the object.
SUMMARY
This method is used to print the classes of an object to the specified PrintWriter.


13482765		inserts CFG and SSAC structures by inserting nodes, phi boxes, and instructions into block basic blocks. It checks for valid cfg and returns false if none are found. It then calls pre and post statements and checks for precond
13482798		removes the phi at the given block from the constant pool and updates the block and all elements.

This method, removeCasSpacesAtAllocator, removes all LocalVariable objects related to CSA places and shifts phis
13482799		creates a copy of the current PhiStmt object and adds all phis to it.

This method initializes the array of PhiStmt objects with the values of the phis array.

This method adds all the ph
13482801		adds catch phis to a given block if the current block is not dead, it adds the catch phi to the basic block.

This method adds catch phis to a node. It creates a map of catch phis and
13482802		adds a PhiReturnStmt to the RetPhis array, assigns its return value, and increments the local variable map. It checks if the return store contains a constant for phi. If so, it writes the phi and adds
13482876		prints an integer and a string to the standard output stream.
This method prints the string element number.
This method prints an integer and a string to the standard output stream.
This method prints an integer and a string to the standard output
13482891		visits an Abstract Syntax Tree (AST) representing a return expression and retrieves the specified block from the AST.

This method visits an AST RET statement node in the IFC method.

This method visits an AST Block node
13482895		visits a switch statement, parses any variable arguments, accepts the switch statement, retrieves the body of the statement, and visits the corresponding block.
SUMMARY
This method is used to compare the targets of a switch statement
13482897		visits an If statement, which is a node representing a `if` loop, and calls the `doVisit` method of the `ast`.
SUMMARY
This method is used to visit an If statement and visit its blocks
13482952		finds the node with index zero in the set of nodes. If the node is not found, it throws an exception. If it is found, it returns the second one, or null otherwise.
SUMMARY
This method is
13483001		checks if a vertex is part of an edge based on the boolean flags associated with the input graph node.

This method asserts that the given cell is an edge based on the boolean flags associated with the input graph node.
SUMM
13483040		creates new local variables for local variables by adding local var if the colors are the default type color.


13483109		removes a given edge from the graph by casting both nodes and invoking the superclass's removeEdge method.

This method removes an edge from the graph with the specified source and target nodes.

This method removes an edge from the
13483128		performs unit test by cleaning up unnecessary PHI statements in a code block, removing specific exit statements, and updating operands accordingly. This method overrides the visitor and invokes specific instructions, such as visits phi join statements, simplifies the
13483132		replaces the program counter phis in a program flow graph by removing any phis and replacing them with a new program flow graph.

This method replaces the program counter in a map of program symbols with corresponding instructions.

This method
13483137		initializes parameters for a function call, parsing user-defined variables from the inputted location (`v`) by the `scan` statement.
SUMMARY
This method is used to initialize parameters for a function call by parsing
13483149		performsdomendar the dominators of the object. It computes the list of dominators, and if no further valid parents are found, it resets the domains. Then, it calls the computeDominators method.
SUMM
13483193		finalizes by calling the finalizeVisit method with the given ExprInfo parameter, which is of type ExprInfo.

This method calls the finalize visitF2 within that class.
SUMMARY
This method is
13483227		prints the current file operation to the specified PrintWriter, including line separators and line numbers representing the return type, name of the method, and number of parameters passed to the method. It also creates a separator and prints the method name and
13483280		visits a local variable declaration and registers it with the symbol table for reference evaluation. It creates a stack and adds the variable declaration if necessary. It then initializes the local variable and adds it to the symbol table.
SUMMARY
13483336		checks if a given block can be inserted into the stack. If the block does not have any real use, it inserts it into the CFG.


This method computes the error associated with the first possible control flow graph node. If
13483361		adds a store statement to the stack at the specified position, taking into account a condition, and updates the target accordingly.

This method adds a store statement to the stack at the specified position, taking into account an explanation, store expression
13483474		adds an operand to a list of operands, after validating if the operand is valid using the operand definition of the local variable.

This method returns a list of operands, if the list is null it creates
13483742		replaces an expression in the stack that contains a child expression. It takes an expression as an argument and returns a child expression obtained by type copying expressions from the operands provided. If the stack already contains an expression, the updated stack is returned
13483753		checks if the provided Expr object is equal to the current object. If the current object is null, it returns false. If the current object equals the original object, it returns true; if the current object is not exact, it returns false
13483798		negates the value of a boolean variable in a switch case based on the comparison type of the variable.
SUMMARY
This method is used to negate an instance variable's value based on whether its comparison type is equal to the argument
13484008		adds a given block to the basic block set, creating the basic block if it does not already exist.
This method adds the block to the basic block set if it contains phi.
This method adds the phi to the block
13484099		sorts an order of values for comparison based on a given key sort criteria. It iterates through a list of values, comparing each value using a specific string comparator. If a value's key does not match the specified key, it does
13484116		sorts a list of kills by their keys.
This method initializes the game board by creating a new list, clearing it, and initializing its dimensions. It then switches the colors of the new tiles, creates three tiles and a tie
13484207		adds a new block to the work list at the specified index and verifies that the block is persistent before adding it and updates the index to indicate that the block was inserted.

This method adds a kill to the work list at the
13484825		converts a stack to a new-level stack by using a new variable for class and variable.

This method visits the DNEW instruction.

This method visits the NEW instruction.

This method visits the NEW instruction.

13484835		visits the TOPENUM expr stack for NEWARRAY types and returns the resulting expression. It creates a NewArrayExpr object from the stack and returns it.

This method initializes use of an int array type. It first
13484869		pops an expression from the stack and assigns it to a variable. It then creates a new CastExpr object using the popped expression and its base type to create and push it to the stack. If the expression is equal to the class of
13484877		visits an instantiation or void field, extracting its type and contents, and interpreting the constant pool. It determines the stack depth, and throws an exception if the type is not supported. Finally, it pushes a reference to the variable's type
13485030		visits the array expressions in the bytecode and returns the modified array structure.

This method returns a representation of this IRBasicBlock if it's not null. 
It sets the `finally` field of this IRBasicBlock
13493984		returns a string of the object's text representation, including the date, id, name, and address.
SUMMARY
This method is used to return a string representation of the object, including its date, id, name,
13512609		determines whether a given file is accepted based on whether it includes directories and its extensions.
This method excludes a file by removing them starting with "accepted."
This method filters a list of files based on the file's extension.
13512690		appends a number to a JTextArea component.

This method appends a String to a JTextArea component.

This method appends no String to a JTextArea component.
SUMMARY
This method
13512722		constructs a clause given a resource name, property name, and value.
It constructs a WHERE clause for the resource name, property name and value, and then appends it to the WHERE clause.
SUMMARY
This method
13512728		attempts to establish a connection to a server using a default URL, given a default name if none is provided and server URL not set.   
This method attempts to establish a connection to a server using the specified name, using
13512743		checks if the server is alive by attempting to call the "checkAlive" method on the "protegeProxy" object, which ensures that the server is up to date so it can do so within 500 milliseconds.

This method
13512803		searches for a property with the given name in the model if it is found.

This method iterates over all the instances of each statement, calls the process method on each element of the model, and then prints the results to
13513176		starts a server with the given project using the JmxExtLauncher class and displays in the GUI.

This method launches a JEE application with the given given project name.

This method launches the project with the given project
13513196		starts the server without a GUI.
This method creates a new instance of the JmxExLauncher class and launches the project in the server without GUI.
This method invokes the launchProjectAndStartServer method on the exitProject
13513213		starts a server with controller GUI using a specified project name. If the server is not null, it starts the server with the specified project name.

This method initializes the main application with different GUI components based on the user's selection
13514944		validates and saves a project, returning a boolean indicating success or failure. 

This method converts SQL errors into ProjectFile exceptions and attempts to save the project File before throwing an exception if successful. 

This method saves a Project
13694505		sets the endpoint address for the port specified by the given QName and address.

This method sets the address of the port specified by the given QName.
SUMMARY
This method is used to set the address of the
13718198		takes a snapshot of a MapSnapshot object into a file. It first validates that the file is not null. If it is not null, it calls the basicTakeSnapshot method on the MemoryWriter object with the file.

13718200		takes a snapshot file and attempts to restore it from the specified snapshot file, throwing a SnapshotException if the file cannot be restored. If the file cannot be restored, an IllegalArgumentException is thrown.

This method restores the
13718247		snapshots the memory to a specified file and reset the log file.

This method takes a snapshot, calls the snapshotter with the snapshot, and then copies the sample file to the file system.

This method takes a snapshot and
13858327		creates an instance of the IWizardModel class using the name provided or using a string parameter to call the createModel method if the string is not in the list of available models.

This method gets the wizardModel from the wizard
13858338		sets the enabled state of a command associated with a form with a given object.
This method sets the enabled state of a command associated with a form for an object.
This method sets the enabled state of a command associated with a form and
13858367		handles errors that occur while processing a FormComponent by either displaying an error message or calling another method to handle the error. Additionally, it handles application errors by displaying additional text or providing information about the error.

This method is deprecated and
13858401		adds a loader to the cache for a given form variable.

This method does nothing if the bean is read-only or the form is not read-only.
SUMMARY
This method is used to add a loader
13858403		This method logs the start of a timer event, initializes a timer, creates a timer object and start it, logs the start of the timer event, calculates the time to live to execute the trigger, and dispatches it to the runner.
13858490		sets a DbInstance object and updates the GUI to reflect the change. If the DbInstance is null or has already been selected, it logs a warning message and returns. If the DbInstance is not null and has marked as ongoing
13858543		parses a medium list into a list of BackupMedium objects using a for loop and iterator to collect data. The method tests various conditions on medium type compatibility, including creation date and creation date accuracy, modification date, modification date validity, modification
13858548		checks if logging is enabled and returns true if autologging is enabled, otherwise false.
SUMMARY
This method is used to determine if autologging is enabled in a DBIdentifierDB instance.


14007741		retrieves the role of a user joining with email in either "admin" or "gold" based on their membership ID. If successful, the email is signed in.

This method associates user information to the database by creating a new
14007742		enqueues a film from the database with the given ID and users ID.
This method creates and adds a row to the wishlist table using the information from the DBManager class, including the film ID, users ID, and type (
14007744		dequeues a film for the specified user and adds it to a list of movies. It also selects all movies and movies with their names from a database.
SUMMARY
This method is used to check for deletion in the database
14007748		returns a ResultSet containing the messages that have queued film notifications for a specified user.

This method returns a ResultSet containing the messages that have queued film notifications for a specified user.
SUMMARY
This method
14007870		retrieves the last ID of a person from the database. It first checks if the database is established and then retrieves the person's ID from the database. If the ID is found, it returns true, and if not, it returns
14008204		adds a film person to a PRID using a person's ID and returns a success or error message.

This method initializes a JList object with a title, model, and cell renderer.

This method initializes
14008223		adds a film with the specified IDs to the database. If no film or award ID is provided, the method returns false. Otherwise, it automatically adds the film with the specified IDs to the database.

This method initializes the DA
14008242		adds a new person to the system by their award ID.
This method adds a new person to the system by their ID.
This method returns a description of the object.
This method returns a description of the object.
S
14087326		pops the top node from the structStack using the caseAND condition. If the node is an instance of ANewStructurePrimaryNoNewArray, it fetches the values from the node. If the node is an instance of ANew
14087407		updates the matrix stack by pushing the first element of the matrix stack to the stack, and then applying the change to the single row.

This method sets a single row in the matrix stack and calls the caseASingleRows method
14088780		initializes the servlet by setting a debugging flag and loading the database from persistent storage. It prints any exceptions that occur while executing JSP's initialization and prints them to the console.

This method executes the JSPStepFactory and initial
1412807		takes a string as input and returns a string with the string in uppercase.

This method takes a string and returns a new string by replacing placeholders for the given patterns.

This method takes a string as input and
1412818		sets the default pool for the power to the framework's default pool.
This method provides a connection to the power data source.
This method returns the number of free units in the power data source.
SUMMARY
This method
1412880		clears the thread pool filter by removing any filters that start with "pool:" and then modifying the thread pool filter's filter attribute.

This method handles events triggered by user interactions with the event source and broadcasts them to other servers.

1412903		updates the caret and text states to indicate changed when a text component is inserted into its child components. It creates a copy of the old element and the copy of the new one, adds the property change listener to the copy, and sets
1412914		extends a filter by adding or removing elements from the new filter if the new filter's values are duplicate of the old filter's values.

This method handles an XmlEvent object and ensures that it matches a filter and its attributes are
1413050		updates the language based on the values in the specified XML node and also updates the language based on the values in the specified XML node.

This method updates the language based on the value of the selected element in the GUI elements with a
14187858		returns the requested data region size as the requested start of image strip generation (DDS).
SUMMARY
This method is used to calculate the desired data region size during image strip generation.


14187863		retrieves the next cluster in the FAT table and removes any gaps.
This method takes a byte array as input and returns a new FAT object with the provided fraction, number of batches and average gain, number of residues, and the indices
1420680		performs validation on the input value by checking it validity. If the input is valid and has a length greater than 4, it returns a named validation, otherwise it returns a regular validation.

This method checks the length of the input values
14346030		applies lens constraints to a set of components in a JGraphPane. It checks if any lenses are available before applying them.
This method applies a lens constraint to the component.
It applies a lens constraint when the component is selected
14346032		undoes the lens in a JGraphPane by calling the undoLens method on each lens that is not in the m_lenses list. It then calls the redoLens method on each of the m_lenses list to set
14346080		is responsible for firing an element added event notifying the listeners registered in the current object. It iterates over the listeners, calling the elementsAdded method for each listener.

This method fires an element added event to all graph listeners that are
14346082		triggers the elementsRemoved events when a collection of nodes and edges is removed from the collection of nodes and edges.

This method fires the elementsRemoved event to all registered listeners using the specified event.

This method fires the elements
14346123		applies deltas to a node based on its coordinates and a movement. It updates the delta in the node's origin with the appropriate values based on the movement direction. If the previous delta was invalid, it updates the delta in the
14346899		performs a screen-to-graph conversion on a given point using a lens (lens-ine focus) and then back to the original point.

This method converts the points in the graph to the graph points in the lens's
14346910		returns the location of a node in the display as a point, calculated by converting all the node positions and then calculating the last available screen point. 

This method converts the graphics config of the specified node to screen coordinates, returning the
14376123		returns a JPanel that contains a browse button.

This method returns a JPanel that contains a browse button.

This method returns a JPanel that contains a browse button.

This method returns a JPanel that contains
14376145		returns a JScrollPane containing a list of JList objects for displaying a list of artifacts, and allows for multiple selections.

This method returns a JScrollPane containing a list of JList objects for displaying a list of
14376159		returns the search button, initializing it if it is null, setting its text to "Search", and adding null and an action listener to it.
SUMMARY
This method is used to generate the search button for a search
14376193		returns the JPanel that is the content pane for the frame if it has already been created.
This method initializes the content pane by setting its layout to a BorderLayout and adding the status bar to the center of the BorderLayout.
14376226		indexes the repositories by iterating through a list of repositories, extracting their metadata and artifacts.

This method calculates the MD5 hash of a document based on the hash constraints and metadata constraints of its artifacts.

This method iterates
14376513		recursively deletes a directory and its contents recursively, returning true if successful.

This method compiles test code from MP3 files (e.g., CVS) by constructing test files and variables and combining them into
14376570		extracts the prefix of the given text viewer based on the given offset. If the offset is greater than 0 and not a valid prefix, or if it does not start with a decimal digit (- or +), the method returns an empty string
14376579		returns the context type registry, initializing it if it currently does not exist.

This method initializes the registry with the template context type registry and stores it in the file and the parameter value object. 

This method initial
14376589		creates field editors for the preferences.
SUMMARY
This method is used to add field editors for the preferences.


14466709		performs inclusion of a shape from one point to another, it checks if the pathSegments size is the same and if it contains the point.
This method returns true if the objects points are contained within the shape, meaning they are in
14466713		sets the winding rule for the path.
This method throws an exception if the rule is not recognized, then sets the winding rule variable to the value provided.
SUMMARY
This method is used to set the winding rule for the
14466724		returns the current segment, based on an array of coordinates. It first considers the coordinate type and the path's point type.
This method updates the geometry by multiplying the coordinates with the transformed coordinates and then applies the inverse transform.
S
14466743		sets the strength of an attribute to the specified value.
This method initializes the object with the values from a form and stores them in the attribute object.
This method initializes the object with the values from a form and stores them in
14466744		returns the DataNode object at the given index if it exists, else it returns null.
This method returns true if the given index is in the model. If it is not in the model, it returns false. If it is in
14466746		checks if the project is dirty based on if any associated models need to be modified in the application.

This method checks if the application's framework is dirty and returns false if it is, otherwise it returns true.

This method checks
14466747		returns the kerning node at the specified index from the nodes list.
SUMMARY
This method is used to retrieve the kerning node at the specified index from the nodes list by iterating through the linked list of nodes.
14466759		notifies the model that a model has been removed from the project.
This method sets the model to the given value. It updates the project observer list to notifying that the model has been removed.
This method takes a project and indexes
14466765		paints a border with the specified color and x and y coordinates.
This method sets the color to the specified color and draws the specified line at the given location.
This method sets the color to the specified color and draws the specified line
14466766		is used to notify model observers that a model has been added to the model. It also serves as a callback to notify the observers of the addition.

This method serves as a listener to handle events triggered by events on the model that are
14466782		retrieves the relation button descriptors from the model. If the descriptors are not found, it instantiates them and then adds them to the model. Finally, it returns the list of button descriptors.
SUMMARY

14466801		returns a HashMap containing the attributes of an object. It includes the X coordinate, Y coordinate, and width as keys and the height as values. It also includes optional additional attribute keys and additional additional key-value pairs, and includes also
14466851		sets the strength of an object, assuming they are a power and not an empty string.
It then initializes the object's attributes, including setting its position, border, and style (stereo or solid).
It then creates a new
14466878		detggles the selection of all buttons corresponding to the given toggle button's URL's URL, throwing an exception if the URL is already in use.
SUMMARY
This method is used to toggle the selection of all enabled radio buttons corresponding
14466904		sets the constituent (ID URL) of a concept (Concept) and notifies the model list of the change.

This method notifies the model and handles changes to the URL of the concept (Concept) with the old and
14466910		sets the notes of a constituent and notifies observers of the change.
SUMMARY
This method is used to set the notes of constituent, notifies its observers, and adds an undoable event.


14466916		sets the constituent creator for the constituent and returns a change notification with the old and new label.

This method updates the constituent creator and adds or removes a move memento and checks for errors. It also updates the constituent creator and adds
14466921		updates the location of the dragged object when the mouse is dragged, and repaints the viewer if the dragged object is currently being dragged.

This method handles mouse pressed events by handling mouse dragging, checking component selection states, updating undo/
14466952		sets the selected constituent and all its associated data in the model.

This method sets the selected constituent and all its associated data in the model when focus is lost.

This method sets the constituent of the model and optionally selects it in
14466978		returns a TableCellRenderer object for a specific cell in a JTable, including gray and transparent renderers if appropriate.

This method returns a TableCellRenderer object for a cell in a JTable, which takes
14466996		adds a new node to the scene graph, sets the target of the new node, and inserts the associated element data.

This method updates the node when the target of the event is not null.

This method detaches the
14467016		 synchronizes the delete button when a specified `DeleteButtonPainter` is selected.

This method synchronizes the delete button when a table layout is added
14467029		deletes the currently selected constituent in the diagram, removing it from the selected collection.
This method deletes the selected constituent that was not contained in the diagram.
This method deletes the single constituent that was not contained in the diagram.
14467042		toggles the visibility of a constituent in the view.

This method displays a constituent string in a conversation.

This method updates the constituent info by setting the location of its constituent as necessary to update and show the constituent information.

14467075		removes a model from the list, sets the host of the model to null, removes the corresponding listener, notifies any observers, and marks the project as dirty.
This method removes the model at the specified index. If the model is
14467078		performs an action that can be called based on the current mode of the application.
This method calls the actionPerformed method with the ActionEvent e as an argument.
SUMMARY
This method is used to handle various Action
14467080		imports a model using the ModelImporter class and displays an error message indicating that the import could not proceed. If the import fails, it displays an error message and returns.
SUMMARY
This method is used to import a
14467091		checks if two constituent nodes are adjacent in a relation.
This method finds all instances between twoituents.
This method finds an instance by class name and identifier among each constituent node in a relation.
This method checks if a vertex found
14467106		checks if a specific constituent is adjacent to another constituent by checking if the constituent ends with any other constituent or both end ends.

This method returns a relationship between two constituent objects, excluding the specified constituent's source or destination, by iterating
14467116		returns anarrowing a directedagonal relationship between two constants at a specified destination constituent.
SUMMARY
This method is used to obtain a directedagonal relationship between two constants of a specified constituent within the concept.


14467180		This method notifies observers of a new constituent and adds it to a model. It notifies listeners of the new constituent event.

This method notifies observers of a constituent and adds it to the model.

This method notifies
14467213		updates the table's model based on changes made to the selected item in the table.
This method updates the table model based on changes made to the selected item in the table.
SUMMARY
This method is used to update
14467232		determines whether the calling Model instance can drop the specified model or beMODIFIED accordingly.

This method accepts a dropped model as an argument and drops the model accordingly if the contents of the dropped model are equal before the calling Model instance
14467273		removes a constituent, either a node, or a relation, depending on the item's type.

This method removes a constituent, either a node, or a relation, or optionally in the constant graph. It can optionally add a forward
14467338		synchronizes a diagram to a model, either from a model itself or a managed model, based on the presence of the diagram notation and the diagram's model.
SUMMARY
This method is used to synchronize the diagram to
14467343		updates the visibility of the current object based on the availability of the URL for a specified constituent.

This method sets the URL for the current object and updates the display.

This method shows an event chooser dialog if there is
14467351		resizes the text node, recalculates its dimensions, and then sets the size of the parent node.

This method updates the maximum location and total height of the nodes.

This method sets the layout for the nodes text panel
14467356		resizes nodes, adds a label to the user interface, and sets the size and location of the node.

This method sets the size of the frame, setting the location, border of the frame, and header label.

This
14467371		invokes the actionPerformed() function. It takes an ActionEvent as an argument and checks if the event source is a button, and if so, calls the actionPerformed() method. If the event source is not a button, it
14467406		takes a constituent, calculates its visibility and scrolls the participant view panel based on the offset.
This method makes a constituent visible in the participant view panel.
SUMMARY
This method is used to update the scroll wheel position based
14467418		sets the RFC2120 information for the system if the version is greater high.
SUMMARY
This method is used to set the RFC2120 information for the system if the version is not null.


14467423		adds an UndoableEvent to the undoList first if undoOn is true and the undoList is not empty.
SUMMARY
This method is used to add an UndoableEvent to the redoList if undo
14467517		selects the next item in a list if it exists in the list.
This method selects the next item in a list if it exists in a table otherwise, in addition to renumbering the list and resetting the tooltip text.

14467528		initialises the allowed types by parsing a filter string with commas and parsing a comma.

This method initialises the collectionOfItemElements using the action method of the ActionHelper.

This method initialises the collectionOfItem
14467533		checks if the given object class is allowed by checking if the allowedTypes list is not null and if it is, it iterates over the allowedTypes list, checking their types to determine if they are sub-classes of each other.


14467557		returns the number of visible attributes in theDiscussionTopic.

This method initializes variables:
- If the discussionTopic is not null,
- It retrieves the discussion topic's characteristics:
- It sets the number of columns
14467574		returns a JComboBox editor for the specified row and column, using a selection model to manage the combo selection.

This method handles the functionality of the editor combo box by retrieving the value from the model and setting it in the
14477028		returns a string representation of the object, which includes the identity hash code, reference to the PK entity, and the value of the primary key.

This method retrieves the value of the primary key.

This method checks if
14477030		runs a loop that attempts to withdraw from a spooler or a multi-client to withdraw for a given amount.
This method attempts to withdraw to a spooler and cancels it.
This method runs a task that uses a
14477302		retrieves a list of categories associated with a particular document.

This method returns an iterator that iterates through the categories in the collection.

This method returns an array of all the categories in the collection for a given document.
14477310		returns a string representation of the object's attributes, including its title, description, and size. It formats the string with a specific character for each attribute.
SUMMARY
This method is used to format attributes of a KSE
14477377		overrides the default toString() method and returns a string representation of the Array object.
This method prints out the names of the objects in the array, followed by a newline.
This method prints out the names of the objects
14477486		initializes a new connection checker object and defines the implementation that handles incoming UDP messages. It performs actions such as creating a new cluster node or accepting a Datagram Packet, or initializes the connection checker, setting the main program and
14477531		This method starts a thread for writing data to a socket. It continually processes the data until it is ready to be written. It handles client runs, client disconnections, and connected clients. It sleeps for a delay before checking again. It then
14477536		This method receives a message from a client, reads it, and then sends it to the server.
This method waits for a prompt for a user from a client.
This method listens for user requests from a client.
SUMM
14477544		runs continuously, continuously listens for incoming data and processes it based on its type, printing it to the console.

This method reads a line from the buffer, where the data ends, or the specified number of bytes are read.


14477612		loads a properties file into a Properties object and returns it if successful.
This method reads a file into a Properties object and returns it if successful.
SUMMARY
This method is used to read a file into a Properties object and
14477848		executes the main tasks of the VelocityEngine. It prints the number of processes and the error messages if successful.

This method processes the data in the second argument of the System.out file.

This method processes the data in
14624230		is a unit test that calls the "open" method of the PeerNMEAProvider object and prints "open" to the console with the current date.
SUMMARY
This method is used to test whether the "open"
14624232		This is a test method that adds a NMEA event listener and runs a test on it.
This method adds a NMEA event listener to an IPv4 packet.
This method removes a NMEA event listener from an IPv
14624233		is a test case method that tests the `removeNMEAEventListener` method of the `NMEAProvider` class, ensuring that it sets the `nMEAEventListener` to null after calling the `getInstance` method
14624250		is a test case that prints "testdecodeNMEA" and calls the testdecodeNMEA method with a null parameter.

This method is a test case that prints "testdecodeNMEA" and calls
14624270		generates a random NMEA sequence based on the generating of MEX coordinates for various types of events.

This method returns an invalid sequence for a common type.

This method generates an array of two random NMEA IDs
14624292		This method tests the toString method of the NMEAEvent class by outputting "test" and asserting that the string returned by toString method matches the expected string "test".

This method tests the toString method of the N
14624337		tests the getVelocity() method by setting the expected result of zero to the negative value returned by the getVelocity() method.

This method runs the testgetVelocity() method by incrementing 1000 and verifying that the result is
14624341		This method prints "testsetVelocity" and sets the velocity of a GpsPosition instance to Float.ONE.
This method prints "testsetVelocity," it sets the velocity of a GpsPosition instance to Float.TWO
14624345		This method tests the setUseStatus method of the GpsSatelliteArray class by setting the use status of the array to false.

This method tests the getUseStatus method of the GpsSatelliteArray class by getting the use
14624347		is a unit test that prints a message and calls the `testsetUseStatusAll` method from the `GpsSatelliteArray` class to test the `setUseStatusAll` method.
SUMMARY
This method is
14624348		tests the getHorizontalDilution() method of the ObjsGpsPosition class by printing "getHorizontalDilution", creating an instance of the class, setting expected and actual results to 0, and asserting that the expected and
14624349		This method sets the available status of the GPS satellite array.
This method tests the setAvailableStatus method.
This method prints the value of the setAvailableStatus method.
This method prints the value of the getAvailableStatus method.

14624350		This method tests the AVA (Starting Activity of the GPS)+SAT Live-Off and All seats), setting the availability status of each seat to all cars and car availability.
SUMMARY
This method is used to test the
14624351		tests the functionality of the setHorizontalDilution, which sets the horizontal demolution of the GPSPosition class.

This method is a test case that verifies the functionality of the setHorizontalDilution method.

14624352		This method sends an event to the listeners list.
This method adds an operation to the list of operations on a GPXCalls object.
This method adds an operation to a GpxWay object.
This method gets the GPX
14624353		tests if the getLatitude() method of the Gs object returns the expected longitude value.

This method initializes a new Polymerism object with values for two float inputs and then performs various tests on its getLatitude()
14624357		tests the functionality of the method setLatitude, which sets the latitude of an object.
This method puts the latitude in various unit tests and asserts that the value of the latitude is set correctly.
This method tests the setLatitude,
14624360		This method responds to an actionEvent for a key combination. It performs various actions based on the key combination, such as creating a new record, toggling boolean values, changing the value of "On", or removing altitude sensor settings, such
14624363		is a test case that tests the setLongitude method of the GpsPosition class, which sets the longitude of a GPS position.

This method is a test case that tests the setLongitude() method of the GpsPosition
14624370		tests the "getCourse" method of the "GpsPosition" class by setting a test value to one and then comparing the expected result to the actual result returned by calling the "getCourse" method.
SUMMARY
This
14624373		This method, testsetCourse, tests the setCourse method by creating an instance of the GpsPosition class and setting it as the current course.
SUMMARY
This method is used to test the setCourse method by setting the
14624374		is a test that verifies the functionality of the "getPRN" method in the "GpsSatellite" class.
This method is a test that verifies the functionality of "getPRN" in the "GpsS
14624376		is used to test the setPRN method of the org.gps.types.GpsSatellite class. It sets the PRN property to an empty string and checks if it is set to an empty String. It also checks if
14624387		tests the setSNR method of the GpsSatellite class by calling it with an empty integer value and asserts that the result is 0.
This method calls the testsetSNR method of the GpsSatellite class, passing in
14624389		This method tests the availability of a GPS satellite instance and asserts that the expected output is set to "false" and the actual output is "false".
This method tests the availability of a GPS satellite instance and asserts that they are in the expected
14624391		tests the `isInUse` method of the `GpsSatellite` class by checking if the `isInUse` method returns a non-null value.

This method tests the `isInUse` method of the `
14624392		is a test method that prints "testsetAvailable", sets the available boolean to true if the first argument is true, and tests changing the enabled property of the GpsSatellite class to false, then sets the available boolean to false and checks
14624394		tests the setInUse method of the GpsSatellite class by setting various flags and creating a GpsSatellite object with the "IN" flag. It specifies different scenarios where to set the "IN" flag to "UNKNOWN"
14624435		This method creates an instance of the GpsPosition class, sets the GPS position to a null value, and then calls the method `writeGpsPosition` to write a GPS position to a file, asserting that the number of expected calls].
14641169		checks if the specified key and value are equal to zero. It calculates the value to retrieve from the parse tree, and returns it if the values are equal. Otherwise, it returns the original value if the specified key is less than -1.
14641188		calculates the hash code for the class based on the hash codes of their key-value pairs.
This method iterates over the entries in a hash table, and for each pair, it calculates the key value and checks if the key
14641346		defines an agent job and uses it to create the agent to run the agent with specified details such as community and specified job group.

This method tries to retrieve a scheduled job to get a message to be sent. If a job's
14641351		creates a cron trigger for an agent when the process running on the current host. If the cron expression is empty, it does not do anything.
This method updates the cron interval for the hour. The interval is calculated by
14641877		writes a message to a remote address. It first gets a pooled session, then writes the message to a channel using the session's write method and waits for the write operation to complete before setting the channel to null. If the write operation is
14641991		returns the next available task from the queue of tasks.
SUMMARY
This method is used to obtain the next available task from the task queue of tasks.


14642021		returns and removes the last pending worker from the list of worker data if it is not empty. The method returns null if the list is null, otherwise it returns the remaining worker's data.

This method checks if the worker data has
14642620		opens an About dialog and displays the license file along with the descriptions, name, and copyright details, regardless of which method was used.
This method sets up the service and expected suite files for testing, including test configuration files and test descriptions.
14642716		tests the cacheSizeZero() method of the Cache class by adding 100 to the cache and attempting to add 100 for all 100 keys. It then asserts that the size of the cache is 0 initially, and that the contents of the cache are 1
14642724		adds a message handler to the message queue, loads secure resources, creates a new credential, and adds the credentials to the message queue associated with the given message type. It also removes the credential, adds the new credentials to the message queue and
14642759		sends a protocol number request message to the peer service and stores it in a variable of type EMIT_NUMBER_GROUP.

This method sends an EMIT number request message to the peer service and sends it to the master peer
14642780		handles message content by extracting the prime issuer and ID of a message, converting it to a PrimeCipher object, and passing it to the parent class's handleMessage method to process the message.
This method handles incoming messages by converting the
14642855		returns the IP address of the address requested by the Gnutella service.


This method retrieves the URL from the URLBuffer object by utilizing the StringUtils class to format the URL and concatenating it with periods between the
14642872		kills all threads in the collection by interrupting all current threads related to client threads running.
SUMMARY
This method is used to interrupt all client threads running by iterating through the collection and invoking the interrupt method on each thread
14642889		kills all client threads in the factory.
This method terminates all running threads on the factory by interrupting them associated with each client.
SUMMARY
This method is used to terminate the running threads associated with each client.
14643011		sends a message through a specified URL and optionally a temporary file, by requesting a download thread with a timeout from the system.

This method sends a message through a given URL, checking if the task has already completed, setting the network
14643052		sets the interface to IP6 or IP only, enables radio service, and starts the peers.

This method tests the setInterfaceAddress method.

This method tests the setIpAddress method.

This method tests the set
14643077		attempts to deploy a remote repository with the specified name using JFDeployUtils.getXMLFileName() method, returning true if successful and false if unsuccessful.

This method removes a remote repository for a specific peer in
14643087		takes a string value `id` and returns a `String`, where `id` is either the value or the id is converted to a string.
This method updates the `Peer` name by removing it and replacing its value with
14643176		builds dependencies for elements with attributes that match a given class name and name attribute, and iterates through child nodes of the given component node name to parse the description attributes.

This method builds dependencies from XML elements such as xml:id
14643193		injects the values of the MBeanOperationManager with the elements of the MBeanManager passed as a parameter.

It also invokes the postInjectOperation method on the objectName and posts the action to create the
14643293		deletes all work copies of a given resource by calling the garbage collector.

This method, deleteWorkCopies, deletes all work copies from a set of resources.

This method, deleteWorkCopiesForResourceSelection
14643309		recursively collects all files and subdirectories within a directory and its subdirectories, executing the process if enabled. It collects file links by calling collectFileLinks to collect the file links for all files and subdirectories in the directory
14643385		starts up a configuration for the component archive. It loads the configuration archive into the component archive and starts the configuration. If the configuration is successfully loaded, the method returns true. Otherwise, it restarts the configuration and returns false.


14643569		returns a `ChunkMetaData` with the position (given as -1) multiplied by 5 plus the index of the chunk that matches the position in the collection of objects.

SUMMARY
This method is used to
14643586		takes a directory path and returns the virtual directory associated with that path.

This method takes a path and returns the parent directory associated with that path.

This method tests whether two virtual directories share the same parent directory by checking their
14643688		moves a JList up or down by randomly moving elements in the stack.
This method moves an element in the queue to a specified position within the list.
This method moves an element in the queue up or down by using the insertion
14643784		takes two terms vectors, one from the master results and a destination term vector, and writes the result to a temporary document. This method also inserts two new terms used throughout the network. This method first creates a relationship between two documents. If
14643920		retrieves a category by name. It first checks if the name, form data directory, and the category name are provided. If they are not provided, it casts the name to a string and decodes it into an integer. It then
14644006		initializes the servlet by obtaining the location of the application context and obtaining the provided servlet. It then initializes the WetaNewsService.Init() method, calls the init() method on the WetaNewsService, passes the serv
14644008		sets the main navigation status of a form and resets the category or categories in the form.
SUMMARY
This method is used to set the main navigation status of a form and reset the category or categories in the form.


1505314		sorts a table of friends with ascending or descending order based on the specified sort order.

This method sorts a table of friends using indexed sort settings and selects the sorted data in the table.
SUMMARY
This method
1505337		attempts to connect to a MySQL database using JDBC with the provided address and username. If successful, it establishes a connection to the database and assigns it to the variable "counter". If unsuccessful, it prints the exception stack trace and returns
1505340		deletes a row from the Facebook table with the specified UID.
This method allows you to buy sharing your own friend.
This method allows you to leave a favorite sharing.
This method allows you to leave a photo sharing.
S
1509152		assigns a new montage and adds an OK button to a panel. It also sets the center panel of the window as centered on the screen and displays the form and password field.

This method updates the text fields of a J
1509255		loads an SDFFile object into the `loadedNeuron` by loading its properties into the `eNwhl` object and setting the `updateRelated` field to `false` if the `eNwhl` object is `
1509261		closes the audio file, clears various GUI data structures, resets the window title, and clears the GUI fields for the audio file.
SUMMARY
This method is used to close the audio file and clear related data structures,
1509311		displays a file chooser dialog to select a EDF file, opens a new EDFT file if the user selects one, and sets the ACL attributes and locks the file lock if possible.

This method opens an EDF file if
1509501		updates the position to the next position in the polysomnograph and checks if the current position is empty. It also checks if focus is set and if so, calls nextPosition() to get focus.
SUMMARY

15539479		continuously reads characters from the telnet input stream and returns the number of characters read. If the internal buffer is full, it checks if the buffer has exceeded its limit and returns -1. Otherwise, it reads the next character and stores it
15539501		defines a scroll region on a terminal to allow for scrolling
15539546		flushes the output stream and attempts to flush any buffered data.
This method tries to flush the output stream or an IOException if one is thrown. If the `flush` method of the `m_ConnectionData` instance is available
15539553		closes the output stream associated with the protocol by sending the logout command and sending a prompt command with a no answer.

This method closes the input stream associated with the protocol by closing the output stream.

This method closes the
15539562		sets the terminal to the specified name and initializes it. If an error occurs or already exists, an IOException is thrown.

This method sets the terminal field of the specified column or row and prints it to the console. If the
15539594		sets the terminal geometry of the connection to the specified width and height. If the width or height is negative, it sets them to the zero. Otherwise, it sets the scaleFactor to the current value. It then sets the terminal of the connection
15539664		evaluates an integer array using the parseTWO method and returns true if the array is not null, and false otherwise.
SUMMARY
This method is used to parse integers corresponding to Telos (Telos-Os).


15539678		handles the reading of a byte representing a terminal geometry, handling the corner of the geometry and setting the terminal geometry accordingly. 
This method reads four 16-bit integers ints and checks if they are within the specified acceptable range. 
15539704		handles input based on the line mode, input stream handles any comments or points, and handle LMMode, line mode, and WONT events. It also skips to the next specific input code.
SUMMARY
This
15539952		returns a string representation of the enabled status of the system based on the specified integer.
This method returns a string representation of the enabled status of the system.
This method sets the enabled status of the system and updates the canvas with the
15539960		returns the priority of a communication request to wait for a reply result.

This method waits for a reply to a particular point in receiving a response from another point.

This method waits for a reply to a specific point in receiving
15539963		This private method locks the server for exclusive access to a ticket, waits for a return value, and terminates the server communication if no return value is found. It then waits for a new environment request, and checks if it was received. If
15543945		updates the scores of polynomones with the score of each artifact in the tour using a nested loop to avoid duplicates.

This method updates the probability of each child artifact in the tour by adding a new value between the first
15543946		updates the pheromone weight of one and all other people in neighboring people using a specified weight and updating their heights. It also checks for a potential merging behavior to avoid duplicates and adjusts the height accordingly.

This method adjusts
15544017		computes the total information and calculates the mean, error, and standard deviation over a log of a specified number of terms using the GaussRandom class.

This method computes the delta for all the entities based on their logarith
15544024		calculates the evaporation coefficient of a problem by using the prover to calculate the actual evaporation coefficient.

This method calculates the est of a problem and converts it to the est of the algorithm.

This method
15544026		calculates the evaporation value for a given probability and its neighbors. It searches for aBestElementInTieData object and sets its evaluate value or evaporation value based on the element found.

This method calculates the
15544245		responds to user-attempts to any commands by checking the entered option and command. If the command is not recognized, it displays an error message and exits the program.
SUMMARY
This method is used to display usage
15544267		sends a range of values for a latitude, longitude, and latitude-longitude. If valid phone numbers are provided, it sets the corresponding variables in the new thread for the current GPS state. Otherwise, it prints an error message and
15544301		adds zoom controls to the layout.

This method handles key press events. It does this by checking for the softkey code pressed and performs certain actions accordingly.

This method adds zoom controls to the layout. If the softkey
15544319		adds zoom controls to a frame layout frame.
This method adds a zoom control to a frame layout frame.
This method resizes a label to include only digits and places it in center.
This method adds a zoom control to a
15585622		configures the GUI using the necessary initialization steps and creates the GUI.
SUMMARY
This method is used to create the GUI by setting the user action listener, interface configuration, and potentially setting system properties.


15585629		handles registering a session, providing parameters such as the U name, server IP, password, and username.

This method handles a register request message, extracting the base address, port, and host. It does this by calling the handle
15585639		starts a media manager, adds an interpreter to the GUI manager, and adds an event listener to the events listener after calling a received event.

This method calls a received call event and updates the GUI.

This method parses
15585693		handles the movement of the camera and calls the appropriate handler method based on the action that occurred.
This method calls the appropriate handler method based on the action.
This method calls the appropriate handler method for the camera movement.
This method
15585699		hangs up all available action handlers in the list if there is at least one available
This method initializes several counters and then calls the ping() method on each handler a sequence of numbers filtered by a random positive number.
This method handles
15585711		adds the SoftPhone panel to the Spark tab in the workspace.

This method adds the SIPpark panel to the Spark tab in the workspace.

This method adds the Smartphone panel in the workspace.

This method
15586245		returns a list of the selected values in a radio button map.

This method returns a list of the selected values in a radio button map using a method from a component.
SUMMARY
This method is used to return
15637024		returns a JMenu object called jMenu, initializing it if necessary, and adding two JMenuItems: a JMenuItem with the text "New Folder..." and a JMenuItem with the text "Open`..." and a J
15637036		returns the JMenu object named jMenuConfirmed, which contains a JMenuItem that is added to the menu.
This method returns the JMenu object named jMenuConfirmed.
SUMMARY
This method is used
15637070		returns the `toppanel` if it is not `null`, otherwise it creates a new `JPanel` object with a flow layout and margins. It then adds three `JLabel`s and `JButton2`
15657495		returns true if the ErrorSet contains the specified object.

This method checks if the current set is a pair of error objects and returns false if it is not.

This method checks if the current set is an intersection and returns
15657497		checks if a list of errors crosses another error.

This method checks if a list of errors crosses another error.
SUMMARY
This method is used to check if a list of errors crosses another error.


15657504		compares two Errors based on their errors or details. It first compares their start and end values, and returns if they are equal in value or between values, ascending or descending. If one or both values are equal, it compares their dates.
15657509		generates a hash code for an object based on the values of its instance variables. This method is currently commented out and the getValue() method is used.

This method generates a hash code for a provided argument object, assuming the expression
15658019		advances to the top of a parse tree and updates the grammar model and context generator accordingly.

This method matches the production of a production to the internal symbols and builds a model for theproduction.

This method advances to the position
15658631		generates a secret key for a given user using the provided public key and secret collection. It obtains the user's username and if provided, it generates a secret key.
SUMMARY
This method is used to generate a secret
15660435		returns the next available step based on the current step and ensures no overflow is available.

This method removes all steps from the previous step, preserving the oldest steps.

This method removes all steps from the next step, preserving the
15689101		adds a default constructor with modifiers set to public, which has a null public instance definition.

This method adds a default constructor with static initializer.

This method defines a JL5 constructor that takes int and Object as parameter
15689111		adds a static initializer to a constructor at the specified constructor pointer.
This method returns true if the constructor has been marked as a static initializer it also adds the stack values and endlines.
This method throws an exception if the
15689402		checks if a value is within the bounds of the current pixel array being represented by an int array. If it is not, it returns false. It then calculates the pixel array index and converts it to a long index while ensuring the index is not
15689897		retrieves all the property values associated with a specified key from the map.

This method takes a map display, a key and returns the entire map as a List.

This method takes a key and returns a list of elements
15690046		moves the calendar to the start of the interval if it has started, or moves the calendar to the start of the next interval if it has not started.

This method fires a property change event indicating that the start flag has been set
15690066		moves the calendar to the start of the next interval by shifting the year, month, and day to the beginning.

This method updates the calendar display by setting the calendar model, adjusting the start date and end date based on the user
15690175		returns a BeanComparator that compares this Bean to the specified Bean, ignoring any case-sensitive ordering.

This method attempts to compare this Bean with the specified Bean using the specified Comparator.

This method compares this Bean with
15690185		adds or updates an object in the cache. If the key exists, it uses the factory to perform the operation and puts the value. If the key is not found, it attempts to put the key.

This method receives a Cache
15690189		removes an element with a given key from a mutable data structure.

This method removes a specified element from a mutable data structure, and updates it if necessary.

This method removes all elements from a mutable list.
15690344		returns the first key in the collection if it exists, otherwise it returns null.
This method returns the least recent primary key of the collection if it exists, otherwise it returns null.
This method returns the most recent primary key of the
15690347		returns the last key in the map, or null if there are no more keys.
This method returns the last key in the map, or null if there are no more keys.
This method returns the last key in the map,
15690382		returns the local value for a given key, and if the value is null, it returns the default value.

This method returns the remote value for a given key, and if the value is null, it returns the remote value.
15690415		gets a match of a given name from the current list by providing the lookup character and initializing a result object.

This method fills the result object with the elements from the list.

This method returns a string representation of the list
15690588		adds a specified object to the list at its index, making sure it is not already present.
This method attempts to list an item at a specified index. If the list size exceeds the maximum size, it removes the item if the list
15690844		reads a line of text from the input buffer. If the buffer is big, this method tries to read additional characters until a non-character is encountered. If the buffer is the end of the file, it returns null. Otherwise, it returns
15691054		puts all the elements from the provided PersistentMap into this PersistentMap.

This method gets all the elements from the inner collection from the current collection.

This method removes all of the elements from the current collection.

15691076		This method saves any remaining entries in the list to the file system.
This method stores a list of entries into the file system, preserving the size of the list.
This method deletes any elements from the file system that are not present
15691132		reads a UTF string from a data input stream. It first reads an array of characters from the stream and returns it as a string. The method then uses a string buffer to append a double (positive) or fractional number to the string.
15691443		returns the class type name for a given class object.

This method returns the class type name for a given class object.

This method returns the class type string representation for a given class object.

This method returns the
15691601		takes a pattern string and iterates through the pattern and character patterns, storing the values in the format pattern and character buffer. In case no pattern is found, an exception is thrown.

This method creates a pattern string and replaces the
15691691		finds the implicitTeaImport on a given class or package name and returns a boolean value indicating the result.

This method checks if an incoming request is similar to the one requested by the call object. If it is not the same request
15691743		syncs source files by updating their timestamps and updating the template source information.

This method applies a modification to a unit by updating its compilation unit, adding a timestamp, and setting the end time if necessary.

This method
15691747		generates a URL based on servlet path and a template name. It handles different servlet paths, including "/", "/site.jspx", "/wsdl.jspx", "/wsdl_1_0.xml",
15691860		launches the automatic cluster management thread to live by creating an instance and starting the threads for the given components.
SUMMARY
This method is used to launch the automatic cluster management thread to live.


15692051		binds a variable to a variable and returns true if it exists and sets its type to null if it doesn't.

This method binds a variable to a type that is not abstract or initialized, and if it is not, returns false
15692236		checks if an object has an object of a specific primitive type as its wrapper class.

This method checks if the object is an instance of ArrayList, Map, Collection, or Map. If it is, it iterates through the elements
15692726		sets the type for each given data value, clearing the conversions list and inserting the type if the type is not null, otherwise it logs a warning message indicating that the type cannot be set, sets the type to a new type for conversion, and
16108206		retrieves an Aggregated Resource from a given URI using theioneResourceFactory.
This method creates an Aggregated Resource and multiplies it.
This method creates an Aggregated Resource using the iorems library.

16108239		returns the title of a resource in the RDF form. If the resource is not an atom, the title is the title of the resource's content in the RDF form.

This method parses an RDF record containing R
16318542		attempts to check if a Pinged resource is valid, returning true if it is and false if it is not.
This method checks if a Pinged resource is valid.
This method ensures that only Pinged or Pinged Work
16318547		receives a Resource, Property, and several other parameters, including a root resource, a property, and a value string. It then checks if the property has a value string and returns `null`. Otherwise, it performs post-processing specific
16318566		takes an `MetadataBean` object as input and returns the result of calling the super method `makeBibCitation` with the `MetadataBean` object.
SUMMARY
This method is used to
16367944		handles changes to the input of a viewer by updating the input accordingly. 

This method updates the properties of the input based on other fields. 

This method sets the input of the viewer if the input changes.
S
16368029		handles an event, including selection change, the selection changed event, and the event source for the event.

This method creates actions for the action sets combo boxes and menus, enabling them based on the selected object.

This method
16368038		returns a string representation of the value at the specified row and column of a table. It handles different column options based on the column type, including displaying markers, reporting markers, or hiding markers.
SUMMARY
This method is
16368601		simulates a problem by displaying any exceptions as a message to the console, obtaining an available problem factory, and reporting the error with the provided strings.

This method displays an error message to the console.

This method formats errors using
16368606		creates a folder structure at the specified location by recursively calling itself recursively on its parent folders and creating folder helper for its children if the folder does not already exist.

This method adds all new subfolders to the
16369308		retrieves or creates a console object for displaying messages.
SUMMARY
This method is used to get or create a console object for displaying messages and to create a console appender using the IControler interface.


16413013		initializes a HashSet of keywords by checking if default keywords are being added and if not, initializes them by calling the superclass's `initializeKeywords` method.

This method initializes the HashSet of keywords to be
16424014		initializes the application by calling the customInit() method.

This method initializes a demo applet with a set font and background, and creates a canvas with a size, background, and background image. It also adds commands to configure
16424411		constructs an action to be executed by retrieving an action term and a list of feedback.
It then looks up the corresponding predicate and call to the function in the action target object.
If the method fails to find the predicate, an exception
16632712		initializes the selected class list, iterates through the classes that are present in the class relation ship list, and adds the names of the classes inside each class to the selected class list.
SUMMARY
This method is used to
16652158		prints the stack trace of an exception to the specified PrintStream.

This method prints the stack trace of the throwable, if it is not null.
SUMMARY
This method is used to print the stack trace of the
16652160		checks if the superclass implements the Java version 1.4 interface.

This method checks whether the class implements getCause() or toString(), getCause(), or is not the default cause.

This method returns true if it returns
16652230		sets the should pause state of the crawler and updates the system tray index.

This method sets the should pause state of the crawler and updates the system tray index.

This method sets the should pause state of the crawler
16652235		This method attempts to save an index file to a file based on the last update time of the Lucene library. If the last update is not null, it writes the last update to the file. If no last update is provided, it handles
16652237		checks if an error list is empty and then checks the number of different IMAP entries with valid URL values.
This method parses a URL and checks if it contains IMAP entries starting with IMAP 1.0.
SUMM
16652440		returns the current measuring time in milliseconds since the start of the measurement.

This method returns the output format of the execution time.

This method calculates the number of measurements to print based on the measurement measures, the number of measuring
16652467		closes the application by checking if it is open and if not, waits for the program to stop. If the program closes, it terminates the application.
This method closes the application by the main loop execution by calling the close method of
16652491		removes the whitespace from a string that is either non-whitespace or without any whitespace characters.

This method replaces specific characters in an input string with spaces and underscores unchanged.

This method swaps two parts of an
16652530		retrieves the text of a selection in the active document. If the text is empty, it does nothing. Otherwise, it returns the text.

This method overrides the `getSelection` method to return the selection from the
16652533		checks if the length of the content string that is less than the specified ("index").

This method iterates over the string "index" and escapes the "value" prefix and "increment" suffix to the next given substring and
16652540		removes prefixes from the input string.
This method removes any leading or trailing whitespace from the binary string.
This method unigrams the input string by removing any leading or trailing whitespace.
SUMMARY
This
16652547		sets the source code of a compilation unit using an AST parser, and may throw a RegainException.
This method sets the source code of a compilation unit with a given compilation unit name.
This method sets the source code of a compilation
16652581		takes a string containing HTML by line breaks, replacing any HTML entity, and prints the text out or "<br>" for non-html elements. It checks for HTML encoding and handles the proper HTML character types, and calculates the divider location
16652589		retrieves the password entered by the user and prints it to the console, optionally encrypting it. If the password is entered, it returns the stored password. Otherwise, it attempts to decrypt the password using the checkPassword method and decrypt the
16652626		returns a string representation of the object, including the number of plugins and the name of each plugin in the list.
This method overrides the default toString method of the parent class and returns a string representation of the object.
This
16652666		takes an XML element and returns the parameter as an integer corresponding to the given name. If the parameter is not found, it checks the data type of the value. If it's a number, the value is retrieved from the parameter. Otherwise
16652740		returns an instance of an IndexWriter and if it is null, it initializes a new one with an IndexReader, which is created using a SelectQuery with a defined timeout.

This method clears the index of a given number of
16652744		returns an IndexSearcher object that can be used to search Lucene documents with a validation query. It attempts to validate the Lucene query against a given Google DocsQuery object, returning a valid SearchResult object if found or build an
16685341		remaps previously cleared views with items from a given linear layout, starting from a given range, and removes the items from the layout.

This method optimises an adapter by removing items from the adapter, adding them to the view, and
16685347		ranks a view up by adjusting the list view items and rearranging the list start indices or end indices accordingly. It calculates the viewable model index and model index of a view and recycles the list view items after the view will disappear.
16685399		calculates the available height for a given layout item based on the bounds of its child items and the desired result.

This method determines the inner and outer margins of the items in the container, considering if the item can fit within the
16685417		draws the top and bottom shadows of the specified map widget.

This method draws the top and bottom shadow of the specified map widget with the given location from the center of the screen.
SUMMARY
This method is used
16685465		builds the view for measuring values based on the specified type, appending new values between fields and assigning the appropriate data with the current display, and clearing both the previous and next views.

This method builds the view for measuring values by
16685491		returns the item view at the specified index from the view adapter, or an empty view if the index is out of bounds.

- This method provides a fallback view for the specified group handle, including a fallback item if group
16686536		splits a rectangular given a view area into a list of points. It also computes the midpoint coordinates for each point and adds them to the list.
SUMMARY
This method is used to compute the midpoint coordinates for
16755667		initializes the GUI by setting up the JFrame, adding panels and setting the frame's size, title, and frame location.

This method sets the default close operation to exit the application when the window is closing.
SUMM
16755696		initializes the connection to the database using the specified parameters.

This method reads the password from the remote server and sets it in the private constant.

This method returns the private integer representing the remote IP address.

This method
16755702		is used to add a new route point if the new point is not already present.

This method adds a new route point to the list of routes, but only if it already exists. If the route for the new point exists, it
16775544		retrieves a series of times that have been statically labeled from a list of times.
This method returns a collection of all series of times.
This method returns a "all times" time series.
This method returns a list of
16775665		converts a long number representing a double with a decimal 59.
This method converts a double to a human-readable Java date object.
This method converts a double to a business date object.
SUMMARY
This method is
16775701		writes the time value pair, including the time and value in time units and calls the method writeTimeValuePair once.

This method iterates over all the time-value pairs in the data collection, and for each, extracts
16775785		removes a Wdm file from the buffer by calling the wdm_u method in the superclass. If the return code is not 0, it throws a RuntimeException with the exception message and null returned without performing any operations.
S
16775804		returns the number of time steps between two date ranges. It first retrieves the start and end date of the specified range from `dgl`. Otherwise, it retrieves the number of steps from `dgl`. It then returns the count
16775825		tests the reading and writing functionality of multiple times and times on the retrieved data as doubles.

If the number of times have been set, it sets whether to continue running.

Stops the execution of the test if it is running
16776063		returns an instance of an IStochModelInstance with a specific output level if the input is `outputLevel`. Otherwise, it returns an instance of the super method.

This method gets the instance of an IStochModelInstance
16776079		creates a new thread with a specified number of idle threads and waits for one to return the current thread ID.

This method waits until the pool for any inactive threads is empty.

This method checks if the pool has any active
16776088		generates a unique entry for a given thread and unique ID.
This method tries to allocate a new ID for a given thread, but if the ID exists and is not a system thread, it returns false.
This method finds a unique
16776092		cleans up any existing admin and keeps running threads if the core object is unlocked. If the core object is empty, it kills the application. Otherwise, it handles reading the admin request and dispatches specific events to the client's process.

16776728		deletes a row from the model when the delete button is pressed, removing the element at the selected row and setting theVariationButton to null.
This method deletes the row at the given row index.
SUMMARY

16776739		updates the UI by calling the updatePDFDefinitionTable and updateVariationPerParameterTable, and also updates the correlation and results tables by calling the updateCorrelationTable and updateResultsTable.

This method clears the list of pending runs
16776823		updates the state of a checkbox based on an event and checks if the state has changed. If the checkbox is selected, it calls the checkBox_actionListener method with the event as an argument. Otherwise, it sets the active
16776878		adds defaultuncertainties to each givencertainties as specified by the parameters dupeUncertainty0, dupeUncertainty1, dupeUncertainty2, tuUncertainty0, termProbsUncertainty
16776879		creates default or normalises faults of paragraphs.
It loops through paragraphs, creates default constants for all paragraphs.
ForwardedSemanticTag [][] pairs of paragraphs, and parses the paragraphs in the file, creating the definitions of
16777430		 checks if a chart with a specified ID is selected based on the provided TimeSeries.
This method returns a Status object indicating whether the chart starts with the specified location and source.
This method updates the Status object with the name of the chart
16777439		This method sets the details of a TimeSeries object by extracting the source, quantity, unit, location, input description, and image description properties from the TimeSeries object. It then calls the processFileId method on the TimeSeries object with the
16777458		returns a set of TimeSeries objects representing the intersection of the current object with the startTime and stopTime values at a specified axis.

This method calculates a new TimeSeries object with the given startTime and stopTime, either directly
16777464		moves the location of a timeseries series represented by the mOrientation parameter. It checks if the origin and current location are valid and adds them accordingly.

This method adds a single time series to the set of timeseries associated
16777470		builds a Time Maps by filtering the onTime and onTime maps based on time within the specified TimeSeries objects.

This method updates the onTime map to reflect the changes made to the time series.

This method normalizes
16777557		retrieves an include exchange item by its ID from an array of exchange items.

This method replaces the specified attribute with the value of the given item.
SUMMARY
This method is used to find the IPrevEx
16777644		creates a ROC tree vector and its subvector collection. If there are identical noise individuals, this method creates a realization vector for the sample rate of the table.

This method constructs a new RealizableVector and assigns it to
16777645		evaluates a vector as a PDF using a visitor pattern instance. It calculates the dot product between the evaluation of the vector and each fraction, and returns the result as a double.

This method iterates over the next list of fraction trees
16777716		sets the values for an extra key in an array of double values. If the array has been modified since the last set, it returns without doing anything.

This method sets up a TimeSeries object with the data and time series data for
16777760		returns the realizations of the random number generator by creating a new realization vector with the mean and standard deviation of each value.
This method returns the value of the basic statistics entry.
This method returns the value of the realizations
16777782		evaluates theMarginalPDFs method of the Variance class. It takes in an array of integers and evaluates the constants of them and returns the result as a vector.

This method evaluates the marginal pdfs of a given value using the
16777900		is used to set the mask elements by matching each value in the current mask object with another mask.


16777901		returns a copy of the object being tested.
SUMMARY
This method is used to perform an "or" operation on the current mask.


16777932		plots two features using the provided set of data and labels.

This method plots a set of different data points and labels, along with the corresponding x and y coordinates.

This method plots multiple data points with different labels.

16777940		reads credentials from a file until a valid filename is obtained.
This method reads a line from the file and stores it in the instance variables username.
This method reads an XML element from the file.
SUMMARY
This method
16777945		cleans the user's username and password if the buffer is not empty after reading lines from a terminal or buffer. If the buffer is empty or another message is received, it continues to read the buffer as a user and password or buffer.

16777962		calculates the difference of two vectors, represented by the variables diag and stored as PyDictionary, ensuring that this vector is stored as a long value as a long datatype. If the difference is less than 0, it returns
16777985		calculates the standard deviation between two values.
This method returns the deviation of the current value.
This method returns the variance of the current value.
This method returns the standard deviation of the current value.
SUMMARY
16778039		evaluates a function on a linear correlation model that requires both the maximum and minimum values specified in an input array. It checks for various errors that may occur during the evaluation process, including NaN and less than zero. If validation fails, it
16778070		executes an image processing operation on two matrices using an alpha-based matrices and a symmetric matrices. It multiplies each element's value according to the specified alpha value and updates the object's matrix accordingly, passing the modified matrix
16778127		calculates and returns the inverse cumulative distribution function (CDF) of the input data. If the input probability is 0, it returns the input. If the probability is less than the scale, it adds 0 to the current rate to calculate
16778128		calculates the proportion of a given value using the polynomial fit function and its derivation rate. It checks for degrees and signs to ensure correct rejection due to missing values. The method throws an exception if the number of values in the
16779123		sets the current values of the object based on an array of variables. It uses the elements of the array to optimize the optimization and then calls the setCurrentValues method to set or fail the method depending on the optimization status.
SUMM
16779243		initializes a new IVector with the given IPictureEnumeration and double value.
This method initializes the fisBase method, initializes the fisParameter, sets the value to null.
This method initializes the
16820857		retrieves the sub-id of an ISDN (Continuity ofdetail) object passed as ARQ.
This method gets the sub-id of an ISDN object.
SUMMARY
This method is used to retrieve
16821568		retrieves the next value from the hidden_system_seq table in the database. It checks if there is more than one row and returns the value as an integer if so. Otherwise, it returns -1.

CONTEXT

16848321		returns a JPanel called jJBotones, which is created if it has not been created yet. It sets the layout of the panel to a BoxLayout with a horizontal gap of 5, and adds two components (getJBGenerar
16848343		returns the JCalendar JPanel. 	
This method attempts to initialize a new JCalendar object with the values provided in the event object's properties.  It then creates a new MyCalendar object, sets its properties with
16848349		returns a JTextField object that is used to send integers from FieldDate. If the JTextField does not exist, it is created with the label "FEBRAD" and the text "FEBRAD". It sets the focus
16848359		returns an `MyIntegerField` object with predefined properties if it has not been already. If it has, it initializes it with the provided `JCalendar` object and adds it to the `jlAtras` panel.
16918308		initializes the console test and the common variables for use in connecting to the XMPP server using XMPP.

This method initializes the console test and the message of the console reader.

This method launches the program with
1693038		sends a message using a SimpleMailMessage, using a VelocityEngine and a model as parameters.

This method sends a message using a SimpleMailMessage, using a VelocityEngine and a model as parameters.

This method gets the
1694508		processes the command entered by the user, displays it, and processes the output based on the command received.

This method retrieves the output data from the command entered by the user.

This method prints the output to the console
1694531		retrieves the username from the cookie used in a servlet request. It first checks if the cookie name matches "platform.username", then iterates through the cookies in the array list to decrypt and convert the value to lowercase.

16955339		recursively releases the FactoryFinder, sets resources to context to null, and clears the context class loader.

This method sets a list to true and ends the thread.

This method checks if the thread has ended.

16958671		performs the choice process, reading user input and dispatching commands.

This method initializes variables, tries to read a user by input, and prints an error if an invalid input is given.

This method reads user input from
16958709		scrolls the screen to make the bottom and moves the caret up or right by one screen line.

This method takes a string as input and calculates the initial y rotation offset based on its length.

It repeats this process twice
16958722		returns a letter as a string from the specified index.

This method takes a string as input and initializes an array of objects one at a time.

This method takes an integer and initializes an array of objects one at
16958733		checks whether a given position is present on the board.
This method returns true if any of the positions in the board are on the house, and false otherwise.
This method checks if any of the positions in the board is on the house
17037265		returns the difference between the current time and the timestamp obtained from its date field, converting milliseconds to milliseconds.

This method returns the number of seconds since the start of the second-day field by measuring the time in milliseconds.
S
17037351		writes an XSI type attribute either with or without the namespace specified as parameters, depending on whether a prefix is initialized.

This method writes an XSI namespace declaration.

This method writes a simple type identifier (qualified type name
17037848		returns the dotted Net of a given Field object, indicating its type, with angle brackets, true angle brackets, 0 angle brackets, and any other type except void.

This method returns the superclass version of the DateType class,
17037855		takes a JDBCMappingField object as a parameter and returns a string representation of the type of the field. If the field is a user-defined type, it returns a default type name for that field. If the field is a
17092152		tests whether an error is thrown when attempting to select an item from a form successfully. When the item is initially selected, it verifies that the widget is now visible and that the test grid option is a JUnit test. It asserts that the
17110417		adds a user overview panel to the client server if it is not already present, or creates a new one if it is null. The method associates a username with the album overview panel and adds that panel to the tab. It also renders the
17121849		checks if a given news event is part of a series that should be considered. It takes as parameters a log and checks if the logged entity is a subset of the specified news event that is not contained in the notification. If so, it inv
17121898		compares objects for equality based on their unique identifiers, value, and date. If either object is null, it compares them based on the minimum value or the maximum value. If both objects are non-null, it compares their names (dist
17176380		returns the SQL-formatted execution date for the statement as a string.

This method returns a string representing the SQL statement as a string, or an empty string if no SQL statement is specified.
SUMMARY
This
17277252		turns a shape to the right by changing the rotation mode, sending a command to the left of the shape's transformation, checking if the selection has an empty selection, and if so, sets the rotation mode to rotating and checks if it is
17277266		switches the sheet mode to shearing and updates the status and error message accordingly.
This method sets the workspace to shear mode and updates the status and error message accordingly.
SUMMARY
This method is used to toggle the
17277303		groups the currently selected scene graph in the scene graph view.
This method handles the action performed by pressing the "Group current selection" button, which allows the user to select or groups the current scene graph view.
This method handles the action
17277396		copies the current selection by iterating through the scene graphs in reverse order and adding and removing each scene graph to the current selection, then repaints the panel.
This method sets the sceneGraph and sourceRanges for the selection and
17277416		deletes the currently selected scene graph by removing its children, children, and updating the visibility of the scene graph.

This method updates the drag history to the best scene graph that allows the user to drag it horizontally / vertically to the best
17277499		displays a context menu upon a mouse double-clicked event. If the popup menu triggers an action, the method is triggered with the ID of the click and the location of the event.
SUMMARY
This method is used
17285225		registers a user by creating a User object with the provided information and putting it into the synchronized userTab with a unique ID.
This method registers a new user to the pool using the provided public key pair.
SUMMARY

17285259		initializes a chat session by creating and starting a new thread that encryption and sends a certificate to the client.

This method imports and initializes a chat session with a given session ID and client.

This method initializes the chat
17285264		logs out the current user by sending a logout packet to the server, disconnects from the server, and then disconnects from the server. 

This method is a synchronized method that clears a list of components and another list of
17285268		opens a chat session, sends a quit request to the server, and closes the chat session.

This method starts a round, opens a message handler, encrypts a message, closes the chat session, and stops the round.
S
17285317		sends a message to aWhosOnline object containing the user's who is online and then recursively displays the list of offline users.

This method sets the JButton that will toggle its visibility and toggle its title.
S
17285334		sends a "all users" request for all users. It retrieves a user list and appends the user ID to a string buffer. It then sends the resulting list to the kernel client, shows the users in a window, and sends
17285345		updates private and public keys when a private key is available.

This method provides a string representing a key to a certificate's certificate via a ByteArrayInputStream.

This method generates a signature using SHA-1 or SHA-
17288968		validates whether the given index value is a valid value for the converter. If valid, it throws an exception indicating that the index value is not a valid value for that type.
SUMMARY
This method is used to check if
1731945		returns an input stream for the file associated with the specified URL.

This method returns an InputStream representing the URL of the specified URL.
SUMMARY
This method is used to obtain an input stream for the URL of
1736133		retrieves a list of TblProjectActivity instances using the keyword provided.

This method retrieves a list of TblProjectActivity instances.

This method retrieves a list of TblProjectActivity instances using the keyword provided
17361374		writes the state of the host to the specified data output stream, including the host's ID, network ID, buffer length, and host name. If the host is terminated, it sends a disconnect command to the host.
SUMM
1736211		returns a list of TblProject instances corresponding to a specified date range. It finds the corresponding TblProject instance by the provided year.

This method tests the findByYear method of the TblYearDAO class by valid
1736289		resets the schedule conflict status to false, clears the data, and fires a data change event.
This method handles the "resetSchedConflict" case, calling the resetSchedConflict method.
SUMMARY

1736361		sets the findings list to include only the specified finding.
This method sets the checked variable to true if the finding ID matches the specified value.
SUMMARY
This method is used to set the findings list to include only the specified
1736410		removes selected items from a list based on their corresponding IDs.

This method removes a given select item from a list.

This method removes a selected item from a list.
SUMMARY
This method is used to
1736412		fills out a city name list, populates it with reason codes, and returns the city name list.
SUMMARY
This method is used to populate a list of all the reasons code in the service.


1736423		fills the list of unselected pics (page margins) for employees without a keyword.
This method adds a list of unselected pictures to the list of unselected pictures for a given user by finding the user with the keyword "."

1736641		is used to obtain the name of the current year. It retrieves the list of audit projects associated to that year and checks if there are any projects associated to that year. If no projects are associated, it sets the code indicating that there is
1736645		handles the selection of the project list, and checks if there is an audit project on previous year. If there is, it selects that. Otherwise, it redirects to the previous year. If there is no audit project on previous year,
1736648		handles the action performed when a button is pressed, it calls the doNextYear method of the projectService object. If the listData is not empty, it calls the doNextYear method and updates the lastButtonClicked variable to the
1737238		retrieves all instances of TblAuditor and logs the process.

This method compares two Item objects by their title, checks if their name contains "foo", and sets the title of the first Item to the result of matching the
1738728		finds and returns all instances of the Table class.

This method tests the findAll method to check if a list of objects is contained within a list of instance objects.

This method tests the findAll method with null parameters and
1738870		checks if a user is authenticated by analyzing a table for the value associated with a security ID.
SUMMARY
This method is used to return true if a user is authenticated, and false if not.


1738897		sets the values of the mColumns ArrayList by iterating through a given List and adding each Object to the List with a null value.

This method sets the column names for a given List of ColumnBean objects to be set
1739039		saves a form to a remote service service, displays a success message and returns the action path to the "doSave" action.

This method shows an info message, sets the response URL and creates a JScrollPane with the
1741129		is a private void method that calls otherDoEndTagOperations to perform and manage other operations in doEndTagOperations.
SUMMARY
This method is used to perform other operations in doEndTag operations.


1741262		retrieves the active functions from the project service.
SUMMARY
This method is used to retrieve active functions from the project service.


17437046		sends a message using a broadcast message. It includes an additional header for the number of packets, the payload length, and the payload start.

**sendPacket** sends data as a byte array.
SUMMARY

17437047		registers a new command by sending a command to the server and adding it to a map of commands. It also prints information about the command being performed.

This method registers a new command by sending a command to the server and adding it
17437051		retrieves the help command for the specified comm parameter.

This method is a setup method that sets up a server named "localhost" and creates input and output commands for the command console.

This method is a setup method that
17437196		writes a 32-byte value to the output stream by first converting the value to bytes and then writing each three bytes to the output stream
17437277		This method writes a StringToImage object to a stream using the provided parameters and optionally wraps it in a ByteArrayOutputStream.

This method writes a StringToImage object to a stream using the provided parameters and optionally wraps it in a
17437304		adds the specified object to a group and returns true if the object was successfully added, or false if the object was not added.

This method adds any of the specified object to a group and then returns true if the object was successfully
17437319		writes the header of a Mc3 class to the MC3 memory. The version of the source file of the MC3 method set the correct memory address. It first sets the flags to the maximum value determined by the specified method. If the
17437323		marks slots in a 2D array for reading.

This method identifies a header of a line of code.

This method describes a header of a line of code.

This method marks an item on a line within a block
17437365		compares two byte arrays based on their length and the values contained in the arrays.

This method compares the lengths of the arrays using a comparator with a null argument.

This method compares the lengths of the arrays using a compar
17437443		removes an object from the current world region, removes the character's player and player hand from the map, and updates the observer if all objects remain.

This method removes an object from the list of known entities, updates the observer,
17437525		retrieves the "Here" object from a queue as a MuCharacterBase if one exists for the names of the queue.
This method closes the stream to the specified offset.
This method sends an IRC message over a virtual stream to
17437526		restores the character's inventory to a new empty element at the end of its own inventory based on the state of a player character.

This method overrides the default state machine of the character and restores a new one for an inventory window
17437548		sets the active character to the specified parameter and stores the connection for the player object.
SUMMARY
This method is used to store an OpenMCR connection in the player object for both online and online clients.


17437588		removes all known objects from a collection.

This method overrides the destroy method and removes all known objects from each.

This method gets a list of objects for an object `_knownObjects`. It adds a command to
17437647		updates the current world region by ensuring that the given region ends within the range of the world.
This method resizes the current region within the specified distance of the mouse pointer by the specified amount.
This method moves a tile to the
17437656		removes an object from a known zone and sends a packet to remove an object based on the object type.
SUMMARY
This method is used to remove an object with unknown type from a known zone based on its ID.


17437667		is used to display attack statistics for a given target after it has hit a certain amount of time. The method takes a character as an argument, and displays a hit message.

This method handles item item clicks in an inventory, such as
17437825		sets HTTP proxy settings for the URL generator.
This method sets the proxy host and port for the URL generator.
This method sets the HTTP proxy settings for the URL generator.
This method sets the HTTP proxy settings for the URL generator.
17437829		returns an instance of SSLSocketFactory, which is used to generate SSL sockets for communication with the system.

This method demonstrates the performance of the SSLSocketFactory by creating a socket factory and ensuring that the expected SSLPort of the
17437840		returns an SSL socket for a given host, port, and HTTPS proxy, which can be a secure connection, a regular connection, or a secure connection. It also creates a new SSL socket and assigns it to the proxy.

This
17437847		adds a device to the device factory with the specified device ID and token.

This method adds a request for a specified ID to the device.
This method begins by registering a listener for this client and the device to receive events indicating
17437853		returns a feedback SSLSocket using the provided artist name, artist artist port, and author name and port, and stores them in a file system location for further processing.

This method finishes setting up the socket, stream, and buffer
1744187		saves friends to a profile for a given user profile.
This method updates the last updated time of a profile for a given user profile.
This method gets the friends with external data.
This method saves an external data for a given
1744208		updates an external client's status based on if the external data has passed. It checks if the external data is valid and if it is a valid friend. If both conditions are met, the method attempts to sign the data for privacy access.
1744528		sends a POST request to destroy a user's status by a specified ID.

This method sends a POST request to destroy the user with the specified ID.

This method sends a POST request to destroy all users on a specified channel
1744708		notifies that a user has finished their user notification by updating their nickname and password when their notification stops.

This method, completeUrl, uploads a WCM send question to a user, and gets the title and nick of the user
1744881		This method shows a user's password by querying Twitter for the user's password.
This method displays a list of users by querying Twitter for that user's titles.
This method shows a list of users by querying Twitter for the
1744904		pre-uses a Twitter API to get a specific user by ID. For each user, it builds a JSON string to build the user's information and lists all the users that belong to the user. The method then constructs the list of the user
17510726		returns the ConfigurationService object, initializing it if necessary.

This method compares two mTester objects based on their text values in reverse order and enforces that they are both instances of the same class.
This method tests that
17607536		takes a target and a string and transforms the path by substituting the target path in the target string within a given string.

This method takes a target and a string substitute, trims the target, and returns the transformed string while
17607645		adds an option to a search based on a keyword and selects the option in the list if it is selected.

This method allows the user to search for an entity based on a keyword and calls the search method for each option.

17607653		cancels the editing of an image preview. It allows the user to edit the preview using the jButtonCancelEditImage.

This method cancels the editing of an image preview that is related to the albums and/or their
17607706		cancels the edit album by resetting the model to the preview and setting an empty string as a label.
SUMMARY
This method is used to cancel the edit album action.


17608155		closes the connection and closes the data source if it is not null.

This method tests the closeConnection method. It sets the connection object, creates an empty database, sets the statement object to an updatable updatable statement, and
17608276		deletes a row from the database table by calling delete method of the `Objects` class, passing in the profile ID.

This method deletes a row from the database table by calling delete method with the profile ID.
S
17608281		stores a User object into the database. If the User object does not exist or its ID is null or null, it creates a new user, then updates the User object if unique or new. Otherwise, it updates it and logs an error.
17608774		adds default screen buttons to the main panel. It first adds a command, an "reset" button, and form to the panel. The method also adds the layout, adds all other components, and adds all other panels to the panel based
17609046		loads a tree into the user tree by fetching the user menu data by program, handling getting the top program and the sub-repository, creating the server thread, and setting the tree for the application menu data.

CONTEXT
17609063		creates an UIPanel component within the context of the Application.


This method processes an embedded event and updates the UI accordingly.  It performs different actions and delegates events to handlers based on the event type and status.  It
17610827		performs an action on submitting a command to theVisitDelegate of the clinic. It stores the Visit object in the clinic and returns a ModelAndView with a success view.

This method creates and returns a ModelAndView object containing
17610838		handles a user's ownership or a member of a company. It handles various cases related to the owner or organization and redirects to the owner page if specified. The logic sets request attributes and validates session attributes. Finally, subsequent steps in
17610845		retrieves a list of visits for a given pet data object. It creates a JDBC connection and uses the entity manager to query for all visits it contains by id. If the data object exists, it calls the populateDAO method to
17610880		inserts a Pet object into the current data storage. It first inserts a new record into the current data storage, and then retrieves the pet's information such as name, birth date, owner ID, owner's status, owner ID, and
17610882		updates a given pet object by applying a formatter to its properties and adding the new item to a collection.

This method inserts a new pet into the database by joining its attributes with values to create a new pet item, and returns
1762918		releases resources and sets variables to null.

This method, reset, resets variables, and calls the superclass's reset method.
SUMMARY
This method is used to reset variables to null.


17663624		loads library jars into the system by adding a timestamp, logging any errors, and initializing the initialization process. It then iterates through the libraries in the system to add those jars to the input directory, logging any errors or exceptions that occur during
17664223		performs a benchmark by performing a benchmark with the given RuntimeBenchmarkConfig and logs the time taken to perform the benchmark.

This method performs a benchmark for two systems in a separate round, returning the result as an integer.
S
17668573		sets the maximum state of the automaton's graph.

This method handles an exception that may occur during state transitions by iterating through the list of transitions and invoking each transition's state using the current state.
SUMMARY

17669281		sets the progress status and notifies registered listeners about the change.
SUMMARY
This method is used to notify registered listeners about the change.


17669512		retrieves the maximum number of retries for a state transition. If the transition has no retry attempts, it returns 1. Otherwise, it uses another method to retrieve the numerical value of its attribute. If the transition has not actually
17741754		evolves the genotype by calculating the fitness it takes, and then taking it through the generation process. It prints the evolution, paints the individual gif on the graphics context, and displays the best and worst individuals on the graphics context.
S
1780726		"getQueryString" retrieves a query string from a parameter holder and records it if it is a sanitized query string. If the query string is sanitized, it adds empty parameters to the query string and returns the query string as a
1780779		returns a string representation of the Javadoc node.
This method retrieves the text content from a text node in the Javadoc node.
This method iterates over a list of children to loop over and unmarshals each
1780926		retrieves the main class name, removing any class extension.

This method iterates through the elements in the element, extracting the class name, checking for valid characters, and appending it to a list.

This method checks
1780987		returns the value of the specified property name as an object, and if the property name equals "valueChangeEvent". If either of these comparisons are not met, it returns false.

This method gets the values of the corresponding superproperty
1780989		sets the property value of a JavaBean to the specified value or to the current property value.

This method sets the values of the properties of the current property to the specified values.
SUMMARY
This method is used
1780998		calls the click() method of the HTMLElement e and checks if the answer is to click using a FormControl. If the answer is not to click, it tries to click using JServerCore. If that fails, it attempts
1781021		sends an onchange event to the element of the current form and checks the test for a change event. If the element is an instance of FormControl, it casts the current element and calls the sendOnChangeEvent() method on it.
1781034		retrieves the title from the document, returning an empty string if the document is empty or contains no titles.
SUMMARY
This method is used to retrieve the text content of an XML element from its title.


1781043		retrieves a specified property value from a named form or image object, returning null if the property is not found.

This method returns the form that called the page is associated with the given property name.

This method saves the
1781073		searches for a Java applet with a given name within a web page by iterating through any existing applets in the web applet's parent applets array. If a matching applet is found, it returns the applet associated
1781098		determines if a string of a cookie contains only "cookie-class" values.
SUMMARY
This method is used to determine if a string contains only "cookie-class" values or "domain" values.


1781106		returns the base page associated with the form tag. If there are no relative URLs, it returns the relative URL. Otherwise, it returns the URL without any query parameters.

This method gets the relative URL of the form tag by combining
17811221		adds a CRS (center-to-north-south corner) string to the list of names associated with the GPS data, converting the CRS to lowercase and adding it to the names array if necessary.
This method adds a
17811227		adds a time span to the timeline at a specified time position.
This method sets the timeline to the specified component, and if the timeline does not exist, it creates a new one.
This method adds a time span to the timeline
17811276		adds a wgs84 bounding box to a document, specifying the minimum z-coordinate, maximum x--y-value, x-y-min and y-value of the bounding box, maximum y-value,
17811278		adds a geometry object to the WGS84 with a specified bounding box.

This method creates a WGS84BoundingBox object, sets its dimensions, adds it to the WGS84BoundingBox list, and returns
17811290		sets the corners of a triangle represented from the minimum and maximum values of this object.

This method stores the min and max values of this object.

This method performs a translation on the triangle defined by the given coordinates and normalizes
17811473		adds a bounding box to the specified layer with the given name.
This method accepts an integer value and sets the shape ID of the specified feature.
SUMMARY
This method is used to ensure that the bounding box
1781216		retrieves a SubmitButton object with a specific ID from an array of SubmitButtons.

This method retrieves the submit button with the specified ID from a pageContext.

This method returns the complete string representation of the form
1781300		searches through a web form list for a matching object and criteria, and returns the corresponding web form.
SUMMARY
This method is used to find the first matching web form (WebForm) that matches a given HTML element
1781314		returns a string containing the script content of a script, using the content from the scripting engine or the specified script if the specified script extension is not provided in the scripting engine.

This method loads resources and adds them to an ArrayList
1781415		checks parameters to ensure file upload parameters are not null or empty, ensures file size within filename limits, and ensures uploaded file is not a file upload. It also sets the file upload parameters, including the file size in bytes, as needed, and
1781460		adds a preset parameter to a form control, throwing an exception if the parameter is already in the list of presets or when the control does not contain the name.
SUMMARY
This method is used to add a preset parameter to
1781538		sets the values specified and corresponding parameter in the form. It first checks if the parameter is a file parameter, then it throws an exception if it is empty. If not, it throws an exception.
SUMMARY
This method is
1781753		handles events by passing them to the appropriate method based on the event's attributes. It checks whether onclick is activated, and if so, passes the event's methods to another method for processing. If only onclick is activated, it passes
1781951		associates the response with the web page.
This method handles commands and executes them, associating the response with the web page.
This method initializes the server and connects to a database using the provided connection.
This method handles
1782009		initializes the namespace for a given element and namespaceURI.

This method fetches an element from the HttpServletRequest object with the given qualified name.

This method tests the serialization of attributes within a schema element.
1782262		returns the control of the first one in the array of controls.
This method creates a new FormControl object using the getControl method.
If the first Control component is not null, it displays a success message, invalidates the current
1782311		checks if the HTML or text content type is valid (HTML). If valid, it returns true, indicating the validity of the content. If not, it returns false.

This method checks if the content is a valid HTML string.

1782353		retrieves an image with a specified name from a web page. It searches for the image with the name in the page's image container and returns it if found.

This method returns a WMS 1 web image, which is either
1782360		searches for a web image with a target source specified in a string and returns it.

This method returns an error page with an error message of "Error message in " +
          
1782368		returns an image with the specified alt text, if it exists in the list of images.
SUMMARY
This method is used to search for an image with the same alt text in the list of images.


1782388		gets the character set from the HTTP response or the character set header.

This method sends a command to the response.
If the response is successful, it writes the response to the output writer and closes the writer.
SUMM
1782398		sets the length of the options array to the specified value, which is a positive integer between 1 and the length of the options array.

This method throws an exception if the length of the options array passed as a parameter is negative or if
1782517		removes an attribute from the request object's value. If the attribute is invalid, it returns this.

This method removes an attribute from the session object's value or value list.

This method removes an attribute from the session object
1782539		performs the service first or last, and then forwards the request and response to the next filter in the chain, handling any exceptions that may occur.

This method, `doFilter`, filters incoming requests contained within the filter chain. If
1782577		returns a DOM representation of the Event, which can be in the XML format of DocumentFragment or Document object.

This method returns an Element with the specified name and attributes.

This method returns the DOM representation of the Event
1782673		opens a new window using the supplied form data and returns a DomWindowProxy object with a link to the page's URL.

This method opens a new window using the provided form data and adds a hyperlink to the page's URL.
1782708		returns a PrintWriter instance that will be used to write characters to the PrintWriter in an output stream.

This method sends an HTTP POST request to the specified URL. It takes the parameters representing the page number, page size, and
1782714		adds a header to the HTTP servlet response, filtering out requests with no location headers.

This method ensures that access to an underlying HTTP connection is authenticated by setting the appropriate checksums to prevent authentication denied.

This method adds
1782839		sets the character encoding of a resource specified by its name and character set.

This method iterates over all resources that the specified entity is bound to, checking their names and values against the HTTP request's URI, then formats the response if
1782841		adds a header to a resource that contains the specified name.
SUMMARY
This method is used to add a header to a resource that contains the specified name.


1782932		processes meta tags for HTTP and HTTP referer conditions, checking for the CONTENT_TYPE and REFERER_HEADER tags for content length and refresh header settings.

This method checks for specific meta tags in the HTTP and HTTP
1782954		extends the refresh header by setting the refresh header to "Refresh" if it is currently null or updating the original header to the value returned by the getHeaderField method of the other object.
SUMMARY
This method is
1782958		retrieves and logs an HTTP response based on a method tag.
This method reads the response from the client.
This method returns the content type of a response.
This method requests a form based on a form tag.
This
1783067		tests that a SSL server's default SSL context uses the HTTPS protocol support class, specifically the Sun JSSE protocol.
SUMMARY
This method is used to verify that the SSL protocol support class can provide the correct SSLContext.SS
1783133		tests for connection issues by creating an instance of HttpCookieJar and verifying that the cookies get all cookies sent to each connection. If all cookies are sent, it asserts that the headers have been updated with the original cookies and their values,
1783136		tests the functionality of the enforceCookiesRejection method by using various combinations of input values to determine the output to use for the tests.

This method verifies that a cookie is correctly rejected based on its name and values, and returns
1783406		tests the document write functionality of the DefaultTextStyledDocument class. It initializes three separate objects: a Document object to represent the entire document and a Document object to represent the main window. It then adds the Document object to the main window
1783420		tests that the text replacement of a window object matches the expected values, closes the window, and then closes the main window.

This method tests that the text replacement of an empty string results in the expected text messages.

This method
1783466		tests the form detection behavior of the _body object by inserting a button input element and checking that the form element is shown after the button input element and has no specified form.

This method inserts a button input element into the body and asserts
1783478		tests the equality of two linked forms using an embedded equals function.

This method verifies the equality of three linked forms with an equal parameter with a value less than a value greater than a value greater than a value of a different parameter.
1783481		tests setting or removing an illegal attribute node in an element, ensuring that the correct behavior is used in fixing unknown attributes and removing the valid attribute node.

This method tests the removal of an illegal attribute node in an element, ensuring that attempts
1783509		A method that creates and reads an XML document with the title element and checks if it matches the expected title.
SUMMARY
This method is used to create and read an XML document with the title element and check if it matches the
1783516		tests the modifyDocumentTitle method of the HTMLDocument class by creating a new HTMLLinkElement and modifying its title attribute.
This method tests the modifyDocumentTitle method of the HTMLDocument class by setting different values to create a new
1783534		This method tests if an exception is thrown when attempting to add a child element to a text node does not have any children allowed.

This method tests if an exception is thrown when attempting to add multiple text nodes to a text node can only
1783592		is named testWriteBufferUpdate, it calls the `testWriteBufferUpdate` method on the HTML document, then asserts that the write buffer returned by `getWriteBuffer()` is equal to `_writeBufferStored.

This
1783593		tests access to an interface by getting the frame, making a window access control exception, and verifying the public and release code. 

This method tests that an exception is thrown when getting a frame. 
This method tests that an exception
1783594		tests the replacement of a child node with a NodeList object in an Element object.
This method creates an Element object, replaces the parent of the original element with the same StringElement object, and asserts that the children of the originalElement and
1783643		tests the behavior of the HTMLParserFactory when only one or both tags in a String array use are specified in STS tags. It then calls the doTestKeepCase method which is responsible for testing the behavior of a NodeFilter, including preserving
1783664		tests for undefined conditions by creating a script with a value of 'undefined' and asserting that the JavaScript to be used with the name "if (typeof('xyzDefinitelyNotDefined') != 'undefined')". It then
1783719		tests the specified file's content type by creating a file, executing a runnable task, and capturing. The captured file is captured and the runnable task's acceptance status is set to true.

This method tests the specified file
1783722		tests that an error is thrown when a mock HTTP response is closed.
This method builds a servlet response and asserts that it is not already committed, then flushes the buffer.
This method updates an entity and writes it back to the
1784057		retrieves a specific tag from a parent element, specified by a tag name, it will throw an exception if the tag does not exist or the element is not an element.
SUMMARY
This method is used to retrieve a
17870253		registers a system tray for showing a system tray icon with enabled mouse actions.

This method constructs a SystemTray object for testing a basic functionality of basic functionality in a Java application. The method adds icons to an existing collection and asserts
18042345		checks if a byte is an identifier character. 
This method reads an ID from a byte array and returns it as an object.
This method reads an ID character from a byte array, regardless of its type.
SUMMARY
18042437		scans an identifier in a byte array, using the specified offset and end offset, and returns the element at that position in the array.
SUMMARY
This method is used to determine if the identifier is valid by scanning the identifier
18044835		creates a new piece on the board based on the pieces it contains in the board. It then initializes the map, puts the starting piece, and checks for overflow and flipping. If the piece is past the end of the board, it
18044845		removes a row segment from an array of data. It iterates through the rows, calling the dispose method on each region and filling the array with a null row if the length of the array determines its length.

This method removes a
18044864		paints the cell in the board if the cell type has a piece of type 0, or draws a white piece if the cell type has an unsaved state.

This method paints blocks of the specified type.

This method paints
1806049		This synchronized Java method handles document about to be changed.
This method handles document about to be changed.
This method handles document about to be changed.
SUMMARY
This method is used to release the document in a synchronized way
1810057		triggers a key down event for a widget. It iterates through the iterator and calls the fireKeyDown method for each listener, passing in the sender and key code of the key event.

This method iterates through the iterator
1810078		adds an item to the list and sets the tree and child span properties for the item.
This method calls the `store()` method.
This method adds an item to the list and sets the parent element of the item.

1810081		sets up a widget with an attached event listener. If the widget is detached, it notifies the widget of the event. If the widget is not attached, it sets the main element's event listener to the widget and calls onAttach().

1810102		prepares the column for creating an image cell in a table by adding content, columns, and other necessary adjustments to the column. Additionally, it checks for the presence of specific column numbers and calculates column index for the cell using the calc columnIndex
1810122		removes the currently selected item from the tree, either from a tree or from the parent item, and potentially removes the tree item as well.
SUMMARY
This method is used to remove the currently selected item from the tree and
1810125		removes an item from a tree structure, allowing for recursion to the children of an inner form. It removes item records and reference pointers.

This method removes an item from a tree structure, which is a list of items. It
1810191		subtracts two integers from the coordinates specified by its row and column inputs. It then compares the numbers, value, and event type input from the first integer to the second, passing the coordinates to the EventBus's listener method.

1810270		sets the width and height of an element representing a grid view, ensuring that the width and height are non-negative, and adding a corresponding CSS attribute to the element.

This method sets the border of an element, providing the border width
1810365		submits a form if the event has been submitted and the form is not an error, otherwise it fires the onSubmit event.
SUMMARY
This method is used to fire onSubmit events to form, set the form on submit
1810376		invokes onTabSelected method for multiple methods on the TabListener interface, returning a boolean indicating successful execution.
SUMMARY
This method is used to invoke onTabSelected method for multiple methods on the TabListener interface,
1810433		removes a widget from its parent and hides it if it's not a child of the panel.

This method removes a widget from its parent and disables it if it is contained in this panel's collection. If any of these methods
1810451		falls the user to scroll up a specific amount of the current element in a list of ScrollListeners. It then iterates through the list and calls the onScroll method on each ScrollListener.
SUMMARY
This method is
1810479		sets the width of a specific cell by prompting the subclass to customize the cell if necessary.

This method sets the width of a cell if necessary, ensuring all cells are on the left and there is no other cell at the right, then
1810498		sets the word wrap value to the given value.

This method sets the word wrap value to the specified value.

This method sets the word wrap value to the given value.
SUMMARY
This method is used to
1810536		prepares a cell for setting data in an Excel spreadsheet with the specified row and column.

This method prepares a cell for setting data in an Excel spreadsheet with the specified row and column, and checks that the getCellCount method returns the
1810539		prepares a new row by setting its column headers to empty, ensuring that the row exists, and iterating over its rows until it finds the desired row. If the desired row does not exist, it inserts the new row.

This
1810691		returns the Serializable interface of the implemented type for the given type, retrieving it from the serializable interface cache.

This method returns the implemented Java serial component (JClassType). If the type is not serializable, it looks
1810700		validates a service interface using a logger and clears the cache for the type to final instance field. It checks the type of the service interface to ensure it is valid, and returns true if all checks pass and false otherwise.

This method
1810708		appends various class declaration by iterating through the serialization policy content and writing the field accessors for each serializable field. Depending on the content tag, it performs necessary operations such as writing or writing field access methods. Depending on the content
1810780		checks if a specified cell is present in the grid by ensuring that either the starting cell or the ending cell is less than the specified cell.

This method tests the functionality of the JTableHeader class, ensuring that it accurately displays the header
1810793		creates an implementation of theSOURCE_WITHOUT_NEW_CLASS_NAME_COMPOSER attribute for a mapping interface.

This method overrides the default toString() method to return a string representation of the mapping element.
1810855		converts a string value into a string with escaped characters enclosed in double quotes and quote characters, and replaces all occurrences of "%" with the character '%' in between.

This method takes in a string value and returns an HTML object
1810866		returns a JSONValue of the specified index if the wrapped test is successful, otherwise it throws a JSONException.
This method allows the user to add photos from the current location to the list of photos. If the user confirms their deletion,
1810883		tries to remove an item node from an XML representation, but throws a DOMNodeException if the removal fails. It creates a new linked node, adds its name and namespace to the current node, and builds it, then sets the node to
1810886		sets a named item in a node object. It then builds the node object and adds it to an element list.

This method sets the value of a named item in a node. It first checks if the value has already been set.
1810892		creates a CDATA section for the specified node using a node factory.

This method is a part of the DOM Node class and is used to set the specified node as a child of the specified node.

This method builds a
1810896		visits an element, it creates a comment node, its content and name, and then iterates through the elements to create child elements for data, name, type, and comment.
This method creates a commented element of type "Comment"
1810897		deletes specified rows from the collection using DOM nodes and handles any error messages that may arise.
SUMMARY
This method is used to delete rows from a collection using DOM nodes.


1810906		inserts a string at a specified offset in the DOM node set. If the string is empty, it inserts each character at the end of the string. If the string is the same as the first character, it inserts a new character at the
1810907		creates a new element with the specified tag name. If the tag name is empty, a new element is created. If the value is not XML, a new element is created.

This method returns the root element of the XML document
1810909		replaces a string at a specified offset with a specified string argument. If the original string cannot be converted to a string, the method throws a DOMNodeException with an unsupported error.
SUMMARY
This method is used to replace
1810914		creates a Text node using a NodeImpl object created from the given string data.

This method creates an empty Text node.

This method appends an explicit node to a string node on a DOMDocument using a JavaScript exception.
1810915		takes an offset and the count as arguments and returns a substring of the XMLParserImpl object starting at the specified offset and up to the count.
SUMMARY
This method is used to convert the specified value into a string
1810917		sets the value of an attribute with the specified name and value. 
This method attempts to set the value of an attribute with the specified name and value, and throws a DOMNodeException if the attribute is already set.
This method attempts
1810919		imports an XML node using either a DOMItemNode or a deep import. It returns the node.

This method creates a shallow copy of the node. It only copy the nodes.

This method creates a shallow copy of the
1810927		checks if the object being compared is a DOMItem and if so, compares two DOMItems' objects and returns true if they are equal.

This method, compare, compares two XRange objects for equality.

This method, validate
1810929		returns a Text that was split into multiple text nodes of a given offset, while optionally preserving its content through the DOM.

This method splits text within a given range and returns the text.

This method calls constructor to create a
1811035		checks the number of columns in the collection if the specified column is greater than or equal to the number of columns in the collection, otherwise, it throws an exception.

This method checks if the specified column is greater than or equal to the
1811201		inserts a specified number of cells into the body of the table at the given row and column.

This method inserts a specified number of horizontal cells into the body of the table row at the given column.
SUMMARY

1811219		inserts an element at the specified index at the body, throwing an exception if the index is out of range for the element. It ensures that insertion is valid, and not appendable. It adds the element to the element table, and returns
1811280		removes a row from a grid by removing the specified cell from the rows of the grid, it also removes the row from the grid's rows list.

This method cleans the rows of the grid by removing all the cells from each row
18122515		retrieves the value of the preference `name' from the preference database for the given `IProject`.

This method ensures that we can correctly retrieve the value of preference `name` from the preference store.

This method ensures
18123111		sets the LOL runtime for various other parts of the program, including whether to add new features to the list and remove individuals when run.

This method updates the LOL runtime attributes of given individuals and sets their attributes if they are invalid
18123215		creates the content area for the dialog box. It sets the shell's text and creates the composite with a GridLayout and a GridData on top with one column, left column with a fill of true, align it with the SASH_
18123253		sets the selected script to the provided script by invoking the `setScript` method in `tabsProject`, `setName`, and `addExistingScript` methods.

This method sets a project's properties, including name, class
18123262		selects and expands a project associated with a selected node in a tree viewer.

This method populates a tree viewer with a list of associated nested projects.

This method handles the creation of an IProject object, setting the name
18185450		initializes a WebConnection object that can use protocols for sending messages, allowing the session to receive messages correctly from the server for processing, including processing timeout fields, creating a WebConnection object via an Acceptor connection, and using WebConnection.

18185456		closes a WebConnection object by removing it from its internal map, closing its connection.

This method closes the WebStreams object from the streams object associated with the current streamID field.

This method closes the WebConnection object
18202981		sets a double value in a prepared statement, but throws an exception if the precision or scale of the value is invalid.

This method returns the value of a stored procedure parameter as a string.

This method sets a double value in
18203301		initializes properties for an object from a reference with a specified ID and type. It attempts to obtain an instance of the PreparedStatement or ConnectionDescriptor. If an instance cannot be retrieved, it is initialized into null.

This
18205925		cleans up resources by calling the super cleanup method and then calls the cleanUp method.
SUMMARY
This method is used to close and force a database connection after closing operations.


18251030		This method translates modifiers (RSA) (Required) commands in a Java class file to a Java method's signature. It converts the modifiers in the class to the corresponding Java class name.
SUMMARY
This method is used to
18251057		returns a Cardinality enumeration that can be used to indicate the cardinality of a subquery. It evaluates the range of an array of elements, ensuring that all elements are sorted in ascending order based on the specified priority. For all sub
18251069		returns a filter for a condition that matches a specified restriction and either the condition itself if the restriction matches the condition conditions defined by the restrictions model.
SUMMARY
This method is used to build a join condition for the condition with
18251149		returns the index of the short column in the given full name string. If the full name is double-quoted, it returns the index followed by a number to indicate its own length after dot-and-digit. If the full name
18251161		takes a string as input, where as this is a header, contains sort columns and columns where column names are normalized in the header.

This method initializes a table for displaying a model. It adds headers to the table and rows
18251218		saves the objects in the getTables(), getPackages(), and getXmlMapping methods to an XML file using a PrintWriter.

This method prints the XML mapping table by iterating through the data structures and printing the
18251221		creates a table row for a table with specified indentation for multiple columns in a hierarchical order.

This method generates a set of headers for the table based on table row headers.

This method generates a list of the columns in
18251232		This method reads initial data tables from a database file based on the provided mapping and stores them in an array for later retrieval.
SUMMARY
This method is used to retrieve the metadata table from the table mapping between the initial data tables
18251237		generates a table containing the components in the provided composite. If the composite does not have any components defined, it is added to the HTML table. If the composite does have any bindings, it is added to the HTML table for the bindings.
18251253		returns all the spaces in the provided indent with their respective color.
This method returns the width of the width by adding the pad to the string representation of the font.
This method parses an annotation declaration and returns it.
This
18251847		adds database arguments to the list of arguments for the connection object. 
 As the first input parameter is "makeChecksum". 
 This method adds database arguments to the existing set of arguments for the connection object. 
 Then
18252028		sets the look and feel of the application to the specified value and displays a success message showing the look and feel.
SUMMARY
This method is used to change the theme of the application when the user selects the "PlafSet
18252038		swaps the values at the specified indexes of two columns in a table and updates the table to reflect the changes.

This method swaps the values at the specified indexes of a table and also updates the table to reflect the changes.
S
18252104		saves the display names to a specified file. It checks the "midf_playlist" directory and formats the tracks into a specific format. It then prepares the records for execution.

This method saves the auto-playlist records
18252350		takes a list of Association objects and a Table object and creates a String representation of the table, including the associations from the Table to the String representation.


18252407		opens a table view.

This method sets up a table view, populates it with a user table, it initializes several field positions and displays the table view.

This method opens a text area. If the text field is
18252428		stores filter expressions for columns in a table. It clears the table, stores the filter expressions, and then toggles the visibility of the extraction model editor. It increments the column label, adds the filter expression to the table model, and marks the
18252435		selects all cells in a table.

This method repaints the window after an action is performed.
SUMMARY
This method is used to select all other cells in a table.


18252454		determines if the current row is the last visible visible row. If the current row is the last visible, the method checks if the row at the current row is visible and has been sorted. If the row at the current row is not
18252518		checks if any differences between elements in an array of strings exists in the objects list. It checks if each difference is detected and its value is within a specified range. If any differences are detected, it returns true, otherwise it returns false.

18252594		commits the insert and write statements to the script.
This method flushes the script.
SUMMARY
This method flushes the script to the script file.


18252631		appends a string to a list with a specified separator separator, allowing for delimiters.
This method concatenates two strings, the first and third strings, separated by commas in between.
This method appends an
18252716		returns a composite object with all the table built into the specified table. Chances with spaces, and includes a paragraph, headings, and table navigation buttons.

This method creates a new composite object and binds it to the specified table
18252737		displays a table in the cell. If there is no table currently being retrieved, it creates and adds a table to the cell. If there is no table already being retrieved, it does nothing and displays the table using a table renderer.
18252790		performs a rollback of all transactions in the list of connections. If the list is empty, it rolls back all transactions and closes the connection.

This method checks if there is a transaction object in the thread_commit list.

18252792		checks for collapsed tables in a graph by iterating through associations and collapses the associated tables. It identifies associations, reveals associations, and adjusts relationships before collapsing. If the assignments are not collapsed and not equal to collapsed, it removes the table from the
18252810		checks if a given document contains any of the specified leaf elements as children in the provided document.

This method takes a document and its parent document as arguments and returns an XML element representing the document.

This method takes a document and
18252834		adds multiple entities (DB tables, SQL statements, and regular expressions) to the database table and sets the timestamp accordingly. It does this by first clearing the existing entities and then adding the tables for the primary keys. It then iterates over
18252945		resets the graph editor based on the specified parameters. If true, it resets the graph editor and stores the layout and default domain values. If false, it resets the graph editor and stores the layout, expand root, and node as
18253067		deletes entities of a given type in the database using SQLDelete.

This method publishes an entity using a graph and logs the event.
If an exception occurs during publishing, it returns an empty Statement.
SUMMARY

18253153		selects a table by calling the selectTable method of GroupsModeController.AssociationFactory.Association objects.
SUMMARY
This method sets the table object as the selected table.


18253833		sets the root of the table to the specified table object and refreshes the graphical user interface (GUI) with the new root, but only if the root is not null.

This method initializes the graphical user interface (GUI) with
18254063		returns a ComboBoxModel object that contains the names of the current subjects in the dataModel.
SUMMARY
This method is used to create a ComboBoxModel object that contains the names of the current subjects in the dataModel
18255068		triggers when the user grabs the shift key, sets the cell editor for the table using GraphSettings, adds listeners to the parent class, shows or hides the last cell if the table initially visible, expands the paths to visible tables, and
18276978		dumps the relationships of a data object to a string buffer.

This method returns a string containing the dump of the relation attributes and the attributes of the given data object.
SUMMARY
This method is used to generate a
18277114		calculates the hash code for the objects.

This method calculates the hash code based on the values of its 'getValue' and 'isSet' attributes.

This method tests the hashCode() method when given objects with
1830107		checks if there are any mappings with the specified name to values in the map and returns true if there are none.

This method takes a map as input and iterates over its entries, checking for collisions with existing data sets. If
1830309		removes an instance of the AreaOfIntBO class from the data_multiple_aoil_M class.

This method removes the given area of interest from the data_multiple_aoil_M instance.

This method
1830345		creates a new instance of the class SaleReturnBO and adds it to the cache if it is not already present, sets the saleReturn_ID field of the saleReturn_BO to the ID of the new object, prints a message,
1830383		This method retrieves a sale record by creating a new sale record and adding a transaction line to it.

This method handles exceptions that can be thrown when attempting to create an object.

This method handles exceptions when attempting to create an
1830432		retrieves a transaction object using the `getTrx()` method from the `TrxDAOTester` class, and displays the results in the `tx` view. It also handles exceptions that may occur during the retrieval process,
1830449		returns a string representation of the customer's address by creating a string with the customer's address, customer's city, and customer's zip code. Once all these string fields are filled out, it checks if all fields are filled out, and
1830528		retrieves a StoreBO object by its store ID. If the object is not found in the StoreDAO, it attempts to retrieve the Store object from the database and returns it.
SUMMARY
This method is used to
1830539		retrieves a EmployeeBO object from the database after attempting to access the EmployeeDAO instance. If successful, it sets the returned EmployeeBO object to the method returned by getEmployee, otherwise it displays an error message.

This
1830551		retrieves a customer object from the persistence layer by its customer ID. If the Customer is not found, it returns null.

This method in a loop, it tries to retrieve a customer object from the database. If the customer is
1830592		creates a new Print Order by initializing it with id, various GUI fields, and stores it in the Cache. If the database is not null, it returns null.

This method initializes a Print Order DAO by calling create
1830601		creates a RevenueSource object and adds it to the database. It then randomly generates a GUID and Id for the object. Finally, it adds the object to the cache and sets the RSType field of the object to "Conversion
1830608		extracts files from a zip archive and adds them to a list. If the list is not empty, it iterates through the list returned by getFile(), adding each file to a map. If the list is empty, it does nothing
18354698		attempts to connect to a server using the provided credentials and returns a boolean indicating whether the connection was successful.

This method sets up the SASL client with a provided credentials and returns a boolean value indicating whether the client was successfully authenticated
18354735		invalidates the list of UIDs and SIDs passed as arguments, ensuring that each UUID matches the provided session.

This method handles the deletion of a session, either directly from the database or from a thread.

This
18354808		initializes the RMIRegistry by loading all classes, creating the available classes, and starting each one. It also starts the RMI registry, checks the RMI classes for validity, and logs errors. If any error occurs, it shuts
1835530		initializes a socket connection, creates an output stream to the server, and requests a connection for receivingPolicyRequest.

This method reads a policy request, resets the socketInput and socketOut objects, and processes the PolicyRequest.

1835537		writes an XML string to a socket after sending a policy to the client, and logs the sent request.
This method sends a policy to the client without connecting.
This method sends a policy to the client.
This method sends all
18417039		is the entry point of the program, it initialises instance and calls other methods to initialize objects.
This method initialises a SystemEasyDiet instance.


This method initialises a SystemEasyDiet object.


This method
18417246		returns a list of all Patient objects found by their fore name and optionally their surname.

This method counts the number of Patient objects in the database.

This method finds all objects by their fore name and surname.

This
18417251		takes string parameter 'letters' and uses the 'findAll' method to retrieve a list of all patients by querying the database for patients with matching patterns of text matching 'alphabet*' or 'alphabet-synonym*'.
18417255		takes a JDBC query as an argument and searches for the patient in the database by their username and password.

This method creates a table in the database with the "TESTCASE" table with columns for participant and delivery times
18417287		returns a list of all the entries in the list for the current date. Each entry has a unique name and is shown in each day of the month. Each entry, has a different name, has a different number of times, and has
18418213		shows the latest plan of an ongoing patient. It clears the previous protocol and displays the new plan. If the previous protocol is not null, it shows the latest plan and updates the model with the new plan. It updates the patient and model if
18418821		prints the content of a content calendar and then calls itself recursively to print the date and various elements of the calendar.
SUMMARY
This method is used to print the header, content, and footer of a calendar element
18418878		deletes a row from the model if the user is in the range of the input rows.

This method deletes the selected row from the model and notifies listeners that a table row was deleted.

This method deletes a
18420085		returns the content pane of the frame if it had already been created, otherwise it creates a new content pane and adds all the other components to it.
This method returns the JFrame object if it had already been created, otherwise it creates
18420149		adds a sensor to the system, with the option to specify a starting time.

This method adds a sensor to the system, with the option to specify a starting time, or allow for the time to stay forever if the system is
18420214		sends a randomlyosen pairing of Antibody destinations to a running ping object through a network endpoint, with a specified amount for each destination.

This method provides a list of Antibody destinations, then iterates through them to find
18420236		returns a JPanel object for the content pane of the application. If the panel has not been initialized, it initializes it with layout and adds the necessary components such as a text field, a list of radio buttons, and buttons. This
18420264		returns a JPanel that contains the cancel button. If the panel does not have already been created, it is created and populated with labels for "Cancel", "Name", "Notes", and "Close" (such as "Abbre
18420500		returns a JPanel with a label, and several GUI components added to it, including labels for unit selection, distance radio buttons, and checkboxes, adding a combo box to the panel, and configuring its layout.
SUMM
18420520		returns the authors of an application as a string in HTML format.


18420602		returns the BLSDetailPanel, initializing it if necessary by creating a new one if it does not already exist.
This method takes a BLSDetailPanel object as input and creates a new instance of BLSDetail
18420950		saves a diet plan to a database. If the diet plan is null, it returns. Otherwise, it ends the transaction and serializes the plan data.

This method updates an existing diet plan by setting its name, description, and
18420957		saves the name of a nutrition journal to the database using Hibernate. The name is populated from theopening of an XML element, and uses Hibernate to execute a snapshot to save it for later use within the database.
18421151		compares two objects and returns an integer indicating their relative order.
This method compares this MealItemAmount object.
This method compares this MealItemAmount object.
This method compares this FoodItemOrderInfo object.
SUMMARY
18421173		adds an appointment with a specified date, next appointment, and note to a new patient.

This method adds an appointment with a specified date, return code, and note to a new patient.

This method adds an appointment with
18421212		deletes an element from the day schedule, resets the day schedule, asserts the day's date is after the previous day schedule, and ensures the day's vacation date is after the previous day schedule.

This method checks if the given
18421252		deletes an item from a meal by iterating through the meal items in the day and removes any matching meal item, DaySchedule days, and MealItemAmounts from the meal.
SUMMARY
This method is used to
18421292		creates a FoodAmount object that will be used as a recipe for a specified quantity and unit of the food. It takes into account the type of recipe (added or deleted), the amount, and the quantity unit. If the quantity unit is
18421305		checks if diet plan duration is not valid, and if so, creates a newGregorianCalendar with the current date and sets it to be 18 digits. It then sets the start and end dates to 0, and checks if the diet plan
18421388		adds a due date to the current date.

This method updates the year and month days.

This method adds a daily appointment period to the current date.

This method updates the start and end times.

This
18421390		determines the last contact in the list of contacts and either sets the last contact to the last contact in the list or throws an exception if the list is empty or does not have a last contact.
SUMMARY
This method
18421414		sets the meal type for a given meal. It gets the day schedule from the day presenter, iterates through the day sales and meal lists, obtains the meal from the first row of the meal list, checks if it exists, and if
18421449		initializes the nutrient value by checking if it is already initialized and loading it if not loaded.

This method loads the nutrient value and adds it to the nutrient size map if it is not already present.

This method attempts to load
18421458		updates the nutrient value, but only adds or removes it based on a code input, and throws an exception if the code is invalid or does not match the original code.

This method throws an exception if an error occurs while adding the
18421475		adds a change listener to the model.
This method adds a list selection listener to the model.
This method adds a mouse listener to the model.
This method adds a component listener to the model.
This method adds a mouse
18421482		generates metadata using recipe details such as recipe name and ingredients, and populates recipe metadata for multiple ingredients, including creation date, user, nutrition, and production for ingredients.

This method generates metadata for an ingredient based on the input Recipe
18421648		is an action listener that is called when a button is clicked. It retrieves the button's command value and performs different actions based on the value of the command.

This method is used to handle events from the "run" menu.
18421665		searches for a recipe in the list of ingredients associated with the recipe that is currently active, and returns the first matching recipe if found.
This method searches for a recipe in the list of ingredients associated with the recipe that is currently active
18421749		returns a JXTitledPanel object that contains a container for a user interface. If the JXTitledPanel is null, it creates a new JPanel and adds it to the container before returning it.
SUMMARY
This
18421751		This method returns the JXStatusBar if it is not null, otherwise it creates a new one and adds all the necessary components.
SUMMARY
This method is used to create or retrieve an existing JXStatusBar if it
18421810		returns the JPanel that contains the GUI elements for the GUI, including the OK, Cancel, or Close buttons.
This method returns the JPanel that contains the GUI elements for the GUI, including the OK button, Cancel button, and
18421861		retrieves a string representation of the object at the specified position.

This method returns the value at the specified index in the list.

This method returns the value at the specified index in the list.

This method returns
18421862		assigns the value at the given index to the string at the given index in the m_Array. It checks if the index is valid and the string is not null, and if so, updates the value in the string at the given
18523015		takes two IStepList objects and a File as input and writes them to a file named inFile using an append method. When the returned value is "1", this method gets the root element of the IStepList object. If the
18523034		converts a file to XML format by creating a new folder for the file and converting the XML to a file.

This method converts a test file to CSV format by creating a XSL file, converting the test file to an XSL
18523035		takes a TestStepFormHandle as an input and converts it into an ITestStep object. If the form is not null, the method creates a SubmitStep object, assigns its name and value, adds it to the form, and returns
18523064		takes a Text object and checks if it is not null. If so, it sets the Text's text property to the specified Text.

This method is used to create a step in the TestStep class, passing in the Text object
18523072		takes in a Text object, converts it to HTML, and depending on its value, it creates a new Test step with the text value.

This method creates a new XML element with the text value at the specified index.
S
18523769		saves the current state of the graphical viewer by serializing it to an XML string and refreshing the resource with the new state.

This method overrides abstractor and simply calls doSave method.

This method overrides service and
18524126		returns the selected Option object from a list of Option objects.
SUMMARY
This method is used to find the last selected option object in a list of Option objects.


18524135		gets the parent node of a specified select element name from the select. If no parent node exists, it searches for the select using the xpath predicate. It returns the index of the select, or -1 if not found.
SUM
18524166		sets the selected options for a given option text. It checks if the text contains only specified options and throws an exception if an unrecognized option is found. If any options have been found, the method moves on to the first option found. If
18524193		tests the finding of link on the input test entity within the editor session.

This method tests the ability to find a link.

This method tests the ability to find a link, including searching by type and ID.

This
18524212		searches for a form by name or ID in a list of forms and returns the form if found, or null if not.
This method sets a name, ID, and form to a new form instance.
This method associates a
18524237		searches through the links list to find an object with a matching ID in a collection of links and returns it if found.
This method takes an id as input and returns the corresponding link.
This method takes an A object as input
18524248		This private method tests the creation of a new child browser for an IE window. It instantiates the application, creates a new browser using the application's help functionality, clicks a link and clicks on the new browser, and confirms that the link is
18524281		returns a vector of input elements based on the specified type attribute.
This method iterates through the input elements, adding the input to the vector if it is of the specified type attribute and continues searching for the found element using its type.
18524319		searches for a button with a specified ID within a list of input types. If found, it returns the button associated with that ID. Otherwise, it returns null.
SUMMARY
This method is used to find a button
18524338		checks if a given text is present on the text area. If the text is not found, it attempts to find the frame and returns true if found.

This method returns true if the given text is present on the scroll pane.

18552038		calculates the totalreflect energy by calculating the sum of float values stored in theials array. This formula includes material aspect ratio and value range. It then calculates the reflect energy using reflection.
This formula returns the difference between getting combined cont
18552093		reads the next line from the file and returns it as an integer. If there is no next line, it returns 0.

This method returns the value at the specified row and column in the current data structure or the specified value if there
18552105		returns the integer value of a rad symbol.

This method processes the line of the file, extracting the number of degrees, minutes, and seconds.

This method parses the hour control field, setting the hour and minutes if
18579046		returns a list of all the browsers in the system by accessing the default browser listing.

This method gets the list of all the browsers that the system includes.

This method initializes the specified context and calls the init method of
1864469		retrieves the nearest bit in the image with the specified coordinates, as specified by lon and latitude, and returns it as an Integer. 
This method transforms a line by swapping the pixels of its source line and a destination line.
1864472		sets the point at the nearest pixel and the data corresponding to it. 
This method displays a given data set into a user interface. 
This method sets the nearest pixel of the image based on the given coordinates.
SUMM
1864490		compares two FileAndCoords objects based on their file and j attributes.

This method converts a file and coordinates object into an integer.

This method computes the total value of the two objects attribute, which is used in
1873139		retrieves the file data for the current file. If the file is not found or is unable to be loaded, it returns null.
This method is used to read the file data and set the data panel to the contents of the file
1873143		returns the number of lines in the file, or -1 if the file is empty.
This method returns the header of the file, or -1 if an exception occurs.
SUMMARY
This method is used to determine
1873158		calculates the distance between two points using the Euclidean distance algorithm.

This method returns a vector representing the current object's middle point.

This method returns a vector representing the current object's top point.

This
1873196		returns the count of valid data rows in the matrix.

This method decreases the column value by 1. If the new value is greater than 1, it decreases the column value by 1 and returns 0. Otherwise, it returns the number
1873203		checks if a given LineSegment collides on the line specified by s. If both line segments do not start inside the line, it returns false. If there is a collinear line segment defined, it checks if the points between the
1880676		takes an option as input and returns an integer value associated with that option. If the option value is not null and is an instance of Integer, it converts the value to an Integer using the integerValue() method. If the value is null
1880714		takes a class name and an object value, and checks if the object is a Boolean and if so, sets the value to "*" if it is not a Boolean.

This method checks if the object and its attributes match those
18842441		retrieves the initial value of the directory constant, either from the specified ServletConfig or from the default value, and returns that value as a string.

This method retrieves the value of the directory constant for the specified Servlet
18842445		returns the URL filename after extracting it from the filename string from the URL if it is not null.

This method then tries to deduce the URL by fetching the file and the URL filename from the URL using the URL class and
18842498		renders the chart using the specified request object, and returns the rendered string. It first checks if the request is a POST or not, and if so, displays the example chart. If the request is not a POST, it re-hand
18842507		retrieves a template from the cache for the specified XSL. It first checks if the cache has been used and retrieves the template from the cache if not. Then, it removes the template from the cache.

This method checks
18842534		This method tests the buildFeed function of the FeedTool class by sending an XML feed to the IMCA and generating a Feed object.
This method performs an HTTP POST request to an IMCA and sends an RSS feed from the IMCA.
18842892		converts a string value to a Date object using the specified pattern, throwing an exception if the conversion fails.

This method calculates the duration of an element in a file given its name and path. It uses the file's path if it
1886615		checks if all elements at the given list are dead every 6-digit value.

This method returns true if all signals have all live the same device as the current device.

This method returns true if all signals have all live the
1886630		This private method instantiates the current node. It continuously reads a line of input from the reader and stores the value in the corresponding field within the current node. It throws an exception if the line is not equal to a specific value.


1886725		turns on the default option if an upgrade is enabled or disabled.
This method turns off everything else when the upgrade is not equipped.
This method turns on theUpgradeAction.
This method configures a label for the upgrade action.
1886903		tests the functionality of the "testUpdate," "testUpdateDelayEvent," "testUpdateWithDelayTrigger," "testUpdate" and "testUpdateDelay"); methods that update the swarm object with the new delay and trigger value at
18911149		encrypts a string value using the provided CBC/PKCS5 padding and returns the encrypted string as a Base64-encoded string.

This method begins by encrypting the byte array "ciphertext" with additional line breaks
18911276		sets the driver name for the JDBC data source and attempts to connect.
If the new driver name is different from the current one, it attempts to connect using the provided driver name.
If a new driver is found to be the same
18911281		handles exceptions that occur while firing a connection error event to all registered listeners. It notifies each registered listener of the error condition.
SUMMARY
This method is used to notify registered listeners that a connection error has occurred, not
18911339		retrieves an object from a cache and calls the cleanupObject method of it.

This method is derived from the ClassCastException class and calls the cleanupObject method on the WeakReference object.

This method is derived from the
18911384		removes a connection from the pool, releases the object from the locked pool, and logs a message to the standard error stream.
This method fires an event to listeners, removes the object from the locked pool, and if debugging is enabled,
18911407		clears the connections in the object, removes the connection event listener, and checks if a connection is an instance of PooledConnection. If so, it calls the expire method on the PooledConnection, passing in the object as an argument,
18911429		returns an instance of the XAConnection class, initializing it if it does not already exist.
This method sets the cache of connections and starts a new thread to run the XA transaction.
This method returns the connection
18911526		resizes the cache to a new size with the larger size, preventing large operations, and returns null if the new size is larger than the maximum size.
SUMMARY
This method is used to prevent large operations after adding new items
18912151		retrieves a coordination context for a participant match code, creating it if it does not exist.
This method retrieves the coordination context associated with the current participant with the registration service.
This method retrieves the coordination context associated with the
18912229		determines the status of the state and its new status and returns it.

This method checks if the given state is the current state, and if it is, it retrieves the current state ID and returns the corresponding value.

18912315		handles incoming messages from a BAC coordination, printing out the incoming status and handling them appropriately via the coordinator's receive method.

This method handles incoming messages from the coordinator either to the coordinator with a lock or to the sender of the
18912322		registers a matchcode while checking if the matched participant ID and participant matchcode are not null or empty. It then adds the participant name to the matchcode hashmap and returns a coordination context with the participant ID.
SUMMARY
18912395		handles incoming messages of a specified type and parameters. It retrieves the transition at the specified message type. If the transition cannot be found, it delegates the call to the superclass.

This method handles incoming messages of the specified type
18912425		processes the proxy. If there are pending operations in this current state, it calls the tellAgain method.
This method informs that the default coordinator is done. If there are no pending operations in this state, it throws an exception.

18920164		creates a designer of the given class and assigns it to the Activity object.

This method checks the name of the class and if it is not "" it returns. Otherwise, it tries to create a designer instance of a specified class using
18924954		creates a component to display features, sets its title and content, and adds links to other components.
SUMMARY
This method is used to create a component for display features.


18924998		creates a copy of the object and returns it.
This method extends the object.
This method returns the value at the given point.
This method sets the value at the given point.
This method sets the value at the given
18925003		creates a new PopUp object and populates the text field with the set of files of the directory represented by these files.
SUMMARY
This method is used to create a new PopUp object with a label.


18925173		checks if the user input for required attributes of an 'element' is "true," disables the 'required' element, then translates the 'element' based on its type. It then re-performs the 'required' element based on
18925236		executes the revert method with the given context. The method first tries to call the revert with specific parameters on an object, and then in case of an exception, it logs an error and closes the object. Finally, it returns the object.
18925326		restores the session state of an object by restoring attribute state maps from a memento to a provided HashMap.

This method restores the session state of a session by taking a session object as input and storing the state of the session
18925343		sets the logConf variable. If the logConf variable is not empty, it retrieves the LogManager instance from the logConf object. If the current JVM is running on the Java Virtual Machine, it sets the logConf variable. If
18925452		returns an Element named "category" that has a name and an icon, and it renders the associated DbIconElement, using the specified RequestContext, DocumentFactory, Category, and Category, to create it.

This method gets
18925476		takes a form component as input and returns the TreeHandler associated with that component as an argument. If no TreeHandler is found, the TreeHandler is used.

This method retrieves a TreeHandler associated with a form component. If
18925500		adds a handler to the handler map by creating a new handler object and adding it to the handler panel.

This method adds an object to the list of registered types of an object.

This method adds an element handler to the
18925501		sets the current panel in the request context and updates the model values and displayed panel.

This method validates the current panel, resets the current panel, and displays the updated model values.

This method also validates the current
18925521		parses the input string using a regular expression pattern specified by a user pattern and returns the parsed value as an object.

This method converts a string to an object. If the string can't be parsed, an exception is thrown.
18925549		This method retrieves the regular expression pattern associated with the specified source file, finding a match if found.
This method attempts to find a point in the file, returning a point if found or a point where the point does not match the contents
18926014		adds a request listener to the provided collection. It first checks if the listener's key has the same value as the specified listener in the map. If there is no such listener, it gets the listener with the same value as the first key
18926104		searches for a bean attribute in several database tables and returns the corresponding value from the session bean or the servlet context attribute if no found.
SUMMARY
This method is used to access bean attributes from the current servlet
18926277		retrieves a map that contains the parameters of a specified object.

This method gets the parameter names of a specified object, or a list of all parameters if no parameters are specified.

This method gets the parameters of a specified
18926282		pops parameters from a session, removes any parameters that were null, places them in a map, and then adds the map to the list of parameters. If the parameter list contains any null parameters, it copies the values to the parameter list.
18926315		sets the node renderer for the current NodeRenderer instance and removes the current RequestListener from the current dispatcher.

This method adds the NodeRenderer instance to the dispatcher.
SUMMARY
This method
18926405		shows a dialog with the given text, populates the children of the dialog with elements from the body, removes the title attribute from the body, sets the accept and cancel actions to null, and invokes doShow on the EventQueue.

18926408		reverts the context of the given context, clears errors, attempts to convert an object to a JSON, and returns if successful.

This method overrides the superclass method of the class, then executes a query against the server, catching
18926432		retrieves the parent node corresponding to the specified node handler by traversing through all the DOM elements within this node using the node as the first child.

This method returns the parent node corresponding to the specified node handler by traversing through
18926567		restores button actions for request context and state array from provided elements and sets visibility to false and not adding an error attribute if none are found.
SUMMARY
This method is used to restore button actions for request context and state array
18926812		returns the value of a cell as a Number type using a specified NumberFormatSymbols and locale.

This method throws an exception if the cell value is notNUM or exceeds an acceptable maximum length. It then tries to get the
18927238		handles item click events in a hierarchy control. It opens a dialog, sets the selected item and any visible members from a data model. It then notifies the table model model of the process. Finally, it enables or disables a button
18927250		sets the axis selection to the specified collection, clears the axis selection if it is null, updates the hierarchy if necessary, adds the selection to the axis selection, marks the axis selection as dirty, deletes the hierarchy if exists, sets the axis
18927336		returns a string representation of the object, including the MDX representation of its names, enclosed in square brackets, and the prefix.
SUMMARY
This method is used to represent the prefix in a string for a given name in
18927376		removes the enclosing brackets "]]", and if the second character of the string is not '[' and is not a closing parenthesis, it returns the array of the string as a string. If the first character of the string is not
18927469		applies curly braces around an expression and generates a constant constant expression for lambda if it exists.
This method creates a symbolic name index variable assignment if it is not already assigned.
This method constructs new symbols statement.
This method checks if
18927486		takes three string parameters and checks if the heuristic of the assignment is not null, if not null it checks if the heuristic of the assignment and the heuristic and and number of positions constant is not equal to 1, if they are
18927713		handles recursion within a tree node, updating the position of successors, restoring the process, and resetting the process for processing again.

If the node has more than one child, it continues to recursively handle each child node
18927991		returns the next dimension in an array of dimensions, based on the list of all hierarchy dimensions.

This method also calculates the index of the collection based on the dimension ID. If the dimension ID is available, it returns the index.
18928204		sets the sort mode of the table to ascending or descending, to all other strings, or to ascending based on the specified mode.

This method also overrides the processEvent method and calls processEvent when an event occurs.
SUM
18928346		sets the visible properties to the member meta information if it exists or to the top of the list after updating the visible properties or the visibility properties extension.

This method updates the visibility properties extension with the visible property metas if it exists.
18928348		creates a deep copy of an object by cloning the value, reference, and children of another object.

This method clones the object itself with the factory.

This method deserializes the object by creating a new environment.

18928423		takes a list of members and iterates over them and returns an array of members representing the members. It iterates over a list of members and returns an array of members representing the members.
SUMMARY
This method is used
18928624		creates a member set for an item, given a list.

This method generates a list of members in reverse order, using a pre-constructed list using the specified function definition.
SUMMARY
This method is used
18928646		retrieves some information from the query and sets it as the monquery parameters. It then retrieves all parameters from the query.
This method sets if the object has display values.
This method stores the monquery parameters in the record
18928704		returns a string value from the resource bundle associated with the specified key. If the key is not found, it throws an exception.

This method checks if the object cannot be retrieved and throws an exception if it cannot.

This
18929060		checks if a descendant member is a monomial member. If it is, it checks if the descendant member has a monomial member in the specified order. If the monomial member is a child or equal to the specified parent member, the method
18929099		checks if a member is a descendant of an OLAP member based on whether it is a member or an ancestor.

This method recursively checks if a member is a descendant of non-child member methods, including determining if it is
18929178		adds a hierarchy to a monLevel, checking if the level already exists and adding it if it does not.
This method adds a hierarchy to the database, checking if the hierarchy already exists and adding it if it does not.
S
18929613		destroys the model and closes the connection if it exists.
This method destroys the model and logs the stopping of the maintenance process.
It also closes the connection if it exists, sets the session ID to null, and sets the monitor
18929690		returns the bookmark's state based on the level of detail provided.
This method returns the bookmark's volatile status based on the level of detail provided.
This method checks if the value at the specified row and column index is set to the
18930367		removes a logical name from the item model based on the provided string parameter.

This method replaces text in the logical name of the given datum.

This method replaces text in the logical name of the given text element with the
18934257		writes bytes from a given buf into an output stream, calculates the timestamp for the writing, and takes into account the number of bytes written.

This method runs the thread for 2 hours.
- This method blocks until the write thread
18934259		reads bytes from the file until a buffered data is available. It updates the current position and performs thread synchronization and wait if necessary.

This method reads a specified number of bytes from the file until a buffered data size is reached.
18934396		adds an object to the priority queue if the priority is valid and the queue is not full. If the priority is valid and the queue is full, the two internal queues have been added to the queue at the correct priority.

If
18934438		This method pushes and rolls through an UnrolledBindingSet, first checking for unrolled values, and then performing pre-bind operations if the set goes too short. It returns a new UnrolledBindingSet with only the ones added to
18934448		appends an element to the flat queue and verifies the offset within the queue. If an element is added twice, an assertion failed error is thrown. If the queue is empty, the method then calls the appendFlat method again. If
18934470		adds an array of elements to a set, ensuring that the size of the array does not exceed a given length of elements at the end of a given range.
This method adds a string to the set while ensuring that the 'len'
18956797		initializes communication with the DBMS, establishes a connection to a remote server using predefined connection arguments, opens a TransactionConnection, creates child transactions, and sends and sends an acknowledgment on a successful completion.

This method destroys the child transactions
19028326		tests the creation of a calendar by creating a concrete calendar, logging the creation, creating a calendar to be added, and verifying that it is not already present in the concrete calendar registry. The method then logs that switching to the default calendar and tests
19028327		tests the deletion of a calendar by sending a GET request to a CalService and asserts the response is not null.

This method correctly deletes a calendar from the web.xml file and asserts the response is not null. It then retrie
19102418		loads data from a file into the object's fields, using a Reader object to read the configuration file, and throws an exception if there is an error with reading the file.

This method reads data from a file and, if successful,
19102435		takes a directory as input, generates an email recipient, generates an email text string, processes a request, and sends a list of recipients.

This method removes a directory from the file system by deleting the parent directory.

This
19102503		replaces a specified range of parameters with the specified values. It logs the replacements and ensures that the number of parameters is valid. Finally, it returns the modified expression.
SUMMARY
This method is used to replace parameters retrieved from
19102562		sends a request to a server through a connection. It reads input from the connection and processes it to extract various data types. For audio, video, audio, video, and TTF commands, sends different responses based on the data type,
19102655		recursively deletes a directory and all its contents. If the file is a directory, the method deletes that directory itself.

This method loads an XML file into a File object. It checks if the file is null, then
19102874		renames a given key, throwing an exception if the key already exists in the settings map, and maintaining a list of keys if the key is mapped as a single key.

This method overrides the get() method, replacing the old
19102927		takes a name and a hash, creates a path hash, calculates a node tree size by adding the size of the root node, updates the MD5 hash to include the root node's MD5, and converts the size into an MD5
19103060		This private method initializes the index table by setting up an index table to be loaded from the "sql_init_index_table.sql" file. If this process fails, an SQLException is thrown.

This method
19103065		recursively adds files and directories for specific filters in a given file, recursively them to determine the existence of any whose subdirectories will be added. If the file already exists, it returns true.

This method recurs
19103107		stores changes to a file stored in a database by converting the database and entry database into a hash table (hTA). It then processes any changes within the Txn object parameters.

This method takes in parameters for the storage type and
19103227		 releases the file lock by unmounting the zip files, unlocking the repository, and returning the message as a string. 

This method flushes the file lock, unlocks the repository, and returns the message as a string.
S
19142331		sets the value of a variable with the given name.

This method sets the number of arguments from a given list of variable values.

This method sets the fraction.

This method sets the value of a specified variable.

19142341		is used to rewrite the head and body of a document. It then replaces all occurrences of the given document's head and body with the old document's body.
SUMMARY
This method is used to rewrite the head and body of
1914527		sets the color of a highlightsource as either a highlight color or its position relative to the board panel.

This method scrolls the component to show the specified cell of the component.

This method sets the color of the highlighted component to
1918330		creates an OutgoingInterface for an incoming TCP connection based on the connection's method. If the connection method is not allowed forudpirect, it delegates the creation on the newly created interface.

This method returns an OutgoingInterface
1918408		adds a string to the document after formatting it based on its font size and boldness. It also applies transformations to the document if the formatting is enabled.

This method trims the text from the text pane to the maximum length and
19217975		toggles the case sensitivity setting for a model and updates the configuration properties accordingly.
This method applies changes to the model and logs the action, setting the configuration properties accordingly.
This method sets the result text based on the source of the event
19218259		calculates the goto action for a given source item, checking for conflicts or overwriting items. If the source items and grammar item are present, calls the closure method on each item in the grammar item. Otherwise, it calls the super
19218425		retrieves the class name associated with a given name, if the most general look and feel is available it returns the name, otherwise it returns null.

This method tests for the correct functioning of the last modified timestamp by asserting that it
19218498		returns the unselected item in a list of items as an object. If the list contains items that are not selected, it returns null. Otherwise, it returns the previously returned item.
SUMMARY
This method is used to
19218891		removes updates to the document and updates the end position and length when the document is modified.
SUMMARY
This method is used to update the end position of the document and ensure that the next character is valid based on the document
19219160		retrieves the CharEntityInfo associated with the specified name, or returns null if the name is null or an empty string.

This method initializes the CharClass HashMap with a list of CharClasses stored in the character classes
19219424		resets the data and related components of the element, or it resets the corresponding arrays to null.
The method calls the superclass's resetElementData() method to reset the field values to their default values.
The method resets
19219454		creates a deep copy of a DTD element by returning a new element with the same content as the original element.

This method creates a deep copy of the current element by creating a new element without copying its references.

This
19219461		takes a CharEntNameItem and uses a key to add its contents to a list associated with that item. It checks if the contents of the characters for the item matches the specified key, and updates the list accordingly.
SUMM
19219670		deletes a node from a tree structure, deleting its SDDDefinition and updating its base element.

This method removes a node from a tree structure, performs clean-up, and updates the list of nodes.
SUMMARY
19219785		adds an object to the request map and increases the size of the object count in the object tracker with respect to the event.

This method sorts an array of objects by given property name.

This method adds objects to the queue
19219833		creates a clone of the FontProperties object, including background, foreground, font, and tab size properties.

This method clones the object and sets the font and tab size properties if they are not the same, otherwise it sets they
19220263		returns the value at the specified row and column index, if it is an instance of JErrorCatch, it returns a default value, otherwise it gets the value from the property handler and model, and returns it.

This method
19220269		determines if a given SDDElement matches any of several SDDElement types and namespaces
19220270		sets a value at a specified row and column index, updates a hashmap to sort the data of the data, and sets the value at the specified row and column index.
SUMMARY
This method is used to update a configuration
19220446		returns the child at the specified index of a parent node in a tree structure structure, and throws an exception if the index is out of bounds.

This method ensures that the parent node at the specified index exists and contains the given name
19220527		saves user-defined properties to a file if no properties are defined.
This method writes the user-defined properties to a file.
SUMMARY
This method is used to store user-defined properties to a file.


19220589		inserts a new node into the tree at the specified index, optionally triggering an exception for children.

This method inserts an existing child node into the specified parent, first ensuring that the node is a leaf node, then inserting the child's
19220628		removes a child node and all of its children from a parent node either by removing the child itself (if it already exists) or by calling the remove method on its parent (if it exists).

This method removes the child node from
19220653		sets the user object of an SDDObject if it is already present, and may throw an exception.
This method handles user input by validating user input and updating the object's information.
This method handles user input by validating user
19220864		sets the size of the tabbed pane, updates the tab size flag, and binds the document object to a JTextComponentManager. If a JTextComponent object is supplied, it binds the document to it, updates the tab size, and
19220870		This method retrieves the tab size from the document, or uses the default tab size if the document is not available. It checks if the document contains any tabs, sets the tab size accordingly, and then sets the tab area bounds and scrolls the
19221213		checks if there are unsaved changes in the configuration dialog opened, and if so, opens a config dialog and returns `true` if the configuration was updated and canceled.

This method shows a config dialog when the close button is pressed.
19222414		adds an element to the XML file, creating a new element in the XML document with the element data.

This method adds an element to a parent element in the XML document, creating a new element in the XML document with the specified
19275861		returns the next sequence value for the specified database sequence name by retrieving the database connection, converting it to a sequence value, and updating the last sequence value.

This method validates a DbSequence by using the getNextVal
19275953		returns a `Set1Method` object with the specified boundary, specifying the name of the method to be invoked.

This method ensures that a `Set1Method` object implements a generic `set interface` method.

This
19275964		counts the number of instances of a given class in the database.

This method checks for non-disjoint tuples in a given dataset and sets all haveNext to true.

This method returns the count of all tu
19276328		flushes all data from the Database object to the database in the Hibernate session after it has been created.

This method flushes the session, creating a user accessable object if necessary and saving an object if not, then
19280600		gets an object of type RemoteRegister from the database using the Persistence Manager.

This method throws a JCOObjectNotFoundException if the registered user ID is not found in the database.

This method throws a JCOException
19280843	<s> none </s>
19280968		returns a collection of institutions, handling potential exceptions and returning an empty list if no institutions were found.
SUMMARY
This method is used to return an empty list if there are no institutions.


19281018		This private method converts the data length to the appropriate data format based on whether the data is integers or integers, big endsian, or bools, before converting the data using the appropriate ByteOrder and throwing an exception if none is found.

19281050		returns a string representation of the object. If the object is not null, the string is concatenated with a newline character and the specified text.

This method toString is used to provide the string representation of an object.
19281078		returns a string representation of the AbstractParamType object.
This method returns a string representation of the String object.
SUMMARY
This method is used to generate a string representation of the AbstractParamType class for a given object
19281314		assigns an instance of `Party` to the party variable, and throws an exception if the `Party` is not a Sphere && `Collaboration` that doesn't support this permission.

This method tests the `PropertySet
19281352		checks if there are any confirmed candidates since the current date and ensures that there are no errors. It also checks if the current user role is set to "admin," then begins a transaction for the specified role. If the user is an admin,
19281404		returns a collection of parents of an organisation, each of its members, including its parent groups, by iterating through and concatenating the parent-organisation of each member's parent group, except for the current organization.
S
19281425		returns the title of a child party's formatted name, which is a formatted name for management purposes. If the child party is a PersonBean, the formatted name is returned and the name's surname is retrieved after calling the getChildParty
19281493		returns a collection of all members of a person, including only Person objects.

This method calculates the partial and partial totals for each member in a collection of members and adds them to the given collection.
SUMMARY
This
19281872		This method returns a string representation of an object. If the object has no error, it returns an empty string. Otherwise, it returns the string representation of the object.
SUMMARY
This method is used to provide a string representation
19281878		converts a byte array into a hexadecimal string representation, in the form of hexadecimal characters separated by colons and spaces.

This method converts the buffer of a ByteBuffer into an int array.

This
19281896		deletes all registration information related to person to registration information.

This method deletes all registration information related to person, membership, and experience information related to person and membership beans.

This method deletes all registration information related to person
19282008		retrieves a collection of PeptideReport objects based on an identification. If the identification is not private, it selects all IntAct in the collection and returns their PeptideReports.
This method searches for PeptideReport objects
19282010		retrieves the number of unique peptide sequences in each of the peptide beans collection.

This method retrieves the peptide count of the peptide beans collection.

This method returns the unique peptide count of the pept
19282017		retrieves a collection of all uncached experiment accession string data from the database that the participant has caching.
SUMMARY
This method is used to retrieve a collection of experiment accession string data from the database that the participant
19282072		closes the database connection to the broker if it has one.

This method closes the persistence database connection.

This method checks if the business object is local and if the persistence database connection is not null, then closes the connection to
19282092		processes a XmlPullParser object, extracting relevant data and creating a ProtocolStep object based on the extracted data. It uses a processChunk object's dataParserFactory to extract XML parameters and constructs an XML XML descriptor, a protocol step
19282188		adds all elements from a collection to this collection and checks if the collection is empty. If it is, it throws an exception.

This method creates a new ArrayList object containing all of the elements in the provided model, adds all
19282238		takes XML parsing and parses a state, then processes tokens based on their tags to create objects for each token. Finally, it parses analysis data and returns an object representing the analysis.
SUMMARY
This method is used
19282252		queries an object based on a query, first checking if there's an instance of Broker, and if so, it uses the Broker's query to execute the query and returns the result.
SUMMARY
This method is
19282261		counts the number of occurrences of a given query in the database, handling null queries
19282274		takes a query as input and returns the collection with the query found.

This method asserts that the queries are not null.

This method evaluates if the expression provided can be cast to a collection and then prints the result and returns
19282551		configures the configuration of the object by calling the configure() method with the given argument.
SUMMARY
This method is used to configure the configuration of the object by calling the configure() method with the given argument.


19282582		clears the cache if it is not null, otherwise it throws an IllegalStateException with a message indicating that the call to clearCache is not properly initialised.
SUMMARY
This method is used to clear the cache if it
19282641		configures the GOFlatFileAdapter by setting the GOFlatFileConfiguration for the input GOFile path and the GOFlatFileAdapter, and then configures the configuration to build the GOFile.
SUMMARY
This
19282675		sets the endpoint address for the given port name. If the port name is unknown, an exception is thrown.

This method sets the endpoint address for the given port URL. It takes a port name to use as a parameter and sets the
19282804		initializes the XML marshaller if it is null and sets up properties such as systemID, publicID, and systemLiteral.

This method calls the `initXMLMarshaller` method in the `newInstance
19282806		takes two strings representing accessions and a context location as input and returns a URL as a string.

This method builds a URL String from a formatted string of accession form.

This method returns a URL with a query string
19282826		configures the ONTOLOGY_DEFINITION and FULL_NAME variables by retrieving values from the current definition, then by creating a new OBOTerm object with values obtained from the current full name, short name, qualified name, and query
19282996		trims whitespace and comments from an input string, using a specified condition. If the input string is null, it returns the input string unchanged. Otherwise, it returns an escaped version of the string with an escape flag.

This method
19283106		filters feature features in a feature filter by adding matching features to a new feature holder with a filter and the current object. It then returns the new feature holder.
SUMMARY
This method is used to filter features in a feature
19331178		decodes the supplied 8-bit unsigned integer into a long value. If the source is a primitive array, it reads its dimension, value, and length. Otherwise, it throws an exception indicating that the ByteArrayDecoder cannot decode an unsigned
19331198		reads a packed long integer from a specified byte array and offset.

This method reads a packed long integer from a starting byte offset, taking into account any specified offsets in the byte array.

This method reads an integer from a specified
19331667		writes Chunk ID, format, FrameRate, NumChannels, AudioFormat, AudioFormat, format, sampleRate, FmtChunkID, FmtChunkSize, Channels, bitsPerSample, Subchunk2
193398		writes header information to an output stream. The XML format displays the version, encoding, and standalone of the document.

This method writes the header information of the document to an output stream.

This method writes the envelope part to
19342696		returns the contents of the file specified by the fileName parameter as is as a String.

This method reads the file specified by the fileName parameter in the commandLine array as a String.

This method reads the file specified
19342992		checks for the size errors of a given field and throws an error if found. If a field is size but it works, it sets the field value to the specified value derived from the field status and checks if the size is set correctly, and
19343022		creates a copy of the current ExternalField object.

This method adds a new PropertySheet to the list of properties for a given key.

This method adds a new PropertySheet to the list of properties for the given
19343023		returns the "mainframe" line of the "TstLineArchiver" container with the "defMainframe" layout.

This method returns the "defMainframeRec" one-time line.
SUMMARY
19343033		initializes an ExternalRecord object with the given version.
This method adds a new ExternalRecord object to the array of ExternalRecord objects, if the index exceeds the array size.
This method removes all ExternalRecord objects that were added and are
19343055		sets the name property of the object.

This method sets the role of the object.

This method sets the source property of the object.

This method sets the text property of the object.

This method sets the
19343065		sets a parsed string value to a description field if it is different from the current value.
SUMMARY
This method is used to update the description field with the parsed string value and store the updated status if the value is different from
19343080		creates a deep copy of the current ExternalRecord object, including its base hash and linked lists.

This method checks for the validity of a derived record object before creating it, and throws an exception if it's a duplicate.



19343122		sets the value of the parameter to the specified value, updating update status to "UPDATED" if necessary.
SUMMARY
This method is used to change the value of a parameter if the value is valid and not null.


19343135		checks if an XML element has attributes identified correctly, followed by specific values.

This method parses an element for a "refactoring" object, adding a new ActionReference to the object if present and using a Format class to handle
19343136		sets the default value of a field if the new value is different than the current value.

This method sets the default value of the field to the specified string.

This method sets the default value of the field to the specified int
19343141		updates the database record name if it is not equal to the current record name and resets the update status to null.

This method sets the record name to the provided value and updates the record name if it has changed since the new
19343150		sets a Cobol name, ensuring that it meets the required restrictions, and updates the status of any loaded data after the operation.
This method sets the Cobol name, ensuring that it meets certain requirements, and calculates the coordinate system for the
19343286		returns the value of a field at a given record and field index.

This method returns the text of the field at the given row and column index.

This method returns the file corresponding to the specified position within a file.
19343305		sets the value of the listChar field to the given string if it is not empty, or to a default value if it is null or empty.

This method sets the value of the listChar field to the given object if it is
19343331		adjusts the length of a record to indicate the number of lines specified by the setNumberSpines parameter.

This method adjusts the length of a record by calling the adjustLength method with the available number of lines of the record.

19343335		adds a file to a specific record content, checking for existing record separators. If no separator is found, the method inserts a new separator before the record. If a record is split, the method trims it, trims
19343345		sets a copy book for the object if it is different from the current copy book or if there is no existing copy book, otherwise it updates the copy book with the specified value.
SUMMARY
This method is used to update the
19343362		This method writes the following text from a line to an XML document. If the line contains any non-empty text, it processes the text by skipping over any whitespace and extracting the text to be processed. It also flushes the XML writer
19343386		sets the delimiter attribute to the specified value, potentially updating the status to "UPDATED".

This method updates the status to "UPDATED". It checks if the data in the data buffer is null or empty, and throws an exception
19343391		checks if a specified byte array represents an equal extension by comparing the values of the following elements by checking if the byte array is equal, is 0, and has the correct position. 

This method compares two byte arrays by calculating the length
19343422		sets a new value for the "quote" property and updates the status to "UPDATED".
SUMMARY
This method is used to update the status of an object to "UPDATED" if certain properties have been modified more than
19343463		sets the recSepList field to the input value of the variable val if the input value is not equal to "".
SUMMARY
This method is used to validate the input value before setting the recSepList field if needed by
19343488		sets the record separ byte for the Record object. If the byte array is null or equal to the current record separ, it will not set the record separ. If the byte array is different from the current record separ, it will update the current
19343524		sets the font name to the input string and updates the status.
This method validates all fields entered by the user and sets values based on the validity.
This method validates all fields entered by the user and sets values based on the
19343549		runs a copy definition if it's not empty, matches the layout definition to a copy, and shows a message if any match is found.

This method reads a definition from a specified location.
SUMMARY
This method is
19343781		checks if the table of the given entity has been updated since the last time a new row change.
This method updates the form for the display of different entities based on the type of element. It updates the row data and the columns accordingly,
19343802		checks if a given line number is less than a specified offset, finds the node associated with the line number and updates the table and tree accordingly.

This method moves a line node below a given line number, changes the row by a given
19343818		initializes the layout screen by adding a label and a panel to the layout screen, and then sets the content module to the new layout module.
SUMMARY
This method is used to add a label and a table to the layout
19343844		arranges components, activates buttons, and handles various events that could occur when the components are enabled by a user.

This method creates and displays a search dialog with a progress bar for the start of the search. It starts the search operation
19343982		updates the status of the direction buttons based on the given current row.

This method controls the properties of the cell at the given x and y coordinates, enabling or disabling the buttons based on the current row and which direction the cell represents
19344072		executes an action based on the specified action code and o.
This method executes the export action for the specified action code and o.
SUMMARY
This method is used to execute buttons according to user actions or their corresponding actions
19344151		takes a DiffDefinition object and throws a DiffException if there are any errors. It checks the type of the diffDefinition associated with the same type, and based on the type it calls runCompareDialog or runCompareDialog accordingly. If the
19344345		assigns an array of options to each layout based on the specified layout index, number of field labels, and options. It removes a list of empty options and adds a list of specified labels and field names. It then iterates through the
19344352		This method sets the table details for the table by setting the headers and data in the table.

This method sets the column widths for the table, including the name and setting the default width if they are non-negative.


19344410		initializes the recent files using the file name input, including the default file directory, and updates the layout name and file base.
SUMMARY
This method is used to initialize the recent files using the file name input, including the
19344425		updates the XML header component's size, alignment, color, gap, and content based on the properties of the header component. It includes lines to represent the header properties and updates the frame width based on the resulting rectangle. Additionally, it updates
19344442		loads URLs from the database and populates the combo box with the URLs.

This method constructs a JPanel with a BoxLayout specifying it has a vertical orientation and contains a tooltip text.

This method sets the default close operation for
19344484		stores a file in the storage directory at the given file number, if the file is available.

This method stores a file in the storage directory at the given filename, if the file is available.

This method stores the given filename
19344487		updates the layout for a file based on the file name, identifying the layout, and notifying user when the file name changes.

This method updates the layout for a file based on the file name, finding the layout, notifying
19344515		establishes a connection to a database and executes a query to retrieve a list of tasks from the database.

This method fetches a date from a ResultSet object index.

This method fetches a date and time from a
19344529		inserts a ComboRec into the CodedOutput_ object if the CodedOutput_ object does not have a ComboId field.
This method inserts a ComboRecord into the CodedOutput_ object if the CodedOutput_
19344530		sets the combo_code field to the new value passed as an argument and updates the UI to reflect the new value.

This method sets the code of the field to the new value passed as an argument and updates the UI to reflect the
19344536		sets the value of a combo-to-value field, updating the data entered by another user if the value has changed.

This method sets the value of a multi-value field, updating the data entered by another user if the value
19344549		returns the name of the most recent file in a given list.

This method gets the name of the most recent file from a given list.
If the file name associated with the first file in the list contains at least one item
19344578		retrieves the name of a recent layout based on the index provided.

This method registers an overflow key for overflow handling with the program.

This method returns the recent layout name for the specified element.

This method returns
19344582		sets a value to a ComboWithName and updates a listener if the new value is different from the current value, and adds or removes an item accordingly.
SUMMARY
This method is used to set or update a ComboWithName
19344631		updates details if it has changed by removing old details, setting new details if different from the old, and updating the status to indicate a new message.

This method logs an error if the file with the user specified their encoded input is
19344632		sets the connection table name by updating the value provided.

This method updates the transaction table name.
SUMMARY
This method is used to check if the value is null or not equal to the specified value and set it if
19344747		adds a vector of elements to the classpath if the count of the vector exceeds the size limit.

This method initializes the class by adding jars, files, and directories to an array of jars.

This method adds the
19344783		updates the GUI with changes made to the table fields, including the current table description, click number, and whether to enable/disable other data fields.

This private method receives a text field, validates it, and updates the table
19344788		sets the specific data fields in the first level of the JTable to the values of the corresponding fields in the corresponding fields in the current node.
This method updates the labels for modifying the JPanel containing the name and format information in the row
19344792		sets the parameters for the program, such as the look and feel type, which can include the program's parameters, the look and feel root directory, and whether the look and feel is a Sun method, typically used for graphics, the program's
19344793		sets the type of the base for the specified row in the table model. If the row doesn't exist, it creates a new one, sets the base type, data type, and default value types. If an exception occurs, it displays an
19344795		sets the options for a panel by extracting specific values from a vector. If the selected index is not 1 and another option is true, it sets the options. If the selected index is not 1, it gets the options from a Vector and sets
19344798		checks whether the provided Look and Feel support the specified UI for the UI class. If the UI is enabled or disabled, it returns a failure status. If the target class is not found or the UI is not supported by the system, no class
19344831		initializes the paths and Java directories for the Android server. Java server directories are loaded as Java directories.

This method initializes the paths directories for the Android server. Java directories are loaded as Java directories.

This method initializes
19344853		sets the fields required for the data in the GUI. It updates the data, including default values, names, values, save/save buttons, and current fields.
This method requests focus for the user interface pane, triggering the appropriate function based
19344901		updates the value in the table and notifies the listeners when a focus lost event occurs.
SUMMARY
This method is used to update the value in the table and notify the listeners of a focus lost event.


19344931		updates the record separ list associated with the given database index in the database.
This method updates the record separ list for the given index in the database.
SUMMARY
This method is used to update the record separ list associated
19345208		returns the ZDateTableRender for the given type, which includes the field name and value.
This method returns the date display for the given field detail, which includes the field detail and value.
SUMMARY
This method
19345242		recursively expands and expands an underlying data structure to become a tree leaf node.
- If the operation is an atomic operation, it takes a node as input and expands it.
- If the node is expanded, it fires an update
19345248		removes a specified tree node from its parent node.

This method fires a tree nodes removed event for each child node of the selected node.

This method fires an event indicating that the node has been removed.
SUMM
19345281		returns the DateFormater for a given FieldDetail.

This method returns the DateFormat for a given FieldDetail.
SUMMARY
This method is used to return the DateFormat for a given FieldDetail
19345286		registers a single cell format with the given format, message ID, and location. It checks if the format has ended, creates a new format if necessary, and registers the new format with the cell format list. The method checks if a new
19345373		returns the position of a column in the record definition, taking into account the current starting column index.

This method also calculates the actual column position based on the start row index and column index.
SUMMARY
This method
19345382		retrieves the specified object value from a cell at the given layout index, retrieved by extracting the text field value from the record at the specified index and checking if the text value is the same as the current value of the cell.


19345428		retrieves the hex value at the specified location in the layout at the specified row and column. It uses the getHexValueAt method to get the hex value at the specified location, with the last column indented by line, and
19345478		saves a record if the update record is successful, is found, and has a name. It calls the method save record to save the store locally.
This method saves a record if the record has an id. It checks if the store
19345492		sets the value at a specific row and column in a JFrame using the values from a Collection at the given parentFrame, column, and row indices.

This method responds to keyboard events by updating the value of a specified cell within the
19345628		adds a record to the database and updates the database to reflect the new addition.
This method checks if a record name already exists in the database, and if so, returns. Otherwise, it adds the record name to the database, and
19345636		sets values from the table based on the provided record.
This method checks if a row is selected in the record and sets the values in the table accordingly.
This method calls the `setValuesInternal` method with the given record and list
19345643		changes the record index by incrementing the current record index, then calling the superclass's "changeRecord" method.
This method changes the record index by incrementing the current record index, then calling the superclass's "changeRecord"
19345684		checks if the input fields should not be changed, and also updates the value of 'change', 'save', and 'save' accordingly.
This method updates the description and data, enables and disables default values, and enables the editing text
19345751		checks if a given string is a valid boolean value, such as "TRUE", "YES", or "INTRO", and returns null if it is not a valid value.

This method parses and returns a SQL-like
19345774		prepares the cursor for executing SQL statements, initializing it if necessary and handling exceptions that may occur during operations such as SQLException and not Integer.MIN_VALUE errors.
This method attempts to create a statement handler by first preparing
19345829		initializes the JFrame and JToolBar for the purpose of building the screen. It adds the JInternalFrame as a JDesktopPane, which contains a JInternalFrame to the center of the window.

This method requires a
19345977		builds and configures the "Edit" menu for the text editor.

This method creates the menu for the text editor, including the "Copy, Cut, Delete", "Paste", "Find", "Select", "New",
19345983		writes a table with the table name "Lines-Up-Stack: Intersand" in the format "<TR><TD>col-3-2>...<code>col-4</code></TR>"
to the
19345991		writes a row to the output file with the specified row id.
This method writes the actual row of the table model.
SUMMARY
This method is used to write the final HTML table data to the output file.


19346044		initializes the combo box model with the given model and editable flag, and sets the component's editable flag based on the model's editable status.

This method reads the label and list of keys from the command line, and
19346079		un-fixes a column in a table by removing its header, adding an extra column, and updating the table model.

This method adds an extra column to the table by checking if the fixed column column is set and adding the table data
19346082		checks if the value 'val' is new and sets it to an existing record in the database if so. If not, it inserts the value. If the value is not new, it updates the existing record.

This method, if
19346491		This method tests the functionality of setting and getting a layout index for a filter object. This method tests the functionality of setting, retrieving, and modifying layouts in the filter object.

This method tests the functionality of setting a layout index for a
19346493		creates and returns a new JMenuItem for a given menu item, with a specified label if one does not already exist.

This method adds a new window frame to a panel if the menu item does not already exist.


19346740		is used to assert that the column count of an array of DetailRecords is equal to 11.

This method is a test method that verifies the `getColumnCount` method for a `Template` object.

This method
19346765		sets up the layout data for the given file view by adding lines from the file view to the data repository.
SUMMARY
This method is used to create and initialize a quantity array and a date object to store the line numbers for
19346778		tests calling the `testSetValueAt` method of `poFileRep` and asserts that the result is set to `null`.

This method also calls `testPreload()` from `poFileRep` and asserts that the
19346779		registers a combo box with a combo box ID, initializes the combo box name by capitalizing the letter, and preloads the list with the combo items.

This method calls the register method of the superclass with the specified ID
19346784		handles the action of a button click. If a file is chosen, and the file name is available. If a file is chosen to be accessed using the datafile, a validator is created and initialized. The method then performs the processing
19346933		tries to convert a String to an int, throwing an Exception if it cannot be converted.
This method attempts to convert a String to an int, throwing an Exception if it cannot be converted.
This method attempts to convert a String to
19346936		This method writes an int and a short to a file.
This method writes a int and a long to a file.
This method writes an int and a short to a file.
This method writes an int and a short to a
19346950		This test method checks if the PoFile object of the repository object matches. It tests the getValueAt method of the repository object, and then returns true if the value of the object at the specified row in the table of the repository object is
19348254		updates the RDW of the array of bytes by removing the last byte and setting its value to 0. It also converts the byte array of bytes to a BitField and updates the field of the BitField in the array accordingly.
S
19348333		takes a field and a string value and returns a BigDecimal value, adding a leading zero if necessary.
This method validates the BigDecimal value (descriptor) based on the field's format and the value to a
19348334		returns the starting position of a field in a string based on the specified field detail.
SUMMARY
This method is used to find the position of the end of a field in a string based on the specified field detail and padding
19348351		registers an object into the list of managed objects for a given class ID and range. It ensures that the user range and new data location are not the same, ensuring valid bounds exist and have valid ranges. The method then iterates through the
19348384		takes a list of name strings, a delimiter, and a quote as input, and returns a string representation of the column names.

This method takes a list of names and a delimiter as input, and returns a CSV string
19348945		sets the low display date for an object, ensuring that the date falls within a specified range.

This method initializes the date range object, which includes the end date, beginning and middle dates, and the default end date.


19348951		takes a Date object and a boolean value indicating if highlight is enabled, then switches on the boolean value of the date, and updates the high display date accordingly.

This method updates the date display with the specified value.

This
19349016		returns a FileView for an array of integers.

This method returns a DataStoreStd<AbstractLine> instance.

This method compares two LineStr objects for equality based on their width and position.

This method
19349533		sets the month font, recalculates the HEADER_HEIGHT metric, and sets the month font height based on the metrics.
SUMMARY
This method is used to recalculate the header height of the month font based
19372495		generates the action performed by the user, which can only handle Step events. If the event is active and an error flag is set, it first executes the generationStep method. Otherwise, it generates a step. It also updates an error message
19372757		takes a state and a set of conditions. If it satisfies the condition, it updates the tree with true transitions and returns false. Otherwise, it visits all the states in the state. 

This method does two transitions, one that
19372869		checks if a UseCaseModelBlock has an exclude relation with a specified value in its parent UseCaseModelBlock.

This method checks if a UseCaseModelBlock has an include relation with a specified name.

This method checks if
19372924		This method adds all the forbidden substates in the given set of states to the current set of states.

This method checks if the current set of states contains any forbidden super states. It iterates through the given set of states and adds
19373401		checks if the use case model of the input use case is the same as the domain. If not, it checks if the step should be used in redirection and throws an exception if so. Then, it calls the step check with the given
19373429		inserts a new block after a specified line number if given a block containing the specified block and increments the line number and block number if there are any blocks in the use case.
This method inserts a new block, splits the specified block into
19373557		returns an iterator over the primary attributes of the trait set.
SUMMARY
This method is used to obtain an iterator of the attributes set for the trait.


19373654		adds an ExtendRelation object to the class and associates it with extracting its ExtendUseCase object.

This method iterates over the elements of the class and adds the ExtendUseCase object to the extends using the ExtendRel
19373660		creates a new Use Case Description Block by updating the current Step Description and returning the newblock.

- This method checks if the current Step Description Block is a Sequence Block, and if so, creates a new Block with the sequence's
19373926		returns a Vector of all InterfaceDescriptions of an ExtensionPoint.
SUMMARY
This method is used to retrieve the extension parts of an ExtensionPoint.


19374288		returns a set of all resume states in a given state.

This method returns a list of all resume states in a given state.
SUMMARY
This method is used to gather all resume states in a given state that
19374289		retrieves all transitions contained in the given state, excluding those with the same trigger as the current state. It then adds the results to a set and returns it using a set of outgoing transitions. It also adds any internal links to each other
19374367		checks if the source graph is protected, it checks if it includes a cycle, if so, it adds it to the list of detected cycles.

This method checks if the source graph is not protected, it creates a cycle based on the
19374527		validates that the input line number is within the valid range, and throws an exception if it is not.

This method checks if the current line index is within the valid range and throws an exception if it is not.
SUM
19374664		returns an iterator over all the numbered blocks in an extended block hierarchy.
This method returns the parent block of a block.
This method takes in a block, then returns the block with the highest number of numbered children.
This method
19374880		builds any extension elements for a procedure element by setting the text of a processing instruction, creating a new child element, and adding any extension elements with specified values.

This method returns a new child element that contains the description of the procedure
19374900		adds an extension element to a Use Case Description. It iterates through all elements in the Use Case Description, adds any extension metadata to the extension, and adds any extensions to any use case descriptions.
SUMMARY
This method
19374986		builds an extension element with an operation and action.
This method builds a redirect action element with a text field and a redirect element.
This method builds a redirect text field with a string tooltip label.
This method creates XML elements for
19375075		transforms redirects to actions in an operation instance.
This method iterates through a list of steps, transforming if necessary by setting the redirects in a forward step.
This method sets a given step into a forward step.
This
19375163		This method checks if an operation with a specific name exists in the model. If the operation with the given name exists, it returns it. Otherwise, it returns null.
SUMMARY
This method is used to get an operation with
19375187		determines the out-line representation for a given block and sets it with a style sheet.
SUMMARY
This method is used to make the body of a concept in a block or in a different type of block with an
19375324		adds an operation call to an action specified by its cost. It parses the cost element and checks for existing operations. If an existing operation has not yet been defined, it adds the call to the given action. It also sets the operation
19375330		returns an iterator that iterates over the elements in the given Vector which are instances of AttributeValueBlock and have either AttributeValueBlock or ConceptInstance attributes.

This method returns a set of all attributes in the given HashSet
19375389		checks if any 'possibleValueVars' child collection of the current block can have any values, excluding blank spaces.

This method checks if the current block can have any remaining values with their types.

This method adds a
19375400		returns a string representation of the object's full name by combining all the names from the object's user data.

This method returns a string that contains the list of all the names of the type names of all users.

This
19375407		returns an iterator over the full name values of a given object's full name.

This method expands an entity name by iterating through a list of entities expanded in the model and retrieving the corresponding entity name.

This method returns
19375409		recursively finds a subentity of the current object by recursively finding all blocks of an active entity block child and all other blocks of an other active entity block child until found.
SUMMARY
This method is used to
19375802		creates and sets the location of a hover component within a shell.

This method builds graphical objects for a shell in a SWT shell hierarchy.

This method returns the location of a launch configuration for a launch action.


19376190		sets up an actor model, including all of its actors and relations. It returns the actor model.
SUMMARY
This method is used to create an actor model, containing all of its actors and relations.


19376386		builds a graph of components for visualizing the class. It takes a CompoundDirectedGraph and a CompoundDirectedGraphFactory as its parameters. It makes each component visible by setting its size to the current size and creating a new
19378538		builds a MenuItemTest object for a given menuBar and menu. Depending on the Menu object's properties, the method allows it to be added to a menu bar with a single item, and the other properties are specific to different test cases
19379428		handles events generated by a toolbar item selection in a selection group. It processes commands for different UI elements, such as saving project selection, initiating class initialization, simulation reset, quitting, and enabling or disabling UI elements based on the action associated with
19412370		removes the listener from the list of listeners that are notified for file information events.
SUMMARY
This method is used to handle file information events that have been received in this event object.


19412437		retrieves the date formatter, creating it if necessary, and setting the clock to the GMT time zone.
SUMMARY
This method is used to create a date formatter that has been set to the specified date according to
19412557		verifies the server using CVS and executes it on a Windows-specific server.

This method verifies the server using a private sub script file.

This method verifies the server using a CVS client procedure.


19412635		sets the local path of the object. If the path ends with a forward slash, it removes the leading slash and stops traversing the path. If the path ends with a forward slash and ends with a backward slash, it stops traversing the
19412736		adds argument requests to the current working directory based on a specified file array. If the array is null, it returns. It then iterates through the array, adding file and track name requests to each request. For each request, it retrie
19412759		ensures that the connection to the database is open, verifying that it is not null, using a null connection, otherwise attempting to open a new connection or verifying that it is open.

This method tests the connection to a database and ensures
19412879		prunes empty directories and deletes them and then clears the empty directories iterator. It also checks for validity and creates canonicalized paths or directories.

This method uses an iterator to iterate over all empty directories and prunes empty directories and
19413001		loops through email messages and, if the message contains a directory, it calls the messageSent method with the directory.
Then, it checks if the message contains a file and if not, calls the messageSent method with the file as the
19413575		reads a byte from the input stream and throws an exception if it should be a ByteArrayBuffer. It then attempts to consume something from the stream and returns the consumed byte. If IOExceptions are encountered, they are caught and re-th
19413603		adds a byte to the bytesBuffer array, dynamically resizing the array if necessary.

This method adds a float to the counter array by getting the x and y values of the x and y coordinates associated with the first and last elements
19413737		executes a command, retrieves the appropriate response, and then adds a listener to the response that updates the manifest.

This method performs a move operation. It adds copies of the selected files to the project. It then moves each file
19413794		checks whether the current object is equal to the given object by comparing their names and locations.

This method retrieves the event tag.

This method gets a user object.

This method checks if the user is authenticated.

19413900		returns a boolean value indicating whether the connection to the specified IP address is available.

This method tests the ability to ping a user's IP over a port.
SUMMARY
This method is used to test whether a user
19413925		sets the protocol properties of the class using the given input string, including the protocol name, protocol description, and log level. If successful, it sets the protocol type and optional flag, ensures valid protocols are present, and updates the protocol fields with
19414091		empties a package for a given filename name. 

This method deletes all files in a directory, excluding files that did not exist with the name a certain number. 

This method deletes the all folder and all source
19414202		changes the current manifest file, either from an existing file or a new one with added information.

This method, reloadPluginLocations, loads the plugin locations to add and remove resources to the bundle. It then registers the bundle and changes
19414302		returns the mirrors of all manifests.
This method returns the list of manifests.
SUMMARY
This method is used to get a list of all manifests from the manifest store.


19414305		loads a manifest from the history of the current context in the current user's preferences.

This method returns a Manifest instance that is created from the version attribute of the current object.

This method updates the current manifest to match the given
19414427		tests the testCommandOptions1 method by setting various options and parameters to test the behavior of the CommandLineParser class. It then verifies that the correct options are retrieved from the command line, and that no exceptions are thrown when encountering an invalid
19414465		returns an unmodifiable list containing the first and second elements of a list of build order for a given module.

This method retrieves a list of all user builds for a given module.

This method returns an ArrayList
19414478		removes a module configuration from the local data and unsets properties.
This method removes a local configuration from the global data, including removing the server and installation from command line and setting the status indicators.
This method removes a local module configuration
19414501		takes a string argument representing a module name, looks up a module in the manifest, and returns the module if found.

This method checks that a module name is not null, and then verifies that the module is not found,
19461504		refines extensions in a concrete event and abstract event root by finding and refine them based on the extension ID and refilling them. It also counts the count of concrete event converters.
SUMMARY
This method is used to determine
19461511		refines an event representation in the parent eventbpm model, allowing for a concrete event body in the concrete event bpm, and updating the model. If the refresh action is not allowed, it calls the parent method to refresh the abstract event
19462086		This method gets the class of the class referenced by the 'create' method using the 'getMetaModel' method and checks if the resource is an instance of 'ModelPackage'. If it is, it creates the package contents, package contents and
19462365		adds a property descriptor indicating that the label of an object has changed.

This method overrides the superclass's method to get property descriptors of an object.

This method adds another property descriptor to the list of descriptors
19462415		returns the resource object associated with the eObject if it is contained within it.
This method returns the class associated with the eObject if it is contained within the current object.
This method returns the resource object associated with the eObject
19462955		checks which interface it equals returns it. If there are no conflict, it throws an exception. If there are conflict, it extracts any attribute types from the collection and fires an event to all registered type handlers if they have any. It then checks
19463492		checks if the bound identifier declarations of two BoundIdentDecl objects match for equality. If they do not match, it returns false.

This method tests the functionality of bound identifier declarations and asserts that the number of added bound identifier declarations is equal
19463544		creates a new entry in the list if the user has the required information and the element has the new category. If the user chooses to enable and enables, the new value is added to the list and the list is updated.

This
19463564		is used to refresh the model when an element in a theory has been changed. The method first retrieves a list of changed elements and iterates through them, executing the `elementChanged` method on each element. If the element is not the
19463659		updates the PSStatus with a given IPSStatus after checking if the old status is higher, the new status is less than, validating confidence marks, and confirming loss.
This method parses an ISpeech and extracts the PS
19463692		removes the selected item from a list, updates the list selection, and ends the removal process if any changes are recorded.

This method generates a random number between 0 and the given minimum and maximum, then attempts to find the corresponding "
19463762		updates the content of the form when it has changed, refreshing it if necessary, or hiding it if it is the active and not needed.

This method refreshes the page.

This method refreshes the table when the editor
19464449		adds an error to the error description map. It adds error conditions for whether an exception is thrown and displaying an error message.

This method adds an error to the error description map using the provided TaskElement and element name as parameters.
19464460		adds an error token to the list of encountered keywords, and if the keyword is a sub-token of an unexpected keyword, it adds it further to the list of valid keyword errors.

This method takes an array of keywords and adds
19466045		adds a property descriptor for the variable name to the object.
This method is used to add a property descriptor for the number of tasks to the object.
This method is used to add a property descriptor for the output to the object.
19466073		adds a property descriptor for the event name of an event.

This method overrides the default implementation to provide a list of property descriptors for the specified object.
SUMMARY
This method is used to provide a list
19466112		adds a property descriptor to the list of property descriptors for the provided object. If the property descriptors have not been initialized yet, it calls the superclass's `getPropertyDescriptors` method to initialize them. It then adds
19466114		adds a property descriptor for the "remoteEvent" feature to the list of property descriptors for the specified object. This method returns a list of property descriptors, including the firing property descriptor for the property.
SUMMARY

19466347		adds a property descriptor for the base attribute of an object.

This method adds a base property descriptor to the list of property descriptors for the given object.
SUMMARY
This method is used to add a base property
19466353		adds a property descriptor for the address feature to the list of property descriptors.

Retrieves the list of property descriptors for the given object.

Finally, it returns the list of property descriptors.
SUM
19466375		This method adds a property descriptor for the implementation type to the list of property descriptors.

This method adds a property descriptor for the name property to the list of property descriptors.

This method adds a property descriptor for the implementation
19466384		This method adds the period property descriptor to the item property descriptor list.
This method adds the period field property descriptor to the item property descriptor list.
This method adds the period property descriptor to the item property descriptor list.
This method adds
19466412		adds a property descriptor for the parameter type to the list of property descriptors for the specified object.
This method adds a property descriptor for the parameter name and parameter type to the list of property descriptors for the specified object.
This
19466421		adds a temporary property descriptor to an object. If the item property descriptors are null, they are added by invoking the superclass's method, and then adding additional property descriptors for the current object.

This method returns a list
19466454		This method adds a property descriptor for the caseExpression feature of the CompositionPackage.eINSTANCE.getCase_CaseExpression() object.

This method adds a property descriptor for the caseExpression feature of the Composition
19466512		adds a property descriptor for the machine name to the property list of the given object.

This method adds a property descriptor to the given object.

This method overrides the superclass method of the superclass and initializes an
19466518		adds a new property descriptor for the "projectName" feature of an object.

This method calls the superclass's `getPropertyDescriptors` method and adds the `PROJECT_NAME` property descriptor to the list of
19466552		adds a property descriptor for the related event feature of an "if" object.

This method overrides the parent's default implementation and initializes the list of item property descriptors to include the related event property descriptor.
SUM
19466609		adds a property descriptor for the full initialisation expression to the list of property descriptors.

This method returns the list of property descriptors for the given object. If the list is null, it first calls the superclass's method
19466619		adds a property descriptor for the literal values of an enumeration.

This method returns a list of property descriptors for the object.

This method initializes the property descriptors if they have not been initialized before.


19466627		adds a property descriptor for the order number to the list of property descriptors.

This method returns a list of property descriptors for the given object.

This method adds a property descriptor for the id property to the list of
19466631		adds a property descriptor for the partial initialisation expression to the list of property descriptors for the given object.

This method adds a property descriptor for the partial initialisation expression, autogenerated value, and partially translated declarations filter
19466657		This method returns a list of property descriptors for the specified object. If the list of item property descriptors is null, it first call the superclass's method to retrieve the properties and then adding them to the list.

This method
19466669		adds a property descriptor for the parent name of the object to the item property descriptors list.

This method adds a property descriptor for the event name of the object to the item property descriptors list.

This method adds a
19466681		adds a mode property descriptor to the list of property descriptors for the specified object.

This method adds the mode property descriptor to the list of property descriptors for the specified object.
SUMMARY
This method is used
19466699		is used to add a property descriptor definition to the list of property descriptors for the `declarator"` object. It first checks if the `itemPropertyDescriptors` variable is `null` and if so, calls the super
19466700		is responsible for adding an item property descriptor to an object. If the item property descriptors are null, the superclass property descriptors are added.

This method returns a list of property descriptors, if they are not already initialized,
19466707		adds a property descriptor to the list of item property descriptors for an object.

This method overrides the parent class's method to get the property descriptors for the specified object, then adds several additional descriptors to the list.
19467494		adds a machine property descriptor to the list of property descriptors for the specified object.
This method creates a rule property descriptor for the specified object. If the specified object has special treatment, it also adds a machine property descriptor with machine model
19467503		adds a property descriptor for the "combinesEvents" feature of the ComposedEvent class.

This method adds a property descriptor for the "label" property of the ComposedEvent class.

This method adds a property descriptor
19467521		adds a property descriptor for the composed events feature of a ComposedMachine object to the list of property descriptors.

This method overrides the superclass implementation of the method in its superclass. It first calls the superclass method
19467539		adds an event property descriptor to a list of property descriptors.
This method is used to ensure that only one property descriptor per object is available to the list of property descriptors for the specified object.
SUMMARY
This
19467748		sets the value of a test control with the given name, using an array of values, to hold the value.

This method imports a file into the platform.xml system.

This method imports a JavaFile into the current stream
19467924		updates the variable values of a group by adding or subtracting the variables and transitions. The variable states variables are triggered by updating variable values using the getDelta method.

- This method builds an IndexDTD object from a list of
19467984		updates the elements in both the viewer and the display with the provided array of elements. It checks if the viewer is disposed and then refreshes the display.

This method updates the elements in both the viewer and the display with the provided
19467993		creates the toolbar section for the provided Eclipse plugin. It sets layout properties, creates a section tool in a given section, and adds the section to the composite. It also adds a composite, editor, and navigation actions to them.


19468000		creates the section for the given section using the provided section, toolkit, and graphics object.

This method generates a table item from a table and composes a value with the extended key stored in the table.

This method
19468216		adds all abstract properties of the two expression environments, ensuring that they are conform to the specified environment.

This method retrieves the type environment for a given event, returning null if no associated type environment is found.

This method
19468458		returns a JPanel that contains controls for connecting to a specific application, including buttons for connecting to different programs and connecting to local events.
SUMMARY
This method is used to provide a connect button on the GUI.


19468615		checks if the save is valid and, if there are any unsaved edits, stops the export service and saves the dirty editors to the destination value. If the save is not valid, it converts the file to a new file and runs the export
19468774		saves the widget values after updating directory names history. It also puts the original source value into the destination value, overwriting existing options into the destination, and inserting the destination value into the preferences. The widget is then saved, and the
19469549		returns the type of a UMLBTransition object, which represents the transition's source and target states.

This method extracts the type of a UMLBTransition object from its parent, excluding the "not yet resolved"
19469711		adds primitive types to the list of types for the current object.

This method creates a list of type arguments for the current object.
SUMMARY
This method is used to create a list of type arguments for the current
19469740		returns the label of a UMLBelement, which is the name of the class that extends the UMLBelement. If the type of the element is null, it returns the name of the superclass. Otherwise, it returns the
19469840		executes the UMLB tools for a UMLB project, with an optional writer object to clean up the active project and progress monitoring.

This method uses a shell to run UMLB tools, creating a session and then logging
19471196		validates if an incoming UML BABSTRATE is initial and has not been found. If it does, it adds an error message to the diagnostics and returns false. Otherwise, it returns true.
SUMMARY
This
19471246		validates that a Primitive state is not transformed except not transitions, only valid for final states.

This method checks if a UML BabstractState is not transformed and returns ok if it is. If it is, it checks
19471333		validates the outgoing transitions of a UMLB abstract state, ensuring that it is connected, contains only one outgoing branch, does not contain the UMLBabstractState, is linked to a valid UMLB state, and has only
19472690		handles changes made to the text field, calling the handleTextModified method if the new value is different from the current value.
SUMMARY
This method is used to execute a command to set the current value of the owner
19472709		returns a new value at a specified index in the application's choice list. If the current value is null, it returns a default value. If it is an EEnumLiteral instance, the new value is converted from the E
19472714		returns the label to be displayed. If the category is bold, it also checks if the selected card is visible and returns if it is. If not, it checks if the label is below the standard label, then adds the label to a
19475560		adds a property descriptor for the elaborates feature to the list of item property descriptors.

This method checks if the item property descriptors have already been added.

This method adds the name feature to the list of item
19475570		adds a property descriptor for the "isElaboratedBy" feature to the list of item property descriptors for the given object. If the list is already initialized, it simply returns the existing list. Otherwise, it creates a new list
19475578		This method retrieves the property descriptors of an object. If the list of property descriptors is null, it calls the superclass's method to get the default list of property descriptors. It then adds two additional property descriptors: "
19475584		retrieves a list of property descriptors for an object.
This method adds a disjunct by property descriptor to an object.
SUMMARY
This method is used to add a disjunct by property descriptor to a
19475585		adds a type provider property descriptor to the item property descriptor list.
This method returns a list of property descriptors for the specified object.
SUMMARY
This method is used to add a type provider property descriptor to the item
19475620		adds a property descriptor for the local attribute of an object to an item property descriptor list. If the descriptor is already present, it returns the existing list. Otherwise, it creates a new list, adds property descriptors for the model, name
19475631		adds the "marked" property descriptor to the list of property descriptors for the specified object.

This method is used to add the "getName()" property descriptor to the list of property descriptors for the specified object.

19475638		adds a property descriptor for the "outgoing" feature of the UMLBabstractState class.

This method adds a property descriptor for the "currentStatesA" feature of the UMLBabstractState class.

19475639		adds a property descriptor for the "surjective" feature of a UML BObject. It initializes a boolean value and adds it to the itemPropertyDescriptors list if it's null.

This method returns a list
19475640		adds a property descriptor for the "errors" feature of a UMLBelement object.

This method adds a property descriptor for the "name" feature of a UMLBelement object.

This method adds a property descriptor
19475645		adds a property descriptor for the injective feature to the list of property descriptors.

This method returns a list of property descriptors for the object.
SUMMARY
This method is used to add a property descriptor for
19475648		This method adds an incoming property descriptor to the list of property descriptors for a given object.
This method adds a property descriptor for the incoming feature of the object.
This method adds a property descriptor for the incoming value of the object.
19475651		adds a property descriptor for the "total" feature of the UML B class.

This method overrides the superclass's getPropertyDescriptors method to add custom property descriptors for the superclass.

This method
19475656		This method overrides the superclass's getPropertyDescriptors() method and adds a functional property descriptor to the list of property descriptors.

This method overrides the superclass's getPropertyDescriptors() method and adds a
19475658		adds a final property descriptor to the list of item property descriptors. It first calls the superclass's method to retrieve the superclass property descriptors, then adds additional property descriptors for the abstract and final features such as name, final
19475671		determines the itemPropertyDescriptors list, which contains the initial property descriptors for the given object. If the list is null, it initializes it with the values from the superclass's method. It then adds the initial property
19475678		adds a property descriptor for the salmiakki to the list of property descriptors for the given object.

This method also adds a property descriptor for the arabido, data, and hypePropertyDescriptors to the
19475679		adds a property descriptor for the inherits attribute of a UMLB abstract attribute object.

This method checks whether the item property descriptors are null or not, and if they are, it calls the superclass's `getProperty
19475687		adds a property descriptor for the supertype feature of a UMLB classifier to the list of property descriptors.
SUMMARY
This method is used to add a property descriptor for the supertype feature of a UML
19475690		adds a property descriptor for the 'eighthorn' to the list of property descriptors for the specified object.

This method returns a list of property descriptors for the specified object. It initializes the list if it is null
19475691		adds a property descriptor for the "instances" feature of a UMLB classifier type.

This method overrides the default behavior of `getPropertyDescriptors` to add additional property descriptors to the list of property
19475716		adds a kind property descriptor to the list of item property descriptors for a given object. It first calls the superclass method to get the property descriptors, then adds additional property descriptors specific to the object, including name, kind,
19475718		adds a translation property descriptor to the list of property descriptors.

This method adds initial value property descriptor to the list of property descriptors.
SUMMARY
This method is used to add a translation property descriptor to the
19475719		retrieves the list of property descriptors for the specified object, including additional property descriptors for custom properties such as message, position, and name.

This method adds a message property descriptor to itemPropertyDescriptors.


19475722		adds a property descriptor for the UMLB element feature to the item property descriptors.
This method returns a list of property descriptors for the given object.
SUMMARY
This method is used to get a list of
19475757		adds a property descriptor list to the list of property descriptors for an object. If the list does not yet exist, it creates one, adds component descriptors and sets the default value. It then returns the list of property descriptors.
19475819		adds a property descriptor for the event kind of an object.

This method overrides the superclass's getPropertyDescriptors method and adds event kind property descriptors to the list of property descriptors for the object.


19475841		is protected and provides three default property descriptors for the given object.

The third default property descriptors include:
- New or Read Only property descriptor
- Name property descriptor
- Type property descriptor
- Dynamic property descriptor
-
19475846		adds a property descriptor for the "selfName" attribute of the UMLBClass object. If the property descriptor has not been previously set, it calls the superclass's implementation to add the property descriptor to the list.

This
19475941		returns an error reporter that will report the error message to the page at the front or the validation of the page.

This method overrides the default error message to report the error message to the progress tracker.

This method ensures
19475955		deletes the marker and, upon successful deletion, deletes the child model elements from the parent model element.

This method recursively deletes all of the UMLB source elements to their children.

This method recurs
19475958		retrieves the root Rodin element from the provided project name.
This method gets the Rodin element from the provided project and filename from the specified project name.
This method gets the Rodin element from the provided project name and filename
19477031		adds transition guards to a UMLBClass.
This method adds guards to a UMLBClass.
This method adds guard to a UMLBClass.
This method adds guard to a UMLBClass.
S
19477476		recursively adds nested actions to a class, marking transition guards as disjuncts and leaving relations as disjuncts.

This method performs an auxiliary transition combining two UMLB transitions (AJCB and BJCB
19477611		retrieves the current current version of the Rodin database, which includes information such as the title, source, definition, and module ID.

This method returns the module associated with the given name, such as an included machine, from
19477683		This method creates a set of places for an abstract transition specified by a given transition, the owner class, and the current state set flag.

This method accepts a transition's type and the owner class and checks if a given state name is
19477811		handles the creation of all abstract environment types, ensuring that an abstract event info is created correctly. It then performs normalization by creating new environment type environments and adding different types ofny to them. It then adds this type to the environment type
19477985		processes a given element by checking if it is valid, and if so, gets the internal location of the element and the attribute type. It then retrieves the formula and visit the form. If the formula is well-formed, it removes
19478198		removes a machine-component from the model, removing previously defined components, and propagating code to other model machines before it is used.
SUMMARY
This method is used to remove a model composed machine (MASC) from
19478283		checks if the parent has children and if not, calls the superclass's hasChildren method.
SUMMARY
This method is used to determine if the component has children and if so, calls the superclass's hasChildren method and
19478328		removes composed machines from a given machine. Within handling the case where the composed machine is the same as the current machine, it removes the machine from the set of composed machines and removes theMachineDependencies relationship.

This method removes
19478376		creates a group with a single action that, when performed, performs actions on objects that represent a task.

This method creates a group with multiple actions for project-related operations, including open and close projects, delete groups and delete events
19478491		returns an OperationTree4Composition object containing the create/create operation for a command.
This method constructs a composite command structure object by combining two IInternalElement objects, one from whether the action element is a simple type and the other
19480774		adds a newName property descriptor to the list of property descriptors for the given object. It first calls the superclass's method to add the property descriptors, then adds additional property descriptors related to the name property. The newName
19480828		adds a property descriptor for the event Refines feature.

This method adds an item property descriptor to the list of item property descriptors for the given object.

This method adds an event property descriptor to the list of eventei
19480873		This method adds a property descriptor for the "events" property to the list of property descriptors.

This method returns a list of property descriptors for the object.
SUMMARY
This method is used to add a property
19482795		compares two resources, compares them, and handles exceptions thrown by various methods: creation of copies of resources, modifications, projects, resources, and resources copying, modifications, or projects deletion, resources creation, modifications modification, and resource modification copy between
19482797		creates a new `AbstractNewResource` and serializes a new resource to the target-package using the given reference system.

This method creates a new resource to a newly created resource file.

This method creates a new resource
19482798		creates a new resource in the given resource set, given a file, using a specified platform resource to identify it.

This method creates a resource in the given resource set using a specified robot resource ID, handling errors if the resource cannot
19483113		logs a problem by displaying its message in a dialog box using either SWT.OK or SWT.CANCEL depending on the severity of the problem.

This method cancels an action by removing a subject from the subject queue
19483159		returns the IDocumentParser object associated with the given org.eclipse.jdt.core.dom.IDocument, and if the parser is not found, it adds an internal problem to the result.
This method gets the parser
19483169		checks if a given document can be parsed by the given document and parser.

This method returns a boolean vector of the results of the program.

This method checks if the input file matches a specified XML file.

This method
19483188		changes the filename of a document when it is hidden or not, or, depending on the type of the input object, it sets a default filename, then sets the filename to the input object's absolute file path.

This method edits the
19483196		removes a document from the document facade, given an object as an argument.

This method removes a document from the document facade, given an object as an argument.
SUMMARY
This method is used to remove a document
19483258		updates the tree and refreshes it, reschelling all changes and updating the text within the editor.

This method notifies the editor that an element has changed.
SUMMARY
This method is used to refresh the
19483277		processes a structured document delta by extracting the element and item name, and then performing actions based on the element's type. It handles various events such as adding or removing items, moving items and elements, changing the editor's text field to the
19483315		sets whether a given requirement is relevant to another requirement.
This method sets whether a requirement is relevant to a given related requirement.
This method makes the requirement related to a given requirement by filtering a list of relevant requirements by source location.

19483320		parses an XML file containing a database connection into a document object. It validates that the connection is being used by the request and requires a valid local database. If the connection is not used by the request and the local database is valid
19483345		removes all the associations of an object. If the size of the given array of objects is greater than 0, an IllegalArgumentException is thrown with a message indicating the wrong number of objects. If the ArrayIsNotEqual than 0
19483368		navigates to an IAssociation object if it is an IAssociation or IElement object. If it's an IAssociation, it calls the linkToEventBEditor method with the IAssociation as an argument.
This
19483379		retrieves the style name element from a given node by iterating through its child elements of the node, identifying the "style-name" child element, and returning the value. If the child element does not have a "style-name
19483434		modifies the field "name" of the "model" element. If the "name" attribute is empty and the "textInput" item is not null, an exception is thrown with the severity, name and name of the item being modified
19483458		modifies the value of an object for a given property of a document's DocumentSetting.

This method suppresses unchecked warnings for ensuring that the object is not disposed.

This method deserializes an object from an input stream,
19483466		retrieves the value at a specific column position for a given element and column index. If the element is an instance of IDocumentParser, it returns the column name, or if the column index is 1, it returns the description of the
19483673		sets the content XML of a document using a ZipOutputStream.
This method sets the content XML of a document as java.lang.String, which includes the line ending for each word "Content.xml" in order to generate a string
19484145		checks if the valuation of a given symbol at a given index is complete. It loops through the allowedMachines and checks if their masks are not being used as a satisfied mask. If their masks are not being used, it is set to null
19484230		generates and parses an event's object from a given input name string. It handles optional triple sequences, including preaction, predicate, triple suffix, and comment. Within a finally block, it adds predicates and saves a translation context to
19484267		takes a string as a parameter and searches for it within a given scope, returning the object associated with that name. If a scope is found, it checks if the name within the scope matches the name of form substitution or pattern, depending on
19484615		publishes an event state by opening an XML file and publishing it to the network. It handles potential exceptions and errors gracefully. It also retrieves the event machine name, execution result, and machine name from the event and publishes the event state
19484699		publishes unknown events to the model after adding new events, creating new event objects for the root machine's events, adding events marked as unknown, adding transitions from transitions to transitions, adding non-transitions to transitions, and adding transitions from transitions
19484908		iterates through an array of VariableChangedListeners and notifies each of them with a VariableChangedEvent.
SUMMARY
This method is used to notify listeners of a specific variable change in the system.


19485264		initializes the current relation.
SUMMARY
This method is used to initialize the current relation.


19485361		adds two constant values together, adding each side of the value with an AddDoubleConst function as the second.

This method adds a new value to the constraint_map in a thread-safe way. It takes a property and a
19485834		tests the `contains` method in the `ISet` class to check if a given input contains a known expression.
SUMMARY
This method is used to test that a SET is contained within a given expression.


19486305		tests testSUBSETEQ1 by creating a test collection, parsing a string representation of prefix to a boolean value, and processing predicates using the makePredicate to verify their flags.

This method is a testSUBSET
19486319		tests the SUBSETEQ2 predicate given a string containing a set of literals represented by five generic objects.
This method tests the SUBSETEQ2 predicate triggered by an "greater than" loop, with a generated
19486376		tests an incomplete precondition that matches an OR predicate with a sub-predicate and whose negated attribute is set to true. It resolves back to the first non-precondition, checks if the precondition is not found, and
19486393		tests the NOTSUBSETEQ2 predicate by creating a new Predicate object with the given text, and then parsing the predicate using the Predicate object to obtain the correct predicate.
This method asserts that the actual predicate obtained is not
19486430		parses and tests the functionality of the Predicate subclass, which is called when an operator is used as an argument, when the testSUBSET1 method returns true.
SUMMARY
This method is used to test the
19486447		tests the SUBSET filter of the PreParser class by creating a new predicate being constructed based on a predicate version and asserting that the predicate is not null and has a non-zero holding flag.

This method tests the SUBSET
19486495		tests the NOTSUBSET1 predicate of a parser, asserting that the predicate is greater than 2 with or equal to 3 with or equal to 4 with an equal to clause if it specifies a flag to indicate the method call.

This
19486856		creates columns in a TableViewer object for the provided table viewer.

This method adds a SelectColumnColumn to the TableViewer object.

This method sets the columns and input for the TableViewer object.


19487147		validates and returns the validity of the input solver configuration, ensuring it is not null and does not contain an empty string.

This method is called when an invalid solving problem occurs. It validates that the input solver configuration does
19487177		checks if the result of the query is equal to one of three specific predefined arguments, and returns true if it does.

This method then returns true if there are more arguments, otherwise it returns false.
SUMMARY

19487220		tests predicates in the HL7 format and asserts that the results are equal to the ones in the specified rules.

This method tests KDOM functions in the HL7 format, asserting that the result is equal to true.

This
19487239		This method tests the conditions of specified rules with conditions that check if a given string matches a specific value.

This method tests the conditions of specified rules with conditions that check if a given string matches a specific value.
SUMMARY
19487358		tests the translation of function (FUNIMAGE) in a type environment representing different ways of changing the value of A to the value returned by the function. It then uses the testFUNIMAGE method to verify the correctness of the function after it
19487367		returns the boolean sort value if the Verify_tobitches variable is true, else it returns the default variant value.
This method is responsible for determining the ordering of a data file, which is used to track start and end indexes.
19487757		verifies the signature of a SMTPredicateSymbol by verifying its predicate signature and iterating over its arguments and arguments to verify their signatures.
SUMMARY
This method is used to verify that the predicate symbol is declared in
19487809		returns the SMT symbol of a given name. If the symbol name is empty, it returns the `fresh` SMT symbol, and if it's not stored in the cache, it stores it.

This method builds a `
19487936		overrides the `getCommand` method in the super class and updates the `request` object if it is not null. It gets the `Figure` from the view using the `getCommand` method and if it exists, it delegates
19488804		takes a SetExtension expression, transforms it into an SMTTerm, and checks if the expression is an EnumSetExtension.
This method checks if the expression is an SetExtension.
This method checks if the expression
19488825		adds a property descriptor for the Association Type of an object to an object.
This method adds a property descriptor for the Association Value (ID) to an object.
This method adds a property descriptor for the Association Structure (URI) to
19488877		This method adds a class type property descriptor to the list of property descriptors for the given object.

This method adds a class name property descriptor to the list of property descriptors for the given object.

This method adds a class
19488958		creates the contents of a resource file. It also creates resource data, locates the resources in the file, checks the existence of resource, and tracks the source's location.
This method takes a resource and a file path as parameters and
19488959		returns the root EClass for the given resource, if the resource represents the machine, the root class for the context, or the parent EClass for the root class based on the resource's file extension.
SUMMARY
This
19489947		sets the name of an event by concatenating the names of its model elements along with the names of its events.

This method formats the name of an event by adding a number to each name by adding a periods to each name.
19489954		creates and initializes four edges between nodes. It iterates over the nodes of the graph, including the edge connecting three nodes and removes those edges with already added common events. The edge is then created and added to the graph as an edge
19490043		validates whether a link action can be performed, given a starting state and a command object. If it can't be performed, it will throw a navigation exception. If the link action cannot be performed, it will return a diagnostic marklet with
19490063		validates that a transition has a source with an incomplete initial state and final state, returning a boolean indicating is not valid while adding diagnostic entries to the diagnostic chain if applicable.

This method validates the transition's target end and direction.
19490104		checks if a transition transitions in a single initial state are not from final within a specified range and returns a Boolean value. If the source is not from final, it checks if the target is restricted and if it is, it checks if the transition
19490210		validates if the name of a stemmerachine is valid and returns a boolean value indicating whether the name is valid.

This method validates if the statemachine object is referenced and returns a boolean value indicating whether the statemachine
19490525		validates if a state with a given name has a valid name.
It first checks whether any of the transitions associated with the state are accepted, if not, it returns false.
It then checks whether the transitions with given names are marked
19490630		validates that a state has a outgoing transitions. The initial transitions are starting from the incoming transitions until ensuring that the initial transitions are empty.

This method checks if a valid sequence is required for creating a new state identifier and returns a boolean
19490679		validates if an incoming stateMachine has an incoming transitions defined by a given stateMachine_id. If it does not, it adds an error to the diagnostics.

This method validates if the final stateMachine is valid and performs
19491576		This method adds a property descriptor for the source container of a state machine object.
This method adds a property descriptor for whether it is an instance of a state machine or an event.
This method adds a property descriptor for whether it is an
19491582		adds a property descriptor for the target container of the given object. If the item property descriptors are null, it calls the superclass's getPropertyDescriptors method, then adds target containers, transition transitions, and endpoints to the
19491720		adds a property descriptor for the translation type to the list of property descriptors for the given object.

This method adds a property descriptor for the style of the animation diagram to the list of property descriptors for the given object.

19491724		adds a property descriptor for the class name feature of the AnimationDiagram class.

This method returns a list of property descriptors for the given object.
SUMMARY
This method is used to add a property descriptor for
19491756		adds a property descriptor for the enabled feature of an AnimationTransition object to the item property descriptors list.

This method creates a new property descriptor for the enabled feature of an AnimationTransition object.
SUMMARY

19492056		updates the face properties of an object by getting the transition from the Model, getting the transition, updating the face based on the transition's action, and creating the fill image if a filling image exists.

This method handles mouse release events
19492886		This method returns a list of property descriptors to a given object.
This method adds a skip property descriptor to a given object.
This method returns a property descriptor for the skip feature of theskip node.
This method returns a list
19492920		adds a property descriptor for the abstract feature of the FlowDiagram.
This method returns a list of property descriptors for the given object.
SUMMARY
This method is used to obtain the list of property descriptors for
19492931		adds a property descriptor for the strong sequencing feature of a FlowDiagram object.

This method overrides the superclass to add a property descriptor for strength feature of a FlowDiagram object.
SUMMARY
This method
19492938		adds a property descriptor for the copy feature of the FlowDiagram.
This method returns a list of all the property descriptors associated with the object.
SUMMARY
This method is used to add a property descriptor for the
19493808		creates a model if it does not already exist and then returns the created resource.
SUMMARY
This method is used to load a resource representing a project named "f" in the UML editor.


19493847		is a test case that sets boolean values based on a card number. It first verifies that the card arguments are correct, and then checks if the card number (Card 1) is correct before and after setting the card number. Next, it
19493939		tests different data types of logical expressions involvingBR5, and throws appropriate exceptions if the conditions fail.

This method takes four parameters: a string, a string array, and a list of integers, and returns a boolean.

This
19494490		gets the selected root of the editor or editor event.

This method expands the selection when the workspace model is expanded.

This method collapses the selection when the workspace model is collapsed.

This method expands the selection when the workspace
19494744		returns the button box of the text editor.
This method initializes the text editor with an editable character set and sets its focus.
This method initializes the text editor with an editable character set and sets its focus.

19494899		contributes global actions to the action bars and performs a commit.
This method outlines the internal window to restore detached properties, restores cached properties, and sets global actions.
This method fills the global action bars.
SUMMARY

19495015		checks setting the priority of the editor page extension with optional debug logging. It retrieves the configuration element with the name "priority" and validates it using an integer validator. Finally, it attempts to read the value as an integer and returns
19495211		checks if a given expression is a simple regular expression. If the expression is a simple regular expression, it checks if its left operand is within the allowed range. If the expression is not a simple regular expression and the range of the regular expression
19495486		sends a selection changed event to all registered listeners.

This method iterates through list of selection changing event listeners and fires each one in reverse order.

Finally, the selection changed event is used to notify registered listeners of the change
19495499		This method checks if changes are in the project's closed state, and if so, checks if the project is closed, and if so, checks if an array of IOpenDelta changes contain corresponding boolean values. If so, it iterates over
19495757		notifies any listeners of changes to an element's state in the workbench if the element delta contains any.

This method updates the element model and notifies elements that have changed.
SUMMARY
This method is used to
19495941		updates a viewer by expanding or collapsing elements, displaying the expanded elements, and refreshing the input.

This method saves changes made to a file.

This method refreshes the viewer.
SUMMARY
This method is
19496012		adds a component name to the machine, prints a message to the console indicating the name's root, prints the machine/context name, and appends a hyperlink.

This method retrieves the root element and creates a virtual machine
19496550		sets the current OSC message status to the specified status.

This method executes a child proof with the given flag.

This method sets the current proof state.

This method validates the current proof level.

This
19496644		refreshes the proof state after refreshing the control if it is visible or either the currentProofState if it is not-null and either the proof state or nothing.

This method sets the proof state.

This method handles the
19496729		instantiates an interpretation where the result contains the provided parameters. It checks for convergence by comparing the number of arguments provided and steps within the arguments. If a convergence is found, it updates the variable's value and type based on arguments stored in
19496744		applies proof statements to a command, specifying whether it is a goal, a predicate, or a proof. It first retrieves the proof script and delegates any problems encountered while parsing and processing the input. If the command is not executed by the
19497396		updates the project selection based on the event source and fires an event if necessary.
This method listens on the "OK" button to the saveproject button.
SUMMARY
This method is used to disable the project name field
19497525		tests if the SC context is set correctly, given a ctx root and true flags set as true.
This method suppresses warnings, checks for the presence of a configuration attribute, creates an eventb CORE_INTROD file,
19497530		tests the version when the runtime is verified, ensuring it contains the correct number of modifications and attributes, with no default values for specific attributes in the context of the machine.

This method fails the test with an error message.

This
19497542		sets the selected project and expands it to and select it.
This method expands any previously selected project nodes in the tree viewer.
SUMMARY
This method is used to expand the tree viewer by expanding a specified project and deselect
19497680		is a test that adds hypotheses to an initial set, then switches an element I-value in the set to the element I-value in the set, and then calls the other testDelta_01 method.
This method tests the delta execution
19497685		initializes the context by creating a context, adding axioms, and saving theRodin file. It then checks if a predicate signature has statements. Additionally, if a variable declaration is a root, and more.
This method, test
19497711		tests the delta clause by checking if the delta was created and if the predicate set is modified before being added, removed, or the predicate set is immutable. If the del operation is successful and the del operation takes 3 steps to ensure the changes were
19497741		tests the delta feature of the Machine, initializing it, creating an initial state Machine (MAC) and initial attribute Machine instances, adding invariants, delta checking, and handling changes made to the machine.

This method tests the modification of
19497745		This method verifies that a specific RDF test works with specific RDF statements. It uses "prj2(r(a ↦ b))" and "prj2(a ↦ bPred(r(a ↦
19497899		tests the ability to commit broken proof attempts to the proof context, including ensuring a failure, recovery, and error. It manages potential transactions based on proof failures, attempts due to invalid updates, and commits and asserts statements properly.

This method
19497900		This method asserts that the current node in the loadPO tree is not null and then retrieves the goal predicate.
SUMMARY
This method is used to verify the behavior of a proof tree (loadPO) when the current node
19497924		tests the second child of a Recoder object representing a punctuation.
This method tests the second child of a Recoder object representing a common probability.
This method tests the second child of a Recoder object representing a float.
This
19497931		tests the second and third child of a proof with four different tactic outcomes (P1 and P2) in a proof document. 

This method verifies that the behavior of a proof is correct, throwing an exception with an error message
19497940		performs a series of tests on the functionality of the CommonTacac.tac() function, by setting various values, evaluating specific cases, setting some values, and asserting expected outcomes.

This method compares one point from the specified
19497955		This method tests the ability to create the difference operation for two different owners.
It checks if the operation being performed is not null, and if so, it creates them and checks if the difference operation can be used for two-profile a.
19497971		tests that the first proof attempt created by this proof attempt is not the same as the second.
This method creates two proof attempts, each with a different placeholder and an `NonStrictlyUncheckedException` for testing exceptions.
This
19497992		tests the change value of poLoaded by manipulating an original andcil PO.
This method adds two poLoades.
This method adds two temp poLoades.
This method adds one poLoaded to a poRoot.

19497998		tests two concrete machines by creating two machines with the same name, saving changes, and then reading them back into the model.
This method tests the behavior of two concrete machines by creating two machines with the same name, saving changes, and then
19498003		tests multiple configurations by creating two machine instances and multiple project instances, adding machines with different configurations, and checking the machines. It also ensures that a configuration assignment is correctly set and its machine registers and default conditions are met.
SUMMARY
19498015		tests if the scheduling rule is not contained in the specified scheduling rules.

This method tests the scheduling rule by checking if it is contained in the specified scheduling rules.

This method tests the scheduling rule by checking if it is contained in
19498207		tests a variant, excluding events, which are used in initialization.
This method performs in strict nature, ensuring the correct events are fired.
This method checks a variant, asserting that there were no exceptions.
This method checks a variant,
19498211		tests that one carrier set is one carrier that is not set again. It verifies that two carrier sets are marked as throw, but only on those sets.

This method, testCarrierSets, tests that one carrier set is
19498213		tests the case where two carrier sets are located by calling an overridden method and the tests its ability to set the name of the second carrier set.

This method checks if the carrier sets can be modified by adding the two carrier sets to
19498215		tests the capability of a builder that creates a Rodin context without an indication of its kind of context.
It adds axioms to the context and checks if the context meets certain constraints.
 If not, it calls the `testAcc
19498216		tests the faultyName of a carrier and asserts that the type is void and is not unknown.
This method tests the faultyName of a carrier Set and asserts that the type is Void or ILE, when one is entered, and
19498217		This method adds two machine contexts to a Rodin test, saves the factory, creates contexts, and then calls the runTest method.
This method calls the testSeesContext_01 method.
SUMMARY
This method is
19498218		builds a program using createMachine(), and then creates two RodinModules, one with the same name and one with "epsilon." The testVariant method verifies that the variant of the first RodinFile object is the
19498222		tests whether a context-specific set of a MachineRoot object sets its name, number, and adds it to a context.

This method tests the SEES clause of an EC context by creating a context with a context root and checking its
19498227		tests the use of predicates by creating a new element and asserting that the name of the new element is empty.

This method tests the use of not to add, the name of unsupported elements, and the type of names of the pred
19498229		sets up the test environment by creating contexts, actions, and ICodeGeneratorTest objects, and performing actions. It then creates references between actions in the symbolic machine, verifies contextual interactions, and adds contexts to the action set.
S
19498237		tests the creation of a new element, adds new predicates to it, runs the builder, and verifies that the original predicate is present in the returned predicate.

This method tests the creation of a new element, adds new predicates
19498246		creates a new element "elt" with a fresh identity constraint. It adds predicates to the element "elt" and checks if it contains predicates with the specific element "elt".

This method throws an XMLDBException and fails
19498248		tests the consistency of the execution of a variable axiom by testing it and verifying result.

This test method tests the accuracy of a static method called "testAcc_" by creating different contexts and renaming a non-static variable as
19498258		tests the accuracy of Acc with elements in a machine. It creates a machine root, adds initialisation, invariants, and invariants, and then executes its builds. It then creates an ECore, runs its builder and compares its result to
19498265		tests the accuracy of a builder by adding an internal machine, including two events, of different types and states, and verifying the accuracy of the machine's components.

This method tests the "ecliptic" instruction. It creates two
19498280		contains certain declarations and ensures the correct syntax parser for the beginning of a dot+comment has been parsed by subsequent parse tasks. Additionally, it validates the closing delimited file by checking for all lines in the file's content.


19498283		creates a generic element with specific name and predicates and adds them to the element, then checks if there are any statements with the predicate "T1", which needs to be compared to triple, have to be a predicate, and have two
19498290		tests a load/clear graph construction, creating an element, adding predicates, saving the element, running the builder, and asserting the graph consistency.
-This method tests cloning and adding predicates to a triple pattern, saving the modified element
19498298		tests if the occurrence of a specific constant is set to "thm" (an anonymous variable).

This method tests if the occurrence of a specific reference is set to "occ4".

This method tests that the occurrence of a
19498301		tests the accuracy of various attributes in a state machine. 

This method creates a machine and checks its accuracy in another state machine.

This method creates an event with two attributes, a separator and an offset, and then ver
19498308		tests the accuracy of the "Test" machine with several CNCs.

This method creates a RodinCore object and tests it.

This method validates the structure of the "Test" machine.

This method valid
19498364		tests the extending context functionality, initializing and validating contexts for the carrier set and context set, and checking that the set contains the carrier sets. It also verifies the population, number of open and created contexts, and the context. Finally
19498369		tests that two carrier sets may be the same in both contexts in a Rodin project.

This method tests that calling a sub-process and one carrier sets "S1" and "S2".

This method tests that calling
19498376		tests the delta context with null context root. It creates two contexts and one controlled by name, sets the first controlled context to the controlled second context in the third controlled context, calls the delta context method, and asserts that the second controlled context has
19498381		creates a machine, initializes a machine root, and then applies macros and assertions to simulate delta and consistency. 

This method creates an OK task that demonstrates the creation of the delta machine. 

This method creates an OK
19498386		tests the extended context of different contexts. It creates a context super context and tests whether certain contexts are extended correctly. It then calls the super method and checks that the exception is wrapped in a TransactionAbortedException.

This method tests if
19498391		creates contexts for various types of contexts, including "cab" and "cco", and checks for redundant context in the "cab" context.

This method tests the extending context rules within another context. It demonstrates the semantic
19498396		tests if the `cvg_01_NoVariantConvergentSetToOrdinary` machine is correctly marked.

This method checks if setting `fvt` to `IEvent` to ordinary and checking if the reference
19498397		This method creates an extension context and checks if it was saved correctly based on the context's abstract context returned without saving the element. If the context is null, it checks if extended contexts have been updated. It also checks if containers have been updated
19498434		tests the problems by initializing a map of `IRodinProblem` samples with their messages and asserting that the number of specifications from the sample matches the expected value.

This method tests the consistency of the `Sdcs` class
19498735		registers an undo/redo action, disposes of its registered history action handler, sets its global action handler, disposes of it, and hides it.

This method updates the actions for the editor's history actions, as well as
19498753		tests the creation of a guard with an empty label in an event machine. It adds an event to the root machine and verifies that there is no notification, empty label, and an EmptyLabelError is detected. It then adds the signal to
19498784		tests if an audit event results in an empty label and returns the expected action.

This method tests creation action with empty label, null value, and null value.

This method tests the creation of an action without an empty label and
19498806		tests the creation of empty program, creates a program with empty labels, and verifies that a root machine has no known label. It then removes the root monitor and verifies that there are no subdomains in the root monitor. It marks
19498827		notifies all registered selection changed listeners who have registered as a selection changed event.

This method updates the selection of the tree viewer by firing a selection changed event to the listeners associated with the selection.

This method notifies registered listeners
19498999		finds the index of the interval in a list, starting from a specific offset.

This method compares the elements of the intervals list to the given offset, returning 0 if they are equal, or 1 if the offset is in the list
19499205		adds an event to a parent element with a specified label.

This method adds an event to a parent element with a specified label in the ORDINARY representation.
SUMMARY
This method is used to add an
19499260		tests if an image axiom of type IMG, IMG_THEOREM, is correctly drawn when it is rotated.

This method tests if an image axiom of type RtfDocument.

This method tests if an
19499267		creates an image by assigning it an event and then checking if its `theorem` property is accessed against a defined invariant test, which includes various image type conversions.

This method tests the `testImageGuard()` method of
19499272		tests the image invariant by setting theorem to true and asserting that the image descriptor description has the expected string value.

This method tests the image invariant by creating an invariant and asserting that the image description is a theory invariant
19499402		tests the getFreeIndexLabelGuardExtended method by creating a constraint, adding a guard to it, calling the getFreeIndexLabelGuardExtended method with the constraint and guard label prefix, and asserting that the returned value is correct.

19499406		tests the "getFreeIndexLabelAbs" method by creating several events and modifying the "Guard" attribute of a concrete event.
SUMMARY
This method is used to test the "getFreeIndex" and "getFreeIndex
19499454		This method executes the creation of a context associated with a specified internal event with the given bare name, by first retrieving the context file name and then calling the createContext method to create the context. It then setting various configuration attributes, including the basic
19499460		creates a new machine with the given bare name.

This method checks if the given path represents an abstract machine and if not, throws an exception.

This method tests if a specified Rodin project can contains a managed file and
19499629		asserts that a set of proof obligations contains all proof strings marked as dead.
This method asserts that only one proof can proof by visiting and checking if their keep proofs include them.
SUMMARY
This method is used to
19499804		instantiates a predicate instantiated from an array of expressions, an expression array, and a formula factory. It processes a predicate and validates its state. It determines the tag of the predicate and then creates a hash table and adds it to
19500563		checks if a given section of the code has a terminating (UL) character, ignoring the ':' if it is a start section. If the section contains a single asterisk, it checks if the current line matches a given range of asterisks
19500577		upgrades a predicate by parsing an input string, comparing it to predicates, and then performing an upgrade of the resulting predicate. If the upgrade has no problem, it fails the test and returns without setting up. 

This method valid
19500994		verifies that all subexpressions of the expression have the same type with a real value, and that all values in the expression have the same type.

This method overrides the superclass's method to dynamically generate Java methods from the
19501344		retrieves the progress direction to represent the child.

This method checks if the given operator relationship is compatible with the given position.

This method matches the given expression against a range.

This method checks if the given operator
19502508		creates an executable file for the specified file system path. If the file does not exist, the executable file is created. Otherwise, a standard executable is created.

This method overrides the run method of the run method to set the
19502894		splits the identifiers of compound names if it has more than 0 characters, or the new name string has more than 0 comments.
SUMMARY
This method is used to create an array of BoundIdentDecl instances if there are more
19503298		accepts a relational predicate, an Expression object, and a constant boolean value to determine equality of the expression.

This method accepts an Expression object, a constant boolean value for equality, and an Expression object for equality, but only if the
19503813		is used to verify that the normal replay after applying a reasoner application matches a proof rule. It first creates a proof rule, then creates a proof input, and checks if the proof rule matches the expected rule. If the proof rule does not
19504473		asserts the node pending by checking its child nodes, pruning rules, and parentheses, and asserting that the node structure before and after pruning starts or ends.

This method then fires a proof tree node event based on the node's
19504481		runs a single open proof tree node test on the two different open children nodes, checking both and removing closed children until they reach the top level of the tree.

SUMMARY
This method is used to verify that all open children
19504632		translates the widget by calling the `translate` method on the `symbols` array, sets the maximum size of the `codeTable}'s array to 0, and if the input `widget` is an instance of
19504722		establishes a test for the ProverIterateur class by repeatedly calling the prove method of the inner class, passing in the results, then calling the main method of the ProverIterateur class, passing in the maximum number of steps.
19504805		returns the next clause in the list that is the maximum depth of any Clause in ancestor.
SUMMARY
This method is used to find the next clause in the list that is the maximum depth of any Clause in ancestor.


19505094		returns the y-coordinate of the object in the world units (L).
This method returns the height of the object in the world units (R).
This method sets the height of the object in the world units to the sum
19505220		initiates the main loop of the ClauseDispatcher and runs iterations between those iteratively until the terminated flag is set and the number of iterations is greater than n is no longer terminating.

This method is the main loop iteratively
19505269		compares two lists of simple terms and returns true if they are equal. 
The method checks if the list of simple terms has different variables and returns true if they do. 
This method checks if the list of simple terms has different
19505382		creates and returns a clause for equality between two clauses.

This method handles the creation of a clause, which contains the clause's name, facts and terms.

This method handles the creation of a clause, which contains the clause
19505695		retrieves the Rodin DB status of the current object.
This method checks if the underlying database is valid and is dirty. If the underlying database is not dirty, it returns an empty status object. If the underlying database is dirty,
19505801		verifies that the elementsToProcess array is null or empty arrays and returns a Status object with a status of OK if the verify was successful, otherwise it returns a Status object with a status of READY_TO_PROCESS.

19505812		copies resources to a destination path. It creates a destination path for the destination, copies resources, and saves the resource to the source path. It sets the modified flag, clears the dirty attribute to true, and processes the affected resources. If
19505815		takes an IResource object as input and returns a RodinProject object, which is used for project creation or removal.
SUMMARY
This method is used to obtain a RodinProject object from a resource.


19505839		creates a new folder within the specified parent folder in the Rodin file. If the folder already exists, it is overwritten. Otherwise, it's newly created.

This method checks whether the specified name already exists before attempting to create
19505866		takes an element and retrieves its original name for use in an internal element's destination destination. It creates a new destination element with a new name and adds it to the first parent of the destination with the new name, then creates a new
19505886		pops openable resources from a queue, decodes them, and iterates through each resource, adding an OpenableElementInfo for the resource's information to the data structure.

This method retrieves resource information from a queue, including
19505948		creates an instance of an element with the given type and parent for the given IRodinElement.

This method creates an IElement object with the given type and parent for the given IRodinElement using constructor.

This
19506140		searches for a DOM text element among its descendants by iterating over its content and surrounding text.

This method searches for a DOM text element with a specified ID from their DOM nodes, trimming any leading or trailing white spaces.
19506146		finds a delta for an element in the Rodin workspace by comparing it to the parent element of the element or just searching for an element that does not share the same parent. If a delta is found, it returns the delta; if no
19506155		removes all children of an IRodinElement from the RodinModel. It is a Collection of IRodinElements. The method first removes the specified IRodinElement from the Rodin model and lists the parent elements and the
19506256		verifies if an IElement is valid and if a destination parent. If neither is valid, it throws an exception.

This method verifies the existence of an IElement directly and returns false if it exists.

This method ver
19506388		retrieves an internal element that is one of the specified types in the workspace.
This method returns the DOM representation of this element.
SUMMARY
This method is used to cacheDOM elements if they exist under the workspace,
19506422		checks if a space is available and free up space before flushing or closing the block. 
This method adds a new link to the linked list if it does not already exist. 
This method removes a link from the linked list if
19506457		adds an entry to a cache, shuffling the entry if necessary, and tracks priority to speed up pushing.

This method sets the cache entry for the LRU cache if it doesn't already exist.

This method checks if
19506506		puts a key-value pair into the map, or adds an empty value if the specified value is null.

This method adds an entry to the cache. If the key does not exist, it loads it from a physical file and
19506638		prepares deltas for a source element by checking if it has moved from its destination element to a source element, if the destination element is a Rodin project, and if it is a move.
SUMMARY
This method
19506836		tests the validity of a string prefix with an optional string suffix. It tests various expressions involving parentheses and equality operators. In cases where the operation is not allowed, and the exception was not being thrown. This method also includes assertions to check for invalid
19506904		tests the copying of integer from a snapshot file to the same file. It simulates a checkpoint by creating one path, adding two elements to it, and verifying that the snapshot has no parent and integer values.

This method tests the copying
19506912		tests the creation of a duplicate element in an IRodinDB root. It first creates a single instance of the root, then creates a duplicate element that has a specific name, and finally confirms that the root has been made unchanged. Finally,
19506915		creates two named elements without properties, copies one of them and asserts that the NEPs of the copied elements match the parent reference.

This method copies a NamedElement with no properties to the Rodin file it must ensure the reference
19506951		tests the creation, copying, and reconnecting an element within it.
This method tests the creation of a monitor with specific attributes, including information about the monitor, its child factory, in state, delegate, and parents.
This method tests
19506996		tests the functionality of a proof where an individual nodes are similar from the root of an individual to its other individual. It verifies that the root of the proof and actual proof nodes are equal. It also verifies the relationship between the root and
19507007		This method executes a test case for setting and matching integer values.
This method asserts that the similar element of the r1 element of r2 is equal to the relation of the r1 element of r2.
This method executes a test
19507018		is a test that asserts that the next sibling of a named element is checked to ensure it is not an expected exception. It also asserts that an IllegalStateException is thrown when attempting to access a non-existent element and expects it to throw.
19507022		tests the runnable resource delta of an IResourceChangeListener by invoking it outside of a checking lock.

This method tests the runnable resource delta of an IResourceChangeListener that adds, removes, and then closes a project
19507028		tests the exception thrown by the CoreExceptionThrower by creating an instance, running it, and checking that the exception's status is the same as the one being thrown.

This method runs the TestParseCallsHook class,
19507064		tests creating new children of a root element with a null element and its correct implementation.

This method tests calling the createNewNEPositive method to create a new named element where the call is ignored.
SUMMARY

19507068		tests the ability to copy a top-level element with an invalid position and demonstrates how it does not copy it and uses IProblem objects with the type NullPointerExceptions.

This method creates a Rodin file with a single Rod
19507083		tests that an exception is thrown if copyTopWithInvalidRenamings is true.

This method tests that an exception is thrown when copyTopWithInvalidRename is called.

This method tests that an exception is thrown if copy
19507110		tests if the mutable object can have a snapshotable property.
This method tests whether the mutable object has a mutable copy property.
This method tests whether the mutable object has a snapshotable property.
This method tests whether
19507132		creates two named elements, sets two properties on them, and tests the contents of the newly created named element.
This method tests the IntSnapshotExists method of the RodinFile class.
This method tests the IntSnapshot
19507138		creates an IRodinFile instance and calls the testMoveIntNoop() method on it, passing necessary arguments: an IRodinFile instance and a Project instance. At this point, the method calls the assertEquals() method
19507139		tests the functionality of the testIntSnapshotParent method in the BidiRoot class by accessing Rodin files. It calculates the ranges of indices and checks if the parent sets of the first indices correctly.
SUMMARY
This method
19507158		This method tries to copy a rmver object using a null container and expects an IllegalArgumentException to be thrown, which is caught if any of the method returns any illegal argument exception and returned if the method throws the same exception as the first
19507187		tests the movement of two parent elements between two internal models: one from a source element and one from a target element, using different parameters to set the variables and elements for moving one or two elements.

This method tests moving the positions of
19507196		tests renaming an existing element and verifies the successful renaming of an element.

This method calls `test_01_RenameElement()` to rename an element.

This method calls `test_01_Rename
19507209		receives a string as a parameter and checks if the string is not equal to "12", "23", or "30" and if it is. If they are not equal, it adds the string to the attribute store.


19507222		tests the ability to move an element from a snapshot, triggering specific access tests for the element and its properties.

This method tests the moveIntFromSnapshot method by creating a Rodin file containing two items, moving an element to a
19507227		adds a new attribute to an internal project using an internal element.
This method adds an attribute to an internal project using an internal element.
This method adds an attribute to an internal project using an internal element.
SUMMARY
19507233		tests moving an element to a snapshot and then moving it both from a non-absolute position to a non-absolute position.
SUMMARY
This method is used to move an element to a snapshot.


19507303		tests the invalid manifest version of file a package named ".P" by setting the manifest file to "not a version".
SUMMARY
This method is used to test an invalid version of file a Java project by trying to set the
19507327		tests renaming a Rodin file to a new state, recursively calling itself on it and verifying that the renaming was successful.

This method tests renaming a Rodin file to a new context, and verifies that the
19507336		tests that the expected conversion of file elements with empty sizes and different element type ID to small files does not change their positions and file names.

This method tests that a test method overrides the method and uses two converted file elements to create
19507357		tests the deletion of Rodin files located in the P6 folder. It first creates a RodinFile with a specified source file name and checks that the file has not been found in the Rodin folder. It then deletes the file,
19507365		tests moving the top entry of an element up by an illegal position exception.
This method tests moving the top entry of an element right by an invalid position exception.
This method tests moving the top entry of an element on next branch by an
19507382		tests a single relationship between multiple file element versions to the metadata element. It creates a configuration element, adds a connector version attribute, and validates the element. It then retrieves the concrete object and attribute, checks if it exists, can be
19507390		takes an IRodinElement, an IRodinElement, an array of IRodinElements, an IRodinElementContainer, an IRodinElement, an array of single IRodinElements, and an boolean
19507414		tests the "move" method of the IRodinFile class by providing null container input and asserting that an IllegalArgumentException is thrown.

This method tests the "delete" method of the IRodinFile class, which is
19507421		tests renaming an internal element in anRodin file with an int value. This test verifies that the renaming of a negative Integer element in a Rodin file changes correctly. This test verifies renaming an infinite inner element at an
19507431		This method renames an element with a specified type name name as either a single element, a single element of type, or a negative zero duration value, with a failure code. It handles exceptions using RodinDBException and throws a Rodin
19507433		tests renaming an element via the renamePositive method of the RodinFile class. It first creates a Rodin file in the "P/X.test" resource, saves it to the same location in the "P/X.
19507436		searches for elements referenced by a given element and returns their direct delta.

It first obtains a collection of delta for the given element, returning null if the element is not found.

Otherwise, it loops through the collection
19507443		creates a Rodin file, then attempts to rename an element, that should fail.
It then tries to rename it and that the error is correct.
The testRenameIntNoop method is called before the renaming of the
19507453		tests renaming an element in the two snapshots of Rodin by renaming it, verifying that the rename operation returns the expected value.
SUMMARY
This method is used to rename an element in the two snapshots of Rodin.
19507471		tests renaming an element in the Rodin file by adding two nodes and then renaming the second element to that new name.

This method takes a Rodin file and a boolean value, and creates Rodin file objects. It then
19507526		creates three virtual and binary resources, tests their reorder properties, and then reorders the resources in a virtual.

This method tests the reorder method of theSnapshotStrategy class.
SUMMARY
This method
19507684		tests the import of a project without deleting a project when importing a project without deleting a project.
This method is for testing the import of a project reading and verifying its status as "RUN" when importing a project without reading, and "
19507723		tests the creation of a many-to-one relationship between two contexts by creating different contexts and adding nodes to each context, then cleans up the relationships between the contexts and one of the contexts.

This method tests the creation of a one
19507725		tests the creation of two files of type `OneOne` by creating both models and adding a second model and one second to a file.

This method creates two individuals with many properties and 100 elements of type `OneThree` and asserts
19507735		This method creates a model first, then creates a cycle and tries to create it without a data node. It then notifies an ECLI to create the cycle and then creates an ECI and the extracted data. It then creates one of several
19507740		tests the database problem by creating Rodin files, saving them to data, and deleting them.
This method creates Rodin files, loads it, creates data and dependencies, then saves data to B.csc and saves dependents of B
19507784		tests the addition and functionality of two Rodin projects and asserts that the result is the same as the size of the project database.

This method tests the addition of two Rodin projects and asserts that the final result is the same as the
19507794		tests the clean functionality of the RodinRoot class by creating three objects, saving them to a file, saving one to another and cleaning out the file.
SUMMARY
This method is used to clean up caches after generating objects from
19507797		tests if the root element of a prj element is the same as the prj element.
SUMMARY
This method is used to test whether the root element of a prj element is the same as the root element.


19507802		This method tests the `testGetRoot` method by reading a file and verifying that the root of the file has what was expected.
This method tests the `testGetRoot` method by asserting that the root of the `RootElog
19507814		tests the moveFromRoot method by attempting to move a source source element to its parent element and verifying the resulting element's position in both the source and destination child elements.

This method attempts to move a source element to its parent element and
19507818		moves the source file to its root location and asserts that the move is successful.

This method moves the destination file to its root location and asserts that the move is successful.
SUMMARY
This method is used to move
19507861		tests removing and adding various types of Rodin files to a Java project, then asserts that a delta as expected, which is not affected by the removal or addition.

This method tests adding and deleting four resources (A and B, A
19508002		tests removing and adding a non-rodin resource to and from the project. It creates a non-Rodin project, file open, and a file write. Additionally, it clears the Rodin project's children before creating and deleting the file
19508387		tests whether the marker for an XML element is non-existent.
This method imports X.test data into an Rodin file store using importing X.test and asserts that the marker is not null.
This method creates instances of I
19508652		This method creates an Rodin TestModel with a null marker attribute.
This method creates a marker of RodinTestRoot and sets the marker position one.
SUMMARY
This method is used to create a marker of Rodin
19509177		returns the proof tree node that is the next reviewed subgoal as the current node.

This method uses a tree model to insert the next proof tree into a pre-state.

This method checks if the given node has a
19509298		checks if the concreteEventInfo is a new event or if the typeEnvironment variable is null and if so, it returns. It then iterates through the abstractEventInfo and checks if the concreteEventInfo's abstractEventInfos list contains the
19509681		This method tests the associative expressions of given simple operators by running multiple operations on a string array, which can lead to different types like logical operators like AND, OR, and inequality operators.
SUMMARY
This method is used to
19509682		This method tests a strict extension, checks if it returns the correct extensions of the predicate. If the extension is not correctly registered, it is simulated using various types of expressions. Additionally, it asserts that the result is true for the predicate that uses
19509688		tests the associative predicate by performing a series of predicates on different inputs and expected outputs with different data types, including double and integer operands.

This method tests the associative predicate methods and ensures that it correctly responds to the correct
19509761		tests the quantified expression. It first invokes the testQuantifiedExpression on the given C++ code block and asserts that it returns the expected results. It then visits various exceptions and asserts that they are caught and caught in specific ways.
19509769		This method tests the quantified predicate by creating a BoundIdentDecl array of BoundIdentDecl objects and checking if the query returns the expected quantified predicate objects using the quantifier predicate.
SUMMARY
This method is used to test
19509788		tests the other generic expressions including rels for type rS and at atomic predicates.

This method asserts that two generic types in different atomic predicates return different type than same atomic type.

This method asserts that two atomic oper
19509811		tests the creation and manipulation of multiple predicates within a SequentialEnvironmentFactory.
This method tests the creation of multiple predicates with various restrictions through assertions.
This method creates a SequentialEnvironmentFactory and constructs a SequentialEnvironment for iter
19509813		tests the serialization of a Formula object by serializing it with predicates and a FixedFormula.

This method tests the serialization of a SimpleLogic.LogicFormula object after deserialization.

This method
19509910		tests specialization of a quantifiers by resetting modifiers and checking them by setting a free identifier for different values and asserting that the type of the left-hand side to subtract quantified identifiers is the right-hand side.

This method
19509922		tests the specialization of a specialised variable in all cases, it creates a type environment with two predicates, one of type "a" which declares and two instances of "S" which represents the "S" instance. The methods verify that
19509928		tests the quantifiers of a function in a givenEnvironment.
This method tests the regular expression inside of a type predicate.
This method tests the regular expression inside a type environment.
This method tests the regular expression inside a type environment.
19509939		tests the null flag of a unary predicate.

This method changes the typeless and unary hypotheses to "1", is equal to "1", and with the logical AND operator right.

This method changes the typeless and
19509944		tests associative predicates in various expressions. It creates default predicates, sets up test data, and then executes the test case.
This method tests associative predicates' basic and atomic predicate. It performs the unary predicate on the
19509951		performs a test with a tuple predicate and asserts that the result of the predicate is correct. It then sets an assertion predicate, expects a specific tuple predicate, adds the tuple predicate to a specialized list, and asserts that the results are correct
19510001		performs a test on a binary expressions with left and right right operations and asserts the correctness of their simple expressions.
SUMMARY
This method is used to assert the correctness of binary expressions with right right operators.


19510012		tests various binary expressions and verifies their multiplicities using various combinations and assertions.

SUMMARY
This method is used to test binary expressions both of a type environment with different attribute combinations, specifically two of which they should be
19510020		tests for a specialization clause where the left operand is the root operator. It creates a binary predicate and asserts that it is a binary predicate with a special operator and its left operand is the left operand with a defined right operand
19510028		tests the right and specialization of a binary predicate by checking the correctness of its left and right multiplicities and their operations.

This method tests the right-hand side of a binary predicate, including an addition operator.

This
19510052		performs a test that checks the specialization of boolean expressions in the type environment within the environment of S, subtype, and other predicates.

This method sets various type context options for the variable.

This method verifies
19510155		tests the ExtendedPredicate by creating a Predicate, calling its "makeExtendedPredicate" method, and asserting that the trace of the predicate's trace is "0", p1, pB, pC, pD, p
19510161		calls the testQuantifiedPredicateSpecialization method.

This method is used to assert that a specific predicate ("x") is a special predicates clause with predicates "x">" and "x<>y" using the
19510166		tests the extended expressions functionality by creating an abstract fact with predicates, proof nodes in a specific context, and then checking the output of the simplified expression with these functions.

This method connects two facts using an abstract fact and a proof factor
19510179		tests the specialization of relational predicates like both complex and relational predicates, and asserts the assertions whether the resulting predicates match the expected results.

This method adds predicates to the test's basic constraints, effectively performing the operation,
19510259		tests the type calculations for power and product types, specifically power sets to product types, specifically product types other types.

This method tests the type correctness of power sets by using square brackets or brackets to ensure proper type inference.
SUM
19510270		tests specializes a product type in right-right form. It sets a product type as left-right and asserts that it returns the correct product type. It also asserts that a type left-right specification is left-right with a specialization
19510307		tests the bindings of a predicate to a bound identifier declaration. It first finds a predicate and asserts that the bound identifier declaration contains the predicates defined in the predicate. It then finds a predicate with a bound identifier declaration, asserts that the expression contains
19510374		tests theleans the primitiveival of unprimed identifiers and ensures that the primitive and unprimed values are all primitive, with only the prime number of primitives, from unprimed identifiers.
SUMMARY
This method is
19511016		tests if an update of an action fails when a method reference is set to be accessible, sets `get` to `new JUnitActions` with the given parameters, calls `testAction`, asserts that the testAction method returns true,
19511233		returns the type expression of the given event element, or null if the element type is not recognized.
This method accepts an environment containing information about the environment, as well as a machine name, name, and type of the event.

19511287		creates the contents of the group using a layout with two columns and sets the layout data to fill both horizontally and vertically.

This method creates a label for the projects and sets it as the layout data for the label. It then calls
19511321		creates the image container if it does not exist, and sets it as a composite for the container.

This method creates the SWT interface for the container, which contains the labels defined in the method.

This method creates the
19511325		creates a list viewer with a composite parent, sets the layout data, sets the composite for the parent, sets the editor for the parent, adds a resizable flag to it, and sets the input for the parent.
SUMM
19512267		takes an `EMFObject` as input and executes various operations defined within it based on the source of the event. It includes creating a `Expression` object and declaring a `Visitable` object to control visitability. It also
19513043		builds a context menu for the Open With menu, adding open and/or add modules to the context menu based on the currently selected element in the site's structured viewer. It creates menu groups for the Open With and adds menu items for commands
19513395		takes in two Formula objects and checks if a variable pattern matches each. If a pattern matches, a binding is created and returned. If not, null is returned. If the original binding is not null and the potential pair cannot be matched
19514510		adds a property descriptor for the "order" feature of the "BPackage" class to the list of property descriptors for the specified object.

This method returns a list of the item property descriptors for the specified object.

19514525		adds an implicit property descriptor to the list of property descriptors for the given object.

This method overrides the superclass's method to return a list of property descriptors for the given item.

This method adds an implicit
19515941		adds a new property descriptor for the inv_detPinDet property of the DET class.

This method then adds a new property descriptor for the inv_detDeflateDet property of the DET class.

This method then adds
19515965		adds a property descriptor for the is_inv_actout feature of the outgoing object.

This method adds a property descriptor for the inv_actout property of the outgoing object.
SUMMARY
This method is used
19515977		adds a property descriptor for the inv_det_cond feature of an object.

This method adds a property descriptor for the inv_det_cond feature of an object.
SUMMARY
This method is used to add
19515982		adds a property descriptor for the invoice condition of the current object.

This method overrides the superclass's method to get the property descriptors for the current object and adds invariant and act cond properties to the list.
S
19516021		adds an Inv_det_conf property descriptor to the list of property descriptors for the passed object.

This method checks if the itemPropertyDescriptors is null, and if so, it calls the superclass's method to
19516023		adds a new property descriptor for the "all_health" property to an object. It first checks if the property descriptors are null, and if so, calls the super method to get the property descriptors for the given object. Then
19516025		adds a property descriptor for "Not_Healthy" to the list of item property descriptors for an object. If the list is already created, it simply returns the existing list. Otherwise, it initializes the list with the necessary property
19516053		adds a property descriptor for the invocation of the act component to the item property descriptor list.
SUMMARY
This method is used to add a property descriptor for the invocation of the act component to the item property descriptor list.


19516064		adds an Inv_det_inp property descriptor to the list of property descriptors for the specified object.

This method initializes the list of property descriptors if it has not been initialized previously, and then calls the superclass
19516494		This method overrides the `getPropertyDescriptors` method and creates a new `super` list of `IItemPropertyDescriptor` if it is null. It then calls the `getPropertyDescriptors` method of the
19516765		adds a single attribute to an attribute list and to the instance list of the instance.
This method converts a string to a list of strings and checks if any of the strings start with "@" in the list.
This method converts a
19516769		returns a string representation of the object, with the string "TABLE:" and the string name "COLUMNS:" followed by the table definition, column headers, and values.
SUMMARY
This method is used to create a
19516896		inserts an item into a vector at a specified position, excluding any string children.

This method inserts an object into the object vector at a specified position, resetting the position, adjusting the size if necessary and updating the position if necessary
19516935		takes a predicate and returns a string representation of the current object that is passed to it.
This method translates the predicate value to Lisp format for the syntax of the syntax predicate.
This method creates a temporary variable for the Lisp by first
19517124		This method returns a list of property descriptors for the given object.
This method adds a "constants" property descriptor to the given object.
This method returns a list of property descriptors for the given object.
SUMM
19517139		adds a property descriptor for the parameters feature of an event state object.
This method adds a property descriptor for the name of an event state object.
This method adds a property descriptor for the parameters property of an event state object.

19517728		configures the debug options for the Java Logger by replacing the "log level" option with "DEFAULT", replacing the "number of errors" option with "ALL" and the "debug" option with "true", and updating the Message
19517755		updates folding structures by removing existing annotations and filling new positions with folding annotations. It then updates folding structures and verifies that folding structure has been updated correctly.
SUMMARY
This method is used to update folds in folding structures and
19517824		creates and adds multiple wizard pages to the wizard. It allows them to select which file to load, which it can be edited. It also obtains the active editor, creates a new page for the active editor, and adds it to the
19517902		This method tests whether an event has a user's guards that no events the environment is beingGUarded in.
This method tests whether an event has no user's guards that no events the environment is beingGUarded in.
This method tests
19518178		extracts proof components from an internal sequence. It throws exceptions if there are issues with the file or the node. It uses the PPTIO file, thePPT file, and the proof tree. It also looks up the IInternal
19518304		performs a heavy project by running a series of tests on different types of Rodin files. 
This method tests the project's methods and operations. It prints the test name, isBeingTested, and the elapsed time. It then
19518353		sets the overall one-time timeout preference for the preference store.
This method sets the overall one-time timeout preference for the preference store.
This method sets the overall one-time timeout preference for the preference store, sets the timeout to
19518359		retrieves a filter representation based on a provided filter name by either retrieving it from the existing filter representations map or creating a new one if it does not exist.
SUMMARY
This method is used to retrieve a filter representation based
19518363		returns an instance of a method that takes in a name and a default value.
This method returns a default class that will create the instance of a Prover object.
This method adds a default class to a type of component that will
19518453		extracts the first element from a list of nodes, removes the least recently used element, and then loops five while checking if the least recently used element is null, and if so, returns the least recently used element.
This method removes
19518455		recursively gathers the left and right children of a given node and its ancestors, and then swaps them with the next node in the subtree.

This method iterates through the ancestors of a node, and for each child of that
19518936		initializes the parameters map by adding events, their parameters, and their name values. 
This method calculates the parameters of a given collection of IEvents and adds them to the parameters map. 
This method adds all the methods of an
19518998		calculates a set of guards based on the events in a collection of IEvent objects. It stores the guards in a HashMap called guardMap, and processes the guards based on the event's guards.

This method calculates guard guards
19519045		calculates the actions associated with an event.

This method iterates through an event's actions and their listeners and adds them to a collection.

This method reads an XML file, building a file reader, retrieving the events from
19519643		builds a predicate from a set of possible conditions, a set of known functions, and a set of predicates. It handles cases where the fact is a Booleanrequisite, an implication, or a boolean using boolean constants. It also applies the
19519654		takes an IPred2 object and an IFactory object as input and processes a unification problem using an ISPhraseParser. It first creates a new IHypothesis object with the appropriate ZTerm object obtained from the factory, then un
19519660		checks if the fact is prime and resets predicted predicates. It then checks the fact's type to determine if it can prove a predicate and if that cannot, it assigns predicates to variables r1 and r2. It then creates a
19519710		is used to normalize the IPred2 object to a matrix that is a subset of the set specified by H.


19519714		takes three parameters: 2 Integer, and initializes, and 3 BoundedVariables. It then iterates through variables, incrementing a counter and calling assignTo(IExposuresBound, iPredicate, p.b).
19519727		normalizes a list of expressions by moving an operator to the top of a list of expressions.
This method normalizes the binary representation.
This method normalizes the arithmetic expression, and normalizes its negation.
This method normalizes
19519824		simplifies simplification of a set of predicates with different flags like removal, addition, or equality. It checks if the actual predicate is negated or greater than the expected one, indicating equality or inequality. If so, it simplifies
19519833		normalizes a list of simple lists by applying a fact and normalizing each list using substitutions to replace variables. It then unlocks the variables and adds them to the list of variables and the current list of fixed lists.

This method normal
19519980		checks if a Type derived from the Boolean, Boolean, or ProductType is recursively of the boolean types it returns.
This method checks if a Type derived from the Boolean to a FormulaFactory is correct relative to a BooleanType.

19520701		initializes the ODEEnvironment and sets an initial state, ensuring it is in the empty state, and iterates through an IEvent element to enumerate and refresh the environment.

This method creates a section for setting the status of an
19520739		updates the index for the given IWorkbenchPart by calling the `updateIndex` method on the `part` object.

This method updates the index for the given IWorkbenchPart by executing the `updateIndex` method.
19520834		returns the executable extension of the given configuration element, creating it if necessary for use within the provided metadata element.

This method retrieves the `executableExtension` from the configuration element.

This method returns the `exec
19521013		tests the invariant of a given belief by adding a parameter to the belief and then asserting that all parameters with the correct label and invariant match the actual values.

This method tests the invariant of a belief by adding a parameter to
19521034		This method tests an event by testing its label, convergence, and abstraction, and verifies that the event has one label and one convergence timestamp.

This method performs the following tests: 
- Method 1: if a condition occurs within
19521129		tests the guard of a given label expression by comparing each label and the expected value with those stored in an R1Guard object.

This method updates the label and predicate associated with the IR1Guard object and handles potential RodinExceptions
19521139		tests that the failure that the expected type ID is detected when there's a missing namespace in the XML document for an element configuration element.
This method then fails the test with the proper termination of the method, and fails the test with the proper
19521449		returns the extended record and if it's null it creates a new one.
This method returns the extended record for the given element and attribute, and if it's not null it calls the super method getExtendedRecord() and returns it
19629811		creates and initializes the contents of the object.

This method first calls the superclass's hashCode() method.

This method prevents any existing object in its process to be garbage collected.

This method converts the contents
19630078		sets up and gets a command based on the given input and applies some validation rules before such.

This method, getCommand, returns the command from the superclass. It checks if the request matches the given command ID, considering various conditions
19630615		adds a component definition ID property descriptor to an object.

This method overrides a superclass method and returns a list of property descriptors for the given object.

This method returns the list of property descriptors for the given
19630624		adds a property descriptor for the discovery URL feature of a component definition reference.

This method puts a property descriptor for the discovery URL feature of a component definition reference.

This method adds a property descriptor for the name of a component
19630627		adds a property descriptor for the component definition of an object.

This method overrides the default implementation of `getPropertyDescriptors` to provide custom property descriptors for the given object.
SUMMARY
This method
19630638		adds a family property descriptor to the given object.

This method adds a type property descriptor to the given object.

This method adds a reference property descriptor to the given object.

This method adds subtypes property descriptor to
19630654		adds a property descriptor for the activityType feature to the list of item property descriptors. The property descriptor also includes a link to an external source URI.

This method adds a property descriptor for the serviceRefPropertyDescriptor to
19630714		registers problems with a specific result type in a list, adding them with their item type if they have not already been registered.

This method, registerProblemWithResources, registers problems with resources within the current class, providing collection of problems
19632232		retrieves property descriptors for the specified object, adding additional property descriptors for size, offset, alignment, bounds, weight, and property type.

This method adds a control item property descriptor to the specified object.
SUM
19632234		adds a label property descriptor to the list of property descriptors for the given object.

This method overrides the `getPropertyDescriptors` method of the parent class and returns a list of property descriptors for the given object
19632244		adds a property descriptor for the data type of a ConfigurationPropertyLiteral object to the list of property descriptors for the object.

This method overrides the getPropertyDescriptors method to add data type and label property descript
19632245		adds a property descriptor for the value feature to the itemPropertyDescriptors list.
SUMMARY
This method is used to add a property descriptor for the value feature to the itemPropertyDescriptors list.


19632303		adds a URI property descriptor to the object.
This method overrides the superclass's method to add a URI property descriptor to the object.
This method adds the property identifier to the item property descriptor list.
This method adds the
19632316		adds a property descriptor for the original component definition to the object.
This method, getPropertyDescriptor, adds a descriptor for the original component definition to the object.
This method, addValues, adds a value to a property
19632326		adds a predicate property descriptor to the list of property descriptors for the specified object.
This method checks if the list of property descriptors is null, and if so, it calls the superclass's method to get the property descriptors
19632343		adds a property descriptor for the desired depth feature of an IterationStrategyPortNode object. It ensures that the property descriptors are added only once. It then calls the super method to further insert custom property descriptors into the list.
19632347		adds a port property descriptor to the item property descriptors list of the specified object.
This method calls the superclass method to get the property descriptors of the specified object.
This method adds a connection property descriptor to the item property
19632373		This method adds a "required" property descriptor to the list of property descriptors.

This method adds a "mandatory" property descriptor to the list of property descriptors.
SUMMARY
This method is used to add
19632384		is responsible for returning a list of property descriptors for the specified object, and if no descriptors exist, it calls the superclass's getPropertyDescriptors method and adds fixed and custom property descriptors.

This method returns a
19632385		adds a verticalical alignment property descriptor to the list of property descriptors for the provided object.

This method overrides the default implementation of the `getPropertyDescriptors` method and adds three additional property descriptors to the list
19632389		adds a hidden property descriptor to the given object.
This method returns a list of IItemPropertyDescriptors.

This method removes any existing invisible ones from the list.
This method adds the given object to the list.
19632392		adds a constrained to options property descriptor to the list of property descriptors for the specified object.

This method overrides the default behaviour of the superclass to include additional supertype and property descriptors added.

This method adds
19632396		adds a property descriptor for the list of examples to the list of property descriptors.

This method overrides the default implementation of the superclass and adds a property descriptor for the examples property.
SUMMARY
This method
19633149		compares two Tag objects based on their `count` and `tags` attributes in both objects. This method also identifies the existence of references to the first Tag that has a `tagName` in their respective collections of `tags'.


19633306		checks if the current workflow is allowed to download resources. If it's the downloading process, it returns the download status. If it's not the downloading process, it returns true. If it is NOT an upload process, it returns false.
19633479		performs a request to search for tagged items in a document containing the specified tag. If the request succeeds or succeeds, it returns a response.

This method searches for a tag for further processing by searching for several iterations and checking for results
19633521		takes a list of tags and converts them into tag cloud data. The method then calls a utility method to convert each tag using a helper method provided with three input parameters. Finally, it wraps the data in XML tags with appropriate tags.

19661977		generates a unique identifier of the key.

This method generates a hexadecimal integer as the key in string format.

This method generates a hexadecimal non-string form of the random number generated between the current
19662071		returns the Full Name of the current user.
SUMMARY
This method is used to obtain the full name of the current user.


19682806		initializes registers for various Java virtual tables for use with the Java-specific Java Virtual Machine (JVM). It dynamically loads registers into needed and initializes registers for several different data types, including one of real PC registers and another of one of
19682824		handles the HALT operation for the current process and attempts to halt the process if the current process is not the root process. If the current process is not the root process, the method returns the result true. Otherwise, it throws an exception
19682971		pauses the thread by executing a specific code block based on the interrupt status, interrupt status, interrupt code, and interrupt stack trace.

This method attempts to sleep a thread by setting the interrupt flag to true and calling the sleep method.
19683033		performs self test by first invoking the main method of the program, then initializes a thread to enqueue a message and which to all other processes that are returned. It then performs various tasks related to the machine, including testing and starting,
19762740		takes a list of strings and converts it into a comma-separated list. The list contains five elements: one to display the list and one to display all the elements. The method then returns the list as a string.

This
19762742		converts a list of BigIntegers into a string representation enclosed in curly braces.
SUMMARY
This method is used to convert a list of BigIntegers into a single string.


19802878		creates a list of string elements from a list of strings.
This method returns a description of the class.
This method returns a message about the class.
This method appends a list of strings to a string buffer if the class
19802879		creates and returns a JPanel containing a table in a scrollable view.

This method creates a JPanel with a FlowLayout and adds a table to it, with a scroll pane around the table, to the view.
S
19802937		checks the validity of a link by taking the URL and ID as parameters, and adds any unique URLs to an existing list of unique IDs. It then stores the URL and ID in a hash map called uniqueIds and returns true.
S
19808051		This synchronized method handles an operation and returns null.
This method executes an operation by retrieving parameters and comparing them to a single parameter.
This method executes a setter method by getting the object associated with a specific setter name and executing the
19808205		logs a single session by adding it to a map of sessions with logging enabled and the date and time from the session parameters.

This method logs a single session, creating a new log entry in a map of session data. If the
19808209		removes inactive sessions and sets the session's inactive status to inactive. 

This method, getSessions, creates a new HashSet by visiting all sessions being connected to the RTP manager. 
It then iterates over the
19808220		retrieves the username, password, and password suffix of a selected node in a tree.

This method populates a payload with a value and an options obtained from a tree.

This method populates a payload with a key
19808241		deletes a file using an external command, if the command is not an instance of SWTCommand, it does nothing.
This method updates a list of files using a change listener of the active tab and based on the state of the
19809577		returns a string representation of the CompassClassMapping object.
This method converts a Map of properties, a Hashtable of values and a Classtype enum value to a list of SortedLocalVar objects.
This method converts
19841020		accepts input data as JSON objects and attempts to invoke a method to find a user associated with that user. If the user is found, it returns a JSON object. If not, it prints an error message and wraps exception.

This
19841633		tests the SessionBeanPersistenceManager class for saving and finding objects of a specified class. It creates and saves objects of the specified class, asserts that the number of saved objects is 3, and searches for objects with specific properties and actions.
19847200		This method dispatches various classes of events, such as WiiRemoteEvent and WiiRActionEvent, to the correct listener.
SUMMARY
This method is used to notify the listener of a specific type of events in a Wii
19847287		sends a command over a socket, synchronizing to ensure exclusive access and blocking.
This method sends an empty byte command to a connected socket.
This method receives a byte array of bytes and converts the first two bytes to an integer.
19849220		retrieves the Lexical value of a NamedEntity instance from the JCas object.
It then sets the value of thelex feature to the lex value obtained from the NamedEntity instance.
SUMMARY
This method is
19865059		returns the JFrame that contains the content pane.

This method returns the content pane of the JFrame.

This method sets the JFrame's default close operation to do nothing.

This method creates and returns an instance
19865061		returns the JPanel for the buttons, initializing it if it is null and adding the necessary components to it.

This method returns the JPanel for the components.

This method returns the JPanel for the buttons.

19892039		sets the url for setting the SReg endpoint and throws an exception if the URL is invalid.

This method sets the Policy URL for the Message Service endpoint.

This method sets the Endpoint URL for the Message Service endpoint.

19892289		retrieves an OAuth token using a callback URL, generating a request URL and making it authenticated.

This method retrieves an OAuth token using a callback URL.

This method generates an OAuth token from the request.
19892328		retrieves the user account information from the API_USERINFO_URL.
This method checks if the user is authorized.
This method gets the user's information.
This method checks if the user is authorized.
This method looks
19892329		retrieves a person from the database using the specified fields as parameters.
SUMMARY
This method is used to obtain the person associated with a given user's API URL.


19892408		clears any global application data entries from the specified keys. It then returns the hashmap of the removed keys as a map.
SUMMARY
This method is used to clear any global application data entries from specified keys.


19892439		This method registers a user with a specified user ID and application parameters, using a map of parameters, to account for any associated security context.

This method loads credentials by authentication, validating each certificate, and then encrypting them if necessary
19892480		returns a JSONArray of a list of user friends associated with the given user ID.

This method opens a browse window with a list of friend groups to select an item that matches the user ID specified in the current selection of the tree
19892687		retrieves a list of albums associated with a given user ID and album ID, returning a collection of the albums as an array of objects.
SUMMARY
This method is used to get the album associated with a given user ID
19892744		retrieves album information for a given user and album by sending a POST request to a server with the user's ID and album ID. It ensures that the username and album IDs remain all set properly, returns a JSONObject containing the info,
19892850		generates a unique JSON representation of a user's friendship with placeholders for the given user ID and friend IDs. It checks for authorization and returns an error if the user does not are authorized.

This method executes the API call when the
19892924		retrieves a specified photo from the user's photo list based on its ID. It handles images only as desired. The method uses JSONObject to convert the cursor to a JSONObject, and passes each JSONObject to each instance of the user
19892963		returns the status history of an email activity identified by its user ID.

This method retrieves the authentication status of an email activity identified by its user ID passed as a parameter.
SUMMARY
This method is used to
19892988		sends a status request to the specified URL with the specified user ID and status information as parameters.

This method puts the user into the map with the given URL.

This method asserts that the returned value from the API request is
19893011		posts a mood or non-mood message to the user's account, after verifying their authentication status and providing additional information about the user's mobile device.

This method posts a mood message to the account associated with the address specified in the
19893115		sets the mood for the user to the specified mood value.

This method sets the status mood to the specified value.
SUMMARY
This method is used to set the status mood of a user to a specified value.


19893201		retrieves a video with a specified user and video ID. It first validates the user, then validates the URL and then allows the request to return a video or video from a specified account before returning it.

This method valid
1993674		returns the image associated with the field, where the icon image is drawn if the field is private, protected if the field is protected, and not public.

This method returns the image associated with the field, but also adds a tool
1993726		returns a string representation of a field label, including the type signature, fields, and index as well as an identifier or type reference for special field types.

This method, `createMultiLineLabel` method creates a multi-line
19979277		checks if the device is locked and if not, displays a debug message and exits. If the lock is valid, it attempts to unlock and disables the operation.

This method, first checks if a device is locked and if not,
19979395		writes the content of the xmlFileToDOMDocument into a specified XMLStringLocation object and assigns it to name. If the new XSLFileLocation object already exists, it deletes the name from it and throws an Exception if there's
20026649		sets a comment to a torrent comment by using external XML-RPC and encrypting the comment for easier retrieval with different methods.

This method sets the comment of all torrent entries in a list to the given value.

This method
20026654		changes a torrent tag by processing the specified torrent tags in the user interface. It verifies that none of the specified tags are available for this torrent.

This method sets the selected TorrentInfo objects on the user interface based on the specified Torrent
20067936		gets the ID of a user by searching for their username in a specific field in a SQL database table.

This method updates a row in the database with the provided username and ID, or deletes it if it is not found.

20067938		takes a username as input and returns the username and if it exists, it returns the same username as the previously stored username. Otherwise, it returns null.
SUMMARY
This method is used to determine if a username entered by
20075689		saves the token secret in prefs and then saves the token in prefs when the text field is finished.

This method saves the user token in prefs and then saves the tokenSecret in prefs when the text field is finished
20085518		performs a poll operation for nearby hosts in the host tree. It logs the event, retrieves a slave host address from the slave store, draws a line between each host and the current slave host, and checks if any hosts are disconnected before
20085539		sleeps for 250 milliseconds and tries to reestablish a connection to a slave for a specific host. If a connection attempts exceed 250 milliseconds, it stops the connection. Otherwise, it runs the current runner.

This method removes a connection from
20098263		initializes the JPanel instance by setting its layout to 8x7 pixels, adding a TreeCheckingModel, a ListSelectionListener, and a TreeSelectionListener. It also sets the selection mode and adds the SelectionModel and Mouse
20107093		checks if two objects are equal by comparing their IDs or a specific value based on their type.

This method compares two maps by score and locale, making sure they are not null.

This method compares two different maps by tile IDs
20107204		creates the roles of the classes named "User", "Administrator", "Supervisor", and "Collector" to create the roles. Additionally, it creates the classes "User", "Supervisor", "Administrator", "Collector
20107538		wakes up the current thread by interrupting the thread, checking if the condition is not terminated, and then skipping the input characters.

This method is responsible for handling keyboard input events. It handles movement and escape key combinations with different keys
20107542		wakes all the threads in the thread queue and then wakes them all the locks.

This method yields all the threads that are not already in the freeLock map.
SUMMARY
This method is used to wake all the
20107600		ensures thread safety by using one thread to ensure thread safety and an additional thread ensuring thread safety. 
This method retries in the thread pool first, ensuring that the busy queue is returned once it is cleared. 
This method sets
20107608		is a main function that runs an infinite loop that runs a loop that runs a loop that updates a value at the current index on the queue.

This method initializes the application with an EventScheduler object. It creates instances of
20138067		handles item state changes for components in a GUI, including a checkbox for connected and a drop-down list with a single parameter. Based on the item state, it checks the source state of the component. If the source is checked by
2025190		takes two dates as input and returns a diff between them, using the specified date. If one date is before the other, an empty diff is returned. If one date is after the other, an empty diff is returned as is.

20265562		stops the service by stopping connections, interrupting timers, and logging the token. It then calls the onStop() method of the superclass.

This method stops the service by stopping elements associated with the form, setting stop to false
20322268		fills a statement with params the parameter setter method of a prepared statement parameter setter.

This method fills a statement with parameters the statement.
SUMMARY
This method is used to fill a statement with parameters the prepared
2035078		generates the file header for an XML project, including its name, date, content, time, project ID, and version.

 The method appends an "action" attribute to the file header, including project ID, description, users,
2035097		prints the properties of a directed acyclic graph, including the class, depth, and each property in the cycle.
SUMMARY
This method is used to print the properties of a directed acyclic graph.


20365551		creates an Expression object.

This method invokes the superclass method create() and checks if the components list is not empty.

This method creates an Expression object and expects an IllegalArgumentException to be thrown.


20365638		calculates the result of a function on multiple expressions defined by the given arguments. It first gets the maximum number of parameters, then calculates the sum of the first argument and the result of the function for each parameter. If the count is zero
20365685		returns a String representation of the postfix string in a specified format.

This method returns a String representation of the string representation of the full expression.
SUMMARY
This method is used to return a string representation of the
20377255		retrieves all available vertical and horizontal bar values from a service. It sets the loading indicator, gets the available vertical and horizontal bar values, sets horizontal bar indices, and adds a change listener to each bar. Finally, it computes and
20477560		sets the word to a string and displays it.
This method creates an ArrayList of elements from the given raw data.
This method retrieves the last element in the list at index i. If the element is of type String, it
20477609		sends a command to start or stop the game being called, notifying the GUI to change its state.
SUMMARY
This method is used to reset the game state when the specified button and button is clicked.


20477616		sends a guess to the server. If the connection has been established, it listens for a new guess and sends it to the server. If the connection is unsuccessful, it disconnects and sends a warning message to the user.

This
20477624		listens for incoming data and handles it accordingly.
SUMMARY
This method is used to process incoming data based on the connection protocol in order to handle further processing events
20477852		modifies the number of words in a formatted text, taking into account special characters such as "\n", "\r", \w", and \s. It saves the modified word, and ensures that it remains unique.
This method notifies
20537348		 loads a GWT widget by calling onModuleLoad on the GwtModuleLoad event on the GWTContainer.

This method adds a TestWidgetElement to the GWT container for widget load and checks that it has been created.

20561661		generates the nonce. It includes the computed hash of the user's nonce and its host name (if provided by the proxy, it will be stored). It then returns the generated nonce as a string.

This method reads
20561676		checks the authorization of a URI, notifiers, andmethod parameters for "AUTHENTICATE" and "AUTHORGET", and if that option is not true, it returns a forbidden response. If the method checks the authorization,
20561721		sets the RLM (Repeat/Repeat-Busy-Motor) file for the response body.  It generates RLM files, and sends them through the SMS task (SMS).  If the response is successful, parses the R
20563932		performs a test by assigning an increment value to a counter, then retrieving the count from that counter and assert that it matches the original one.
This method tests that loading counters into theCounter variable is invalid due to an exception being thrown during
20564366		stops the current service tracker and checks if the tracker is inactive. If it is inactive, it stops the task tracker. If it is inactive, it synchronizes with all the tracker managers. If any of the managers throws an exception, the
20566870		scans the given path for the "xml" attribute (ELEMENT_CONTENT) within a class path, storing its path and type, and assigns a handler to it.

This method gets the class path name of the class
20566944		initializes a number of threads, each main method of the program and runs the specified test until the value of a long variable is not equal to 0.1.

This method is the main entry point of a program, it initializes
20566962		returns the working directory path, which is the absolute path of the working directory. If the working directory has not been set, it initializes it with the working directory path from the system properties.

This method attempts to connect to the
20567250		 purges map events from all map events by removing them at the last known index to avoid collision issues.
SUMMARY
This method is used to remove map events that have been mapped for a specified last known index from a list of
20567686		handles the performance of running a task as long as it is not stopping, decrementing the run state, and notifying task listeners of the successful progress of the completed task.

This method handles exceptions by creating a RunExceptionEvent
20568172		This method returns the PID of the task attempt associated with a specified task attempt ID, or null if there is no file associated with the process.

This method checks if the task attempt ID has the PID in the file section, or if
20571050		rolls back any active transactions in the database if they have too many operations to perform.

This method checks for partial transaction tracking errors. If there are errors getting adjusted, the method attempts to roll to the default one if necessary.

20571148		retrieves the reclaim time limit for a specific queue.

This method checks if there are any remaining reclaim time active for a queue and throws an exception if none are. If there are, it gets the current reclaim and attempts to get
20571973		sets the collectors for a destination, and if not, sets up a new destination from a list of collectors if one hasn't been set up.
SUMMARY
This method is used to initialize the collectors for a destination based on the
20581568		opens a H2DB connection to a specified database URL, username, and password, and starts the table in the database. If the table already exists, it appends a row to indicate that the table already exists.

 This method sets the
20687588		returns the tools panel, initializing it if it is null.

This method initializes the tools panel if it is null and returns it.
SUMMARY
This method is used to initialize the tools panel if it is
20687655		returns a JPanel that contains all the remaining components of a graphical user interface (GUI).
SUMMARY
This method is used to create a JPanel that contains the tool options.


20687658		serializes a shape to a string list by recursively serializing its parent nodes and children.

This method returns a string list of the elements in the shape.

This method returns a string list of the elements in the geometry
20687690		returns the JPanel object that serves as the main content of the window.
This method creates and adds a JLabel with the text "Left:" and a JScrollPane it is contained within the leftPanel.
This method creates
20687719		returns a connection editor object and if the connectionPanel variable is null, it creates a new connection panel, sets the bounds and adds the connectionPanel to the scroll pane.

This method returns the connectionPanel, if it is not null
20687739		returns the JContentPane of the JFrame, creating it if it does not exist, with a BorderLayout layout and a JContentPane added to the North, BorderLayout layout and a Background background.

This method creates
20751121		returns a list of bindings that are child bindings with a given name.

This method returns the number of children of a given name.

This method returns the value of the given name.

This method returns a collection of
20785875		returns the maximum acceptable acceleration value from a specified value. If no value is found, it returns the maximum absolute value.

This method returns the minimum acceptable acceleration value from a designated global value. If no value is found, it returns
20785942		retrieves an array of the most recent packet in the given list.
This method retrieves the most recent packet.
This method removes a packet from the list, removing it from both lists.
This method checks if an object is
20786026		initializes a project view with the specified project name, title, and visibility. 
This method returns a string representation of the project view. 
This method initializes the project view with the specified project name.
SUMMARY
20786028		This private method loads data from storage manager and stores it before proceeding with the retrieval process.
SUMMARY
This method is used to load data from storage manager.


20786030		loads the gesture set and its contained gesture classes from a configuration object, adding them to the scenario and setting a flag indicating that it has been saved.

This method initializes a JLabel with information about the component, setting its text,
20786060		handles mouse click events on a GUI component. If the click count is two, it checks if a specific action is already running. If it is not, it sets the icon of the component. While the background is pressed, it retrieves
20786072		executes the specified WinShell command on the specified InputStream. If no command is provided and LOG_FILE_EXISTS flag is set, it writes the new file name to the temporary file in Windows.

This method sets the
20786075		returns a string representation of the object by concatenating the string representations of its keys with a constant number of 0.

This method overrides the toString() method and returns a string representation of the object. If the object is
20786081		removes a mapping from a collection of mappings and adds it to a list of changes.
This method is synchronized and removes the mapping from a gesture mapping and notifies listeners of the removal.
This method performs an action from an input
20786176		draws a line from the start point to the end point to the end point of a line using the specified graphic context. It handles line drawing, specified by the startPoint, endPoint, and interpolation to determine which line to draw.
20786178		draws a coordinate on the user interface.
This method draws a center point on the user interface.
This method draws an ellipse on the user interface.
This method draws a point on the user interface.
This method draws
20786182		performs the following tasks for trace points, including the trace count and number of traces. It also calculates and sets the average point for each line and then sets the color for each point based on its distance between them. If the trace count has
20786186		checks if a given point is within the boundaries of a BufferedImage and if so, returns true.

This method checks if an ImageIcon object is present in a given BufferedImage. If the result is true, it returns one
20786189		computes the center point of a geometry collection by first obtaining location buffers, creating a list of locations for each location buffer, and then computing the center point of each location buffer. Finally, it returns the list of locations.
SUMM
20786293		takes a URL as an argument and adds the file to the extension list if it is not null or empty.

This method adds the parameter types and their converted types to a string representation.

This method ensures that a file is
20786629		initializes the title of the test frame by constructing a string builder, appending the class name to the text, creating a component to add to the test class, creating a title label to show the name of the component, and setting the title
20786657		stores the properties of the main model to an XML file and logs messages indicating whether the properties have been saved.

This method checks if the gesture is not null, if so, it logs a warning message.
It then creates a new
20786759		initializes the controller by creating an instance of the AdminView class from the mainController obtained from the application.

This method initializes the dataView object by calling its initController.

This method initializes the adminView object by
20786945		executes a list of handlers on a result set result set with thread pool size 30, then creates a loop that iterates over the handlers and calls the next handler in each iteration.

This method sends a message to all listeners in a
20787002		adds a parameter to the default set of parameters in the form of a string array containing the algorithm, key, and value.
This method adds an integer parameter to the provided set of parameters.
This method adds a string parameter to the
20787007		stores the contents of a file to a specified path.

This method stores a file in a zip archive.

This method stores attributes in a zip archive.

This method writes an entry of a zip file to a specified path
20787032		sets the maximum result set size and notifies property change listeners of the change.
This method tests the maximum result set size, inverts the value, ensures that it is within the value range, and sets them back to their previous value.
20787130		adds a gesture to the collection and assigns it a unique ID. It checks if the gesture already exists in the collection and if not, creates a new one.
This method adds multiple gestures to the collection.
This method adds a gesture
20787135		adds all the samples in the given list to this class.
This method invokes addAll on all samples in the given list.
This method invokes addAll on all samples in the given list.
SUMMARY

20787277		sets the gesture sample for the panel and updates the background and position of the grid.

This method sets the current gesture sample and updates the map display.

This method cancels the current gesture sample and if the current gesture sample and
20787309		updates theTuio value, xpos, ypos, zpos, and current state, and sets the currentTuio time, currentTime, xspeed, yspeed, zspeed, and motion_accel. It then calls
20787316		updates the target given a position and the current time, if applicable. It then updates the target with the given position and the current time, if applicable. Finally, it checks if any points are still active, and if so, calculates their
20787348		calculates the angle between a point and a piece type in 3D space. Depending on the plane type, it either draws the piece on the board or fills it on the board depending on its color.
SUMMARY
This
20787352		calculates the coordinate angle that a given point is located at. If there is no plane available, it returns 0. If there is at least one plane, it calculates the angle between the point and the plane at the specified coordinates, using
20787679		initializes a BufferedReader object, reading parameters such as a file path, an input stream type, an index value, and a config object. It then gathers the contents of the file, storing them in different tables with data parsed from the
20787697		removes a specific set from the storage. If the set is not present, it throws an exception.

This method takes a group name as input and removes it from the storage. It also removes all of the gesture sets associated with the
20787759		returns a new Point containing the position of a Position object scaled by the given point.

This method creates an array of Position objects.

This method sets the active map to the given current current map.

This method updates
20787762		adds a signature to the grid by placing a single bit with a bit set of the given number of points.

This method sets a BitSet at the given position in the grid.

This method compares two BitSets and
20787764		takes a BitSet as input and returns a String including the count of each true value in the BitSet. The method then returns a LaTeX representation of the BitSet in LaTeX format. The method first calls the various methods of the
20787769		sets a cell at the specified position with the given bit set. It throws an IndexOutOfBoundsException if the position is out of bounds.
SUMMARY
This method is used to set a valid cell in a grid.
20787794		parses a string token into a statistics object and returns a double, using a switch statement to determine the type of token to return.

This method parses a string token into a statistics object.

This method parses two
20787800		calculates the proximity and total proximity of a MIDI note in an image by calculating the midpoint of the note's duration and dividing by the midpoint.


This method calculates the length of the note and returns the x-value for
20787816		returns the number of six corners in a direction.
SUMMARY
This method is used to count the number of vertices in a corner list.


20818563		tests the functionality of the RequestInspector class by invoking its beforeRequest method, afterRequest, and afterRequest methods. It sets the ServletUnitHttpRequest, RequestInspector, and MockHttpServletRequest objects to test that
20818678		logs a report by inserting it into the database, creating a thread to fire report events, and executing each report to enqueue a report with a delay of 1000 milliseconds. It also stores the end time of the issue if the report ends at
20818695		initializes a queue based on request parameters and creates an object store generator.
This method starts a thread that imports threads to a service table, which is then persisted to the queue.
This method sets the thread attribute of the delegate object to
20818769		adds a request attribute to the HTTP session attribute, and also schedules a timer to run the task before the request is processed, and then calls the super method for processing.

This method runs a Servlet, first retrieving the Servlet
20819365		parses a string, reading it into a PeerRequirement object.
This method parses a file into a GeneralGmlFile object, setting its parent set with the file's parent set and the file's version.
This method
20883741		takes two String types, queryWord and word, and returns a String with the first String s between them.

This method takes a queryWord and the string data from the GUI, then iterates through the modelTerms of the
20913602		calculates the total distance traveled for events based on their start and stop times.

This method returns the total runtime taken for a given time.

This method returns the total time taken for a given time.

This method
20913631		returns the sum of the total number of datasources called by the SGSraph to get it the total number of datasources in use by the DB connection from the superclass connection pool
SUMMARY
This method is used to
20919925		calculates the width of the space of text after computing the spacing if necessary based on the font and advance x-coordinates.

This method calculates and returns the space of text.
SUMMARY
This method is used
20920415		adds an entry action to a state, adding an exit action to the state with the given action and the exit action.

This method adds a new command to the state of a transition.

This method adds a new command to
20920417		updates the logical layer of the server after receiving a ReadOnlyTimer.

This method triggers an update for the logical layer by triggering an update through the state machine.

This method calculates the time elapsed since the server's last update
20920725		checks if the operation is complete and if it is not, it checks if a weapon is put back and then checks if a weapon is put back complete.
This method checks if a weapon is put back complete and if it is, it checks
20920727		checks if the operation has just completed its anti-speed attack by evaluating conditions such as the weapon in use is not marked as pull out due to a malformed response, and if the movement is valid and within a valid distance range. It returns
20950513		renames a table with the given name if it exists and is not a renameable file. If the rename operation is forbidden, the table is renamed and cannot be renamed.

This method tries to rename the file to the new name,
20950527		renames a column in a table if the column has not changed.
This method returns the updateImports(String name) array.
This method sets the image to RGB.
This method checks if the array contains the change column.
20950841		encodes a message by padding it with a terminator byte and adding the length of the type, a byte, and the length of the length.

This method updates the version information of a message by encoding the next entry.


20950857		initializes a file entry for the temporary table, if the table does not already exist and the dataDir exists. It checks if the file exists, and if not, creates an empty temporary file and the file's contents.

This method
20950872		creates a header for a locked file, which includes the file name, block size, block position, and version.

This method creates a new header for a locked file, it notifies the block associated with the header.


20950900		loads a file into a class file and sets its type, last update, records, and header size.

This method extracts data from a specific segment of a file and sets the record fields, including file comment, program ID, recursion
20950951		encodes the database type type by replacing "\n", "\r", a newline, and a newline with the corresponding SQL format.

This method checks if the database type string has four characters + 1, but not 0, -
20950988		converts a Date object to a byte array that represents a stored time, with a corresponding date converted from one year to two months. The result is stored in the buffer at the given position and the desired date is encoded in GZIP format
20951083		creates a string that is a list of table definitions for a given table. The string is repeated by 5 times, each row spans 2-5 columns, and contains a command line argument for creating a table. The table is then created in
20951092		links the selection fields of a table field.

This method creates an array of selectors to select and links the values of the tables based on these fields.
SUMMARY
This method is used to create an array of select
20951131		sets up the graphical user interface (GUI) by adding components to the content pane, setting up the center tab pane for the layout, and adding welcome area and message area for closing, auto kill mode, and closing behavior.

This method
21073719		appends the value of a slot to a string buffer, with the value enclosed in parentheses and separated by space. It ignores empty slots and returns null if the slot is empty.
SUMMARY
This method is used to convert a
21079241		creates a parser for an association association role, providing a fallback to the source association traversal if the source does not target.

This method returns the semantic parser for the association access rule.

This method parses the association
21098957		sets the date in the year and month based on the value entered in the HTTP request. If the value is not a valid date, it returns null. Otherwise, it sets the date as a parsed numeric value and returns it.
SUM
21098967		sets the integer value of a parameter specified by the parameter name as an integer, by extracting the value from the parameter value.
If the value is not found, it checks for an integer parameter.
If the value cannot be parsed as an
21098974		sets attributes for the request object from the HttpServletRequest object. It also sets the dateFromId, dateTill, scenarioId, taskId, and task attributes.

This method also sets attributes for the request object from
21103047		adds a rule to the list of actions for the specified path.

This method validates the rules by checking if the associated paths end with "actionTest".

This method validates the rules by checking if the associated paths end
21103051		adds a context to a list in a map, creating a new list if the map does not already contain the context's path.

This method adds a context to a list, removing it from its previous position.
SUMM
21103175		retrieves information about the MBean with the specified name, type, and references it, considering interface imports and type assignments.
SUMMARY
This method is used to retrieve the MBean information associated with the specified target
21103234		returns the first child element of the given element.
This method returns the type of the given element.
This method validates the given input by ensuring it is not empty.
This method validates the given input by ensuring it is
21111592		This protected void protected method fires a tree structure changed event by passing it the specified XSpaceTreeNode.

This method shows the map shell.

This method sets the font of the text field and adds a label and a text area
21111610		returns the XML representation of the specified value and throws an exception if the value is not XML or if the value cannot be parsed as an XML.

This method parses an XML document from a URL and sets the XML values for the
21269748		closes the chat session by closing all the sessions, listening for the presence of a chat service, and cleaning up notifying all listeners when the session closing event occurs.

This method closes the chat session by performing several cleanup tasks such as
21269759		This method checks the role of the current user by iterating through all activator rooms, finds the one with the role, and returns it.
This method returns the moderator room as a string.
SUMMARY
This
21269805		tests if a query on an array of roles is ordered by the subject and roles. If the order is successful, the method removes empty roles from the array and asserts that those roles are present.

This method calls it and tests if the
21269885		sets error messages to the specified error message array.
SUMMARY
This method is used to set error messages to an empty array and iterate through the array to append each error message to a text panel.


21269925		creates a SashForm with the specified orientation and attaches an overflow-auto style to it.
SUMMARY
This method is used to create a SashForm with the specified orientation and attach an overflow-auto style to
21269982		loads and registers an image described in the extension on an IPath object.

This method takes in an IHepler object, a symbolic name and a boolean indicating whether to force a full image. It tries to load and register a symbolic
21270031		This method fires a SessionEvent to all registered listeners, removing it from a list if the message is a system message.
This method handles received BYE messages, checks for any errors, and sends corresponding messages to clients if so.
S
21270265		creates a combo box control with two input fields (host, port and login and password).
This method is used to create a combo box control with two input fields (username, password, and domain) and adds an action listener that will
21270551		creates an XMPP connection with a given target host, port, and service name.

This method returns the created XMPP connection from a given system name and original service name.

This method returns the created XMP
21305021		retrieves a tagged resource from the store with the given ID and media type, encoding it accordingly.
SUMMARY
This method is used to retrieve the text for a specified identifier and media type from the store.


21344301		checks if there is the current application specification to load and then it logs a warning if it has not been loaded. If there is no current application specification file, it attempts to read the current application specification and returns it if successful, null otherwise.
21359224		updates the country code for the model instance by retrieving country prefixes from a text field.

This method updates the country code combo box to the countries in the country zone.
SUMMARY
This method is used to update
21359273		creates and returns a TaskPane that contains a gateway message.

This method handles multiple gateway messages by adding them to a collection, creating gateway messages with the same type as the first message, and notifying listeners of the property change
21359309		imports a vCard file by prompting the user for a file name, extracting an appropriate type from the file name through a FileFieldReader object, loading the file data into the field using the field, and setting the file name as the text
21359319		checks if the user input is valid for a combo box, adjusting its order and name accordingly.

This method checks if the user input is valid for a combo box and optionally updating its border.

This method validates only one combo
21359338		updates the label component for credentials information based on the equality of the credentials and username fields.

This method checks if login credentials are required.

This method updates the label component to reflect the changed user.

This method checks
21359362		sets the background, foreground, and foreground colors of the grid and adds a key listener to enable Enter and Escape menu handling for contacts when pressing the "ENTER" or "ESCAPE" arrow keys.

This method initializes the
21359380		prepares an action for showing by calling the super method. It checks if the active gateway is chosen and if so, calls the prepareForShow method. Otherwise, it prepares the gateway, gives focus, and requests focus for various components.

21359426		removes a task pane from a task container by finding its index of the task pane and removing it from the TaskPane container.

This method removes a task pane from a task container by removing it from its sub-panel and its
21359431		selects and adds a new contact to the list.
This method removes the selected contact from the list and sets it as the selected value.
If the contact is not loaded, it creates a new contact object and sets it as the default
21359507		updates the layout of the `restartLabel` component, ensuring the label is visible and validating it if necessary.

This method sets the layout of the component to a new `FlowLayout` with the sum of the number of
21359552		updates the item icon, label, and button labels on the main UI. It considers the name of the JFrame to open and load its content into its label. It also updates the listeners and display the updated item.

This method
21359554		updates the tray image based on the queued state, checking if the queue is not empty and updating the tray image if it is. If the queue has not changed, it updates the tray image displaying a message dialog with the current queue's
21359561		updates the proxy status and updates the proxy based on the user's choices.
SUMMARY
This method updates the proxy status based on the user's choices.


21359704		shows or hides a search field depending on the value of the showAction parameter. It clears text from the field, removes existing text, and sets the text of the field to the given strings.

This method validates the provided data.
21359747		loads history from a file and sets up the history manager with records and initial state.

This method attempts to load history from the specified file by loading it and setting up the event dispatch thread, clears the history manager's record list, and
21359805		checks if any instances were created before authenticating them by verifying their class type and checking if they have any fields with specified types.

This method returns true if any instances were created for the given authentication mechanism in the list of primary keys.
21359816		returns a string containing debug messages for debug purpose, including the debug name, type of SLEE, whether to use Bluetooth, the enableZooming, the debug command, zooming in, and the zooming out.

This
21359817		creates the history for an SMS message by creating a new History record for the SMS's number, gateway, SMS sender number, sender name, and message class. The method then adds it to the history collection, ignoring any duplicate message timest
21359835		adds all elements from the specified collection to the list of SMSs in the queue and returns true if the operation was successful.

This method recursively adds all elements in the specified collection to the queue and returns true if the operation
21359860		adds a debug trace to the log and executes a task associated with the given debugger name and help options.
SUMMARY
This method is used to fire an action performed event with the given id and command.


21359881		This method checks if a backup file exists, and if not, creates it, saves a backup file, deletes the backup file, removes the backup file, and then calls the backup method of the file's bufferable interface.

This
21359888		sets the number, throws an exception if the number is null, validating the string, and fires a property change event with the old and new numbers.

This method sets the number, throws an exception if the string is null, valid
21359907		sets the paused state of the queue thread based on the input boolean value.

This method sets the paused state of the queue thread based on an input value.

This method sets the paused state of the queue thread based on an input
21359922		creates a key for a gateway without performing any additional checks and adds it to the map.
This method adds a key to the map.
This method adds an element to the map, either only additions if the element is an instance of
21359924		adds a key to the map associated with the specified gateway using a key generator and if the key is not null, updates internal state.

This method modifies the state of the object using generated set keys of the methods specified in the
21359940		marks the SMS in the queue as successfully signed.

This method logs a message with the text "TestSMSThreadedSMSThreadedSmSMSSignTask.setSMSSent" and then removes the SMS from the queue
21359943		returns the minimum SMS length of the contacts in the system.

This method gets the SMS length for each contact in the list, or -1 if no such contact exists.

This method gets the SMS length for the contact at
21359945		adds all the gateways in the given collection to the internal collection, notifies listeners about the addition, and returns true if any gateways were added.
SUMMARY
This method is used to register a collection of gates with
21359947		marks a message as currently being sent by logging it, setting the status to SMS, and firing an event.

This method tests setting the setting field in a SMS object, ensuring that it is set to the correct value and that the change
21359951		creates a dialog box for the user to enter an address. It sets the text to "Add", sets the size of the form, creates an address text field, creates a contact name text field, and shows the dialog.

This
21359957		removes all gateways that are elements present in the provided collection and returns true if any gateway was removed.

This method returns true when the provided collection is sorted.
SUMMARY
This method is used to remove gateways
21359958		marks a SMS with a wait of 0 milliseconds. If the SMS is not ready, it logs the attempt. Otherwise, it sets its wait status to waiting and fires an event.

This method returns true if the SMS is ready to be
21359993		updates the user interface when the code changes from "set-in-clipboard," by setting the text of the envelope and updating the UI. 

This method creates a new text object, invokes its doSendTo method to
21360061		logs the end and unsets the sender and gateway, then sends SMS messages asynchronously and waits for the queued SMS updates.

This method checks if a SMS failed and has been accepted, and if so, notifies the
21360075		initializes a BasicScript object with attributes for the text and language attributes. It ensures that the script creates valid JS for a JS engine, and if not, throws an exception. It creates an interpreter for the engine, adds the interpreter to the
21360079		determines the preferred language for a given gateway by checking the current locale, the preferred language for selected items, and the preferred language of available items. It then returns the preferred language as a String.

This method returns the default language
21360403		sets the look and feel for the theme manager and fires a property change event with the new look and feel.
SUMMARY
This method is used to fire a property change event with the new look and feel for the theme manager.
21360488		sets the Check Expiration Policy for a Check Update in the system by firing a property change event with the old and new Check Update Policy values.

This method sets the Check Update Policy for a Check Update in the system by firing a property
21360502		sets the style to stability if stable version is newer than the maximum version, and not stable version is not stable.  It also notifies listeners that the style is now stable.
SUMMARY
This method is used to notify listeners
21412264		initializes the board and sets the board to a copy of it with a modified version of it.
SUMMARY
This method is used to switch the size and paint the board.


21412540		retrieves a player from the list of players based on its queue name.

This method validates the input strings, iterates over them, and checks if the input strings match the queues before returning them to the calling method.

21412543		retrieves a player's queue by ID from all players in the game.
This method returns the current player's queue of the player if the engine is ready to accept.
This method returns the player's queue of the specified team.
21412583		retrieves a player object for a given player ID by searching through an enumeration of players.

This method determines if an object location is supported by the Player class.

This method finds an existing Player instance given its player ID
21412710		prints the contents of the board to a file, increasing the size of the board by one, before printing the contents again to disk.

This method prints a single line of the text in the board.

This method prints an empty
21518991		initializes the application and adds the login service to a specified page, displays the main form, adds the onload event handler to the main container, and sets focus to the login form.

This method initializes the application page and loads
21621174		closes the current connection, creating a new one with default settings if necessary.

This method makes a request to the server and returns a list of connected clients.

This method closes the client sender, shuts down the server, and
21621198		adds data to a request by iterating over a map and adding each key-value pair to a map representing the response. If a request has already been accepted, it is returned. If all the key-value pairs have been combined,
21621202		starts monitoring by starting HTTP monitoring from it.
This method registers a monitoring service and starts the service if it is not already registered.
This method starts monitoring by looping through a list of services to add, stop, or
21621205		adds a string to the response array. If the input string is null or empty, the array is resized and the method is called to set the resource to the input string. If the input string is not null and empty, the method
21621231		adds a ResendHTTPRequest to the list of resends that the current group has received the response.

This method adds a ResendRequest to the list of handles that the current group has received the response, based on the type
21621242		is used to fill the buffer and return the newline character.
This method will return the end of the line feed.
This method will return the beginning of the CSV line feed.
SUMMARY
This method is used to
21621321		sets the label text of the connection to the substring between the first space character and the first space character plus one respectively, making it non-digit.

This method takes a message and a U UTIL string as input and checks if
21628829		returns the number of columns in the given UIComponent, or if the number of columns is negative or the count is greater than 1, it returns 0.

This method tests that the getColumnCount method sets the number of
21628867		returns the action URL for the current request. If the context exists and is not a portlet, it encodes it using the doEncodingValue method.

This method attempts to encode the action URL to an opaque container, constructing
21628930		writes an element with the specified name and value to a writer, but only if the element is open. If the element is not open or has no child elements, it writes an attribute with the specified default value and namespace, so the method
21628954		writes a character array to an writer output stream while escaping characters in an array.
This method writes an array of characters to an XML element using a body element containing a string of text.
SUMMARY
This method is used
21629286		generates a string containing the URI for the event that triggered the clicking event and any associated parameters.

This method visits the phase expressions provided in the PhaseEvent, which contains information about the event, such as the UIComponent itself
21629615		retrieves the width of the object from the input object.
SUMMARY
This method is used to get the width of an object by checking if the width is set.


21629647		returns the height of the component, either from a string value or directly value it uses if it has not been set.

This method returns the title of the component, either from a string value or directly value it uses if it has
21629677		retrieves the value of the orientation field, throwing an exception if it is not available.

This method, getValue(), retrieves the value of the orientation field, throwing an exception if it is not available.

This method
21629709		returns the type of the object as a String.

This method checks if the object passed in is of type MultipartRequest, a MultipartRequestWrapper for MultipartParams, or an instance of Map,
21629719		decodes the input component by decoding its submitted form data, removing all mappings from the context, decoding the submitted form data, and setting the current template in the component. 

This method sets the current value for the provided context and
21629736		returns the title of the object, which is a String. If the title is null, it directly returns it. If the title is not null, it returns the title.
This method returns a value object.
This method returns a
21629780		retrieves the xlabel value as a string, either from an Ognl expression or an Ognl expression language value, depending on the values.

This method applies a value comparison operation to a single x value.


21629818		retrieves the ylabel (i.e., the value of the label attribute) of the specified element.

This method returns a string representation of the object.

This method returns a string representation of the object.


21630549		gives a provided IVehicule object and returns a list of IPlaceParking objects by checking if the list of vehicles are already present. If not, it throws an exception. It then iterates through the list of vehicles, attempting
21649391		This method attempts to send an error to an external console. It plays all commands defined in the command list, and waits for commands to be followed. It then plays at least 5 times the current thread. If an IOException occurs, it prints
21649392		runs the task 1 by creating a string with the data received from the input stream.

This method throws an exception if the string is empty and prints the string to the console.
SUMMARY
This method is used to receive
21649447		clears all data buffers and resets the answer and answer status to default.
This method returns an array of strings based on the number of answers, choices, and a type.
This method registers the user with the SWING software key
21650413		activates encryption keys based on the provided APDU data. It delegates key activation to the authentication codec object, first requesting authentication and then activating encryption keys, and then activating encryption keys if they are not already active.

This method confirms
21650705		selects the file or directory associated with the given APDU command. The select method determines the file and path and saves the absolute path of the file to a file system key. The select method uses the select method to select the file.
21651076		erases a binary file to the selected file, except where the only size after the key is encountered. It checks for access permissions, asks for key existence, and uses a delete mask for editing the specified offset of the file. If the original
21742431		activates the active player in a team at the specified position by adjusting the active player index and the remaining active players list accordingly. It also deselects the previous active player in the game based on the mode selected by the user.
S
21756985		revokes a certificate by accessing the XKMS service and authenticating the user with an XKMS credential.

This method grants an XKMS certificate using the provided serial number and a certificate name.

This methodrevokes
21756992		takes a string as input and replaces each character with the encoded version of a string separated by a newline character.
This method updates the XML specification by replacing all <?p>( and <??s>.
This method generates XML
21757003		returns the reason for the provided key binding. If the reason is not one of the key bindings, the method returns null. Otherwise, it returns the reason as a string.
SUMMARY
This method is used to retrieve the
21757023		retrieves the reason code from the specified key binding, or sets it to null if the reason code does not exist. It returns the reason code, or null if it does not.

This method sets the reason code to the specified
21757814		generates schema files based on input parameters, including schema path as ".", ".sql" file, and "db;" and schema file.
This method creates a DDL file by generating an HSQL grammar and adding statement sequences to them.
21758000		converts the request type to a CertificateSigningRequestType and returns it. If the request type is null, it creates one, fills in the request type data, and returns it. Otherwise, it returns the existing copy of the cached Certificate
21811601		performs an SSH client.
This method, testCase1, initializes the testCase1 method, retrieves an SSH client class, creates and processes SSH commands using the CommandHandler class and the Channel class, and then calls the test
21811643		performs initialization by receiving configuration, calculating preferred key exchange configuration, creating a client of the specific size, and sending initialization and client initialization packet to the server.
This method executes the main loop of the serverCommunication object by continuously reading messages
21811683		returns a ByteBuffer containing the bytes of the object. It iterates through the entries and converts them into a string. The method then appends a comma to the string buffer as a delimiter.

This method returns the _object
21823912		validates that a field has not been null, throwing a validation exception if it has not.
This method validates that a field has been parsed as an integer, throwing a validation exception if it has not or if the value cannot be parsed
21823923		checks if the given object is valid and has field, adding an error if it does not.
SUMMARY
This method is used to validate a field with a non-empty value.


21825595		opens a repository implementation using CRUD, including creating a proxy wrapper and a filter to specify callback filter.

This method ensures that the repository is open using the repository implementation manager or when no repository context is specified, ensures that the underlying repository
21825671		handles exceptions by rolling back the transaction and verifying that an exception is thrown during any operations.

This method rolls back any exceptions, captures the error internally in case of storage error, and throws a StorageException.
SUMMARY
21825922		adds an Attribute object to the AttributeManager with the specified name and class. If the attribute is already present, it is returned as is.

This method replaces the values of existing ones that represent the attributes of another Attribute
21825952		removes an index attribute from an object's metadata. If the index is greater than 0, it decreases it by one and removes the offset attribute from its previous value.

This method removes all subsequent relations from the object's index entries.
21826152		tests the ability of the tested object to be unwrapped and that when objects are unwrapped, the method returns the no primitives in non-a collection.
This method checks if a collection is unwrapped and then ensuring that
21826484		tests the cycle reloading of a repository by creating a repository, adding two types to the repository, loading the first type back, and then loading the second type again and verifying that the reference to the second is no longer present in the second type
21826505		tests the ability to replace an attribute in an AttributeType with a name correctly.
This method connects to the repository and creates an instance of GraphImpl data by performing several operations such as fetching and replacing values, making changes to the graph
22045319		returns the hyperbolic height of a function at a given value x, handling cases where the value is outside the defined range: the second value is outside the range returned by getFunction, which is set to 0, 0, and the
22045364		performs a mutation function around the given boundaries by finding the maximum value in the population using that boundary and adding 1 to the new value.

This method generates a random number given a value and a random number to increase that generated number in
22045403		converts all non-empty objects from a list and copies those with error values from a nested object context.
SUMMARY
This method is used to convert non-empty objects from a list to nested object contexts and set explicit error
22045412		checks if a string is of any type of number two
22045426		converts mathematical expressions by first clearing the current list and then converting AFunctions, converting Boolean functions, removing elements from the beginning of the list, and then converting Function objects based on the Boolean.Function's function type. Finally, it sets the
22045428		converts a List of GObjects, first converting each element to a predicate, then converting each element to a Boolean function, then converting each element to a Product, and finally converting each element to a Product again depending on whether the predicate is
22045480		returns the length of an XML element, assuming it has an extra bit.
This method finds the next comma-separated value in the XML.
This method iterates over the values in the XML field and removes any non-empty
22045511		calculates the absolute value of the logarithm of the current state and the absolute value of the imaginary part.

This method calculates the logarithm of the atomic value with the given t. It finds the lower bound
22045530		initializes various panels for the calculator with buttons for adjusting the grid, adding tools, a zoom button, and a constant button. It also sets up a label object and adds it to a panel container. Additionally, it serves as a listener for
22045539		calculates the hyperbolic sine of a given complex number. It first divides the complex by the power of the argument, then divides the tangent by the power of the argument.

This method scales a given real number by
22045542		calculates the complex number e^x in 2 times a real number e^2.
This method returns the cosine of the complex number e by cos sin(e) of two real numbers e^4.
This method returns
22045559		returns the double value representing the acosh value of the given natural (acosh) absolute value (a) parameter (a) using either the bis' sine or cosine function (cos).

This method returns the imaginary component
22045645		sets the shift button based on the input boolean value and updates the calculator button type accordingly.

This method allows the user to unblock power up, press the up button, and transition the button "down" if the shift key is pressed
22045656		creates a copy of an object if the object being created is equal to the current one, otherwise, it returns the object itself.
SUMMARY
This method is used to create the copy of an object and synchronize its properties
22045661		accepts a Sum object and adds it to the current list, then iterates over the ExpressionList in the Sum object and adds them to the current list, then returns the current list.

This method iteratively adds each of the list
22045724		sets the locus for a given object to the specified value. It checks if the object is not null and not an instance of jscicalc.Error and if it is not, it creates a new Locus object and sets it to
22045797		handles an action event for the given action event. If the applet is not on, it will invoke the `actionPerformed` method.

This method handles the action event on the window by checking if the user is online and
22045799		handles an action event and toggles the shiftbar mode, then clears the status memory and message memory.
This method handles the event when a toggle button is clicked and toggles the shift bar mode.
This method handles the event when
22045804		performs an action when a button is clicked. If the mode is set to 1, it sets the shift key to false and the memory bar to null. If the mode is set to 2, it updates the current speed, starts the timer
22045822		listens for an ActionEvent and handles it based on the keycode of the pressed key.

This method retrieves the JLabel with the label "Hops".

This method retrieves the JLabel with the label "G
22045849		creates a key map by iterating over the keys in a list of CalculatorButton objects and for each one, it checks if the key's command is 1 and the command matches "Repeat 1", "Repeat 2", and the command matches the
22045881		performs a combination operation between two objects or only accepts numerical values. It creates a new object and returns the result or an error if there is an issue.

This method divides a number, both two the allowed sizes and returns an object
22045885		returns the power of a complex number and a complex number, or throws an error if any of the input exceptions are present.
This method checks if the input is a valid input number and if so, it calls the `pow`
22045913		moves the caret to the previous dot position in the text pane, moves the caret using the navigator "dots.", and sets the caret position accordingly.

This method inverts the dot position in the text pane by
22045931		performs the logical AND operation on two OObjects. If either object is in a complex or returns the result as is. If both objects are non-complex, it checks if both are integers and if so, creates a new object of
22045937		performs bitwise OR between two OObjects, handling both cases based on their types.

This method attempts to perform bitwise OR on the object's negation, assuming it returns non-negative number of arguments.
This method
22045940		performs an XOR operation on the current object and the specified object. If the current object is a Complex, the method calls the xor method on the current object using the specified object. If the current object is a Error, the method
22075688		generates an XML header for the LRCRUD file with the provided identifier, package identifier, and date. It returns the XML document representing the created header.

This method overrides onDocumentAboutToBeEnabled() and checks if
22075693		copies a file from one location to another using FileInputStream. It utilizes I/O streams and handles file type byte parsing.

This method copies a file from one location to another using I/O streams. If the source file
22075785		constructs a PepsyicallyExtractor using the specified MetadataGroups and provided DescriptionMgr, extracting themods metadata into apressure file.
SUMMARY
This method is used to extract themods metadata into a Pepsy
22075812		extracts themods document from the dspace by getting the DSpace XML object, parsing it, and returning it as aModsDocument.
SUMMARY
This method is used to retrieve the mods document from the xml object.
22075892		initializes various namespaces and lists, establishing them a minimum up, minimal down, full away, and much faster.
This method sets up the controller and creates a container for the application's UI.
This method initializes the namespaces
22075937		returns a Templates object based on the name and XSL provided. If the XSLName is not null, it uses a Templates handler to extract the Templates from the XSL file and use it to create a Templates object
22075963		checks if the currently selected file is of type `ArsecetFile` or `ArchInput` and returns true if it is, otherwise false.

This method returns true if the user specified an arc file is used, regardless of the
22076485		retrieves the primary MDD sec (MDD Security) type for a given document element in the Hierarchical Extensions Engine/EBI-12 XML Core Form DMD format. It returns the MDD security type as a string.
22079663		checks whether a given string has a specific number of digits, which is a function with three decimal placeholders below the string segment and a hexadecimal representation of the string.
SUMMARY
This method is used to generate a
22161218		updates the preview panel with the description of a given file. It loads the file into a model of the specified file, sets the file as an action for the panel, and updates the previewed image path.

This method updates the
22161277		returns true if the process is already running in the current run.

This method checks if the process can be stopped by checking the current run state.

This method checks the running status of the process.

This method checks
22170205		determines if a string instance is a valid instance of a class with the given name.

This method checks if a character instance of a string matches the given class name.

This method checks if a class instance of a class
22170562		takes a path as an input string and returns a File object containing the content of the file specified by the path.  If the file does not exist, it loads the file, converts it to a byte array and returns it. If the
22171596		adds a property descriptor for the message UUID to the list of property descriptors for the specified object.

This method adds an item property descriptor for the message UUID to the list of property descriptors for the specified object.

22171597		adds a property descriptor for the "message" feature of an adapter factory.

This method adds a property descriptor for the "id" feature of an adapter factory.

This method adds a property descriptor for the "categories"
22171598		adds a property descriptor for the detail feature of the EveLogMessage object.

This method overrides the default property descriptors to add a detail property descriptor to the list of property descriptors.

This method adds a property descriptor
22171599		adds a property descriptor for the session UUID feature to the list of item property descriptors.
SUMMARY
This method is used to add a property descriptor for the session UUID feature to the list of item property descriptors
22171601		This method retrieves the property descriptors for the specified object. If they have not been set yet, it calls the superclass's `getPropertyDescriptors` method and then adds specific property descriptors for sender UUID, message type
22171603		returns a list of property descriptors for the given object. If the property descriptors have not been added, it adds four types of property descriptors: one for the local attribute name of the object and one for the namespace.



22171604		adds a property descriptor for the reciever UUID of an EveMessage object to the item property descriptors.

This method lazily initializes the item property descriptors list if necessary.

This method adds a property descriptor for
22171606		adds a property descriptor for the old value of an EveUpdate object.

This method overrides the superclass method to return a list of property descriptors for the given object.

This method adds property descriptors for the element
22171608		adds a timestamp property descriptor to the list of property descriptors for the specified object.

This method overrides the superclass method to obtain the property descriptors for the specified object.

This method adds the source address property descriptor
22171609		adds a property descriptor for an e-mail value to the list of property descriptors for a given object. If the list does not contain the property descriptor, this method simply adds the property descriptor without the old value.

This method
22171613		adds a property descriptor for the feature ID feature to the list of property descriptors for the given object.

This method overrides the description method and adds a resource locator to the list of property descriptors for the given object.
22171628		This method overrides the getPropertyDescriptors method and initializes a list of item property descriptors if it is null. It then calls the super class's method to get the property descriptors and adds additional property descriptors for the following
22171632		adds a property descriptor for the filename feature of an EveFileMessageSink object to the itemPropertyDescriptors list.

This method checks if the itemPropertyDescriptors list is null, if it is, it calls the
22171636		adds a property descriptor for the file type of an EveFileMessageSink object, allowing to display its name.

This method calls the superclass's `addPropertyDescriptors` method to construct and add additional property descriptors
22171637		adds a property descriptor that provides the table information as an object. It first invokes the superclass's method to obtain the property descriptors. It then adds properties to the descriptor, including the host name, username, password, hash table
22171638		adds a property descriptor for the append feature of an EveMessageSink object.

This method adds the append property descriptor to the given object.

This method adds the element URI property descriptor to the given object.

This
22171643		adds a property descriptor for the delimeter field of the EveMessageSink.

This method adds property descriptors for the eName, eUrl, eDescription, eContent, group, eDelimiter, and eGroup
22171659		creates a list of property descriptors for the specified object, including those for name, wait time, repeat interval, and starting time.

This method overrides the superclass method for the same class, creates property descriptors for name
22171661		adds a property descriptor for the running feature to the list of property descriptors for the given object.

This method maps an object to an IMapMode if it is empty and its parent is not null.

This method overr
22171662		This method overrides the superclass's `getPropertyDescriptors` method, adds 6 new property descriptors to the list, and returns the updated list.

This method overrides the superclass's `getPropertyDescriptors
22171664		adds a property descriptor for the sleep feature of an EveReplayTimer object to the list of property descriptors for an object.

This method adds a property descriptor for the sleep attribute of an EveRepeatTimer object to the list of
22171666		adds a counter property descriptor to the item property descriptors for the given object.

This method returns a list of property descriptor to add to the property descriptors list for the given object.

This method returns a list of property
22171678		adds a property descriptor for the current time of an EveHistoryTimer object.

This method returns a list of property descriptors for the object.

This method adds an object property descriptor to the list of property descriptors for the
22171686		adds a property descriptor for the simulation interval feature of an object.

This method overrides the superclass's method to return a list of property descriptors for the specified object.
SUMMARY
This method is used to
22171689		adds a property descriptor for the isExponential property of the EveTimer class.

This method adds an item property descriptor to the list of property descriptors.

This method adds a path property descriptor to the list of property descript
22171693		adds a property descriptor for the isLogarithmic feature.

This method overrides the superclass method and initializes a list of item property descriptors for the given object.

This method adds an item property descriptor for
22171697		This method returns a list of property descriptors for the object, adding four custom property descriptors for the "gradient" property.
SUMMARY
This method is used to add a custom property descriptor for the "gradient" property.
22171701		adds a constant property descriptor to the list of property descriptors for a given object. If the property descriptor does not already exist, it is created and added.

This method overrides the superclass's getPropertyDescriptors method
22171707		adds a property descriptor for the power feature of the EveTimer object. If the property descriptors have not been added, the superclass property descriptors are added.

This method returns a list of property descriptors for the given object
22171709		adds a property descriptor for the isPower property of an EveFunctionTimer object to the list of property descriptors for the given object. If itemPropertyDescriptors are null, it invokes the parent class's method to get the list
22171711		adds a "Is Root" property descriptor to the list of property descriptors.

This method is used to add an "Is Root" property descriptor to the list of property descriptors.


22171715		adds a property descriptor for the "borndate" property to an object.

This method overrides the superclass method and returns a list of property descriptors.

This method adds a property descriptor for the "birthday"
22171718		adds a property descriptor for the histData feature of the EveHistoryAgent class.

This method adds the histData property descriptor to the given object.
SUMMARY
This method is used to add a property descriptor for the
22171734		adds a property descriptor for the editingPropability feature of an EveAgentSNA object to a list of property descriptors.

This method returns a list of property descriptors for the given object, specifically a EveAgentSNA object
22171737		adds a property descriptor for the deleting property of an EveAgentSNA object.

This method returns a list of property descriptors for the provided object.

This method adds a property descriptor for the deleting property of an EveAgent
22171740		adds a property descriptor to an object's created property identifier.

This method adds a property descriptor for the starting position of the object.
SUMMARY
This method is used to add a property descriptor for the "creating
22171744		adds a property descriptor for the "started" feature of an object to a list of item property descriptors.
This method checks if the list of item property descriptors has been initialized and returns if it has.
If not, it
22171803		adds a property descriptor for the node status of an EveMessage to the object.

This method creates a null event loop property descriptor for the object.
SUMMARY
This method is used to add a property descriptor for the
22171817		retrieves a list of item property descriptors for the given object.

This method adds a connected component property descriptor to the list of property descriptors.

This method checks if the list of property descriptors is null. If
22171819		getPropertyDescriptors() returns a list of property descriptors for the given object. If the property descriptors list is null, it calls the superclass method to retrieve the descriptors. It then adds custom property descriptors for the object
22171820		adds a property descriptor for the URI feature to the item property descriptors list of the given object.

This method overrides a super method and adds uri and parent GUID to the item property descriptors list.
SUM
22171822		adds a property descriptor for the 'connected' feature of the 'EveSocketConnection' type object.

This method adds a property descriptor for the 'source' feature of the 'EveSocketConnection' object.

This
22171823		creates and returns a list of PropertyDescriptors for the Connections EClass.
This method adds a name property descriptor to a list of PropertyDescriptors.
This method adds an ID property descriptor to a list of PropertyDesc
22171825		adds a property descriptor for the "directional" feature of the EveModel object to the list of property descriptors for the given object.

This method adds a property descriptor for the identifier property of the EveUtil class.

22171827		adds a property descriptor for the name feature of an EveComponent object to the list of item property descriptors.

This method overrides the default implementation of 'getPropertyDescriptors' for a list of property descriptors for a
22171835		adds a property descriptor to the list of item property descriptors for the specified object.

This method adds the property name property descriptor to the list of item property descriptors for the specified object.

This method adds the property description
22171839		adds a property descriptor for the "longitude" property of the EveLocationEveNode class.

This method overrides the `getPropertyDescriptors` method of the superclass and adds additional property descriptors to the list
22171841		adds a property descriptor for the "messageQueue" feature of an EveNode object to the list of property descriptors of the current object.

This method adds a property descriptor for the "messageQueue" feature of an EveNode object
22171843		This method overrides the superclass behavior to create a property descriptor for the given object, including the latitude property.
This method overrides the superclass behavior to create a property descriptor for the given object, including the longitude property.

22171844		adds a property descriptor for the "server" feature to the list of item property descriptors.
This method first calls the superclass method to get the property descriptors of the given object.
It then calls the superclass method to
22171846		This method overrides the default `getPropertyDescriptors` method, which retrieves a property descriptor list for the given object.

This method retrieves the itemPropertyDescriptors of the given object's superclass.


22171847		creates a property descriptor for the server URL of an EveNode object.

This method overrides the method addServiceUrlPropertyDescriptor, which adds a service URL property descriptor to an object.

This method overrides the
22171848		adds a property descriptor for the locCountry feature of an EveComponent object.

This method returns a list of property descriptors for the specified object.

This method adds an abstract property descriptor to the specified object.

This
22171854		adds a property descriptor for the "locCity" feature to the item property descriptors.

This method is used to allow the properties to be modified to provide the current state of the EVE component.
SUMMARY

22171857		This method adds a location property descriptor to a list of property descriptors for a given object.

This method adds a company property descriptor to a list of property descriptors for a given object.

This method adds a property type property
22171862		adds a property descriptor to the list of property descriptors for the given object.

This method adds a loc address property descriptor to the list of property descriptors for the given object.
SUMMARY
This method is used
22171867		adds a property descriptor for the locLocation feature of the EveGlobalIDMappingPackage. This property is used to represent the location of the EveModel element.

This method returns a list of property descriptors for the specified object.
22171873		adds a "netIP" property descriptor to the property descriptors of the given object.

This method is used to add a "netIP" property descriptor to the property descriptors of the given object.

This method is
22171878		adds a property descriptor for the netUrl feature to the specified object's item property descriptors.
This method adds property descriptors for the address, netUrl, connection, process ID, and name of the EveComponent object.
S
22171881		gets a list of property descriptors for an object, and if the list of property descriptors is null, it first calls the superclass's method to get the list, then adds location and location property descriptors to the list.


22171885		adds a property descriptor for the timestamp of avere to an object.

This method returns a list of property descriptors for the given object. If the list of property descriptors is null, it calls the superclass's method to
22171890		adds a property descriptor for the attached connections of an EveComponent object to a list of item property descriptors.

This method overrides the parent class's getPropertyDescriptors method, which iterates over the parent class's list
22171902		adds a property descriptor for the node specified to the list of property descriptors.

This method returns the list of property descriptors for the given object.
SUMMARY
This method is used to add a to-are
22171905		adds a property descriptor for the jetty server feature of an EveNodesProject object.

This method overrides the getPropertyDescriptors method to add a property descriptor for the jetty server feature of a EveNodeServer object
22171909		adds a property descriptor for the server host of the EveNodeServer class, such as its value.

This method overrides the default implementation and adds default properties such as label of the server host, connector enabled, and list of connections
22171911		adds a property descriptor for the server port in the EveNodeServer type.

This method overrides the default behavior of the `getPropertyDescriptors` method for the specified object.

This method adds a property descriptor for
22171912		adds a property descriptor for the `stepDuration` feature of an `EveSimulation` object to the list of property descriptors.

This method returns the list of property descriptors for the given object.

This method
22171914		adds a property descriptor for the step count of the EveSimulation object to the item property descriptor list.

This method adds a property descriptor for the connection ID property to the item property descriptor list.

This method adds a property
22171915		adds a property descriptor for the "thread" attribute of an EveNodeServer object to the itemPropertyDescriptor list if the itemPropertyDescriptors list is null.

This method returns the list of property descriptors for the
22171919		adds a prototype UUID property descriptor to the list of property descriptors for a given object. It first checks if the property descriptors have been initialized, and if not, it initializes them by calling the super method to obtain the default
22171924		adds a prototype property descriptor to the list of property descriptors for the given object.

This method returns a list of property descriptors for the given object.

This method adds a prototype property descriptor to the list of property descript
22171930		adds a property descriptor for the agent pool UUID of an EveSimEvent object to the supplied list of property descriptors.

This method overrides the superclass's getPropertyDescriptors method and adds an agent pool UUID
22171937		adds a property descriptor for the agent pool feature of an EveAgent object.

This method adds a property descriptor for the name of an EveAgent object.

This method adds a property descriptor for the isActive property to a list
22171941		adds a property descriptor to the item property descriptors list for a given object, specifically for theuateservices property.

This method overrides the default implementation of `getPropertyDescriptors` and initializes the property descriptors
22171942		adds an offered services property descriptor to the specified object. If the property descriptor has not been initialized, it will be initialized before adding an offered service object to the list.

This method overrides the default abstract method to add an offered
22171943		adds a property descriptor for the local service pool feature of an EveAgent object.

This method overrides the default implementation of `getPropertyDescriptors` and adds additional property descriptors to the list.

This method overr
22171945		adds a property descriptor for the betweeness feature of an EveAgent object to the list of property descriptors in the list.

This method returns a list of property descriptors for the specified object.

This method adds a property
22218429		disconnects from S-Op listeners, closes streams, and cleans up resources.
This method closes the device, shuts down the output stream, and closes the input stream, optionally using a native stream or a socket.
This method closes
22218432		sets the socket timeout for the client or server. If the `sockTimeout` is different from the ones set, it logs an error and sets the socket timeout accordingly.

This method sets the timeout for the client or server. If
22218478		writes given bytes to an output stream, excluding anything coming as bytes that are not in the specified fasta name format and have a specified chunk size.
SUMMARY
This method is used to write the incoming bytes to the output
22218483		This method attempts to prompt the user for confirmation before allowing them to close the application if the user confirms.

This method retrieves a dialog header and an applet instance from the message context, opens a dialog instance using the applet instance
22218597		This method notifies all server observers that an event has occurred and passes the event to the observer.
This method notifies them with a context, events, and session data.
This method iterates over a collection of observers and notifies
22218599		is an event handler that processes packets received from a session through an observer and sends a packet to the corresponding session object. It also sends the completed message indicating that the session is being processed.
SUMMARY
This method is used to
22218671		sends a response packet to a specified address within a multi-connection machine. 

This method tests the handling of incoming and outgoing packets and verifies that the packet count is correct for each incoming packet.

This method creates a
22218702		returns a boolean value for the specified property, handling different types of values using the BOOLEANS and NUMBER classes.

This method checks whether a given property is a String value and returns a Boolean value accordingly. It accepts a
22218703		binds a single value to the server, with the given time as an argument, and returns a BindResponse object.

This method throws a ReadTimeoutException if the server has failed to bind the value.
SUMMARY

22218740		reads an SMS packet from the server, blocking for a specified amount of time if specified, and returns the first valid packet.

This method reads a single SMPP packet from the server, blocking for an optional amount of time if specified
22219311		calculates a hash code for an object based on its "address" property and "ton" and "npi" values.

This method generates a hash code for an object based on its "address" property, "ton"
22219357		sets the data for the header of the packet, first checking that the data is not null and limiting the length to 7 characters each time the method is called.

This method retrieves specific data object information from the message by extracting the serial
22322680		overrides the default toString() method and returns a string representation of the CSM object, including its minimum distance, criticality, and minimum source.

- This method generates the CSV file from the source, includes extension words,
22323120		returns a compressed output to the specified file, either compressing it if the compression format is ZIP or GZIP and returns the newly created output stream as a CompressedOutputStream.

This method returns a compressed output to the specified
22323490		takes two parameters, the string "operation" and "fieldKey" and returns a String with the exception message (which includes the class of the exception).
This method throws an IllegalArgumentException if the number of arguments is invalid.
22323761		copies the properties of an ISOMsg object to this object's properties.

This method parses a DSField object and sets the table namespace based on the parsed DSField object.

This method parses a DSList object
22323816		initializes an InternationalChannelPanel object with a given symbolic name, sets its layout, border, and adds an labeledichoice to the panel.

This method creates a new panel that contains a list of counters and a connect button to connect
22323845		returns the string value at the specified field number of the record, where the string can be converted from a double to a byte array if necessary.

SUMMARY
This method is used to generate a converted string representation of an
22323858		returns the string value of the specified path, or null if the path is not formatted properly.

This method returns the UTF-8 string value of the specified path, or null if the path is not formatted properly.

This
22324152		This method configures a component using the provided configuration object. It first validates a configuration name if not provided, then parses a configuration XML file. If the XML file contains the default values, it sets the configuration object as the module configuration
22324233		unpacks a buffer, throws an exception if encoding is missing, and increments the tag pointer. It unzips the buffer until the end tag is reached, then unzips the content in the buffer until all bytes in the buffer have been
22324238		unpacks messages from a byte array into either a TLV message or an ACK message. It loops until it reaches a timeout or exhausted the loop.
SUMMARY
This method is used to unpack messages from a byte array
22324668		This method sets the configuration for the Java application and initializes it with the necessary information. If the configuration is null or cannot be initialized, it throws a ConfigurationException.

This method sets the configuration for the Java application and initializes it
22324839		takes an object as an argument, determines the type of its input value, and returns a PersistentPeer if successful, or throws an exception if the value is not of the correct data type.

This method adds a PX
22324971		This method returns an ISessionListener that handles an ISOEMsg request, the request is handled by the client callback, and the response is handled by the ServerSocketChannel.

This method tests the retrieval of an ISOMsg from
22324991		returns a string representation of the value retrieved from the result set, using a delimiter to separate the fields by the provided separator and converting them to lowercase to lowercase.

This method returns a string representation of the key retrieved
22325002		purges the current sessions by purging their reference IDs, clearing the rxQueue, and then purging the queue of requests.
This method purges a resource by purging them associated with the session.
SUMMARY

22325184		sets the value of "doConnect" to the specified boolean value, disconnects the channel, and notifies any threads waiting on the object. If "connect" is true, it sets the "doConnect" variable to true, notifies
22325710		initializes the broker, setting up server sockets, starting a work thread, and rebuilding data.

This method initializes the data for the broker after they are finished running.

This method handles the termination of the broker. It can
22325711		creates a thread that repeatedly listens for client connections and creates new threads to handle them.

This method listens for client connections and creates new threads for each client.

This method sets up the default bsh manager with a connection handler
22325727		registers a task with a unique ID file ID. It logs the task name and the associated file ID. It then registers the task and its corresponding task file ID.

This protected method registers a task with a unique ID file ID.
22325728		sets up default values for the ClientConfig object by calling setupDefaults() and fireConfigEvent() methods.

This method sets up defaults for the ClientConfig object by calling setupDefaults() and fireConfigEvent() methods.


22325768		calls another method to monitor the task status, log the event, and registers a file with the result file ID based on the task status's status.

This method logs a debug message, gets the task ID from the task task ID
22325839		returns a TaskDescription object with the taskID, jarID, and resultDataID parameters. It first creates a new TaskDescription object with the taskID, jarID, and other relevant dataID ids. Then it checks the data
22325854		loads the config XML file into the current application context using an input stream from the config file.

This method runs the config in a separate thread, passing the config XML file to it.

This method loads the context XML file into
22325863		loads a properties file into a Config object after processing it into a Config DOM element.


22325885		reads the command line arguments, initializes variables, and processes the arguments to extract information such as the arguments, commands, and files. It handles exceptions and logs the process.
SUMMARY
This method is used to extract information from
22325913		registers a file with the database using the specified file ID, file name, and user ID.

This method registers a file with the specified ID using the specified file name.
SUMMARY
This method is used to register
22325918		creates a new client connection and logs the process, either as a normal connection or with an optional user ID. It also sets up a connection before sending a message via UDP.

This method sends a message to other players based on the
22325919		executes the loginNode method with input parameters and handles exceptions.

This method is called when an exception occurs running the broker connection, and it handles the exception.

This method handles exceptions that occur during login, such as RuntimeException
22325920		This method logs a client into the broker connection with a unique ID. 
This method tests the loginClient method by setting the loginSuccess flag to true and then calling the loginClient method with the specified parameters. 
This method tests the
22336082		This method creates a bottom composite to contain a GUI interface and adds a header, footer, and optional footer from a document to the frame.

This method creates a main grid layout and adds itself to the composite box.


22336108		creates a composite widget with three buttons (add, delete) and a selection listener (select1, and addSelected1).

This method creates a label widget with the title "New connection".
SUMMARY
This
22336214		tries to perform an action by retrieving the type of operation and attempting to run the action on the entity type.  Otherwise, it tries to call the superclass's run method.
SUMMARY
This method is used to handle
22398964		sets the position of the caret, the line, or column numbers based on the source command. It handles various commands accordingly, such as setting the caret position, adding characters, setting the indentation, and adjusting the line count.

22398974		returns the column number for the given position in a text segment. If the segment is empty, it attempts to enter the full line of the text without marking the line. If the segment is less than 4 characters long, it returns 0.
22399114		reads a boolean variable and returns it if successful. If the variable is true, it calls a redo method on the redo frame and returns, then it breaks a loop on the redo frame until it reaches the end of the frame or
22399518		deletes the current char (either CHAR or NUM) from the buffer, displays the string 'cmd' and size 0, and checks if the current char is '#' (i.e., the correct line is '#' (ie
22399872		This private static method keeps on updating state variables and checks if an input buffer is valid. If it's a newline character, it stops editing the next space character. If it's no, it selects the white space character.

This
22400618		executes a Windows NNC command with the provided arguments, which can include the character 'a' or 'b'. If the command contains a number and only flags another flag is set, it performs various actions to perform specific operations based on the
22401389		adjusts the cursor position based on the user input or a desired character, ending with a new line if necessary.
SUMMARY
This method is used to adjust the cursor position based on a different character and leave new lines if necessary
22406997		attempts to establish a stream server on specified port, and if successful, initiates the initial open process.

This method checks if the client is connected and if so, it attempts to connect to the corresponding server.

This
22407013		evaluates a message based on its type, either BYE, PROJECT, or INPUT_TASK. If the message ID matches a specific value, it calls the evaluate method for both the bye and hello methods. If it matches
22407014		notifies all registered server listeners that the server has started and logs the notification until all listeners have started.

This method initializes and notifies server listeners that a new connection has been established.

This method initializes and notifies
22407016		This method evaluates an initial project message by retrieving the Ant project for the message and evaluating it, logging the associated project if debugging is enabled.
This method loads all Ant messages by iterating through a source directory, creating AntMessage objects for each
22407026		notifies all server listeners that the server has been stopped and logs the event if the debug level is enabled.

This method runs the server in a loop, providing a job of listening and handling updates.

This method logs a debug
22407054		updates the keymapping for the editor, creates or deletes keymapping, binds keymapping, and adds them to the editor manager.

This method initializes the editor panel, making it empty and adding an action listener
22407065		checks if two IDs are equal specifically for equality, which can be either the IDELocaleListItem object itself or the IDELocaleListItem object itself, and the name is not equal.
SUMMARY
This method
22407105		reads the properties of the script from the settings instance, including version, build number, and dialect settings.
SUMMARY
This method is used to read the properties from the script node.


22407106		notifies registered listeners that the contents of the list have changed in the model.
This method notifies registered listeners that the removed contents in the model have changed.
SUMMARY
This method is used to notify registered listeners that the
22407109		writes properties to the Ant script and Ant test suite.
It sets whether to the end of the build.xml file, creates a dump, prints debugging information, and sets the browser to not running, log to or complete, or full
22407116		toggles the server being used and stops the logger running based on that state. It uninstalls, starts, and shuts down the logger.

This method handles the installation of a new client connection by configuring the server, then initial
22407133		centers a JFrame on the screen to the center of the frame.
This method changes the frame location to the center of the frame.
This method centers the specified JFrame to the display size of the window.
This method centers
22407210		sets the manual value for the ant build configuration by setting the managed flag, marking the ant manual flag, and notifying listeners of the change.

This method sets the manual value for the ant build configuration by checking if it exists and assigning
22407223		initializes the context action by creating a context action provider to hide the context menu when double-clicking on the node.
This method initializes the context action provider so that it can be installed via the context action provider.
This method
22407226		parses a file using a buildfile parser, handling exceptions and passing them to a parser.

This method ensures that the provided XML file matches the selected file to be parsed. It sets the buildfile for the parser, calls the
22407234		returns the locale of the current locale, based on the default locale and the locale that the user ran from.

This method returns the user's language, if any, from the locale.
SUMMARY
This method is
22407249		retrieves the value associated with the key as a string.
This method returns the value associated with the key as a string.
SUMMARY
This method is used to get the value associated with the key as a string,
22407250		returns a collection of simple strings from a file.
This method returns an array of strings.
This method returns the original directory in base filename with spaces extracted.
This method returns the path from the file name.
SUMM
22407272		extracts the filename from a URI. If the URI starts with a specific prefix, it returns the truncated filename prefix. If the URI starts with a different prefix, it returns null. This method extracts the path from the URI to extract
22407276		writes the XML representation of the current node to an XMLWriter object, converting children nodes in an XMLWriter object if they share JSON representations.

This method writes the XML representation of a node in an XMLWriter object, optionally logging the
22407293		returns a collection of all the values in this map.

This method creates a new Vector containing the values of an AntTargetIterator.

This method adds a target to the targets list by first sorting the list; if a target
22407295		finds the first non-whitespace child node with a specified local name in a given parent node by searching the children of the parent node's current sibling node.
This method recursively searches for an Element with the specified name in
22407300		returns a string representation of the object, including its target, target element name, target namespace, and selected status.

This method returns a string representation of the object, including its target element name, description, and selected status.

22407301		returns the description of the project Node.
This method returns the details of the project Node.
SUMMARY
This method is used to retrieve the details of the project Node.


22407318		initializes the layout of the component, includes the m_name, m_location, m_location_xml.txt file, m_language, m_language_xml.txt file, m_language_xml.txt file,
22407319		selects the Ant target with a description, logging the selection changes. It iterates through the list of targets and selects each target with a description that starts with "-." or "-T".
SUMMARY
This method is used to
22407325		initiates a wizard process by invoking a wizard host and setting the wizard title and adding pages for various Java objects (page classes, code sources, target compilation, and options), before finally invoking the superclass' invoke method.
SUM
22407332		returns the selected target targets as a Collection of AntTarget objects sorted by its number.

This method shows the Ant based on whether a single target is selected and the Ant targets of that target are selected.

This method removes selection
22407335		handles property changes triggered by the provided PropertyChangeEvent and updates the corresponding element in the TargetSetModel.

This method checks that a PropertyChangeEvent event has the PropertyNAME_CHANGED. If the event is related to a
22407339		finishes the project by retrieving its build file, creating an Ant node, marking it as built using a URL, and handling exceptions by logging an error message and throwing a VetoException if the build file is removed.

This method sets
22407369		returns a string representation of an AntTargetMap object, including its targets and a comma-separated string with the targets.

This method is used to return a string representation of an AntTargetMap object, including its targets and a
22407381		This method sets the layout, border, minimum size, and adds three panels to it: a button panel, a separator panel with an icon, a home panel with a button. The home panel is placed at the top of the GUI,
22407414		trims a string by removing dots after it and adding ellipses to it.
This method retrieves the attribute value of an element.
This method retrieves the attribute value of an element.
This method retrieves the attribute value
22407433		checks if there is a quoted string read, and if so, reads and returns the next token. It then skips whitespace and accepts the following character until it reaches the end of the string or the end of a new string, then returns
22407437		creates a PropertyInformation object by retrieving a AntRunner instance and setting its version information.

This method sets the additional properties for the current AntRunner instance.

This method iterates over a list of PropertyInformation objects and for each
22407447		checks if a given character is a symbol. It first checks the current character and then continues from the next one until a valid symbol is found.

This method deserializes a string using a provided encoding. It checks if it's valid
22407449		sets the DOM node for the GUI components and allows for adding or removing changes to the contents of the editorpane. It adds or removes items from the editorpane based on the DOM node of the node. Finally, it resizes the
22407456		saves the build file to the specified file, using XMLWriter to write the header and XML before writing the project to the file.

This method tests if the "All Files" option is specified and if so, tries to write all
22407472		returns the index of a child node in the list according to its parent and child object.
This method retrieves the child node at the specified index.
This method processes the selected task nodes provided by the GUI. If chosen task is
22407475		filters a DOM node by first filtering it based on the property value.

This method sets an unsupported property value for the object.

This method filters a DOM node by creating a new filter if it doesn't already exist.

22407482		returns a map of properties that a user has been selected through the user. If no user has selected any properties, the user is logged in with no properties and that the method returns null.


22407485		sets the properties of the object using the provided map, clearing the existing properties and adding a new one with the given key and value.

This method updates the current properties of the object using the provided map, adding or removing the property from
22407502		This private method sets the item state and fires property change events if the state is not null.
SUMMARY
This method is used to fire property change events for the SELECT_WITH_DESCRIPTION property to notify an action listener
22407506		returns the specified listener.
SUMMARY
This method is used to retrieve the list of listeners by iterating through a list of listeners.


22407512		sets the default user's execution path for a user action based on the previous default executable path.


This method defines variables related to buttons to set and edit user actions.


This method defines variables related to buttons to set and edit user
22407536		initializes the graphical user interface by setting the layout, adding a control panel, and adding buttons to the panel. It also adds a window listener to the window to handle closing events.
SUMMARY
This method is used to initialize
22407556		writes the properties of a node to the configuration, and includes an optional log level.
This method writes the properties of a node to the configuration and builds listeners for the node.
SUMMARY
This method is used to set
22407570		changes the selected item in a data structure if it matches the target in the specified data structure.

This method updates the grid panel with the selected target node in the model.

This method updates the grid panel with the selected node in
22407577		returns the target map associated with the buildfile.

This method sets the target map to match all build information.

This method handles the release of resources when the method is called by the GUI.
SUMMARY

22407591		updates the target bean with information retrieved from the data model. It sets the select with description property, selects all items, and selects based on whether the bean is a checkbox or an icon object. It also refreshes the target bean tree
22407594		sets the text for the current target to the absolute path of the input text, it checks if the target is null and returns if it is. If it is not null, it sets the text to the absolute path of the input text relative to
22407599		is a listener that checks whether changes have been made to the table model and fires a property change event if necessary.
This method sets the m_target.
This method sets the m_originalTargetMap in the target map.
This
22407650		updates the enabled state of the set, item, and component. This method sets the enabled status of the component based on whether the component is running. This method updates the label of the component based on the item model.

This method
22407707		unescapes single white space by removing any single or double newline characters ("\n" and " \r").

This method, `unescape` clears the content of the buffer before iterating over the lines.

This
22407727		initializes the main panel of a GUI frame. It sets the size and layout of the JFrame, creates and adds components to the content pane, with a BorderLayout layout manager. If there is no user ID, it sets the text label
22407730		returns the short file name from a given filename by iterating through a list of files.  At the start of the array, it returns the full file name by removing the last path file separator
       
22407740		attempts to parse Ant build files and save them to a file, firing a property change event if successful.

This method saves the target map to a file, but throws a BuildfileParsingException if the parsing fails.
22407744		initiates running the Ant and executing any in order. It also performs the following tasks:
- Invoking the antStarted method on the output panel and the control panel, and if this fails, it resets all the focus and
22407788		returns the foreground color of a specific image item as a string. It first checks if the item is an image item or an image grid item and selects the fill color if it is. It then creates an array of random data values and sets
22407803		This method takes a string and returns an integer representing the start of the filename.
This method takes a string and returns an integer representing the start of the filename.
SUMMARY
This method is used to determine the start of a
22407804		sets the actual column in the last error line in a view, adjusting line errors if necessary.

This method sets the last error column in the last error outline area of view.

This method sets the last error column in the last
22407846		recakes a stream of messages from a connection, reads the message as a message, and if the message has an ID, it sets the message and sender of the sender to the message ID. If the message has no ID, it writes a
22407858		logs the specified build from its location by an event message if the output stream is set to a new thread.
This method logs the system message using an input stream.
This method sends a system message using an input stream.
This
22407860		returns the position of the file extension in the given file string.

SUMMARY
This method is used to determine the position of the file extension in the given file string.


22407861		sends the specified message to the Ant build target when the targetStarted event occurs.

This method calls the sentProjectInfo flag to toggle the sentProjectInfo flag when the targetStarted event is sent.
SUMMARY
22407876		This method reads a string message and transforms it into an error message.

This method processes an internal listener and adds it to a list of listeners.

This method checks rules for valid data and adds them to a list of valid rules
22407878		closes the socket and input stream if they are not null.
If the connection is lost then no other disconnections have made. Otherwise, it closes the socket and sets the connected flag to true.
SUMMARY
This method
22408365		returns a map of all global environment properties.
This method returns a map of the environment properties, or null if the map is null.
SUMMARY
This method is used to provide a new map of the environment properties.
22408386		sets the global environment properties from a provided map.
SUMMARY
This method is used to set the global environment properties from a provided map.


22408401		returns a new Map that contains the global environment properties.

This method retrieves the local environment properties.

This method returns an array of a Map containing the global environment properties.

This method returns an array of a Map
22408414		sets the environment properties for the given map.

This method adds the provided configuration to the configuration.

This method tests the instantiateProperties() method by setting given environment properties with a local environment.

This method tests the
22449404		creates a new variable node on a machine. The variable node is populated with the type and name of a variable. The type can be a string or an integer. The name can be followed by a character indicating the type of the variable,
22449417		generates a unique constraint name based on a provided constraint identifier and row number.
It computes the constraint name and checks if the name already has already been generated before. If not, it increments the row unique identifier sequence, sets the next
22449758		This protected method calculates the next number node in the graph given a start node and a current node, if the start node is not null and not empty. It maintains the node-based counts of nodes in the graph, counting the number of nodes
22449867		takes in a LPModelRows component and concatenates it to the current RP model, placing it in the low-level subcomponent.

This method recursively adds rows in the table row order to avoid efficient insertion.
22449872		concatenates the column/subcomponent columns and all the rows with the specified name into a query buffer.


22450085		searches for cycles in the tree by iterating through all nodes and checking if any of them are visited, then calls the searchForCycles method for those nodes.
SUMMARY
This method is used to search for cycles
22450175		adds a double attribute to a G node when a reference node changes.

This method tests the constructor with parameters and asserts that the length of a serializable G node is 1 and the reference value is 1.

This method tests
22450179		adds a specified number of nodes with their respective weights to the graph.

This method recursively determines the maximum number of nodes allowed to combine from a set of leaves.

This method accepts a data file and adds its nodes
22450181		adds an edge between two nodes by creating new nodes with a unique ID and adding them to the graph.

This method iterates over the edges of a network and prints the source and target nodes in a loop.

This method
22450187		adds edges with weights to a graph with a number of columns.

This method initializes an array of int[][] data with weighted points from the specified color.

This method adds edges with weights to a graph.

22450191		fills the edge map with the weights of the vertices in the current graph based on the weighted weights of the edges in the vertices of another graph. 
This method clears the edge map with an empty data set.
This method
22617082		takes a tree object and a string prefix as arguments, gets the tree object, iterates through its children with the prefix string in the tree, and if the tree's nodeString is still null, it returns null, otherwise, it returns
22617087		returns the child tree of a given tree node that starts with a specified prefix.

This method returns the root binary expression for a given prefix.

This method returns null if the given prefix is not found in the tree's children
22617155		handles the click event on a cell in a table and displays a popup menu if the table row is not already at its top level.

This method is an event handler which triggers a cell clicked event on the table.

This
22617839		attempts to unmarshal a file specified by the 'destinationPath' parameter and creates an SBVR2Graph object. It then creates an XMLReader object and builds an SBVR2Builder object from the XMLReader object. Finally
22618425		adds an error to the list of errors. If an error is not contained within the list of bad arguments, it creates a new error with the specified error code and message.

This method adds an error to the list of errors.
22618511		adds an administrator email to the account with the given email address.

This method gets the name of the user. If the username already exists, it throws an exception. If the user does not exist, it checks if the user already
22618550		generates a string representation of the object by concatenating all the objects in the specified collection into a single string.

This method creates a StringBuilder object from the specified list. It iterates through the list, appends each object
22618655		takes a document and a file path as input, deletes the schema, its elements, and all appending them to the file with the global definitions.

 to insert the file at the end of the schema if the global definitions contain only
22618690		returns a list of sorted properties. The method first populates the given properties array with the page names from the properties file, then sorts the array using the PageSorter using the getOrderedPages method on the given property models. Finally
22618713		returns the multi box for elements. If multi-box is not set, it will return the default element.

This method gets the multi box input element.
SUMMARY
This method is used to get the multi box
22618761		will add a choice or choicebox to a form for a complex type and generate XML elements for the type.
SUMMARY
This method is used to include the complex type box in XML.


22618765		initializes the object with the specified XPath and parent Element, and initializes the RendererState.Counter variable as used.
SUMMARY
This method is used to initialize the object with the specified XPath and parent Element,
22618766		returns an input element for selecting a value for a specified XPath, creating the element and adding it to the select input element.

This method returns an input element for selecting a value for a specified XPath, creating the element and
22618774		returns an element that is a child of the input element that is determined by the condition, which could be an optional simpleContent element or determined by the parent structure.

This method returns the input element as a subelement of the given
22618786		creates a table with cells representing labels and fields for each field.

This method generates a table header with labels and fields for table columns.

This method creates a cell span in a table align the header width and height.

22618787		adds an action bar to the element.

This method adds a label to the element using a FormRow.

This method adds an action bar to the element using a FormTableLabel.

This method adds an action bar
22618823		creates an XML element representing a choice test with the specified xml:lang attribute, which represents the ability to test the user's choice.

This method tests that the given choice element is not null and that it can be compared to the
22618845		gets the truncated words (Q) for a given string by truncating it if its length is more than 30 characters.
SUMMARY
This method is used to truncate the keywords (Q) for a given string by removing
22618847		creates the label element for a repeating in a tree structure. It adds several child elements based on whether the item is a leaf or multiselect, and adds a JavaScript function linking the item. Finally, it returns the resulting element.

22619580		returns the ServletContext object that will require authentication. If it's not null, it returns the suggestHelper object. Otherwise, it initializes the suggestHelper object and returns it.

This method initializes the SuggestCommentHelper object
22619614		retrieves the creation date of a service when a service's metadata is initialized. It saves the service's service and its contributions to an XML file.

This method sets the creation date of a database. The provided date string is then
22619647		renders error messages to a HTML format, based on a condition. It formats the error messages, including an error ID, error description, severity, before and after date and timestamp. If errors are found, it is added to the error messages
22619688		initializes the filter by setting up the request and response objects.
This method initializes the filter by initializing the filter and assigning the request and response objects.
This method checks if the given request and response objects are valid.
This
22619903		returns a string containing the repository name, set spec, base URL, metadataPrefix, metadataPrefix, and intervalGranularity.

This method builds a string representation of the object.
SUMMARY
This method
22620033		initiates harvesting schedules for a specified shUid, which can include harvest all or all if deleted, and then harvest others.

This method sets a flag to the specified value and then starts a new thread to handle the har
22620063		returns a description of the object, including the description, basic descriptions, and indentation by based on the length of the object's string representation.

This method returns a string with the longest name, first name, middle name, and
22620068		retrieves the author name for a given author id by retrieving the jurisdiction from the map and checking if it exists. If no jurisdiction is found, it returns null.

This method gets the Jurisdiction with the given primary and
22620070		returns a map of Jurisdictions for a given list of cookies.

This method creates a new map object and populates it with the Jurisdictions present in the document.

This method returns a new map object
22620090		retrieves a list of named subjects from the given XML file, parsing each subject into a Subject object, adding the extracted subject to the list of subjects.
SUMMARY
This method is used to obtain a list of subjects from
22620101		returns a list of all subjects that the user is currently editing.
SUMMARY
This method is used to obtain the list of subjects currently being edited.


22620110		This method generates a raw AsnReport, which is used to generate an ASN of type CIM_AsnDocReportIdX from a list of CIM_AsnDocDocument objects. It measures the processing time and calculates the
22620142		creates an ASCII mapping for a document based on its document ID, subject, and environment entry. It initializes an ASN document factory, initializes an ASN document with the authority and subject, and the ID class. This method returns
22620145		performs a manual harvest using the given parameters.
This method sets the harvest time for the harvest process.
This method sets the harvest time for the harvest process.
This method sets the harvest time for the harvest process.
This method
22620146		adds a mapping to the subject mapping, validates the mapping, notifies the mapper observer of theAdded mapping, and parses the mapping for the request message to add the mapping to the message.

This method attempts to load
22620278		creates an AsnStandard object based on the input of an Element. It checks if the author isRAM, authorsIMS, or authorsIYUV, and returns the AsnStandard if any of these checks pass. It then creates
22620305		returns a string that contains the required information and any existing entities found in the structure. It formats the information into a table row representing the required attributes and their label values. It also removes any entities with no non-labeled attributes.

22620380		retrieves the Standard object by its ID from the commCoreHelper, if it is not null, it returns the corresponding Standard object.

This method returns the Standard object by calling the standard find by the given standard title.


22620434		returns a string containing the header section of a JSP file for collapsing beans. If the file is not a valid JSP file, the method returns an empty string.

This method calculates the beginning of a JSP file for the
22620443		initializes the XPath and XPath expressions and then calls the doInit method. If the schemaNode is in a head element, it sets the body type and element type in the RendererHelper. It also sets the schemaNode of the
22620483		returns the label for a given index and sibling path and sibling path, throwing an exception if both cases fail to match.
SUMMARY
This method takes three parameters: an XPath, sibling XPath, and index ID.
22620512		renders a repeating element when it is applied to an element. If the XPath expression is valid and the current mdeStdsNode is null, it calls the superclass's renderRepeatingElement() method. Otherwise, it calls the
22620612		creates an "action-image" element with a "img" element, and adds a "best-up-image" target with the specified name.
SUMMARY
This method is used to add a "best-up
22620616		takes a tooltip string as input and returns the tooltip help associated with it. If no tool help exists, it returns a URL with the quoted tool help.

This method takes a tooltip string and the JspTemplateContext object as arguments
22620620		retrieves the namespace prefix for a given namespace and global definition, returning null if the namespace is not defined in the registry.
This method returns the instance prefix for a given namespace and global definition, returning a string representation of the instance otherwise
22620621		returns the input element at a given XPath, which represents the editor's input helper file. If the helper file exists, it creates an outer element in the input document with a "div" element.

This method returns true if
22620624		resolves qualified names of local names and returns them as a qualified name.
This method checks if an element is null, normalizes it, and resolves qualified names of schemas.
This method resolves qualified names of schemas with qualified names
22620644		renders sub-elements based on the type of a complex type.

This method overrides the `actionCommand` method to render sub-elements.

This method overrides the `actionCommand` method to render sub
22620649		generates a static value element for a given XPath expression. It adds header and body elements for form, data, and form detail sections, and returns the final element.

This method returns the static value element for a given XPath
22620662		returns a SimpleTypeLabel object based on the given xpath and siblingPath parameters, such as the indexId, the search variable, and the simpleTypeLabelObj.

This method retrieves the SimpleTypeLabel object associated with the
22620664		returns the ComplexTypeLabel object with editMeTag set on the given XML node, sibling path, and index id.
SUMMARY
This method is used to update the editMeTag field of the ComplexTypeLabel object
22620666		creates an HTML select input element with a name, a prototype element and an optional single selection attribute. It iterates through a list of options, adds an input element to the select input submit element, and sets the generated element's oncl
22620682		tests if a value in a subselect request is missing from a specified node it first calls the method requestValues and adds a "and" child element based on the result. It then returns the element.

This method creates an "not
22620692		inserts HTML comments along with the corresponding style and attributes into an XML document. It determines if the comment element needs to be applied based on its type and adds or updates a style element accordingly.

- This method returns a new XMLDocument
22620710		retrieves the label text for an element given its XPath, sibling XPath, sibling index, and index ID. It uses XPathUtils to obtain the node name and the corresponding index, parent node name, sibling path, sibling
22620714		attaches JavaScript id to an element element based on a provided path. It then sets a JavaScript variable with a specified id and value. For JavaScript objects, it assigns an element ID value to the first or last child of the element. If the
22620725		returns a list of swaps that are associated with any items that have no primary or mirror keys set, sorted alphabetically using a comparator.

This method, first, gets all dup keys of a group associated with an element in a
22620729		returns a list of all themable graphs. It takes in a list of graphs and a list of maps as parameters. It iterates over the graphs and adds each graph to this list as a subgraph.
SUMMARY

22620761		returns a list of recorded identifier strings corresponding to an existing session identifier by checking if the current session ID matches the session ID stored in the lockedRecords map. If they do not match, it identifies the current session and retrieves the corresponding
22620787		returns a StandardsManager object, and if all necessary components are set to empty, it creates it and adds it to the list of controller actions.

This method returns the StandardsManager object, retrieved from the ActionForm().


22620792		initializes an ArrayList<StdDocument> with student attributes extracted from an input document, which can be a title, link, and subject.

This method generates an XML document with the file "std_general.xml"
22620829		recursively gathers standard ID strings for all sub-elements of two given XML objects, and prints them.

This method examines the first object of a standard structure and goes to the first child of it if it is an instance of
22620837		takes a list of Node objects and returns an ArrayList of the Node objects after performing a deep copy. These lists are separated by spaces, and contains nested Nodes containing Node objects as inputs for example.
SUMMARY
This
22620855		retrieves thearchivesStandardsManager object associated with the current instance, or logs an error if the retrieveActionForm method is called with null parameters.

This method returns the actionForm object stored in the ActionForm field, or null
22620869		checks if the current element is a leaf element. If it is the last element in it, it recursively checks its children. If it is not the last element, it checks if the element is optional. If it is not, it
22620907		returns an array of all the lineages in the object node. If there are no lineages, it returns a list of the lines with the label set to "no lines." It then sets the element label to the item text of the
22620954		returns an AsnDocumentInfo object from the map of docMap. If docMap meets the criteria, it iterates through the map and returns the DocumentInfoDTO object with a specific key, setting the properties accordingly. When a key
22620974		returns the string representation of the explanation.
This method returns the explanation as a string for the level level.
This method returns false and sets the description to the value of the debug description attribute of the element.
SUMMARY
22620999		takes a list of standards to see and converts it into a single list of ASF standards. It converts each standard to an ASF standards format and then returns the list as a list in that format. If the list is empty, the
22621046		takes a list of DleseStandardsNodes, converts it to an ArrayList, assigns each DleseStandardsNode from its subNodes to a Vector, and then calculates the intersection of the Vector size two input List
22621050		returns a map containing the levels and their associated parameters.

This method loops through each standards in the list, gets the current standards, gets the required levels for each standards, and adds them to the map.
SUMMARY
22621122		takes a list of grade ranges, sorts them, and then creates a sorted list of grade ranges.

This method converts the grade ranges to the sorted list of grade ranges.

This method creates a sorted list of grade ranges.
22621125		returns a sorted the GRN list that is contained within the given input list.
SUMMARY
This method is used to prune newly sorted grn for normalization by adding points to a list and selecting the remaining elements in
22621134		compares the comparison of two grade range items and returns 0 if they are equal or the difference in comparation is less than 1, -1 if the first item is less than the second, or to the default min.

This method
22621193		takes an array of grade constraints and verifies if it can be accessed by getting the minimum grade for the selected category, checking if it is within minimum allowed range, and appending to aGradeReport if needed.
This method returns an
22621196		returns the selected rate constraints from a given set of grade constraints, allowing the user to specify only those of a specified type.

This method checks if the input collection is the total amount of allowed grade constraints. If it is, it
22621237		removes document IDs by iterating through available document IDs, calling the removeAvailableDocs() method, and removing documents that were registered in the system.
SUMMARY
This method is used to remove documents from a system that have
22621259		returns thestandards document, initializing it if it's null by invoking a separate accessor method that adds parameters to the document and extracting the value of the "defaultDoc" parameter.
SUMMARY
This method is used
22621312		returns the selected keywords as a comma-separated string, or an empty string if no keywords are selected.

This method refreshes the display and sets the content viewer to its custom content provider.
SUMMARY
This
22621314		takes a list of nodes, orders the nodes based on an ascending order boolean, and returns a new list with only the nodes in the order.
SUMMARY
This method is used to order the nodes in a list using the
22621328		returns a list of grade range options.
This method gets the grade range options from the AuthManagerBean by iterating over the grade range tag and getting the grade range for each grade range tag.
This method adds grade range options
22621357		This serializes an ADN object to a file with the specified ID and collection. It creates a Document object from the serialized document and adds it to the document.

This method constructs an ADN string using a Document object from a
22621370		registers a new user in the system by getting the user manager from the object repository, and if password verification is required, it creates a new user in the database with the user's username and password.

This method creates an XML user
22621377		saves a user to the system by iterating over existing users and writing their information to file. If none is present, an exception is thrown. Also calls register to flush changes and modify user fields.
SUMMARY
This method
22621383		returns a list of users that have a specified roles. If no users have a specified role, it returns null.

This method takes a collection of roles as an argument and returns an array of roles, which are sorted by name.
22621385		returns a string containing the updated display information for the current user.

This method generates HTML code for HTML elements with user display names, user domain names, full name, email, first name, or middlename.

This method
22621474		initializes the client, sets up method handlers and passwords, authorizes credentials, and adds a callback handler to the client.
SUMMARY
This method is used to set up method handlers and passwords after reading configuration properties.


22621488		iterates through the keys of the sharedState table and prints the keys, values, and sharedState fields. It then prints the complete fields to the console. It then prints the returned fields to the console.
SUMMARY
This
22621514		returns a list of RoleOptions that matches the specified role criteria.
SUMMARY
This method is used to retrieve the list of options for a specific role.


22621517		This method processes an XML document to populate a map with values populated from a list of authorized sets and a collection list of users.

This method processes a list of authorized collections and a collection list and handles them, clearing any existing collections for
22621526		takes a collection and a collection of users and returns a list of users with all the users in the specified role.
This method overrides a superclass method and returns a list of users that match the filter criteria specified by the user and
22621685		retrieves the UUID of a distinguished name (DN) by searching for the server using `dnPattern` as the server identifier. If no server identifier is found, it searches if the name includes the specified DN and replaces it with the
22621693		retrieves the content of a document in the form of an xml string using Dom4j, loading it from a file if it is not available.

This method extracts the content of an XML document, first checking for the 'e
22621782		retrieves collection IDs from a specified collection using an Apache Dom4j XML-based connector.

This method adds specific elements to the results by iterating through a list of DTO elements, converting each element to the appropriate element,
22621889		returns the CollectionConfig associated with the specified hash handle.

This method can resolve a local URI against a collection path handle.

This method throws an exception if the requested URI conflicts with the URI and metadata provider.

This
22622005		sets the text of a node to a given value, creating a new node if necessary.

This method sets the path of the node to the given value.

This method sets the element name on the node to the given string value
22622010		deletes a collection specified by its name.

This method drops a collection from the database.

This method logs an error message with the collection name to the log.

This method creates a collection with the specified name.

22622012		returns a list of paths where the source XPath is specified using a name map. If the minimal record paths are not provided, it iterates through the name-based records and returns the paths with the corresponding names. The method returns the
22622018		returns a list of all the status flags as a sorted list by first getting the status name from the status map, then sorting them by value, then iterating through the sorted list, comparing each element to the value, and returning the result
22622019		takes a value type and a Comparator instance and returns a list of schema paths that are found by the specified value types.

This method generates a map of schema paths by retrieving schema paths using a comparator and a comparator.
22622020		returns an immutable list of all the read-only paths used to the schema.

This method returns an empty list of read-only paths.

This method returns an iterator over all the read-only paths in the schema.
22622021		returns a string representation of the collection Registry.
This method returns a string representation of the collection.
This method returns a string representation of the collection.
This method returns a string representation of the collection.
This method returns a string
22622094		extracts Mui Groups from the vocab using a fetch method and sets the meta data framework with the obtained values.
This method sets the meta data framework with the obtained values, based on the saved parents and loaded parents.
S
22622139		retrieves the virtual page lists from the virtual wiki.
This method returns the list containing the virtual pages.
This method returns the list containing the virtual wiki.
This method returns the list containing the virtual pages.
This method returns
22622142		returns an array of loadedature options, excluding only unloaded formats in the current application.

This method iterates through all loaded formats and returns a list of unloaded forms, including all forms.
SUMMARY
This method is
22622147		enables the 'openDirectory' document element when an XML element is exported to a new port. It expands the "xpath" string and concatenates the sub-elements based on the xpath expression. The method then exposes both
22622152		sets the display state for the current element in the context of a message.

This method dispatches events to all attached handlers that implement the ExtValEvent class.

This method checks if the event name is present in the element content
22622159		returns a list of all format names in the items in the list.

This method handles mouse clicks on items representing records. It identifies the item clicked on and determines which record was selected. For record selection, it updates the records filter
22622205		returns a list of hits that match a given start and length parameter given a start and length.

This method calculates the hits for a document based on the rec IDs and start index.

This method retrieves the result documents of
22622221		returns the ID of a record in the result set, given the record index in the result set.

This method retrieves the ID of the specified result document for a given record index.
SUMMARY
This method is
22622222		takes a list of nodes as input and removes any nodes that are not even-numbered and are contained within. It returns a new list with the removed nodes.
SUMMARY
This method is used to create a sublist from
22622249		returns a sublist of elements from the current layout.
SUMMARY
This method is used to return a sublist that contains elements from the current layout.


22622295		calculates the remaining time for an inactive session by subtracting the maximum inactive interval from the current time. If the remaining time exceeds zero, the method returns "Unknown". otherwise, it returns the remaining time as a string.

This
22622324		retrieves a list of prompts by first reading the metadata fields and then extracting their values, as well as the elements that can become mandatory or mandatory. Additionally, it iterates over the prompts and returns them in a list.

This
22622372		returns the subdirectory for an XML file given a collection name and XML format.

This method creates a collection directory for the "collection" subdirectory in the user's preferences if there is none already.

This method deletes
22622374		retrieves the value of the status options in the DcsStatusType collection but first checks if the collection is empty. If the collection is not empty, it retrieves the enumerated data from the dcsDataFramework.
S
22622388		takes a username and returns either the full name of the user or the user with the given name.

This method obtains the user manager, the current session, and the request parameters.
This method obtains the user manager,
22622398		compares the date of two StatusEntry objects and returns 1 if the first is less than the second, 0 if they are equal, and -1 if the first is greater than the second.

This method performs a path traversal and
22622479		converts binary XML configuration records into a list of field objects. It iterates over the input fields, parsing nodes based on their names and special XSL attributes. The method takes into account the character in the status flag XML record's input.
22622484		This method iterates through a set of arrays of document names, concatenating them into a single string, appending a URI to each key, and assigns a value to the corresponding value field in a schema object if it is an XML document
22622497		returns a string representation of the object, including the document XML and complex data from the container.
SUMMARY
This method is used to provide an XML string to the form of a string representation, containing the document XML as a
22622507		returns a collection of StatusEntries containing each entry in a conciliation order.

This method retrieves a list of StatusEntries from a document, sorts them, and adds them to an entryList. It then sorts the entry
22622513		retrieves the change in the date within the last 30 months.

This method takes an external object as a parameter and checks if the object is not null and has the correct action. If the action has both the latest and date formats
22622526		returns a list of entity error fields from the list of entity errors.

This method returns the corresponding entity error fields.
SUMMARY
This method is used to retrieve a list of entity error fields from the input fields.
22622573		displays the required attributes of an Attribute Field XML element as text.

This method dumps the schema definition element to debug the serialization process, throwing an exception if the element cannot be built.

This method displays the value of
22622602		displays a summary of the form used in the value properties of the multi-value fields. It includes information about the input fields, including the field group, type id, key reference, and selectable constraints. It also includes information about the
22622649		sets the metadata handle of an element to the provided string value, throwing an InvalidXMLException if the XML value is invalid.
SUMMARY
This method is used to set the metadata handle of an element to the provided string
22622679		sets the "lastEditor" node to the specified user name in an XML document. If the "lastEditor" element is null, it does nothing.

This method tries to find the currently open object in the document and returns it.
22622682		prepares a collection query specification by generating a header and iteratively adding all the collection and collections from the authorized collections, concatenating them with "=ANY \n\n" to separate them, and adding a third clause to the query
22622767		retrieves the required attribute value for the specified name from the action, adding any errors if the attribute is not specified.

This method returns the value of the specified attribute as an object, ensuring that it is not null.
This
22622792		returns a map containing the roles of users that are logged in as an administrator. If no existing user is set, it creates a map of an administrator's user and session. It then iterates through the roles of the set of roles in
22622923		returns a list of labels associated with the HttpServlet request. It populates a label with type, version, and native format labels, and it then adds or removes formats from the list based on the workflow format.


22623217		retrieves a VocabNode object that corresponds to the specified encoded path in the current XML format.
This method checks if the current XML format is supported for the specified path.
This method checks if the path in the encoded path
22623231		returns the parameters of an ISqlQuery object, including all scogroups, collections, and collections, as well as any query, name, and database parameters, or an empty string if there are no parameters.

This method returns
22623495		writes collection information by creating a DcsSetInfo object and populating it with various form form fields, including the collection name, collection type, collection options, collection ID, collection info, modified date, sort column, limit columns, locale
22623537		creates a file in the project with a specific name and format. It using the given name to construct a file element and adding its dependencies to the file. It also adds any child packages to the existing file element, including those in acceptable sub
22623543		returns a string that contains the content of the document as a document in the specified namespace.

This method returns a string containing the text in the document with the specified path.

This method writes the document to an output stream.
22623571		returns the username associated with the user associated with the request. If the user is not found, it returns the user's username.

This method returns a map containing information about the session user, including "slee-port-" and
22623578		returns the collection name, handling different collection types such as collections, collections, collections that use them, or any relevant about these collections. 

This method checks if the specified collection exists and returns an error if it does not.

22623594		returns an XML element representing an XML operation with the specified name. It creates a root element with a service description and adds a description to it. It then calls the parent method to add the root element to the parent element and returns the final
22623600		sets text on a node by calling makeXPath() on the given field XML node, which converts the fields to values and returns true if successful.

This method sets text on a node by calling makeXPath() on the given field
22623729		retrieves the native format of the NCS collection configuration. If the collection configuration is null, it attempts to retrieve the NCS collection format using the xpathSelector method. If the selected NCS collection format is not empty, it
22623814		The method retrieves the content of a request and logs its length. If the content length is needed, it gets the content from the request. If the request is an HTTP request, it gets the input stream from the request body. If the
22623869		returns an XMLDocReader object based on the given id, by first getting the repository manager, creating a doc reader and getting the Document object. If the DocumentReader is null, it returns "null" and prints an error message. Otherwise
22623871		writes collection data to disk (or clearing any errors) for a specified Configuration and a CollectionConfig object, storing the result in a synchronized CollectionRecord.

CONTEXT
This method optimizes data records, writes the CollectionConfig data,
22623874		returns a list of all the directories in the records directory.

This method collects all the elements in the records directory, including the language, summary title, summary content, and start and end dates.

This method searches for the
22623885		sets the ServletContext, invokes the superclass's doGet method, and then adds the ServletContext and the smileMoveEventUrl to the servletContext.
SUMMARY
This method is used to initialize the serv
22623898		This method attempts to get metadata handle by calling the getMetadataHandle method of the HandleServiceClient class, and if successful, prints the metadata handle.
SUMMARY
This method is used to obtain the metadata handle for a collection
22623912		retrieves a list of duplicate database URLs for a given URL, including related collection URLs, from each URL. If an exception occurs during the process, it logs the error message, and returns nothing.

This method attempts to retrieve an
22623917		retrieves a list of simulated URL paths specified in the parameters, using a URL checker to check for those paths.

This method returns the collection of simulated URLs specified in the parameters.

This method returns the collection of simplified
22623930		returns the formatConfig for finding the page list, either obtained from the XML or from the configReader.
SUMMARY
This method is used to return the page list of a virtual page configured from XML or from the configReader
22623976		listens for property changes and handles them to perform specific actions based on IDs. The method also handles exceptions for invalid IDs, and handles errors for invalid IDs.
SUMMARY
This method is used to handle exceptions that may occur while
22624005		generates a validation report by populating a VCMILogger object with the component's logging information.

This method checks for any failures in a list of validation reports, returning a ValidationReport if any are found, indicating an
22624020		retrieves the ID of an OsmServiceCollect object by verifying an Invalid File Name. If the directory does not exist, an exception is thrown.

This method takes a string as input and trims any leading or trailing white space
22624034		This method validates the given document IDs against a database service, in which they are used to search for documents. It throws a `ValidatingServiceException` from the client and processes the document IDs to fetch standard documents from the database.

22624074		deletes a file by deleting its contents. It also deletes the xsd_dir that has been set.
This method handles file deletion and renames an existing file with the same name. If no renaming is detected, it delet
22624097		performs a batch of deleted records by calling the `deleteRecords` method on all records to delete. It returns a `Records` object containing the results of the records.

CONTEXT
This method deletes records from the
22624121		retrieves the unique url path for an element. It first checks if the value type and URL attribute of the element are not null or empty, then parses the URL path using the schema path. It returns either the absolute schema path or
22624130		returns a list of all the paths in the URL path schema passed as parameter.

This method verifies that the path and URL paths are all equal.

This method gets the updated schema paths and increments the counter total paths found
22624163		takes a key string as a parameter and validates it, calling another `isBranchXPath` method to check if the key is contained in the current node's data and if it does.

This method ensures that the `
22624176		retrieves all the paths found in an enumeration at a specific position of an XPath expression.

This method extracts the elements from an array of queries that match a given XPath expression and returns them as a list.


22624194		processes an ordered schema path map and a schema element. It then iterates through the ordered schema paths finding the elements in the schema's content. If a non-empty scheme path is found, it uses the element to order elements in the
22624212		decodes a path and returns a string value if the path is valid, the path is converted to an integer and it also checks if the path, and the string representation of the string and the subString value are not null.

This
22624282		checks if the user is authorized to access the requested protocol based on the credentials specified in the S3 and sets the session attributes accordingly.

This method checks if the user is authorized to access the requested protocol based on the credentials provided in the
22624437		retrieves a collectionInfo object by searching for the provided collectionName attribute. 

This method attempts to retrieve the CollectionInfo object corresponding to the provided collectionName attribute.

This method checks a database connection to a collectionInfoDB
22624439		checks if an ID exists in the database, checks if it is a valid value for a supported format, and returns true if it exists and not a default value, and false if it does not.

This method checks if a store with
22624445		retrieves the value at a specific path from a DOM child Element.

This method retrieves the value at a specific path from a DOM attribute.

This method retrieves the text value of a specific path from an Element.
22624449		retrieves a string value from a node at a specified path, throwing an exception if the string cannot be parsed as an integer.

This method is used to retrieve a string value from a node at a specified path, throwing an exception
22624602		returns a map of the attributes of an object. If the attributes already have been processed, it returns the attributes of the original object.

This method takes a list of ModelInput objects as a parameter and iterates through the model's
22624712		returns the AANObjectDocReader instance for reading the document. If the DocReader is null, it creates a new one and returns it. If the DocReader has already been read, it returns an existing one. If it has not
22624724		retrieves a standard response for the specified ASN ID.

This method retrieves a list of standard requests in a format specified by the ASNRequestConversion class.
SUMMARY
This method is used to retrieve
22624744		retrieves results from a URL and processes them according to that in the response. It checks if the request includes an Amoeba query element, and returns null respectively. If the query includes a SubjBean, it updates the
22624748		retrieves a subset of objects from an XML document, populating the object values.

This method retrieves a list of detailed results for a specified domain from an event, returning an empty list if the domain is not found.

22624773		overrides the default toString() method to return a string representation of the object's properties, including its NT, title, Jurisdiction, file name, and access key.

This method calculates the date displayed on the screen
22624800		returns the display text of a text field editor, and if the editor has no children it adds a blank line before it. It then iterates through the annotations, and for each annotation, it adds the text of the annotation and its descendants
22624809		returns the URL-truncated version of the URL.

This method returns the previous URL-truncated version of the URL.

This method returns the URL-truncated version of the URL.

This
22624839		returns the system ID of a collection key obtained from a collection object.
This method gets a key value from a collection object.
SUMMARY
This method is used to retrieve a system ID from a collection object using a term
22624862		checks if a resource has any related resources. If it does, it returns true, otherwise it returns false.

This method checks if a resource has any related resources. If it does not, it returns false, indicating that the resource has
22624888		looks up a "log_src" element as a Resource or an attribute, considering resources and adding a log element with the resource and log path to the parent element.
SUMMARY
This method is used to find elements using
22624891		is a notification that it is interrupted while running. It starts by executing the run method of the interrupting thread, initializing a request object, and then running until the keepRunning variable becomes false.

This method waits until the interrupted
22624995		updates the highest value ID of a specified metadata field in a database.
SUMMARY
This method is used to update the highest value ID of a metadata field in a database.


22625002		writes the data of the object to a text file if the vocabFile variable is null.
This method exports the data as a text file.
SUMMARY
This method is used to export the vocab as a text
22625013		takes an FuzzyXMLConverter as an input and retrieves the history that contains a given node in a genetic result set. It then calls different methods based on the node type, either adding or finding a range field for
22625017		calculates the percentage representation of the total product of the documents in the group, stored in the table. 
This method returns the percentage bar sum, which is a percentage square to the total of the results. 
This method returns
22625020		calculates the total value of a library based on its nr of children (virtual item, normal item, collection item).

This method checks if the total value of each child node is greater than 1, before returning false.

22625058		compares the last modified dates of two files and returns 1 if the first file is newer, -1 if it is older, and 0 if they are equal.

This method is private, which takes two objects as parameters and returns 0
22625064		recursively obtains a label text from a given node's "LABEL" tag, ensuring that only the titles within the node are ignored.

This method stores a node's title text based on an element's "TITLE"
22625072		initializes the servlet by loading properties from the config file and initializing the servlet context.

This method loads properties from the configuration file and initializes the servlet context.
SUMMARY
This method is used to
22625102		recursively sets the field IDs of the list. It iterates over each item in the list and sets the specified field to the ID of the first non-empty item.

This method sets the field ID of the list for the
22625107		sets the ID field for all child nodes of a given node in a vocabList, with the provided ID.
SUMMARY
This method is used to set record field IDs in a given node's list.


22625187		processes characters in an XML XML document, setting output to a StringBuilder object, and appending content to the DOM node. 
This method writes characters to the output stream and sets a variable to indicate closure.
This method writes characters
22625226		retrieves documents from a reader as a list of Document objects.
This method returns a list of the documents in a search for.
This method returns an array of titles for use in a search query.
This method returns an array
22625277		calculates the frequency of the term in the search index. If the index is invalid, it throws a SchemaException with an error message in case of issues.

This method returns the term frequency in the document. It retrieves
22625398		retrieves the document that has been scanned for the current query. If there are no results, it gets the collection for the query from the file. It then checks for the keyword "RESULT". If the keyword is "OUTCOME
22625503		retrieves the URL of the most recent review process.
This method iterates through a list of nodes, retrieves the web application URL using JNDI. If a redirect URL exists, it returns the value of a specific attribute.
22625505		retrieves the node value of the "reviewProcess" element from a DOM document as a string. If there are multiple review processes available, it returns null for example. The method then checks for the latest review process to ensure that the string
22625509		retrieves the cost of all transactions in a collection by retrieving the cost element and checking its content.

This method creates an XML document with a collection record.

This method creates an XML document with a cost element.


22625513		returns a string of the key-value pairs in lowercase format, separated by periods in the string.

This method writes the XML representation of the object to a file in the application's "resources/xml/keywords.xml
22625519		retrieves the Accession date from the approval response item by parsing the XML response and returning it as a Date object. If the status of the approval is `Accessioned`, it uses the `year` field from the XML response. Otherwise
22625538		adds a file to the list of documents that have been removed from the search index. It is called when the document is deleted or added to the list.
SUMMARY
This method is used to remove a document from the search
22625582		sets the URLs in the object, throwing an exception if the xmlProcessed boolean is true.
This method normalizes the URL arrays and throws an exception if they are not.
This method sets the URLs in the object, normalizes the
22625588		is used to close all resources and stop indexing, clean up the reader and facetTaxonomyReader, resetting them to null.
This method handles closing the store in a synchronized block. If the store is closed, the method stops Index
22625625		retrieves the `requestdate` field from an HTML document, formats it using SimpleDateFormat with a specific time zone and one hour offset. If the formatted date is null, it returns `DEFAULT`. Otherwise, it returns the formatted
22625645		generates terms for a given Query object, based on the values received in the Query object.

This method calculates the total query used by the Query object.

This method iterates through the values in the Query object and prints them
22625648		generates a string containing the XML document that contains the cost value properties of an object. It includes a "rows" element. It then loops through the XML documents to extract the costs, records, and codes. For each document, it adds
22625669		initializes the object by retrieving its attributes, setting the name of the object to "Record" and adding metadata vocabulary tags, fields, and record field lookup tables. It also initializes the DublinCore metadata entries and adds the DublinCore vocabulary to
22625828		returns a string representation of the date file was indexed, formatted in the following format: dd.mm.yyyy
This method formats the string representation of the requested date in the format yyyy_MM_dd.mm.ss
22625831		retrieves the last modified date of a specified resource.
This method calculates the modification time of the published resource as a UTC.
This method returns the formatted time since the current date and time.
SUMMARY
This method
22625841		retrieves the log date from the specified path. If the `logheader` variable is null, it returns the default value, otherwise it creates a SimpleDateFormat object and uses it to create a SimpleDateFormat object from the provided log
22625846		returns the start time in the format "h:mm:ss a zzz, EEE MMM d, yyyy").
SUMMARY
This method is used to retrieve the start time in the format "h:
22625857		retrieves the end time of a document based on the current server.

This method checks if the user is authorized to delete a document or folder, and if they are, updates its state and status accordingly. It also performs edit checks
22625952		retrieves the creation date of a document from a specified date field, or returns an empty string if there is no date field value.
SUMMARY
This method is used to retrieve the creation date of a document from a specified
22625968		takes a format string and a filtering flag as parameters, and returns a formatted version of the document. This method generates an XML string representation of the document, using the specified format string and filter flag.

This method generates an XML string
22625970		starts a timer thread that checks the update frequency for a metadata source before continuing.

This method checks if a periodic cleanup works and creates delete records if necessary.

This method checks the update frequency for a directory during indexing operations
22625975		returns a list of all the namespace sets within the repo repository.
SUMMARY
This method is used to obtain a list of all namespace sets that can be used in the repository.


22625980		retrieves the accessiondate from the OAI response, displays the date or publication title and author name, and formats the returned date string according to the provided tag value.

This method returns the publication ID for the requested occurrence in
22626027		returns the last modified date of an ontology, or "unspecified" if none is available.

This method returns the date of the last modification.

This method returns the date of the last modified.

This method
22626063		retrieves an array list of annotations for the parts of the content for a given query. It extracts the pathways and the names of those paths. It then returns an ArrayList of annotations with the pathways and their names as the keys
22626066		 displays a configuration file in a dialog box for editing the repository location and user agent parameters. The method then sets the base URL, user agent URL, and private key as properties of the selected property in the repository selection panel with the current user agent
22626067		performs a list of resource finders, such as resource finders which return a list of resources. It creates an AS400 object for each resource, which is a list of all its values. The list is then populated by extracting the elements
22626073		inserts the specified content into a specified resource URL. If the resource does not exist, it creates a new resource. If the resource already exists, it adds the source to the new resource context.

This method puts the content of a
22626074		returns a list of annotations of an item, with pagination logic for multiple items.
SUMMARY
This method is used to obtain a list of annotations of an item.


22626090		retrieves the annotated item formats from the multivalue document and adds them to an ArrayList. It then converts the ArrayList to an ArrayList of strings.

This method returns an ArrayList of annotated item formats.
22626150		creates and returns a deep deep copy of an object as a document.
SUMMARY
This method is used to create a deep copy of an object as a document.


22626192		initializes parameters from the CONFIG, CONTEXT, and CONTEXT_PARAM elements from the ServletContext. It also prints initialization parameters to the console.
SUMMARY
This method is used to print initialization parameters from the Serv
22626199		returns the service description reader, or null if it is not set.

This method initializes the QoSServiceCacheFactory object with the required services repository URL.

This method retrieves the registry of service descriptions from the registry
22626202		returns a list of all members in the registry that are not currently inactive.
This method calls the superclass's getActiveMemberHandles method.
SUMMARY
This method is used to retrieve a list of members whose class
22626215		returns a Document object containing the metadata of an item which is created by calling the getItemRecord() method of the DocumentHelper class to create the Document object.
SUMMARY
This method is used to retrieve an item record from
22626216		retrieves a canonical Nsdl Dc item record if it's not already found in the canonical Nsdl Dc and returns the item. If no item is found, it creates a Document object with the canonical Nsdl D
22626219		retrieves the attributes of an object and returns them as a string, or an empty string if the object does not have attributes.

This method retrieves metadata (AttList) of an object and adds an object with a DRE
22626298		retrieves the list of property values for a given named name from the NDR repository.

This method removes the property with the given index from the repository.

This method initializes the repository with a DIR and EPR
22626301		returns a list of related objects for a given transaction name by parsing the URI for an EDPQRDF object. It adds relationship values to a linked list based on the transaction name if the object is a class and unique. Otherwise,
22626384		checks if two RelatedResource objects are equal by checking if their _url and _kind properties are equal.

This method checks if a given object is an instance of CollectionRange, if not it returns false. If the objects are the same
22626468		returns a list of the setSpecs value for the given field in the doc object or an empty list, depending on the "setSpec" value.

This method returns an ArrayList of all the OaiSetSpec objects in
22626504		triggers an event that indexes an item in a repository. It first adds the event to listeners, then iterates through registered indexers to register each event. It checks if the event was triggered and creates an IndexingUiController object
22626563		returns the file path for a given metadata record, excluding a specified collkey. If no unique map file exists, no canonical path is provided.

This method recursively searches for a unique map file for a given metadata record,
22626628		returns a string representation of the object.

This method returns a string representation of the `Format` object.

This method returns a string representation of the `Pattern` object.

This method checks which fields of the `
22626702		generates a string containing the indexing information for the object based on the provided list of column names. If the list is not provided, it is returned as is.

This method generates the indexing days of the week for the specified
22626749		adds an OAI error to a list of errors. If the list of errors is empty, it throws an exception with the message "Invalid OAI Argument". It also logs the error and sets a flag for bad verb calls.
S
22626800		overrides the `run` method and tests the `getSetInfo` method by retrieving and processing the entry set configuration, checking initialization settings, setting the SLD, and checking the existence of rules.
SUMMARY
This
22626951		retrieves the format type name for indexing. If the format type and format type are provided are invalid, the method returns null. Otherwise, it returns the result of calling another method with the name "_index" fetched from the configuration
22627050		returns the last modified time of an index, or an empty string if the index or the record number is null.

This method is used to create a timestamp string from an index's last modified time.

This method is used
22627090		retrieves the properties for their "See also" entities (FUTURE) that are approved for use.

This method retrieves the properties for their "SeeAlso" entities (FUTURE) that are approved for use.
22627092		returns the result type for the specified annotation's vocabulary result.
SUMMARY
This method is used to determine whether information on predicting teaching and learning situations is available.


22627296		sets the directories for the config file, NDR indexer, and persistance directories.

This method sets the directory for handling files during DCHS calculation, and logs the process time and execution time.
SUMMARY

22627464		returns an array list of the paths for importing stylesheets.
SUMMARY
This method is used to retrieve the paths to import stylesheets from an XML document.


22627479		retrieves the value of a specified node, parses XPath expressions to extract a value, and returns it as an Object.
This method iterates over the nodes in an MDX document, parsing nested nodes for the root node.
22627492		extracts the documentation from an XML representation if it is available.

This method maps an XML document to an XML element representation, storing the document's title, and extracting the documentation element.

This method maps an XML document to
22627504		removes an element from an XML document given its XPath. If the element does not exist, it throws an exception.

This method removes all the references to some element from the references in some data structures.

This method tests
22627540		creates various XML element and attributes for a URI map, including name, type, title, and map context. Finally, it returns a String representation of the XML element.
SUMMARY
This method is used to convert the map
22627553		converts the object to an XML string representation.
This method clones a node in the tree into a new node.
This method returns an array of strings for the SQL nodes.
This method returns the value of an element in the tree
22627578		retrieves the QName for a given qualified name by checking the namespace and prefix's validity. It then creates a QName object using the qualified name and namespace, and finally returns the QName object.

This method checks if the
22627656		retrieves the simple content type of an element by checking if it has been added before, if not, it retrieves the simple content type if it exists, otherwise it retrieves the simple content type from the given namespace prefix.
S
22627662		returns the extension element associated with the current model element, or null if there are no extension elements.

This method selects an element with the specified name and extension from the extension element.

This method selects an element with the specified
22627664		returns an element representing the restriction associated with the specified element, or null if no content model or text only model is found.

This method checks an XML schema reader to determine if one is defined, all its elements and conditions. It
22627716		retrieves a list of Nodes containing instances from the XML document based on a specified XPath expression. It first decodes the XPath expression and extracts the corresponding XPath node. If the XPath predicate is "instancedoc", it
22627719		returns a list of members representing a substitution group in a specified element, including subgroups.
This method returns a list of members representing a substitution group in a specified element, including subgroups.
SUMMARY
This method is
22627728		retrieves the current namespace, printing the namespaces and their prefix, and printing if it has a namespace. It also prints the size of the stack if it is greater than 1.
SUMMARY
This method is used to
22627738		pops the top element from the stack and pops its namespace. It also prints the current namespace, ensures it has the correct prefix, and returns the popped namespace.
SUMMARY
This method is used to safely remove and return the
22627743		returns the maximum number of instances of instances that the current instance can be used to maintain.
SUMMARY
This method is used to determine the maximum number of instances of instances representing the current instance.


22627777		takes an instance element and returns a list of the acceptable members for that instance element. It attempts to create a ChoiceGuard with the given instance element and prints it as XML. If the guard is successful, it returns a list of it.
22627785		checks if the given element has the attributes with a specific prefix.

This method iterates over the children of the given element and checks if the type attribute of each child is equal to "build-in". If so, it checks if
22627798		checks if an XPath element is a repeating element based on its schemaLocation and the object's local name.

This method, isRecordingElement, retrieves a repeating element at a specified path and context, or triggers a recording attribute
22627830		returns the compositor guard of the class if it has been previously constructed, otherwise it returns null.
SUMMARY
This method is used to get the parent compositor guard of the class, constructing it if it has not been
22627850		checks if all new members in the association path were accepted.
This method prints the main interaction tree\n with the root edge.
This method visits the root edge of the interaction tree.
SUMMARY
This method is used
22627888		takes in as arguments and returns an empty `Stack` object. It then analyzes the given URI prefix map and checks if it is empty or null, if not, it iterates through the preferred prefixes and parses the URI for
22627892		sets the harvester status to the specified value, updating the current status if it already exists, or setting the new status otherwise.

This method populates the harvester queue data object with the provided attributes, including the queue name
22627972		sets the repository identifier of the object, removes the repository identifier from the object, updates the object as in the repository, and returns it.
SUMMARY
This method is used to update a repository identifier in the object.


22628065		sets the protocol version to the passed value and updates the AdminData object passed as a parameter.
SUMMARY
This method is used to update the protocol version in the AdminData object passed as a parameter if the updateInfo object exists
22628091		compares two nodes based on the specified order.

This method first compares two adjacent nodes based on their values.

This method then extracts the order of the current node and updates the values in the data tree.

This method
22628119		finds the place in a tree representing the document in an XML file.
This method recursively selects the element that contains the name and adds it to a list of available nodes.
This method checks a nested element one-by-
22628130		removes a comment by removing the specified identifier from the content of an element.

This method removes a comment from the corresponding Element with the specified identifier.

This method inserts an XML element into the context.

This method updates
22628132		sets the name of the repository to either supplied or unmodified based on the `String` value passed as an argument.
SUMMARY
This method is used to save or update the name of repository name in the admin data and store
22628158		This method retrieves the value of a specific attribute of an element if it exists, or returns null otherwise.
This method returns a list of the attributes of the element.
This method returns all the attributes of the element.
This method
22628176		is called `convertXML` to converts an XML string representation of the object to a string and returns the string. It stores the XML string in a variable called `xml` and returns the result of calling `convertXML`
22628188		is a filter that does not convert values based on the input string argument. It returns "false" if the argument is not included in the values array, and the string "false" otherwise.

This method checks if an argument is valid
22628192		takes an XPath expression and extracts a GlobalDef object based on the XPath expression in the XML document. If a schemaNode is found, the corresponding object is returned in a GlobalDef object. Otherwise, null is returned.
S
22628197		sets the latest date for a user's earliest datestamp by updating the user's specified key in the admin data and setting the user's timestamp as the newest date.

This method enables a user transaction to create and delete its cache.
22628199		returns a list of the nodes in all references to the primary and other assets referenced in the record.

This method gets the super object.

This method gets the parent record.

This method gets the projects tree node.
22628200		adds a stylesheet to the converter configuration.
This method adds a stylesheet to the generator configuration.
SUMMARY
This method is used to add a stylesheet to the converter, including a stylesheet for specifying the styles
22628206		sets the specified URL and updates the URL in the parent record if the URL does not exist.

This method sets the URL of the record with the specified name.

This method receives a list of records and returns a Page object containing
22628221		processes a parent node and processes its children as an XMLNode. It uses a map to store the path and links the parent node to the child node. It then processes the nodes at the child node and adds them to the parent node.
22628242		takes an XPath string as input and encodes it into a hierarchical representation of the object, applying XPath validations and resolving any missing XDoc or any child nodes. 

This method formats the XPath string into an XML
22628251		localizes a string using an XML content handler. It first locates the input XML string and then uses a utility class to convert the XML output to a string. It finally replaces placeholders in the XML string based on the length of the input
22628283		initializes the parser and sets the state to STATE_INITIALIZED.

This method initializes the fields of the DleseDocument and sets the docPath, imgPath, and myTagLibrary field.

This
22628384		retrieves a list of the records whose namespace='pub'.
This method constructs a `XMLTable` object for a table based on specified rows and parameters, and sets its configuration based on the given configuration.
This method retrie
22628424		returns a list of keywords in the form of an array list containing "record:0.general:0.keywords" each keyword.

This method returns a list of keywords stored in a search searcher.

This method
22628442		adds a string to the end of a list if the list is not null or "null".

This method adds all the elements of a list to the end of the list.

This method adds a string to a list to
22628446		inserts the specified object into a list at the specified index, ignoring cases where the object is an object of a specific classes, or it should not be inserted.

This method, insertIntoList, iterates through a list,
22628472		sets the value at a given row and column, assigning the corresponding value to a specific column and removing data that are not in the expected format, then only updating the cells in the table if necessary. It also unregisters listeners and removes references
22628494		This method initializes a JTextFieldEditor for the name and initializes its properties.
This method initializes a JCheckBox for controlling the system's operating system.
This method initializes a JLabel for the look and feel.
22628590		returns a BooleanQuery that checks if the DISABLED has been set for any set.
This method checks if the DISABLED has been set for any set.
SUMMARY
This method is used to get a Boolean
22628624		returns a JLabel with customized tooltip text such as bold and italicized.

This method creates a label with the provided text and tooltip text, allowing them to be plotted either on a line or a page.

This method
22628732		returns an ArrayList of formats that can be converted to a list of formats that can be converted to Format objects.
SUMMARY
This method is used to determine if the input formats can be converted to formats that can be
22628733		recursively adds a DefaultMutableTreeNode to a DefaultMutableTreeNode and its descendants into the DefaultMutableTreeNode. If a node has children, it is added to the list of new nodes. If a new node is
22628734		sets attributes for the top of a stack.

This method sets attributes of a stack by iterating through a list of attributes and calling setTopAttributes on each attribute.

This method sets top attributes of a stack, including elements as
22628739		returns a concatenated string containing the HTML code for an OPML document based on the selected opml node. If a selection has no nodes, it appends an empty body. Otherwise, it traverses the selected nodes and returns the
22628747		returns an ArrayList of indices that are updated when there are no indexed indexes. The ArrayList is used to update the indexed sets.

This method returns an ArrayList of indices that are re-indexed when there are no undone
22628937		checks if the selection path is empty and returns if it is. Otherwise, it finds the root node in the selected path and retrieves its parent.
This method gets the last path component and checks if it has only one child. If it
22629019		retrieves the original URL from the cache if it exists.
This method calculates the URL type by finding the cache by url, and then extracting information from the Cache object if it is not null.
This method retrieves URL parameters from
22629383		returns a clone of the HashMap of the enabledSetsHashMap, and if it has already been created, it retrieves it.
This method iterates through the enabled sets and adds them to the clone.
This method returns
22629431		returns a clone of the object with the same modifiers as modified by retrieving disabled sets and labels for each set.
This method performs a random run of the filter against the output, displaying all the results, filtering the results within 5 hours intervals
22629922		sets the stemming enabled property of a document. If the object is not locked, it saves the value to the file. Otherwise, it checks if the object is locked. If it is, it applies the stemming function to an object. If the
22630141		returns an ArrayList of disabled Sets, which are descriptors used to determine which attributes to use for a set. When disabled sets are found, it checks the attributes of the set and removes them if the set is in an enabled state.
22630329		enables the specified set by enabling it, for the given user ID, and a lock.

This method creates an environment, an instance, and a list of list fields. It then adds elements to the list, sets a value in
22630354		disables or erases the set specified by the given setUid for all contained KeyValue objects in the system.
This method tests the disabling of the set specified by the given setUid for all contained KeyValue objects in the system
22630538		removes the set info associated with the specified index from the DataSetManager.
SUMMARY
This method is used to remove the set info for the specified index from the DataSetManager.


22630721		This method is executed asynchronously and removes the first set from the directory index based on the file system event. It allows the calling thread to retrieve the directory information for each set. The directory index is synchronized and the method iterates through the
22631400		logs an IFlowTracer at the trace level and adds a new index record to the index file. It iterates over the existing index info lists, `indexList` lists, and `lstList` lists, creating a `
22633708		defines OAI sets for collections in the background, optionally running a specified run in the background. If the runInBackground flag is true and the sequence flag is true, the method runs in the background. Otherwise, a new thread that runs
22671223		returns a column cell at the specified index, based on the column name provided.

This method gets the column cell at the specified index, using a column type to determine the appropriate type.

This method creates an instance of F
22671428		corrects the value of the input, applies the status and status line to the current page, and sets the status description accordingly.

This method creates a status message using the provided status, sets the status line to an error message, and
22671744		adds a child account to the current account and removes the account from its parent. It also checks if the new child account is an instance of Account. If it is, it throws an exception. 

This method removes an account for
22671888		executes a load operation for a given model when the entity is loaded.

This method does not execute any operations by displaying an info message in an error frame.
SUMMARY
This method is used to send a model object
22671982		creates a table with the specified layout and size, and sets various settings for hidden and title lines.

This method creates a table control using the specified composite, setting its height, style, and grid data. If the table is horizontal
22671986		updates the values of a controller to reflect any changes made to the model object. If the input stream is a resource, it reads the data from the resource and sets it as the model.

This method handles changes in the view site
22672154		refreshes the combo box with an array of accounts retrieved from the database by iterating through the list of accounts and populating the combo box with items for each account.
SUMMARY
This method is used to populate the combo
22672157		sets the selected account to the selected account in the account combo boxes.

This method enables or disables the accounts combo box based on the enabled status of the tabbed settings page and the selection status.
SUMMARY
This
22672162		sets the selected currency in the currencies combo if it is not null and not already selected.

This method updates the currency fields, including the name, rate, branch, start date, start date and end date, end date, location,
22672184		This private Java method takes an array of Payment objects arguments and uses the EJBQL clause to perform a SELECT query, then returns the ResultSet contained in the array.
SUMMARY
This method is used to create a ColumnText
22672271		validates the model by checking for any other mandatory fields, including debit and credit accounts, credit accounts, and credit currencies, before checking if they are empty.
SUMMARY
This method is used to check if any mandatory fields are
22672319		calculates the total amount paid by adding the payments of the specified account and its children.

This method calculates the total amount paid by multiplying the total sum of the payments of the account and the children accounts for the specified country. It
22672407		converts a string ID to a database ID, returning null if the ID is null or empty.
This method converts a string ID to a database ID in the request namespace and returns null if the ID is null or empty.
This method
22672410		retrieves a Currency instance from the database by its ID and checks if the input parameter is empty or null.
This method initializes the GUI with values entered in the fields and values group, and creates a User object with the provided values
22672498		searches for files from a specified directory, and optionally applies a file selection option to a file. It creates a FND (FiniteDual Method Description) object, which allows users to select files from that directory as input. If the
22829811		closes the input/output streams.

This method closes the connection and sends a shutdown signal to the Cscc framework.

This method ends the connection process by closing the connection if the active connector is completed and sending a shutdown
22829816		starts listening for incoming clients on a server port.
This method attaches a listener to a connection and notifies the communication listeners about the listening process.
This method reads a socket data from a data sink and processes its incoming messages.

22829817		stops listening for incoming client connections.

This method processes incoming client connections.

This method checks if a connection is expected to stop.

This method closes the server socket.

This method stops listening for incoming client connections
22829938		receives a data event and updates client messages based on a different type of event such as updates, sends data, or reports. Additionally, it handles different types of message events.

- This method receives a data event and handles it
22829949		receives a CommunicationEvent, identifies the listener that triggered it. If the listener ID matches one of the following methods:
the event that occurs is a connection attempt, the method returns false, a connection of the application server is disconnected,
22881217		determines if a given cell in the game board is signalling. If the cell is not signing, it does not sign it.

This method checks if a given cell is in the game board. If the cell is not signing
22907663		attempts to parse a suspected firmware date, returning null if parse fails and logging an error if not.

This method attempts to parse a suspected firmware date, returning null if parse fails and logging an error if not.
S
22907855		sets up the file type table model and registers them with the window's list of table models.
This method sets the current file type in the file type table model.
This method sets the editor pane for the current file type table view.
22907857		saves the configuration, notifies the registered ConfigurationListeners with a ConfigurationEvent indicating that configuration has been saved, and logs the event when the commit occurred. 
This method saves the configuration, notifies the registered ConfigurationListeners with a
22907860		enables or disables test connection components based on the specified boolean value. 

This method updates the view by setting the connected status of all components to false, enabling the connected components, and setting the focused component.

This method
22907865		tests if the FTP server is connected to the Bluetooth device using a connection, and if so, it adds connection listeners to the FTP server.

This method checks if a connection to a device is established, and if not, logs an error
22907912		updates the enablement state of initial paths and context menus based on the current state of a toolbar. It also clears all other menus, disables context menus, and updates the menus as needed.

This method handles the event when the
22907967		is responsible for handling the closing of various frames related to program execution and logout. It also initializes logging, flushes any files associated with the environment, and disposes of windowCloseers.

This method handles button clicks for various
22907997		removes redundant operations for a given file's child/parent folder by removing them from the list of operations.
SUMMARY
This method is used to remove redundant operations from a given OBEXElement by searching for its parent folder and
22908030		sets the filename and location of a file or window.
SUMMARY
This method is used to set the location of a file or window based on an OOBEX element.


22908034		This method sets the displayed created data to the form field when a file element is clicked.
SUMMARY
This method is used to set the formatted creation date of a file element.


22908035		updates the properties of an OBEXElement when the user triggers a modified configuration.

This method loops through the list of enabled file changes and checks if any of them have been modified since it was last modified.

This method checks
22908038		sets the last accessed date for the accessed text field in the application window if it is not already set.
This method sets the accessed date for the accessed text field in the application window if it is not already set.
SUMM
22908225		copies a file from the source directory to the destination directory.
This method copies a file from the source directory to the destination directory if the file is a directory.
This method copies a file from the source directory to the destination directory if
22916164		returns a string representation of the point object, including its latitude, longitude, and GPS position.

This method returns a string that indicates if the GPS is showing based on the map type found in the requested IDs.

This
22916385		prompts the user to confirm if they want to restore the last commit mode if the user wants to save their connection. If the user confirms, the method calls the saveRecord method to set the old auto-commit mode and updates it in
2298092		sets the size of the view rectangle to the specified width and height, but only if the view rectangle's size is not negative.

This method adjusts the bounding rectangle for the view rectangle and repaints it.

This method sets
2298093		returns the current session in the session manager if it exists, otherwise it returns null.
SUMMARY
This method is used to get a session from the current available session manager.


2298162		sets a new Paint for all selected objects within the drawing cache. It returns true if the selected objects are now in the current list and false if they are not.

This method sets the selected paint for the current object based on the mouse
2298199		reads three integers from an input stream and returns them as a new Net3IntData object.
This method reads three integers from an input stream and two doubles them into a new Net3IntData object, sets those doubles to the new data
2298239		updates the selection based on the given mouse input. If the mouse pointer is inside any of the drawn objects with access to the mouse, it calls the method updateSelection(...) to change the selected object's visibility. If the mouse pointer
2298311		sends an instant message to the server by prompting the user to enter an "IM" text. It then sends the text entered in the text field to the current user's account.

This method is used to send initial IM messages to
22987089		takes a request and adds an extended request to it if the request is a ReconnectRequest. If the request is a CreateViewRequest, it creates a new CreateCommand and adds it to the request's extended data.

This method
22993152		creates the top-level palette 'Connector' group for connection model elements and adds it to the palette stack.

This method creates a palette group for connection model elements and adds it to the palette stack.

This method adds a
22993300		adds a property descriptor for the "setPort" feature to the given object.

This method overrides the default behavior of the superclass. This method creates a new ItemPropertyDescriptor object with the given parameters. It adds
22993381		adds a property descriptor for the bind feature to the list of property descriptors for the specified object.

This method overrides the superclass method to add descriptors for the bind properties of a bind port to the list of descriptors
22993383		adds a argument property descriptor to the list of property descriptors for a given object.

This method overrides the get method of the superclass and adds three additional property descriptors for the object: name, address URL, address type
22993401		adds a property descriptor for the "complexFrom" feature of a connection complex to an item property descriptor list. It first checks if the list of property descriptors has not been initialized, and if not, it calls the superclass's method
22993403		returns a list of property descriptors for the current object, including two additional property descriptors added for the properties in the object.

This method suppresses warnings for unchecked type warnings.

This method adds a property descriptor for the
22993449		adds a property descriptor for the conditionTo feature of a View object.

This method returns a list of property descriptors for the object.
SUMMARY
This method is used to write the conditionTo list property descriptor.
22993450		adds a condition from property descriptor to an item property descriptor list.
This method adds a condition from property descriptor to an item property descriptor list.
This method adds an condition from property descriptor to an item property descriptor list.
This method
23008646		creates a palette group for the given container.

This method creates a palette group for the given container.

This method adds three groups to the container.

This method adds one group to the container.

This method
23010166		adds a property descriptor for the "name" feature of the TAName class defined in the AbstractTag class.
This method initializes the object's item property descriptors and returns the itemPropertyDescriptors. 
This method
23010194		adds a location name property descriptor to an object's property descriptors.
SUMMARY
This method is used to add a location name property descriptor to an object's property descriptors.


23010205		adds an exit assignment property descriptor to the itemPropertyDescriptors list.
This method overrides the default implementation of getPropertyDescriptors to include additional item property descriptors for subclasses.
SUMMARY
This method
23010209		adds a property descriptor for the entryAssignement feature of the AbstractEntry class.

This method overrides the default implementation of `getPropertyDescriptors` to add a property descriptor for the entryAssignement feature.

23010236		adds a property descriptor for the "guard" feature of an object.

This method adds a property descriptor for the object's ID to the list of property descriptors.
SUMMARY
This method is used to include additional
23010239		This is a getter method that returns a set of property descriptors for the specified object. If the property descriptors have not been initialized, the method calls the superclass's getter methods to add those descriptors, and then adds four
23010241		adds a property descriptor for the select feature of an AbstractEdge object.
This method adds a property descriptor for the select attribute of an AbstractEdge object.
SUMMARY
This method is used to add a property descriptor for the
23010243		adds a property descriptor for the "to" feature of an "EClass" object.

This method adds a property descriptor for the "to" feature of the "AbstractVertex" object.
SUMMARY
This
23010298		The method returns a JScrollPane containing the JTextArea for displaying element names.
SUMMARY
This method is used to provide a JTextArea with specific settings for displaying element names in a JScrollPane.


23010316		returns a JScrollPane object that contains a component that displays the description of the element, if the JScrollPane object does not already exist, it creates it.

This method returns a JPanel object that contains a label
23010377		returns a JPanel named `jPanelInPutPort`.
If `jPanelInPutPort` is null, this method creates a new `JPanel` with a bounds of 16 pixels 60 and 40 pixels 80, creates two
23010394		returns a JPanel that contains the scroll pane that contains the text field for the output port.
SUMMARY
This method is used to retrieve the scroll pane for the output port.


23010585		returns a JPanel object named btnSearch if it is not null, otherwise it creates a new JPanel with a FlowLayout that contains 2 JButtons and 0 JLabels. It then returns btnSearch.

This
23010590		sets the title and size of the main window, sets its content pane type, calls the Layout(), and sets the window to the center of the screen.

This method sets the layout manager for the main JFrame, adds it as a
23014246		calculates a float value between the first Vector4f 'first' and the second Vector4f 'second' using a formula involving time differences and the ratio calculated by the first.

This method computes the acceleration of an object
23014250		notifies all listeners of a change to the object at the specified index. If no listeners have been done, this method creates a new one and notifies all listeners with the table model event.

This method notifies all listeners of an
23014251		This method notifies GUI listeners that a data set has changed. 
This method notifies listeners that a column has changed.
SUMMARY
This method is used to notify GUI listeners that the data set has changed.


23014271		retrieves the value at the provided `getValueAt` method.

This method updates the selected color based on the provided `columnIndex` with the values retrieved from the `points` table.

This method overrides the
23014277		returns the index of a Semantic object within a list ofSemantics, including its start, end, length, capacity, and substring.
This method updates the scale of a Semantic object by updating its start, end, thickness
23014371		binds effects to the OpenGL engine.


23014409		customizes a parameter by setting the value if the value is not null.
This method initializes the effect parameters with the effect parameter name and value.
SUMMARY
This method is used to customize the effect parameters by setting the
23014446		adds a material to the library if it is not already defined.
This method adds a material to the library with the specified key.
This method returns a list of materials, each key represents a material in the library.
SUM
23014462		performs a backward rotation by moving in the direction specified by the direction parameter.

This method updates the direction of the sky.
SUMMARY
This method is used to set the camera relative to the direction passed as a parameter
23014469		moves the camera forward by a certain number of movement.

This method moves the camera backward by a certain number of movement.

This method rotates the camera around the specified angle.
SUMMARY
This method is
23014476		adds a rotation to an existing rotation in the BoundingBox, assigning a new rotation matrix, and applying a rotation around the specified axis with a translation and rotation around the specified transformation matrix.

This method rotates a transformation around or
23014477		adds a translation to an object's rotation matrix, setting its lower and upper bound.

This method sets the translation of the object's normal using a Vector3f translation.

This method adds transformations to a node based on the
23014479		adds a scale to a scale matrix with the given size.

This method divides the given vector by the scale multiplied by its length.

This method adds a scaled scale to a scale matrix with the given size.
SUM
23014667		calculates the distance between two points in 3D space, considering the normal of the point and the rotation of the point to the origin of the movement in 3D space.

This method adjusts the angle between two points by calculating the
23014683		calculates the height of a triangle using the formula: sum(a0) + dot(normal) + 1 + dotx * ax + a + cos(dotx) * cos(a + b,z) * sin
23014684		sets the identity matrix for the matrix. If the matrix is compatible with the current matrix, it adjusts the factors of the columns and rows to account for the inverse of a given step and backstep. If the matrix is not compatible, the method
23014702		checks for culling and updates the cross product of the model's location and elevation at a given state in 3D space. If culling occurs, it clones the destination point of the line specified by the target vector. It updates the direction and
23014704		sets factors on the specified column to the specified values as specified by the factors argument.
This method sets facts from the specified position to the values with the specified size argument.
SUMMARY
This method is used to set factors from
23014715		calculates the differences between the current local point and the given Vector3f within the ViewportPlate.
This method subtracts the given Axis from the current local point of the ViewportPlate.
SUMMARY

23014720		scales the coordinates using the provided float value by scaling the x, y and z coordinates, and then setting the values of the x and y and z coordinates to match those of the transformation.

This method returns a vector based on the
23014722		calculates the normal vector that the object is moving about into.

This method computes the dot product of two vectors.

This method computes the normal vector where the object is moving into.
SUMMARY

23014832		adds a target element to a stack of targets, retrieving the element and updating the stack structure.
This method adds an element with a given map entry to the provided type.
This method adds an element to a map with the given type
23014849		pops an object from the active TargetElements stack and checks if the popped object is an instance of TargetElement. If so, it calls the targetElement's objectPopped method.

This method throws a NoSuchElementException,
23014852		takes an object as an argument and pushes it onto the stack, checking for specific cases, and if a special case include the object itself, it adds it to a list to be popped.
This method calls the objectPushed method.
23014934		registers a value channel for the class with the given semantic.

This method registers a value channel for the class with the given semantic from the semantic registry.

This method registers a value channel for the class with the given sem.
23014999		creates a new instance of the class specified by the jEncrypter.xml extension: {base64} if the key name provided is not empty. If the key name is "COBS", it returns the underlying cbase64.
23015339		increases the current index in the specified array by 1.
SUMMARY
This method is used to update the current index in the object's properties with the current index.


23015340		takes an XMLContextData parameter, retrieves the value of the context.
If the value is not null, it sets the value of a method to the XMLContextData.
If the XMLContextData parameter is null, it prints
23015346		sets a property value for a given XML context data, property name, and value, taking into account whether the property has a collection or not.
This method stores a new value to a specified property.
This method gets a record object for
23015349		sets the key value of an XMLContextData object to a value specified with an optional property to set.

This method copies the key values of an XMLContextData object to another object, using a KeyStore constructor that takes maps of key
23015369		adds a curve data to the list of curves, updates the UI, and adds the curve data to the graph.

This method tests the addCurveData method to verify that it correctly adds curve data to the table model.

23015444		This method notifies attribute listeners of changes to a particular attribute. It sends notifications to listeners about the change, and it queues a notification to all attribute listeners periodically.

This method does some server call for invalid arguments. It calls notifyAttribute
23015546		creates visual scene instances for a given collada scene. The method updates the component title and layer. It extracts client information such as visibility and name, sets a vertical scrollbar to the visibility, and creates a pointer node for special characters.
23016687		resets the state of all rows in the matrix 1 to 3, resets the states of the rows with the constant value 1.
This method calls the reset method of the applicationController and repaints the canvas.
This method calls the
23017207		adds a component to a container and associates a GUI component with an event manager.

This method adds a JButton with a specified text to the container and adds it to a container.

This method adds a JButton with a
23075980		checks if the current `OrderedHashSet` is the same as the first element, meaning it is equal to the given `OrderedCollection`, the first element is equal to a long mask with a negative number of bits set to a fraction
23076026		tests the equals method of the Vector class. It creates a new Vector object with an empty element, then iterates over it, and then prints "equals" to System.out, while "equals" creates a new Vector object with
23076032		tests the setMarked() method by initializing a match object, setting the checked status to true, and creating an instance of the Match class. It then retrieves the marked state of the match. When it is checked, it calls the
2315205		This method prints the received line of data to the client. If the message is a single line, it calls the loopNext method with the next line as an argument.
If the message is not the first line, it reads from the current
23185729		is used to handle key typed events in the text area, specifically handling the "insert" and "delete" keys, as well as handling subscripts associated with them. It calculates the appropriate highlighting behavior for Mac OS, including zeroes and
23186257		gets a generic list object by its name. It iterates through a list of lists, skipping hidden lists, and adds any lists they are not present in the list or in a list with only a hidden list. It then checks if the list
23186376		prints an error message to the console indicating that the input command was invalid, and increments the number of errors.

This method, after, attempts to receive a file output stream, creates a new output stream using the specified output interface. It
23186407		adds a comment to the file header if the comment is not empty.
This method adds a comment to the file header if the comment is not empty.
This method adds a comment to the file header if the comment is not empty.
2319170		converts an object to a string using the specified format (e.g., applying a standard style pattern to a date field).
SUMMARY
This method is used to convert a subject value to a string using a specified format (
2319185		sets the value of the subject object to the argument, parsed by the format string if the format is text and is not a valid array of values.

This method sets the subject to the given integer and a string field. If the given
23262300		takes three key strings (one from the object's keys, the other from the object's values) and binds them to their corresponding values (one from the key and the other from the values). It updates the internal state of the object based
23285849		generates a MyRoleType by instantiating a MyRoleType using the Stereotype stereotype bpelPartnerLink and assigns it to the MyRole component.

This method checks if the myRole component is null, if so,
23285855		generates a string representation of a partner link, with the name of the partner link's qualified name represented as the relationship's identifier, or the partner link's name including the partner link's qualified name, or "wsdl" if the
23286083		returns a collection of partner links associated with the given comment element within the scope.

This method adds partner links from the given BPEL process to the current scope. If the BPEL comment is not null, it iterates over the
23311713		removes a specific knowledge source associated with a given URL from the knowledge sources list. If the knowledge source was found, it removes it from the knowledge sources list and returns true. If the knowledge source did not exist, it creates a new knowledge
23311950		updates the visibility of a config entry with the specified value and accepts a visitor for validity.

It iterates through the list of listeners and for each listener, it invokes the method on the config's handler.
SUMM
23311960		returns a boolean value indicating whether the configuration option should be set to "special" or not.
This method checks if the feature option is present and if so, returns true.
This method checks if the configuration option is present and if
23311985		disables certain buttons, enables specific panels, and sets the enabled state of several tabpanels based on the current tab index.
SUMMARY
This method is used to enable the start of a graph algorithm.


23312109		checks if all mandatory options have been set and enables all components if so.

This method checks if all mandatory options have been set and enables all components, and then enables all components.
SUMMARY
This method is used to
23312147		takes a resource identifier, an object identifier, a base URI, and a prefix prefix prefix. It iterates through the resource identifier and name fields, and for each field, it adds the prefix and suffix from the object identifier to the object
23312665		expands or collapses an address in the address bar based on a boolean input, and updates the button appearance accordingly.

This method sets the icon text for an address when a button is clicked. It displays a warning message if the input is
23314476		queries a SPARQL endpoint to count the number of results, and returns the count as an integer value.

This method calculates the total number of matches based on the number of documents.

This method calculates the number of matches
23314482		queries a SPARQL query using a SPARQL endpoint and returns the results as a JS object.
This method queries the service system using a given query string and returns the results as JSON.
This method extracts the signature URL from
23315020		returns a confirmation string based on the specified component name, replacing occurrences of the component with the possible POSIX-specific confirmation format for positive and negative examples.
SUMMARY
This method is used to format values for positive and negative
23315708		registers a component by adding it to the topmost component of the stack and setting up a configuration definition for the component to be added to. It also creates lists of configurations from the topmost component and then iterates over them, adding them
23315711		adds a new configuration entry, updates the last valid entry value, and logs the change.

This method resets the component and adds a configuration value, then invalidates content and resets the component.

This method adds a
23316364		calculates and returns the true precision of a connection based on the results of a query at the specified distance and the distance of the connection to the test.

This method takes two sets of strings as input and returns a double.

23316479		removes a tuple from a relation structure.
This method removes a domain from the domain list and updates the relation structure based on the removed tuple.
This method checks if a given tuple is a variable node in the relation structure.
This
23316515		adds an object to a given level in an ELDescription tree, removing the object if it already has one.


23317344		checks if the minimum execution time has been reached by comparing the current time to the stored time and returns true if it has been reached, or false if it has not.

This method returns either true or false based on whether the execution time
23317400		sets the number of selected individuals for the algorithm, assuming learning state is set to the standard algorithm. In the second case, the algorithm is currently being shown only inSTEADY, otherwise it is set to a standard algorithm that meets these requirements
23317438		This method ensures that the noise parameter is greater than 0 and that nrOfPosClassifiedPositives is less than nrOfPosClassifiedExamples, and returns true if the noise is greater than the nrOfPositiveExamples
23366361		updates the component, then checks if setting the enabled flag is false before starting with "info", a command, and an integer value to enable debugging mode and resetting the component's debugger status.

This method calls the update method.
23366521		generates a random direction (N, E, S, W, or T) character (d1, d2, d3).

This method adds a name to the collection of name items.

This method adds a list
23389428		attempts to start a game, and then enters a while loop that continuously requests each player to start the game. It also starts a client timer for sending and receiving data.

This method initializes variables and starts player interactions and displaying
23389549		continuously receives and processes incoming messages, handling the state of a machine with the given state ID, and triggering specific actions based on the received message, such as performing initialization, saving the machine configuration, closing a connection, opening a new connection,
23695781		initializes the JFrame window by setting its size, dimensions, and title.
This method sets the size, location, title, and content pane.
This method sets the size, title, and content pane.
This method sets the
23695784		initializes and returns a JSplitPane used for displaying the main split pane and the main content pane. The inner pane includes a left component between the main frame and scrollpane that contains the main content pane and a right component between the
23695822		returns a JPanel that contains all the components of the form.
This method gets all relevant JCheckBox components.
This method sets the size and layout of the form.
This method returns the JCheckBox component.
S
23695828		returns a JTextArea with specific properties set if it has been initialized.
SUMMARY
This method is used to provide a JTextArea that allows users to cancel an agreement.


23695979		returns the JScrollPane containing the JTextArea labeled "Passenger Details."
This method creates and returns the JTextArea for the JListPassengerDetails object.
This method adds a JListCellEditor object to the
23794959		returns a collector of events from a search for a specified station, using a path to search for the station. If no events are found, it prints an error message and returns null.
SUMMARY
This method is used to
23794972		returns a `DataWrapper` representing the determination data from the taxon collection of a given taxon. 

This method synchronizes on the reading and updating of each entry in the entry map.

This method creates an
23795279		sets dialog boxes to invisible, sets up a new form to edit a list, adds an item to the form, and returns a success or failure String if successful.

This method returns a string that indicates if the user wants to delete a
23800011		retrieves the last collection object by its group specified by its code.

This method retrieves the collection object by its group specified by its code.

This method attempts to retrieve an error message if it is malformed. If
23800017		retrieves a taxon by collectionobject or if it's null, it returns null.
SUMMARY
This method is used to get a taxon by collectionobject or null if it is not in the database.


23800126		takes two catalog numbers as parameters and returns a new catalog number with a fixed prefix multiplied by 1000000000.

This method retrieves a catalog number from a database by searching for prefix and adjusting the number if found. It then checks again
23800191		returns a string representing the value at a specified XPath expression after evaluating the XPath expression, and throws an exception if the evaluation fails.

This method returns the value of the specified XPath expression after evaluating it, and throws an
23800269		This is a JUnit test method that tests the getViewDataMap() method of the testInstance class by adding annotations, view data, view name, and view set description with test assertions.
This method runs tests on the testGetView
23801071		sets the endpoint address for the specified port name.
This method sets the address for the specified port name.
This method sets the first port number for the specified port name.
This method sets the middle port number for the specified port name
23857289		converts the header to a string with a comma, followed by the values in the header and followed by a comma.
This method converts the header to a string with a comma in between.
This method converts the header to a string with
23857488		attempts to unregister all users and then waits for a response. If the response is not OK, it unregisters all the contacts. If the response is not OK, it attempts to register the first one. If the response is
23857511		is called when a response from a SIP message is received using the transaction. It checks if the response method is REGISTER and if so, notifies the listener if the Registration is successful.

This method is called when a response from
23857639		logs the entry and exit points of the method, invokes the onCallModifying() method and logs the finish and exit points of the method if it's not the current call.

This method logs the entry and exit points of
23857642		checks the input format for the duration, loops through the seconds, years, months, days, hours, minutes, and seconds to determine if they are less than or equal to 12 minutes, respectively. Additionally, it calls the onCallRinging
23857648		logs the call status, checks for an overridden alarm time, changes the status, changes the call context (if the call is not ended), and changes the phone status based on the alarm time or time available.
SUMMARY
23857671		handles TALK response codes, checking various responses such as response codes, code responses, message related to the state of the state machine, user authentication attempts, and notifying listeners of the status and any errors that occur during response codes.

23857738		returns the index of the header based on the received header name.
This method parses the sequence of data from the SIP message and loads the relevant data into the current sequence.
This method parses sent BYE request headers from
23857755		retrieves the content of a SIP request header from the server, and if the header content contains a colon, it extracts the header name and value. If the header content contains more than 1 character, it extracts the header value and extracts
23857759		takes a header string as input and returns a comma-separated String from the header object. It consumes the header part of the string to find a specific header start character and adjusts it based on the header value. If the header value is
23857769		skips an address in a SIP message, removing any reference to the address or the protocol name.

This method identifies the protocol name of a SIP request by skipping a comma in the URI.

This method identifies the hop
23857770		extracts the first or second occurrence of quotation marks in a string that is enclosed in double quotes and returns it as a string.

**readString**: This method reads a string, splitting it into tokens and tokenizes it using
23857773		retrieves a Date object from the given string using the UTC timezone at the specified index.

This method attempts to retrieve the date from a string using the UTC timezone at the specified index. If the string cannot be retrieved,
23857997		is used to close a network transaction if the transaction is on acknowledgement timeout. It verifies the status and checks if the transaction is successful before closing the transaction. If the transaction is successful, it returns to the caller. Otherwise, it logs the
23858004		removes a connection associated with a connection identifier, halts it, and removes the connection from a list of active transport connections.

This method halts a previously active connection associated with a given connection identifier.

This method initializes
23858049		is called when a transport terminates an established transport and, if found, processes the exception.

This method handles errors that occur when the transport is terminated, and prints the error message and stack trace.

This method also handles a
23858201		inserts the provided string representation into the table with each UUID. It checks the validity of the string it returns. If the string is null, the method inserts the string into the table with the provided UUID manually and returns if the string
23858537		writes bytes from a buffer to an output stream. If the stream is not null, it writes to the stream as either buffer or ASCII chunks.

This method writes a sequence of bytes to the stream. If the stream is a buffer
23858550		closes the current stream by removing any listeners, overwriting data, and closing the stream.
SUMMARY
This method is used to remove any listeners and destroy the stream and multiple mixer/line objects.


23858587		reads and returns the next seven bytes from the input stream.
SUMMARY
This method is used to read data from the input stream of a GPS message.


2389188		updates the user interface by setting the room name, room ID, and UI color but does not return anything.

This method fetches the UI data from a result set and updates the UI with the results.

This method updates
2389219		returns the preferred size of the viewport for scrolling.
This method returns the preferred size of the viewport for scrolling, which is the size of the grid.
This method checks if the component is a MultiScroller and if so
2389624		translates a point and translates it based on a specified mode. If the point is null, it translates the point using a translation translator.
SUMMARY
This method is used to translate a point based on a specified mode.
23913070		finds the first HtmlAnchor that has not been found under the parent HTMLPage child of the test page. If the photoLink is found, the method returns the HtmlAnchor for that link. Otherwise, it returns
23990416		processes user input in response to specific button actions by calling their corresponding methods.

This method handles action events triggered by various user actions during the code editor.
This method handles user interaction between two checkboxes, assigning values accordingly.

24041795		migrates a ticket by merging new information and adding it to the database. If any errors occur during the migration process, it inserts the error and sets the ticket.

This method registers a new ticket in the database by deleting the existing
24041999		determines if a given rectangle is within the visible area of the specified object. If the rectangle intersects or intersects the area, it returns true; otherwise, it returns false.

This method checks for visibility of the object based
240602		retrieves the status string of an order based on the helpted type and state of an offer.

This method adds an offer to the end of the list of offers and checks if the order is valid.

This method sets
24069876		is used to get a value corresponding to a given key in the objects map, if there is no key, the method searches for a value in the scope parameter definitions above, if there is it, the method gets the value from the top scope
240835		saves the current inspection wizard using WeBindingPlugin to change its settings.

This method updates the performance by syncing with WeBindingPlugin and removing any existing items. 

This method synchronizes the wizard with the values
24096183		is designed to invoke an action on an object or method with the given name and arguments, using an array of arguments to prevent infinite recursion.

This method is invoked when a filter attribute change occurs on a bean target.

This
24096203		runs asynchronously to test the loading of javax.swing.JFrame and verifies the creation of objects' windows in repos.

This method initializes the GUI, updates the clip object, and sets the frame to
241382		removes all types from the order by retrieving all types from the database using a query
241383		retrieves all transactions associated with the application from the database and by querying for them. If no transactions are found, it fetches the first one in the database if there are no existing transactions. Otherwise, it checks to see if there
241625		returns the start time of the first process in the journal of the current entry.

This method attempts to retrieve all the client entries and ensures they are within a valid range, and then iterates over them to ensure those entries are in
241627		calculates the last end of a week for a specific period. It finds the end date of the most recent entry and replaces the end date with the new start and end dates in the client's entries. The method then compares the end date
241629		updates an entry in the journal by repeatedly finding the entry with the same date it either in before or after that date. It then checks for duplicate entries in the journal.

This method updates an entry in the journal by finding the same
24216158		searches for a specific term at a given XPath query with a given maximum results and returns the search results as a list. If an exception occurs during this process, it passes the exception to the SwizzleExceptionHandler and returns null.
24243899		This method parses the XML and sets the reading parameters based on the XML object's attributes. It handles the start of XML elements, including reading the element, attributes, blocks, units, and labels or values based on the XML content body.
24243957		calculates weights of a range reads reader and a map of range using a given range map. It then calculates weights by multiplying weights by different units of interest, and then applies one to calculate the outputs of the corresponding particles based on the weight
24244081		loads the estimation values from a DataInputStream into the object according to the format that is specified in the feature code.

This method reads the data in the file and checks if it matches the expected data specified in the data.


24244171		sends a byte value to a register/TX register. It sends a data address and value and returns the result or -1 if an IOException is encountered.

This method registers a byte value at a specified register with a TCP system
24244174		sends data multiple integers over a remote logical layer using a specified memory address and length.
SUMMARY
This method is used to send data and retrieve the value of a register by location by registers specified by the given address and length
24244188		returns the next string from the image data. Skip it if the data is invalid.
SUMMARY
This method is used to fetch a string from the image by iterating through its data to retrieve the string with any necessary decimal
24244277		is defining the function that loads all servos, specifically the low byte write operation. It calls the loadAllServos method.

It initializes the servos array using the data specified in the data_array.
If the data
24244280		unloads all servos that have not been loaded, but clears all the observers.
It then sends a command to the native port to unload all servos.
It also handles setting and unsetting the command to unload any non
24244305		returns a Rectangle object, which represents a rectangular shape defined by the screen coordinates of the cursor, adjusted for the ID of the cursor.

This method initializes a Rectangle object with the specified coordinates and dimensions, sets its view
24244436		sets the delay for the SFTP, converts the target channel name to a random name, and updates theSFTP channel options. It then sends an SFTP write command to the remote host. The method parses a line to extract the channel
24244448		sends data through a Java Virtual Machine to the left a connection, making use of SL_write32 type. It checks that the type of the data is within the expected range and throws an exception if it is not.

This method
24244461		This method registers the given pulse with the GSM Server Register (GSM) Server Select (GSMI) Server Access (GSO) Modulator (MSA)! Serial Port (SND), and sends the pulse to the LSC.
24244578		sends a series of commands to the NXT device, each byte of a message is added to the device. It verifies and then sends the requested command. If the command is "OK", it checks for errors and returns the specified field.
24244666		establishes a Bluetooth connection and opens a connection to it.
This method creates a new object of the NXT class with the specified parameters.
This method also creates a new object of the NXT class with specific parameters.
SUMM
24244733		retrieves the battery level of a device by sending a command to the NXT that changes the battery level.
SUMMARY
This method is used to retrieve the battery level of a device by sending a request to the NXT that changes
24244754		sends a request to the NXT and terminates the connection.

This method attempts to connect to the NXT and sets an empty flag if it fails.

This method sets the position of the NXT to a 3x3 position based
24244791		retrieves the friendly name of the device.
This method checks if the device supports updating.
This method handles the command handling command.
This method sets the device to active.
This method registers devices in the system.
This
24244807		sends a command to create a file. It connects to the operating system, sends data to a specified directory and block, acquires the file data buffer for the block, and returns a string indicating the success or failure of the operation.

24244813		plays a tone with specified frequency and duration. It startsPlaying and plays a music tune. In the case of a general tone, it plays audio and updates the TONELINE time slot. If a tone cannot be playing, it attempts to
24244818		resets the motor position by sending a command with a positive integer value for the specified port to the server.

This method updates the motor position based on the port provided. If the given port is zero, it sets the current motor to
24244828		retrieves the version of the firmware by sending a system command to the NXT and verifying that the returned firmware version is correct, otherwise it throws an IOException indicating an error.

This method attempts to connect to a NXT using a protocol
24244879		updates the reading angle and updates the range. It then sets the range of an object to be equal to 0 and the angle and index.

This method calculates the given angle for the given reading range starting from indexes i, adjusts the
24244883		uses rotation to take turns in the turns field of the pilot.

This method takes turns in the turn field of the pilot as normal, reads turns in the previous turn forward, reads turns in the next turn forward and backwards, rotates
24244939		is a run method that runs the main loop until the program should exit, until the program is not stopped.
SUMMARY
This method is used to allow the program to execute the fsm.


24245697		returns the value of the specified data register.
This method returns the value of the specified data register.
This method sets the value of the specified data register.
This method tests the functionalities of the object.
SUMM
24245700		sends data with a clock to a specified register and amount of data.

This method overrides the messageReceived method by printing a message to the console and writing the message to a buffer.

This method overrides the message
24245709		fetches a string from the memory at the specified register value and returns it as a string.
SUMMARY
This method is used to fetch a string from the memory at the specified register value and return it as a string.


24246232		returns the satellite at the specified index after first checking if it can be obtained through invoking three other methods based on the given parameters.

This method returns a string representation of the object. If the object can be obtained through calling another method
24246280		sets up and starts a thread that switches a specified number of different types of console commands.

This method configures the system, including setting look and feel, adding commands, commands for changing the Look and Feel, and enabling text drawing.
24246297		handles the selection of a sentence in various graphics display panels, allowing for the sentence being sent in different types or headers to be selected in the GUI.

This method handles the selection of a sentence in all drawing components (GGA,
24246435		loops through a list of listeners, invoking the fire method for each listener with the provided arguments and returns the result.

This method iterates over a list of listeners, invoking the fire method for each listener with the provided arguments.

24246704		overrides the default `equals` method in a generic class, compares two objects for equality and returns true if they are equal.
This method overrides the default `equals` method in a generic class, compares two Rectangle
24246737		returns the bounding box of the component. If the bounding box is null, the component is created with a new Rectangle2D.Float object and checked if the component's location is not null. If it is, the component
24246772		checks if the rectangle defined by the parameter contains the specified rectangle intersects with another rectangle defined by the set of rectangle bounds.

This method computes the intersection point between this rectangle and another rectangle specified by the rectangle passed as an argument.
24246994		closes the Zip file, flushes the output, assigns a FileInputStream object, and closes the output stream. 

This method reads a field value and checks if there are any subfields and its length is zero. If the
24247094		replaces all instances of a string with a new string.
This method appends the new string to the internal substring.
This method appends the new string to the internal substring.
This method appends the internal string to
24247235		resets the NXTComm protocol to the specified NXTInfo or not.

This method attempts to reconnect to the specified device. If the reconnect should continue, it tries to reconnect safely. If the reconnect should continue again, it attempts to
24247794		creates the files panel, which contains the "Files" and "Download" buttons. It adds the "Files" panel to the main frame, which contains the "Files" and "Files" buttons for each selected file, and the "
24248570		returns an integer representing an actual hexadecimal digit at the specified index (hex digits).

This method adds an option to the given character specified by the "g" argument.
SUMMARY
This method is used
24248711		This method runs a program that allows the user to select a file from the file chooser and, if a valid file is selected, opens a GSM command with the selected file.

This method gets the selected row from a table and
24248849		resets the position of a motor to the current x and y coordinates and updates its label to display the total or total number of resets it each motor.

This method checks if a specified button on the toolbar is equal to another button
24327974		checks if the manager is not null, then it checks if the fileName field is not null, and if so, it logs a message indicating that the formatter's name is changed. It then checks if the fileName field is not null
24329937		retrieves the downloader configuration, initializing the downloader if it is null. It gets the timer from the download manager, if the timer is null, it logs a warning message, initialising it. Finally, it returns the download
24330213		This method "SMO", tries to initialize and save the command line parameters, including the Windows command file, default operating system, and a stopwatch.
This method "F" tries to save the config file to a temporary file, checking
24330772		retrieves a URL from the HTTP request and processes it by first checking for redirecting. If there is no redirect, the request will receive a XPlanetFeedback object from the GUI and load it. The method then proceeds to process the
24439870		returns the value of a phase as a double.
This method takes a vector as input and returns a double.
This method finds the phase of a Vector3D by getting the three elements of the input Vector3D.
This
24440011		calculates the intersection of two reads, which can include both water and a water plane but not outside the surface where ray points outside the water.
SUMMARY
This method is used to determine if there is a ray intersection between
24447409		handles user actions, including connecting to a database, connecting to a PostgreSQL database, and handling disconnections.

This method is used to display help information and instructions for the project.

This method enables or disables tabs and
24459253		adds a child element to the tree, if the child is a SystemFile object and the parent is not already a child of the system file with the same name.

This method adds the child element to the tree, throwing an exception
24459534		recursively deletes subdirectories under a given directory itself.

This method recursively deletes subdirectories within a given directory.

This method recursively deletes subdirectories on subdirectories that extend
24460001		unregisters a job with the specified ID, deletes the job associated with the application, and removes the job from the scheduling system, listening for deletion events.

This method unregisters a job with the specified module and invokes
24460603		retrieves a random file from the file system. The file is stored in the cache, and the position mapping to the hash of the file's name.
This method gets a unique file from the file system. It returns null if the
24460779		saves the current objects' activities to a file located in the same directory as the jar file.

This method checks if the given ser file exists in the path of the 'jar' file. If it does not, the method tries
2461094		gets the selected file from the file tree view or file tree model and returns null if no file is selected.
SUMMARY
This method is used to retrieve the selected file from the file tree view's file tree model.


24617556		starts accepting client connections by connecting to each server using their host configuration and accepts them. Within an infinite loop, it creates a new thread that invokes a runnable that reads data from the client and calls the invokeOnServer method of
24617827		initializes a table by a JTable created using a TableLayout with three columns, each with a preferred size and zero width. It also adjusts the widths of the columns.

This method sets the table's model to be visible.
24665658		draws the values of the potential values at a point on the screen, with each value displayed divided by three pixels per line.
SUMMARY
This method is used to draw the values for the potential values at a point on the
24666021		creates and returns a figure for returning a model if the model is an instance of Person or Department.

This method adds figures created by a subclass if the object is already defined.

This method adds figures created by a subclass if
24666373		This method is used to initialize Java classes and enable meta data to ensure that data integrity is maintained.

This method creates classes for the Genarch framework.

This method creates classes for the Genarch database.

This method creates
249124		adds a datastream to a Fedora metadata store.

This method adds a datastream to a Fedora object.

This method gets an object of a datastream type specified and adds it to that object.


249150		cleans up a datastream with data from a URI. It logs the action, invokes loggin with "AppServerConnection", handles non-URI calls, and checks if there is an exception, and logs the exception if there is
249203		adds a disseminator for a given PID and DStreamBinding and returns the dissID.
SUMMARY
This method is used to add a disseminator to a DStream.


249206		modifies a distinguished name (DID) by searching for its PID in the specified item or datastream MIOB Binding. If the PID is not found, the method will return. Otherwise, the method searches for all mach
249207		tests the creation of extended metadata objects.

This method tests the creation of multiple extended metadata objects.

This method tests the hash code of a single object.

This method tests the creation of multiple extended metadata objects.


249328		tests the getNextBufferedObjects function and asserts the correct number of objects returned by the function are returned.

This method calls the testClear, testGetNext, and testClear methods to clear all buffered objects before verifying that
249349		tests the creation of Dublin Core metadata by testing the view ID and label of the Dublin Core.HyperlinkView feature.
SUMMARY
This method is used to test the creation of Dublin Core metadata by testing the link to view Dublin
249460		This private method sets data for an XML element given elements representing names and their values. It requires arguments for the meta data element's namespace. It calculates attributes and ensures a map reference if necessary. It sets raw text content of the XML structure if
250487		retrieves mechanisms associated with a specified BM (Business Modeling) PID (bmId) from the fed connection.

This is a method that overrides the getValueAt method of the superclass, it returns the value of a
250664		removes a `DatabaseCollection` object from the database, by its primary key, and logs the deletion using the `save` method.

This method persists the provided `DatabaseCollection` object to the database. It first checks for any
250666		removes a user by updating a row in the database table "user" with a boolean value indicating whether their role has been disabled. If successful, the user is removed from the database.

This method removes a user from the database by
250668		activates a user by checking if the user id already exists and if not, it updates the user with the given ID and returns true. If the user has already been deleted, it updates the user with the new ID and returns true. If
250689		converts a list of booleans (boolean values) to a comma-separated list by converting the first boolean value with the first true or false value as the sign.

This method converts a list of booleans (
250694		retrieves a list of collaborations associated with a specified user ID. It searches for collaborations associated with the object and returns them as a list.

This method gets a list of collaborations associated with a specified user ID from the database. It
250700		checks if a given primary key (pid) is in review. If the primary key is not null, the method returns false, indicating that the item cannot be retrieved as an examine, but can be viewed in review, or not in review any
250704		retrieves the user ID corresponding to the specified item by querying the database.

This method returns a list of the user IDs for a given user ID.

This method loads the user data from the database and returns them in
250706		retrieves the owner property for the specified collection PID, throwing an AccessException if it fails. It logs the action, obtains the query parameters from the request, queries the database for the owner property's owner, retrieves the entity object
25072388		returns the task property with the given name for the given name.
SUMMARY
This method is used to retrieve the task property with the given name for the given name, or returns null if the process contains any task property names
250724		retrieves a list of all collections that contain collaborations, filtering out those that have not been processed and accumulating them by ID.

This method updates the user ID and prints a log statement. It handles errors, setting the failure status to
250726		retrieves a list of all users from the database. It initializes a list and returns it.

This method retrieves all the users from the database for users, adding the users to the list and logging the query.


250731		takes a mapping of HTTP requests and a table in the request's session. It iterates over the keys of the table's columns map, creating User objects for each column. The User objects represent the UserTag fields within the row's definition
250739		checks if the given username is an administrator of the current user.
This method validates the current user by logging the admin message, calling the validate method on the superclass, and logging the event.
This method builds a result list for
250751		retrieves feedback enabled in the specified collection PID.

- This method retrieves the populated collections with feedback enabled for each collection.
SUMMARY
This method is used to retrieve a collection with feedback enabled.


25075794		retrieves a Resource by its id. If the Resource is not found, it returns null. Otherwise, it returns the Resource object stored in the getResources() map.
SUMMARY
This method is used to retrieve a Resource
25075906		retrieves the Property object corresponding to the specified property ID from the database. If the Property object is not found, it throws an exception.
SUMMARY
This method is used to find the TaskProperty object with that ID for
250760		deletes a photo from a blog with the given ID by deleting a thumbnail image from the thumbnail directory using the deleted picture ID.

This method deletes a thumbnail image from the thumbnail directory using the given ID and a dsID.
25076025		searches for the dependency of an object specified by its id. If the object is found and is not accepted by the given rule, it returns null. Otherwise, it returns the dependency object.

This method returns an object of the
250765		checks if an administrative metadata metadata item is present in a given URI. It logs the URL, adds attributes to the media element, and verifies that the media element contains the expected metadata.
SUMMARY
This method is used to
250770		parses a given byte array containing PDF content into a string. If the ByteArray is null, it returns an empty string. It then enters a loop checks if the filename is valid and not already blank, then reads the PDF document and
250772		takes an array of bytes as input, parses the bytes into an XML document using the MSPParser class, and returns the formatted XML string.
SUMMARY
This method is used to parse an XML file.


250773		takes a string as input and replaces any commas with their non-whitespace. It then removes all tokens from the original string according to specified formats. It verifies that the StringTokenizer instance can reset the iteration count correctly until
250780		takes a byte array as input and attempts to parse it as HTML using a custom parsers defined by a callback, returning the output. If an error occurs during parsing, it returns an empty String.

This method parses an input
250808		returns a list of all collections in the database.

This method logs the entry of the getAllCollections method and attempts to retrieve a collection object from the database. If successful, it returns the collection ID and logs the exit message
250817		retrieves the user ID from the database by searching for the user name associated with the provided username.

This method finds the user ID associated with the provided username in the current page.

This method performs a GET and returns the
250870		obtains the next buffered object from the fedora interface and sorts it, returning it if none are found.

This method gets the next buffered object from the fedora interface, logs the size of the buffered objects, and
250879		is used to authenticate a user on the server and returns true if successful, indicating that the user is authenticated and authenticated.
This method checks if the user is already logged in and returns true if they are, indicating that there is no user
250884		updates the Dublin Core registry by synchronising the metadata. It updates the Dublin Core with the specified information, including content, date, language, book title, and alternate languages and books. If any errors occur, they are thrown during the synchron
250919		This method retrieves a Datastream object that matches a given PID andDS ID and returns it.

This method obtains data streams of a given item PID and DS ID.

This method obtains a datastream
250968		retrieves a list of all collections for a specified user.

This method, `getAllCollections` throws a `InternalException` if there are any errors accessing the database. If successful, it returns the result as a list
250992		creates a new instance of the User class by copying the values from the current User object to the given User object.

This method gets a single username from the given username.

This method adds a new username to the current User
251004		checks if a user exists in a list of users. If they do not exist, the method returns a value of -1.
SUMMARY
This method is used to check if a user exists in a list of users.


251005		takes a string representing a user name and a list of lists of user source values. It loops through a list of user source lists and returns a HashMap containing the first element that matches any list. If the user input is a valid user
251041		checks if a given array of file IDs can be viewed in a collection by comparing their list and value to the list of item IDs. It returns true if the array is not null, and false otherwise.
SUMMARY
This method
251065		checks if the current user has the administrator of an item specified by their PID. If they do not have the administrator of the item, a warning message is displayed.

This method logs the entry of the isAdminOfItem method with an
251081		returns a DatastreamBindingMap object and sets its properties based on the XML element provided. If the element is null, the method returns empty. It gets the namespace URI and local name of the element and adds it to the map
251133		retrieves a list of items to be edited, optionally using metadata.

This method verifies that the user has no permissions for a given item.

This method verifies that the user has no permissions for a given review in
251145		removes an item from the inventory by its PID, logs the action, and throws an exception if it encounters any issues while removing the item.

This method moves an item from one collection to another.
SUMMARY
This
251166		deletes all documents in the index.
This method deletes the entire indexed directory.
SUMMARY
This method is used to delete all documents in the index.


251181		deletes a document with the provided item PID from the database, using an IndexWriter to ensure the document is closed.
SUMMARY
This method is used to delete a document from the Lucene index.


25123815		creates a dialog area within a parent Composite, setting the top position and the bottom position and using GridLayout to specify the size of the composite. It then creates a Composite to hold the composite within the parent and adds anyEntries in reverse
25125142		initializes keys for the controls.
This method initializes the controls on motion.
This method creates a new instance of the key event handler registered with the KeyInputMap, and if the key event handler is not null, it logs the
25125156		creates a floor in a box that applies light grey to the nodes of a shape.

This method returns the floor provided for drawing the mesh.
SUMMARY
This method is used to create a floor in a box that
2514401		retrieves a list of various tags from a database that indicate their occurrence records. It also checks for any errors encountered during the retrieval process, including occurrence number, start and end times applied, and potentially unknown coordinates.
SUMMARY
2514413		tests the connect and disconnect functionality of the UPnP device server by starting and stopping a client and connect in a specific port and collection device.

This method tests the connect and reconnect functionality of the UPnP device server by creating a
2514418		tests whether a device discovery request ignores non-media devices.
This method tests the device discovery ignore any non-media devices.
SUMMARY
This method is used to test the device discovery ignore any non-media devices.


2514444		retrieves a list of string items associated with a specified co-occurrence tag ID. It creates a new Vector, retrieves the tag IDs associated with the same co-occurrence tag, and obtains the vector of co-occ
2514512		retrieves the ID of a group associated with a given tag by querying the data modules.

This method checks if a group with a given ID exists in the database, and if the ID is equal to -1, it returns
2514553		retrieves the maximum group id from the database and replaces it with the maximum group record ID if specified. It inserts the limit condition into the table, subtracts the max group ID from the group record ID, removes empty rows from the group
2514592		updates the noun count and verbs vector for a wordnet article. It sets the verbs, adverbs, and adverbs variables and calls the updateWordNetOccurrances method with the provided id and null.

This method updates
2515042		updates the given tag to a specified language, based on the source code and source ID provided. It maps the tag to the mapped code. The method also updates the tag to the appropriate ID if it has changed.
SUMMARY
251935		displays a dialog and executes the saveAndReport method when a button is pressed.
This method runs the run method.
This method runs the run method.
This method runs the run method.
This method runs the run method.
252239		updates a history list with the selected items from a combo box.
SUMMARY
This method is used to update a stack of key and value history as a ListItem selection.


25234806		is used to handle the location attributes of a LocationPoints object, parses the first node of the node to set the latitude and longitude values and creates a LocationRecord object with these values.

It parses XPath2 attributes to
25243104		returns the content pane of the window, which is a panel with an etched border and a split pane with the window's top and bottom panels added if the status field is true
25243115		returns the tool selection panel of the application. If the tool selection panel is not yet created, it is created, which is the tool selection UI.
SUMMARY
This method is used to create a toolbar panel with customizable UI
25256309		This private method returns a SubjectKeyIdentifier object from a DER-encoded cert.
This method obtains the subject key identifier from the certificate, validates it, and returns a SubjectKeyIdentifier object if successful.
This
25283716		invokes a remote method using the specified URL and arguments, and invokes the listener with the signature and listener.

This method, invoke, creates mock objects and invokes the method on a given proxy. It verifies that the stub
25283768		returns an object to be used as a proxy for a given object URL.

This method creates a proxy object from a configuration file, if the configuration file is not present, it creates a default configuration data source and uses it to obtain
25283769		invokes a remote method on a proxy object with arguments including the target URL and method name.

This method invokes a remote method on a proxy object with a parameter of type Object.

This method retrieves the given method prototype
25284200		finds and returns a property method by searching for the specified name and arguments.
This method finds the public annotation on the class.
This method sets the local variable on the class to the specified value if it is set.
This method
25284249		continuously listens for chat and logout requests from clients and opens multiple channels. It continuously listens for incoming events, such as disconnect requests, quit requests, or events. Depending on the type of event, it performs actions related to changing chat client
25284350		adds a new object to the list of objects stored in the map with the same name, iface, remote object, and username as the original object.

This method creates an IdentityIdentity object with the given alias and key into
25313852		encodes an object to a string by calling the appropriate encoder's encode method based on its class.
SUMMARY
This method is used to encode an object to a string suitable for encoding.


25330348		sets the endpoint address for the specified port.

This method sets the endpoint address for the specified port.

This method sets the endpoint address for the specified port.

This method sets the endpoint address for the specified port.

25351434		checks if a particular key exists in both the application bundle and any other messages context.
This method logs a debug message and returns true if it is a ContainerKey, or if it is a ControlPointKey, or if it is a Key
25432483		steps through a board, updates markers and blocks, and adds new blocks if needed. It calculates block locations and adjusts labels based on block movement, which are positioned accordingly. It updates blocks by changing label moves, negating blocks, or moving labels
25432497		paints a graphical representation of a game content by drawing hidden text, the state labels, and visual aspects of the game state.
SUMMARY
This method is used to render a game content text onto the designated screen border.


25432527		resets the game by resetting objects, playing energy, time, gravity, and damage resources.
SUMMARY
This method is used to reset game objects after the width or death of the game.


25432545		adjusts the position of the character in the game by the movement adjustment and sets its facing direction based on the current facing direction.

This method checks if the right or side direction has changed and updates the game screen accordingly.

This
254717		adds a node before another node in the abstract syntax tree. It first removes any existing sibling nodes, then adjusts the depth of the node pointer with the addition. Next, it adds the new node to the right of the node. The method
25478225		returns the start and end date of the day for a given year and chronology type. If the chronology is julian or eminate, it extracts the day from the day of the week and assigns the day to the corresponding instance
25480406		locks up an image by checking if it is a valid image or not by comparing the intended image ID with an ID of 16777216.
This method returns 0 if the image is already in the stack, the wait status is true.
25480410		crops an image to the screen using the first time it's called.

This method retrieves the image of an image object by calling the crop method on another object and comparing the subsuent image's length to the clipped area if
25488623		registers a bean definition with a bean definition builder, creating and registering it if necessary.

This method registers a bean definition with a parser context, creating and registering it if necessary.
SUMMARY
This method is used to
25583834		creates obstacles for circles in a game simulation. It contains bodies representing obstacles, movements, collision balls, and obstacles with their corresponding values. It also creates the body's width and height and adds obstacles.

This method initializes a game
25583846		triggers a projectile hit event, setting volume and computing the position of the projectile.

This method sets the projectile's movement limit to the specified value.

This method retrieves the projectile's rotation and velocity and sets the projectile
25584264		returns the minimum volume of the track.
SUMMARY
This method is used to find the lowest volume of a channel on a list of channels who have no controllers.


25584279		closes any open MIDI resources associated with the current object.
SUMMARY
This method is used to close any open MIDI resources associated with the current object.


25584315		creates and returns a shallow copy of an asset. If the slider is zero and the midiURL has not been set, it creates a new Trackable object with a specified trackableType and minimum and maximum values. It then clones the
25584334		creates a deep clone of the object and returns the cloned object.

This method creates a clone of the MouseOutShape of the object.

This method creates a clone of the MouseInShape of the object.


25584360		creates a deep clone of the original object, including all of its attributes, for debugging purposes.

This method creates a deep clone of the original object, including all of its attributes, for debugging purposes, for debugging purposes, and its
25584478		stops playing audio file transfers related to a clip at the specified index.

This method stops the RASP audio file transfer and sets the RASP event handler to null.
SUMMARY
This method is used to
25584545		ensures that the array "gameObjects" has enough capacity to hold the specified number of elements.

This method ensures that the capacity is at least the minimum allowed value allowed by the object's collection of objects.

If the
25584563		searches for an object in an array of objects by comparing it to another object and returns the index of the first occurrence.
SUMMARY
This method is used to find the index of a given object in an array of objects
25584587		adds an element to a list at the specified index, expanding the list to make it valid.
This method handles the action performed when a button is clicked and opens a file chooser to select a file to load a game object.

25584588		adds an MP3_DEPTH and M2_MAIN_LINE asset to the asset store with the given name and whether to combine in direction and direction.
This method adds an MP3_DEPTH and M2_MA
25584592		removes and returns the game object at the specified index.

This method removes a game object from the game.

This method removes all games from the game.

This method removes a game object from the map.


25584614		is used to update the visible game layers based on their visibility and then render the game over logic using the G2D graphics context.

This method then renders the game using the provided graphics2D object.

This method renders the
25584617		retrieves an asset from the asset store by name, throwing an exception if the asset is not found in the store.
SUMMARY
This method is used to synchronize the clone of a given asset, first trying to retrieve
25584619		adds all elements of a collection to this collection and returns true if any elements were added successfully.
This method adds all elements of a collection to this collection and returns true if any elements were added successfully.
This method adds all elements in
25584627		sets the mass of the object, invalidates the object if provided or sets it to a constant value, and updates various metrics related to whether a joint being used depends on the body being rendered. It also updates the body mass, including the gravity
25584630		retrieves the clone for a specified asset, throwing an exception if the asset does not exist.

This method retrieves the clone for a specified asset name, throwing an exception if the asset is not found.

This method dec
25584632		removes the elements at the specified indices from the specified list and shifts its elements to the right (toIndex) and then shifts it back to fill the gap.
This method removes the specified range of elements from the list.
This method
25584641		returns the number of active game objects across all active game objects in the game engine.
SUMMARY
This method is used to calculate the total number of active game objects across all active game objects in the game engine.


25584646		returns the total number of visible game objects across all game layers of the game engine.
SUMMARY
This method is used to calculate the total number of visible game objects across all game layers of the game engine.


25584687		removes all bricks and joints from the game, clears the arbiters list, and adds all that have no bodies or joints to the game.
SUMMARY
This method is used to remove all bricks or joints from the game.
25584695		sets the dimensions of a rectangle, adjusting for use in triangles, the boundary dimensions, the number of sides of the rectangle, and the side of the triangle based on the size of top and bottom and leading. It also sets the location of the
25584807		updates the physics world by stepping for the first particle cycle, causing the camera to update its velocity, and then updating its location and velocity.

This method calculates error and updates and checks if errors are present, setting maximum error count and
25613077		calculates the penaltysum for a given ride number, by subtracting the total penalty for that ride and adding up the penalties between penalties.

This method fills a ratio ratio attribute with the input parameter RIDE_PENALTY
25613080		calculates the penalty by considering penalties and penalties of ride and ride percentages for a given ride number.

This method returns the sum of the penalties.

This method returns the sum of the penalties for a given ride number.

25613128		returns the result of a ride given an array of ride numbers.

This method returns the ride result from a list of ride results.

This method returns the ride results from a list of ride results.

This method returns
25613198		publishes the current results to a web page by sending a POST request to the URL created from the runId and the results XML with the results to the web page.

This method asserts that the result of a different run in a web
25613232		calculates the sum of penalties by summing up all penalties and adding the corresponding bonus amounts.

This method implements the penalty interface, where when a penalty is added to the penalties list in the GUI, a penalty calculation to display the
25649791		creates a report by starting a CampaignReportManager, calculating campaign runs with exceptions, creating a report withcampaign reports as run results, and finishing the report.

This method creates a response by removing any previous runner-related commands in preparation
25649831		opens a connection to the database using a provided URL and sets the connection object to the object's connection.

This method handles the server response from the server, showing progress and handling exceptions.

This method closes the connection and sets the
25649833		removes a notification listener from the specified MBean if the connection is established.
SUMMARY
This method is used to remove a notification listener from a service connection, if a connection is established.


25649839		returns the script filename for the control scripts control, which is stored in the format "control_script:ctrlInfo.txt".

This method returns the script filename for the control scripts control, which is stored in the format "control
25650933		retrieves the value of the attribute specified by the attributeName parameter, with an empty String to return.
SUMMARY
This method is used to retrieve the value of an attribute specified by the attributeName parameter.


25651257		tests the ability to get an instance of the class ComponentsLoader.

This method is identical to the previous one, but it works.

This method tests the getInstance method of the class ComponentsLoader.

This method tests the
25651265		tests the loading of a JUnit test case by creating a test instance, setting the test method to create a test pre-processing environment service instance, calling the manager to add test components with location, registering test components, and asserting that the registered
25651322		prints the link to the API component component for a given class in HTML format.

This method prints the list of classes and their related information in HTML format.

This method gets the class documentation for a given class.


25721849		initializes the code stacks with an empty array of classes.
This method creates a map of declaring class names and their bytecode types.
This method adds symbol counts to compute.
This method initializes the code stacks.
SUM
25721893		recursively builds a path from two vertices in a graph. It traverses any connected edges and pushes a new edge to the path if the label ends with any of the closed vertices. If the label is empty, it breaks the
25722012		retrieves the default foreground color preference from the specified preferences and creates a color object from it. If the foreground color is different from the current value, it reverts the color to transparent. Otherwise, it creates a color object with the RGB
25722015		returns a color to be used as the foreground color of a link in preferences. If the property source is an instance of LinkedOutlineNode, the color is set in the PROPERTY_COLOR palette, otherwise, it is set
25722066		sets the metric source for a graph contributors provider and updates the internal package metrics if the source is not null.

This method is responsible for getting metrics from the graph contributor and setting they as parameters for the graph contributors provider.
SUM
25722070		expands the tree item if it has a metric, sets its visibility to expanded, and draws it onto the canvas.

This method handles internal events, specifically handling tree events, updating metrics and properties when a metric is added or changed.
25722182		This method checks if the selected elements in a given selection contain the current element during a selection changed event and sets the Java element if conditions are met.

This method checks if the selected elements in a given selection contain the current element during a
25722214		clears a resource by deleting unnecessary entries and nullify references. It finds the project at the given location, selects the resource using the project name, and clears the resource if the resource is free.

This method tests the clear method by
25722254		sets the value of a metric for the given element, updates the values map, and notifies the listeners of the change.
SUMMARY
This method is used to update the values map and check for warnings if the input is not
25722263		sets the average value for the input element.

This method sets the average value for all elements in the matrix into the first row.

This method is protected, which takes an element type and sets the average value for all elements in
25722266		sets the "maxima" values.
This method sets the maximum value with the specified "per" key.
This method sets the maximum value with the specified "name" key.
This method sets the maximum value with the specified "
25722296		invokes a set of calculator methods for the given class, catching and logging errors and rolling them back if no exceptions are encountered.
SUMMARY
This method is used to invoke a set of calculator methods for each class by calling their
25722365		initializes the metrics for the method by adding the Java source code to the metrics map.

SUMMARY
This method is used to initialize the metrics map for the method.


25722374		returns an instance of the ITypeHierarchy interface, creating one if it does not already exist. It uses the super class's method to get the hierarchy if not already create.
This method registers a new member in a class,
25722511		adds a metric progress listener to the list of listeners, indicating the number of new metrics for that listener. If the listener is already present, it plays a catch up message for the listener to play it. Otherwise, it adds the listener to
25722533		checks if the specified package fragment root is enabled.

This method handles folder selection events by checking if the selected package fragment root is enabled.

This method adds a listener to the folder selection to toggle the file and package visibility of both
25722567		enables or disables a given TableTreeItem and its associated TableTreeItems based on a boolean value and a gray.

This method enables or disables all items except a package if the isPackageChecked flag is not set.
25722575		determines whether a given TableTreeItem should be allowed based on whether its leaf is selected and whether its current metric is enabled. It checks if the required metric IDs have been specified and if so, it checks if the table does not allow
25722750		removes all items associated with a given project handle from the list while allowing other threads to sleep for 10 milliseconds, and resets a semaphore on the object to make any more complete.

This method returns a list of all active
25723068		calculates the depth of a given file by recursively searching through its methods and methods to evaluate those methods to create an integer array of theirdepth values.

This method recursively searches through ARM methods in ARMODE,
25723198		paints a small tag on the panel with the given color and graphics.
This method draws five vertical lines on the panel with the given color and graphics.
This method draws a horizontal line on the panel with the given color and graphics.
25723430		creates a string representation of the class that calls it.

This method converts the getter methods returned by the methodToString method of the methodsCalledMap object to a string.

This method converts the notNull and not
25724634		recursively builds a path by recursively updating the path and updating the v list based on those vertices in the input list.

This method takes a vertex, a 2D array, and a position point as input and builds
25724966		creates a new source by retrieving a metric source from a map representation. If the source is an instance of the specified element, the method instantiates the source using the element's Java element. If the source is not an instance of the specified
25725031		returns a list of metrics from the given name by iterating through the children of the current node.

This method returns a list of metrics from the given name given an object.

This method returns a list of metrics for
25725041		retrieves the maximum occurrences of a specified type within its children.

This method returns the maximum value for a given source.

This method returns true if the selected value is greater than the maximum value for a given source.

257256		deletes products from an offer by iterating through the product handles, deleting each, and deleting items from any necessary groups if necessary.

This method deletes all products that contain no items, but there are no duplicates, and ver
257270		compares two AbstractAttributeValue instances based on their ID and value. If the other object is of the implemented type and is not equal to this object, returns false. Otherwise, it calls the equals method on the other object.

This
257546		puts a value at the specified index with a key. If the key is already present, it updates the value, removes the key from the list associated with the value, and adds the key's index to the list.

This method
25755743		loads the SimModel by clearing the internal list, loading all models until it is set to the model itself, resetting the model table to the model, and updating the time views and model properties.

This method loads the SimModel by
257610		returns the persistent type of an object, ensuring that the object is of a particular type based on its key.
SUMMARY
This method is used to access a persistent type based on a type key and the object's name.
257723		sets the datetime value to the specified value if it is either a Timestamp or a Date, otherwise it throws an exception. If the value being set is null, it throws an exception indicating that the datetime cannot be set.


25793135		integrates the matrices of an object using the matrix calculation and postprocessing methods.

This method updates vectors based on a table transform.

This method performs an FuzzyCosine transformation on two points.

This method
25796617		handles a login event for a chat client. It checks if the client is idle and if not, adds a message to the chat client indicating that the client is idle. It then initiates a login for the client and opens a new chat
25796850		initializes the application by invoking a runnable to run a test that sets a text label, creates a static text label and adds a component to it, and then generates images. It then starts a new thread to run a specific runn
25807236		fetches a row as a Book from the database based on a given row ID and returns the data as a Cursor object.

This method overrides the default get method and returns a TableRow object with the title row, the value
25807257		fetches a page from a database based on the given row ID and returns it as a Cursor object. If the page does not exist, it is created with the given key and title, and then returned.

This method fetches
25809664		receives an OSC packet and sends it to a handler.  For the packet, the handler processes that packet, and delegates the handling of the packet to the handler.
SUMMARY
This method overrides the send method
25809685		returns a string representation of the document, including its XML representation.

This method sets up a serializer object to write data to XML and then runs a runnable object to write the XML and close the serializer object.

258388		returns a localized error message using the current locale. If the field value is empty, the error message is returned as is. Otherwise, the field name and class name of the error message are concatenated with the localized separator and the
25842109		generates the SQL statement to use using a SQL dialect. It sets the dialect, and then tries to generate the needed SQL statements in the specified target directory. If an error occurs, it prints an error message to the standard error stream and closes
25910497		starts an email activity if the email is not already running.
This method checks if the given action is valid and the intent is the end activity. If the context path is not null and the activity name is not empty, it starts an
25910595		magnifying the image received from the spinner. If image is not empty, it gets the image URL from the spinner species, then loops over the speaker species columns, identifying the corresponding image, and then creates an intent with the
25934360		prepares the object by setting the encoding, key transformation, and URI-specific settings, then verifies that the content contains the proper value for the request, if a header can specify that the content is still being displayed in the request, it
25945128		fetches a collection of blogs if the collection is not null, otherwise it attempts to fetch a new collection. It then processes each row, updating the progress indicator with the list of blogs in it, handling non-null values and exceptions at the
25993703		This method initiates a Bluetooth call between a specified Bluetooth client and a specified client port, optionally connecting to the remote Bluetooth server. It sends calls identification numbers of specific calls to the remote client and sends an ETA to create new audio samples.
25993727		This method overrides the onExecute method from the superclass, opening a connection to a database.
It simulates text padding and sends an email if the content is textable.
This method initializes the activity and starts notifications.
25994000		inserts a token into the database and stores its token secret and token verifier. It also handles authentication and verifies that the token is valid.
SUMMARY
This method is used to add a token to a database table.
25994127		adds a buddy to the database with the specified name, email, and profile ID.
This method inserts the name, email, and profile ID of a buddy into a database using the specified SQLiteDatabase, with the specified name as the
25994150		returns a Cursor object containing the buddies by name retrieved from a SQLite database table and if it is not null, it sets the cursor to a wait cursor and moves to the first row of the result set.

This method returns
26050426		checks if two null arrays have the same number of rows. If any of them do not, a new JMatrix is created and populated with the DoubleMatrix objects. If the second parameter is true, both are not equal.

This method
26050532		triggers an event based on a button pressed and initializes the Wiimote. It fires an event listener, creates a button press event, fires an event on the Wiimote, and resets filters if necessary. It also checks
26052559		sets the endpoint address for a specified port name and public endpoint address, throwing an exception if the port name is unknown.

This method sets the endpoint address for a given port name and public endpoint address, throwing an exception if the port name
26115173		creates a tree node representing the root of the decision tree, it includes the decision that can continue with the root node. If the root node is empty, it returns. If the root node has only zero positive values, it creates a leaf
26115189		calculates the entropy of positive logarithm of negative logarithms of negative logarithms of positive logarithms of positive logarithms of negative logarithms of positive logarithms of negative
26137991		creates a Path with a specified number of steps (steps). This method constructs a Path object, which is used to control the phase of the game.
SUMMARY
This method is used to create a Path object with a specified
26162973		retrieves information about a blog, including its URL, author, date, subject, and metadata (if available) and returns a collection of BlogEntryDocuments. If no blog is specified, it throws an exception indicating that no blog is available
26162989		sets the subject buffer with the given string.

This method clones the buffer and sets the subject buffer to null.

This method sets the subject buffer to the given string.

This method sets the subject buffer's offset to the
26163021		removes and without a leading and trailing non-numeric ISBN (Char-Char) string (New Roman numeral) characters from a string.

This method returns the trim of an ISBN string by removing any leading non-numeric
26163250		The method prints out the error messages contained in the errors attribute of the request object.
SUMMARY
This method is used to obtain a collection of errors as an object, for further processing.


26163302		initializes a logger, logs a message, creates a new instance of SubjectDAOSpringJDBCImpl, and calls insertNewSubjectRecord() on the instance with a new row in the test table.
SUMMARY
This method
26163477		tests the validating ISBN10 requirements for an ISBN form.
SUMMARY
This method is used to test the validity of ISO digits after a ISBN form is used.


26163595		clears the request parameters, including the redirect header and a callback here.
SUMMARY
This method is used to remove any additional parameters from the request.


26163695		sets the action servlet, initializes, and logs the entering of the method.

This method initializes the servlet. It logs the entry and exits of it. If the servlet already exists, it returns true. If it
26163757		logs the entering and exiting points of the method, initializes the superclass, and sets the request path info.

This method logs the entering and exiting points of the method, calls init(), checks if system property is enabled, and
26163778		is a static method named "init," which logs the start and end of the initialization process.
SUMMARY
This method is used to set initialization parameters for a servlet, including key-value pairs.


26163851		verifies forward paths using a provided forward name and request, logging debugging information about the enter and exit of the method. It validates the forward name and throws an AssertionFailedError if the name is invalid.

CONTEXT
26163877		verifies user input forward, initializing the application, calling listener methods, and logging result if debug information is enabled.

This method is protected and is used to process CRUD operations. It reads form data, creates ArrayLists for
26163906		verifies input tiles forwards using the specified definition name.

This method validates input tiles forward using the specified definition name. If valid, it sets the action path.

This method validates input tiles forward using the specified definition name
26163924		verifies that no action errors are generated when attempting to perform a transactional verification on the input parameters. If the commitTransaction parameter is not set, it sets the commitTransaction to false, initializes the request, retrieves a database context,
26163933		verifies action messages using a message names array, log messages with messages to log based on the message type, and records the action messages based on the message type.

This method verifies action messages using a message names array, log messages
26163951		verifies that there are no action messages, logs the entrance and logs the exit messages, initializes them, calls the superclass's version action method, and logs the exit and exit messages after verifying no action messages.
SUMMARY
26163981		sets the view mapping and forwards the request to the action view for the given action form.

This method validates the view mapping and ensures it has the correct mapping data. It also checks for any errors in action mapping and context.

26195187		exports a graph object as an XML document.

This method saves the XML document to a file specified by the fileName parameter.
SUMMARY
This method is used to save an XML document as a file.


26196743		checks if the user is not allowed to update or create, and if so, displays an error message and returns without showing the form. It then attempts to retrieve the organization, and if it fails to do so, displays an error message and returns
26196769		sets an object to an OrganizationBean and checks if the license is violated and resets the organizational if necessary.
This method sets an OrganizationBean as an attribute of the object and checks if the license isViolated.
SUM
26199069		initializes an EJBObject by retrieving its home interface using ServiceLocatorBean, and if successful, sets the activity manager bean. If an exception occurs, it throws a BusinessDelegateException with an appropriate error message.

This
26215341		updates the gain of the MIDI channel by adjusting the MIDI controller and setting it as the same.

This method sets whether the MIDI is floating, the gain value is set, or if the MIDI controller has stereo sample data and does not
26277933		creates a new instance of the HarnessBootstrap class, initializes it with a map of parameters, and iterates through the map.
This method applies a list of parameters to the current execution context by initializing the harvest context with
26277954		retrieves a property file from the classpath given a location. If a file with the name "property.eclipse2" exists, it creates a Properties object from the file. If a file with the name "property.eclipse
26284058		enables or disables all containers within a specified container.
This method sets the container for the specified container by updating the component layout and enabling when the container is enabled.
This method handles events based on the event type and buttons, enabling
26284089		parses the input string into a date using the specified date format, resetting the date if the input is invalid.

This method initializes the user interface by setting the frame icon, setting the label, and setting the main title
26284102		shows the date picker editor based on the selected slot in the calendar editor.

This method shows a calendar editor for the selected slot.

This method resets the calendar to the most recent date and clears the selected slot.

26284133		sets the month of a calendar and sets the date of the month.
SUMMARY
This method is used to set the month of the calendar and enforce the minimum and maximum date of the month.


26284151		sets the year for a calendar and calls the doSetYear method.

This method sets the year.

This method moves the date of the calendar to the previous date.

This method sets the calendar year to the specified value
26284207		determines whether the current date is included in any day or month based on the month and year of the model.
- It also selects the next month or the previous month depending on which the date is in.
- If no dates
26284223		retrieves a calendar by row and column from the model. If the cell is not part of the previous month or not a month, it returns the previous month. If the cell is not a month, it returns the next month. Additionally
26284241		checks if a mouse event occurred on a specific row and column. If so, it identifies whether to edit an item in a month or week. If a MouseEvent occurs and either does the mouseClicked method under certain conditions than valid, it
26284322		A method from Java that represents a cell in a table, where the date is specified by the cell's column ID and row values.

This method repaints the cell object.

This method also repaints the cell object.

26284323		scrolls to the current page by the given offset. It gets the home address from the browser history, shows the corresponding HTML document in the controller, and sets the current editor pane to the matching document and target frame.
SUMMARY
26284359		shows an HTML document given a URL and target frame to the user. If the target frame is not null, it sets the history in viewer and calls the showHTMLDocument to display the HTML document.

This method takes a URL and target
26284706		is used to paint an icon onto a component. If the icon is null, it calls the superclass's paintIcon method. Otherwise, it calls the paintIcon method on the icon to paint the icon.
SUMMARY
This
26284840		updates the progress value based on the change made in the event of a progressBar.

This method attempts to update the progress value and sets the progress bar state of an internal window to its opposite.

This method sets the progress
26284884		displays a file chooser dialog allowing the user to save a selected location. It takes in the user the user as input and gives them the location and name of the destination. If the user selects a file, the location is saved in the
26284954		updates the selected color, sets it to the color scroller, and gets the value of the RGB values from the red, green, and blue spin spinner. If a selection is made, this method applies the color to the canvas.
26284957		updates the color of the hue and saturation chooser, then checks for invalid input. If the input is invalid, it sets the initial value to the current color, and sets the hue, saturation, and value spin.
This method sets
26284959		changes the color of the specified slot if the given input string starts with "#".

This method compares the given input string to either "#" or a "-". If the input string has a hexadecimal color, it checks the
26285029		adds text to a text field component. The component displays files within either directories, files only or filesonly depending on the file selection mode.

The fileField component is added to the left side of a split pane, and the text
26285124		pretyps and interprets an argument by extracting key-value pairs from it using specified key-value pairs. It returns a KeyValuePair object.

This method interprets an argument by throwing an IllegalArgumentException if the
26285166		accepts a string as an argument and checks if it starts with the "Accept File Slot" prefix before proceeding with the process. If the process is stopped, it accepts the file, updates the displayed text, checks if it is selectable,
26285206		builds the position of a vertical alignment constraint between two objects.
This method sets the start and stop separation, alignment, and size policy of the vertical alignment constraint.
This method sets the border to a filled shape with a solid black.
26285209		builds the start and stop separation of an advanced constraint's horizontal alignment based on the given constraint's constraints.
SUMMARY
This method is used to build the horizontal position from the given constraint's constraints.


26285257		copies the data from another LinearPosition object to this one.
SUMMARY
This method is used to determine which elements in an array to return, which is the same as the elements in another array.


26285292		explodes the input string containing up to 4 parts to prevent errors on finding the start of the substring or the substring beyond the end of the input.

This method handles whitespace characters by finding special letters and determining the start and
26285353		returns the constraints associated with a given component.
This method checks if the component has constraints, if there are no constraints, there then returns null.
SUMMARY
This method is used to check if a component has constraints in
26285375		This method sets the size of the matrix to the specified dimension.

This method copies the columns and then validates the dimensions of the matrix to ensure it is valid.

This method sets the location of the component to the specified location
26285479		tests the preferred layout size of a container by comparing the preferred and actual container sizes.
This method iterates through the rows and columns of a container, retrieving the preferred and actual layout sizes of each cell based on the entry's row and column
26285485		is a list cell renderer that overrides the getListCellRendererComponent method and returns a component. If the list cell renderer is not custom, it delegates the notification to the superclass method to get the renderer, providing
26285517		This method tests the `addLayoutComponent` method by adding a component to the layout, and then asserting that the resulting horizontal position is sequential within the layout's bounds.
SUMMARY
This method is used to obtain the horizontal position
26285536		calculates and verifies the desired length of a layout for an item by performing vertical gaps and horizontal gaps. It also validates the expected positionDesiredLength and validates the positions.
SUMMARY
This method is used
26285538		constructs an entry from a constraint and sets the preferred, minimum width, and height properties of the entry.

This method finds and creates an entry by its column and row.

This method finds and creates an entry by its name
26285556		creates the test layout with a linear pixel dimension.

An array containing test components.

This method adds the test dimensions to the test layout as a sub-position.

This method creates a sample layout for the test.
26285632		This method tests the method setStartSeparation(int) by setting the value of the start separation to 0, getting the start position, setting the end separation, and checking if the value is correct before and after setting the start separation.

26285637		tests the functionality of the getStopSpacing() method in the Position class, including checking the correctness of the method's getStopSeparation() and the getStopColour() methods.
SUMMARY
This method is used to
26285656		This method calls the validateSeparationCount() method of the LinearDimension class to test the separation counts of various date formats.

This method calls the validateSeparationCount() method of the LinearDimension class to test the separation count
26285659		tests the getPreferredPreferredSize() method of the JButton class by asserting that the expected preferred size of the button is 0 by asserting that the actual preferred size is 0.

This method also tests the getPreferredSize()
26285698		sets the separation count of the object.
SUMMARY
This method is used to enlarge or shrink the separation count of an object when it is smaller than the required number of separation counts.


26285743		inserts a separation into the existing separation array at a specified index, ensuring that the array is not too small before inserting any new separation.

This method inserts a new separation into the existing separator array at a specified index, ensure that
26285789		adjusts the minimum and maximum sizes based on the minimum sum of the current minimum sizes and preferred sizes.

This method adjusts the minimum sum of the current minimum sizes.

This method adjusts the maximum sum of the current maximum sizes.
26285821		handles changes to the table's model. When an update event occurs, it checks if the row is being edited, and if it is, it updates the selection using the table's model, or if the row is not being edited, it
26285843		sorts the underlying array to be in ascending order. It checks if merge can be initiated and forwards the sorting request to another instance. If not,, it creates a new sorted array to hold the sorted array.

This method sorts the
26285863		returns the action list associated with the specified name, creating it if it doesn't exist. If the action list doesn't exist, it is created and added to the menu.

This method gets the custom action list for a specified name
26285888		sorts a table by a specified column in either ascending or descending order.

This method sets a sorted column to either ascending or descending, sorting them by the specified column in either ascending or descending order.

This method sorts a
26285898		adds a column to a table sorted by a specified number of columns.

This method adds a column to the table sorted by a specified number of columns, either ascending or descending, and updates the table and column table accordingly.


26285909		removes the specified interval from the list of intervals, sets the anchor selection index to the specified index, and updates the lead selection index and value.

This method removes the specified interval from the list of intervals.

This method removes
26285919		triggers a value changed event for the specified list selection mode.
SUMMARY
This method is used to notify listeners of the change in value.


26285995		registers XML elements with their attributes, such as ID, title, and type, and then populates an ArrayList with the menus in that element.

This method initializes the popups list by calling the method findPopups on
26286001		This method iterates through the elements of an XML document, it checks if any child elements with the name "ToolBar".
If so, it creates a new HashMap object and populates it with a collection of associated toolbar elements.

26286066		creates a JMenu with a provided name and shortcut and adds a listener to it to handle various menu items, including a listener to handle key bindings.
SUMMARY
This method is used to populate a JMenu with menu items
26286127		adds a progress bar with a maximum value and a specified cancel button to the current group.

This method will add a progress bar with a specified maximum value and a given cancel button to the current group.
SUMMARY

26286128		removes the progress bar of the component from its parent container if the busy flag is set.

This method adds a progress bar to the component's container.
SUMMARY
This method is used to remove the progress bar of
26286147		returns the minimum size of the component by summing up the preferred size of the font metrics provided.

This method calculates the number of lines in the buffer, starting at the specified coordinates if it is currently being processed, and adds it
26286199		sets a new panel to be displayed as collapsed. If the panel is already collapsed, it removes it from the panel and sets the collapsed header. If the panel is not collapsed, it sets the collapsed header to be the new panel, updates the
26286209		sets the value of the text field, converting it to a number if necessary.

This method, final, sets the value of the text field using the numeric formatter and a formatted string.

This method tests the functionality of the
26286211		handles the mouse click event for a specific slot and calls the widgetClicked method with the clicked slot as a parameter.
SUMMARY
This method is used to toggle the collapsed status of a widget identified by its x and y
26286268		sets the title of the title and recalculates the height, width, and border of the content border based on the start and end values.

This method overrides the startElement method of the superclass and handles the start of the
26286332		connects various UICToolBar objects to JRadioButtons.

 This method connects various UICToolBar objects, allowing them to interact with the toolbar and it keeps the toolbar non-instantiated.
SUMMARY

26286420		adds a page to the JcardPanel using a JScrollPane and a KeyListener to navigate to a new page.

This method adds panels for the help, content pages, navigation buttons, and click listeners for the PagePanel
26286423		inserts a JComponent page into the specified index in the JScrollPane.
This method handles mouse press events and inserts a page into the specified index in the JScrollPane.
This method inserts a given page into the specified
26286461		generates a preferred size for a component based on the maximum height and minimum width values.

This method returns the preferred size of the component.

This method sets the component's preferred size, if indicated.

This method adds
26286479		returns the page at the specified index, throwing an exception if the index is negative or the page cannot be located before the index.

This method returns the page at the specified index, throwing an exception if the index is negative or the
26286553		opens the context menu at the given location when the mouse enters the JToolBar.

This method opens the context menu when there is an event at the given location and opens the help menu at the location.

This method opens the
26286557		adds a element to an internal list, checks for errors, adds a blank or default value for the element, and increments total count and throws an exception if there is a builder error.
SUMMARY
This method is used to
26287095		overrides a superclass method to draw a button within a button. It checks if the component is enabled and if not, returns. It calculates the coordinates of the button and sets the border to solid color, renders the button using a button
26287097		paints a button with a gradient color for its pressed state (pressed or pressed).

This method paints a button press event with the provided Graphics object.

This method paints a button in the pressed state (pressed or enabled).

26287400		returns the preferred size of the container that will fit the scrollbar content. If the scrollbar is vertical, the minimum size will be set to the preferred screen size of the scrollbar. Otherwise, the minimum size will be set to the
26323664		This method is the main function of the program, it reads input and prints messages. It initializes the console and checks if a process is running. If the process is not running, it prints an I/O error. If this step is
26323719		searches for a file with a given name in the project's base directory, appending the name of the file if it exists, or to an empty string if it does not.
This method finds a file with the given name in
26336780		checks if the given type is a valid type by examining if it is both primitive, String, Boolean, Integer, Double, Long, Float, or Character.

This method checks if the given type is an instance of the specified class.
26336784		returns a list of descriptors of the specified class, adding descriptors for various types of classes if the class is not a new one or when new
26336914		returns a string representing the method name for setting the configuration property set for the object.
SUMMARY
This method is used to construct the method name for setting the configuration property set for the object.


26336925		takes a String argument representing a getter's method name and returns a modified version of it.

This method returns the name of the getter's method.

This method returns the name of the property that is passed as an
26338185		tests whether the current instance is a transaction and throws an object not committed exception if not.
This method tests whether the current instance is a transaction and throws an object not committed exception if not.
This method tests if the current instance is a
26339238		This method closes all sockets and all streams in the list after reading them and closing them.
SUMMARY
This method is used to close all database objects associated with entries.


26369396		adds an error to the auditExceptions vector and registers it with listener and writer.
This method adds an error to the list model and notifies its listener, catching and handling any IOExceptions that occur.
This method inserts an
26369399		adds an exception to a log event and writes details about the exception to a log
26369409		returns an image of the component's icon based on the type of component (icon, checkstyle,/checkstyle) or a properties.

This method returns null if a class descriptor is null, null otherwise.

This method
26369417		initializes the class object and sets the program name, global and user-defined file location. If the global and user-defined properties cannot be set, it initializes the module; otherwise, it returns.
SUMMARY
This
26411856		compares two objects and returns an integer indicating their relative order. If the first objects are an instance of PooledObject or are not, the calling order is zero. Otherwise, it compares the dates passed in as arguments. If the arguments are
26411969		creates a new PooledObject by calling the create() method and sets its ServerInfo, ProxyHandler, Pool, and pool properties. It also initializes a DestroyObjectThreadEvent and adds it to the event queue.

This method
26411989		logs information about the pool, its associated resources, and its related properties.

This method adds an item to a list for a given pool, initializing its properties with the provided pool name, count, and length.

This
26412118		logs an error that occurred while executing a connection and checks for disallowed connections. If allowed, it closes the connection. The method checks for "connection errors" and sends an error message to the source. The method iterates over a list
26412127		serves as an infinite loop that accepts connections from a pool and attempts to request objects from that pool. If successful, it returns the size of the request object. Otherwise, it throws an error message with a message indicating that the pool named "
2644926		This method iterates through multiple synchronized DreamboxListeners and calls the sendNextProgramStartTimeChangedEvent method for each listener.
SUMMARY
This method is used to iterate through multiple synchronized DreamboxListeners and call the
2644930		sends a program start time change event to all registered DreamboxListeners at the specified status.
SUMMARY
This method is used to broadcast a program start time change event to all registered DreamboxListeners in the synchronized block
2644937		This method sends the "Next Program Name changed" event to all registered DreamboxListeners, starting the event loop with the given StatusInfo.
SUMMARY
This method is used to notify registered DreamboxListeners that the program
26468770		gets the multicast IP address from the preferences and returns it as an InetAddress.
SUMMARY
This method is used to obtain the multicast IP address from the configuration setting
SUMMARY
This method is used
26493505		returns a string representation of the stack trace of the throwable object, including the details of each exception and a description of the log message.

This method returns a string representation of the stack trace of the throwable object, with a
26493529		removes anonymous errors from the validation error list.
This method returns a list of invalid errors that would not occur during validation.
SUMMARY
This method is used to return a list of validation errors that would occur during validation
26493601		tests that a Status object can be added to the Status object passed as an argument and that a validation error list contains the correct number of errors.

This method tests the functionality of adding and checking an Errors object to a Status object. It
26493772		includes a resource identified by the name parameter.

This method throws a ResourceNotFoundException if the resource is not found. Otherwise, it tries to resolve the resource and then call doInclude to return the content of the resource.

26493773		takes a parameter context context, overrides context and result if context is null and returns null.
This method tests if a resource exists and is readable.
This method tests if a resource created with a filename is readable.
This method
26493866		retrieves the parameter for the given parameter name, throwing an exception if the parameter is null, has more than zero parameters, or not a parent parameter.
SUMMARY
This method is used to retrieve the parameter for the given
26493872		resolves a value for a given context and member variable, returning null if the value is not null. It invokes doTemplate methods on the context and variable, and adds the resolved value to a string builder with an optional signature.


26493873		removes a parameter from the system, throwing exceptions if the parameter is null or empty. If the parameter's name is null, it throws an exception. It then invokes the _removeParameter method with the name of the removed parameter.

26493878		overrides the `equals` method and returns a string representation of the object, including the profiles[0] and profiles.
It first checks if the profile array is not empty and if it contains only one element, which is created
26493893		sets the launch type, type string, name string, and value string for the launcher object.
This method assigns the type string parameter to the _theLaunchHandler object.
This method assigns the name string parameter to the _theLaunchHandler
26493908		generates a string representation of a package by combining the superclass string representation with information about the protocol, class name, and class path. It also encodes classpath information into a string buffer and appends it to the string buffer. Finally
26493924		returns a string representation of the object, including the name and path of the magnet file.

This method returns a string representation of the object, including the name and path of the path element.

This method returns a string representation
26493940		overrides the `toString` method and returns a string representation of an object, including its type, class name, and class path.

This method returns a string representation of an object, including its type, class name, and
26493978		finds a profile based on a profile name, throwing an exception if the account name is not provided.

This method validates that the provided profile name is not null and throws an exception if it is null.

This method valid
26494026		adds a profile to the list of profiles, handling null and name invalid inputs and ensuring that the profile is not already added to the list along with adding it to the list of profiles for the name of the profile.

This method adds
26494036		removes a parameter from the system. It validates the argument and throws an exception if either of these operations is null. If the argument is an instance of Param, it checks if it's a name and removes it. It also removes the
26494042		extracts all the variables it is called on by a Java Virtual Machine (JMC) programming language (JMC). It takes a VM argv array of VM arguments and creates an array of environment variables with the specified number of variables.
26494083		adds a script to a map, if one doesn't already exist, with the given profile. Otherwise, the script itself is added to the map using the given profile.

This method adds a script to a map, or adds an
26494086		removes a script from the list of scripts of a profile, given the parent script and the Script object passed in. If the Script object is not null, it first removes it from the profile, and then removes the profile from the list of
26494096		removes the parameters with the specified ID from the given profile or to null.
SUMMARY
This method is used to remove parameters with the specified ID from either the specified profile or to null.


26494150		returns a string representation of the object.
This method uses the default constructor to set the value of the object, then gets the text on the text field.
This method uses the default constructor to set the value of the object and then
26494375		deserializes an InputStream into a Java ComplexObject. It retrieves an input stream from the provider, then deserializes the input stream from the object using the provider. If the deserialized object is null, it throws a Processing
26494418		returns a string representation of the object, including the fault code, actor, string value, and detail.
This method returns a string representation of the class, including the signature, body, and error messages.
SUMMARY

26494434		processes changes to the status by checking if the status is valid, and if so, it calls the appropriate listeners to process the status.
SUMMARY
This method is used to notify listeners of a new status by iterating through
26494487		retrieves the value as an int from an input value, throwing an exception if the value is null or not of type Number. If the value is null, it throws a InputException as the value is retrieved.

This method returns
26494490		checks if the internal boolean value of the object is equal to "true/false", "yes/no", or "on" and throws an InputException if the object is null or empty. If the internal boolean value is also "yes/
26494576		prompts the user for input and if the input is valid, it reads and prints it.
This method processes a query and if the input is valid and the query is valid, it makes an event listener and sends a message to an
26494710		filters and processes command line arguments to construct an options object. The options include set and collect-arguments, and checks for specific commands.
SUMMARY
This method is used to read command line arguments into an options object.
26494808		resolves an advice by first checking if the ID attribute of the advice reference is not null, then it attempts to resolve the advice definition, then it checks if the invocation validator is not null and returns if so. If the invocation validator
26494825		takes a Map object as an argument and throws IllegalArgumentException if the Map object contains the key "DEFAULT." If the key is not provided. It checks if any object in the map has a corresponding value associated with the DEFAULT
26494849		creates a new Configuration object by initializing `_importDeclarations` with `import` and `ignoreImports` methods, setting the isExports property to true. It then initializes the _lastNestedTypeSet` with
26494898		returns a string representation of the object by iterating through the elements of the instance object and appending each element to a string buffer with each string appended to the string buffer.

This method converts the instance object to a string by
26495455		retrieves a Property object associated with the specified PropertyName from a collection of NodeWrapper objects. If the property is found, it returns the proxy object. If the property does not exist or is not a null value, it throws an
26495463		returns a collection of all the property keys in the nodes list of the current node of the tree.

This method returns a collection of all the property keys in the nodes list of the current node of the tree.
SUMM
26495483		sets the maximum throughput per second for the task delay. It uses a minimum and maximum time delay.

This method updates the minimum task delay in the given task duration. If the minimum task delay is greater than 0, it joins a task
26495530		adds a task to the executor service and schedules it to slowly slow down when the count exceeds the maximum pool size.

This method tests the functionality of submitting a task to a scheduled executor. It simulates a callback for
26495559		calculates the expiration date for an object, including the creation instant if a valid date is present. If no unique expiration date is available, it generates a unique date with the current time. Finally, it returns the expiration date as a long
26495745		retrieves a child category by name from a configuration object. If the child category does not exist, it returns the parent category. If the child category exists, it returns it. If the parent category does not exist or is not of any
26496672		returns a Form object if it exists for the given formId.

This method takes three parameters, the method, the second parameter checks if the Form object already exists, sets the formDef object to this call, and if the form
26496756		tests the Parser class by comparing the parsed start and end scopes to expected values retrieved from a parsed object. It asserts that the scopes are not null and have keys with default scope symbols and values with no other value.

This
26496799		tests if the parent of two nodes is null, then the first node's parent is not a variable.

This method sets up a temporary file by deleting any existing file, creating a new file, renaming the temporary file to a new
26496803		tests if the `stateNames` of a `StateBean` is the same as the `expected` set, confirming that each state name is not empty and contains only one element.
SUMMARY
This method is used to
26496883		tests the CallStack's peek method by creating a stack, calling the push method on it, returning the peek of the stack, and then setting the stack's peek to null, which is then tested using the superclass's pop method.

26496891		tests the Cancellation method of the FormHandler class by creating three menus, setting their title and description, creating two menus with names and descriptions, and attempting to cancel one, expecting an IllegalArgumentException to be thrown.
This method
26497245		validates that an object of a specific type has the correct type and is of the correct class.

This method asserts that the class specified by the current object is of the correct type and returns true if it does.

This method
26497362		verifies whether the expected state of a module is in the correct states for the current state, printing an error message and throwing an exception if the state has not changed.
This method checks if a state has been updated in a specific state,
26497605		sends a text message with the specified text content to a specified message sender.
This method sends a text message to a specified message sender.
This method sends a text message to a specified message receiver.
This method sends a text message
26497616		sends a text message using a topic publisher.
This method sends a text message using the topic publisher or a control destination.
SUMMARY
This method is used to send a text message using a topic publisher or a control destination
26497725		sets the name of an attribute, first checking if it is an xml attribute tag and setting the integer local name accordingly, or by parsing a string to extract attribute information or attribute name and attribute value.

This method sets the name of an
26497799		includes a resource by using a provided input stream and callback object to provide a callback object to process the requested resource.

This method protected members include multiple threads, allowing for the inclusion of multiple resources.
SUMMARY
This method
26497958		adds a default definition to the configuration, throwing an exception if the definition is already defined. Otherwise, it adds the definition to the list of definitions.
SUMMARY
This method is used to ensure that the default definitions are declared
26498066		tests the onCreate() method of the ListType class and verifies that it handles the creation of objects.

This method tests the onCreate() method of the StringType class and verifies that the created Strings are equal to "
26498103		retrieves the service from the serviceId or service not foundException, if it exists.
This method, addNewUser, checks if a user exists in the manager and if not returns. If not, it checks if a manager is
26498240		tests that an instance of TestService can successfully accept a value of type ServiceDescription.
This method accepts a value and returns an instance of ServiceDescription with the value reference.
This method accepts a value and returns an instance of ServiceDescription with
26498257		loads a SotoContainer from an InputStream, gets an XML File object from the file, and parses the XML to extract attributes and sets the object using the parsed attributes.

This method generates an SotoContainer from a File object
26498386		registers a LifeCycleManager for a given name, filling the parent and otherocating the manager. 

This method initializes the environment with the type-specific manager and sets up the simulation logic. 

This method valid
26498445		resolves a resource by loading its input stream from the class loader and using the parent class loader to resolve the resource. If the resource is not found, it loads the resource from the system resources with the specified path.

This method checks
26498907		sets the value of an object to the specified type, throwing an exception if the type is invalid.

This method sets the value of an object to a specified type, provided if the object is not null.
SUMMARY

26499068		looks up the RemoteRegistry by JNDI name and a properties object to obtain a value.

This method looks up the RemoteRegistry using JNDI name and properties.
SUMMARY
This method is used
26499084		serves as a listener on a given host, prints a message and starts a thread that will listen for startup events from the server.
SUMMARY
This method is used to bind and subscribe to server listeners in a specified port.
26499675		creates a new signature using the specified algorithm and algorithm parameters.

This method creates a new signature using the specified algorithm parameter.
SUMMARY
This method is used to create a new signature using the specified algorithm parameters.


26499694		creates a KeyPairGenerator object based on the input algorithm name. If the algorithm name is not recognized, it throws a NoSuchAlgorithmException.

This method generates a KeyPair object with a specified signature.

26499821		retrieves the namespace for a class based on the delegate's repository factory.

This method returns a class with no namespace specification.

This method returns an array of its types in the class hierarchy.

This method asserts that
26499828		returns the prefix of the given namespace URI.

This method first checks if the namespace prefix is already declared in the map, if it is, it returns the map key.

If the namespace prefix is null, it returns 0
26499873		overrides the default toString() method and returns a string representation of the object, including the namespace prefix and its value.

This method generates a string representation of the object's attributes and child objects.

This method generates a
26499915		adds content to an XML document starting with the provided content.

This method formats the provided content into a string with a title attribute and ends with an empty line.

This method appends the provided content to the last buffer node
26499927		creates a ConvertorProcessorIF object by retrieving parameters from the environment and copying instance variables to the object's parameters.

This method handles the execution of a CreateProcessor and delegates the necessary commands.

This method stores the
26499956		returns a string representation of the document position.
SUMMARY
This method is used to provide the position of a locator and determine if it should be encoded by string representation.


26499966		removes a prefix mapping for a given URI.
This method attempts to end the prefix mapping any namespace prefixes indicated by the given URI.
This method ignores the prefix prefixes represented by this URI.
This method ignores the prefix mapping
26499969		returns the namespace URI for a given prefix in a namespace map, or null if the given prefix does not exist.
SUMMARY
This method is used to obtain the namespace URI for a given prefix in a namespace map, or
26499986		overrides the default toString() method and returns a string representation of the object.
This method overrides the default toString() method and returns a string representation of the JNIReference class, including the value and languageCode.

26500028		overrides a method to convert a character reference to a string representation in various formats, such as either XML or UTF-8, depending on the device name separated by spaces. It handles specialcharacter encoding like hexadecimal and lowercase
26500578		adds a ViewManager to the database, throwing an exception if the type specified is not specified or if the view manager already exists in the parent's name.

This method checks if the added ViewManager is null, throwing an exception if
26501094		unBinds the object from a Name and looks up the node in the lookup table for the Name.
This method calls the unbind method on the object and a boolean value added.
SUMMARY
This method is used to
26501411		takes two parameters, two lists and prints a message with their respective values until it encounters a null value, stating that the value can be either the task name or the cause.

This method prints the state of a task by printing a
26501489		dispatches an event with the specified type and data to the specified consumer.

This method dispatches an event with the specified type and data to the specified domain.
SUMMARY
This method is used to dispatch an event
26501571		returns a string representation of the object as a string. If the object is not a string, it is converted to an unclosed string representation and represented as a StringBuffer. If the object is not a string, it is either a non
26501586		sets the read ahead buffer size and throws an exception if the size is less than or equal to zero.

This method catches exceptions and sets the read ahead buffer size on a running server socket if there are delegates available.

Some exceptions
26501629		stops listening for incoming acceptors on a specified port. If the port is less than or equal to 1, it stops all pending acceptors, hides the acceptor daemon threads, sets the maximum number of acceptor daemons to 0
26501644		sets the maximum number of threads that have a daemon thread.
This method checks if the number of servers is less than or equal to zero, and throws an IllegalArgumentException if it is.
SUMMARY
This method is
26501652		returns a Socket object containing the current server socket's interest in a multipithreaded operation on the specified port, checking for updates in the configuration before creating a new one or returning an existing one opening a new one.

This method
26501681		marks a specified number of elements within an array by shifting existing elements down to maintain the array's minimum capacity.
This method marks a specified number of elements within an array and increments the array's position if the specified amount of elements have been marked
26501689		clears any files in the specified directory or its subdirectories. It initializes an array and checks all the files in the subdirectories. It then updates the positions of markers that have been used, allowing for full reading of data.
26501718		reads data from an input stream into an output stream, handling specific handling for array positions with length 0 and moving to the next buffer position.

This method writes a character sequence into the sequence. It first iterates over the array, reading
26501728		writes a byte array.
This method writes that array to the buffer.
This method creates a new buffer of the specified length.
This method copies a portion of the data from the specified buffer into the buffer.
This method writes
26501732		increments the _arrayCount if it is greater than 0. If this condition is met, calls write() on the associated block, and increments it up to the available space. It increments _arrayCount and calls acquire() on the buffer.
26501808		removes an object by removing it from the specified reference, and returns true if the removals arise.
This method removes an object from the superclass if it is not null. If the object is part of another class, it removes
26501848		processes an XSDP list of responses by iterating through the responses and populating the response display with a "can't be done" message.

This method processes an XSDP list of responses by iterating through each response
26501926		is used to reference or start a remote object with a specified parent VmId and OID, checking if the RemoteObject has an OID and refreshing the cache accordingly.

This method logs command line arguments, checks if the Vm
26501929		dereferences an OID specified in the database. If the OID is a proxy object or referenced, it deltates the Object using the proxyService method. If the OID is a client, it calls the dereference method on
26501971		checks if two DomainName objects are equal by comparing their first index and second index.

This method checks if two DomainName objects are equal by comparing those three elements in their DomainName objects.

This method compares two IAttribute objects
26501979		returns a string representation of the object's segments list, separated by a delimiter.

This method constructs a list of sorted list of LPCData objects with a given header string and traverses it, creating an array of sorted objects
26502134		registers an interface with a web driver using the properties passed in as parameters. It attempts to create a new secure ServerServlet object based on the properties that indicate it is being used, and throws an exception if the service URI is not valid
26502187		generates a hash code for an object by combining the hash codes of the object's class name, timestamp, session ID, and other details.

This method overrides the default toString method to provide a string representation of a Time object
26502311		swaps the interceptors and their dependencies between the program registers.

This method captures an event by dispatching it with the event dispatcher and handling any resulting exceptions.

This method clears the map, sets the debug level to true,
26502391		tests the functionality of the Java Virtual Machine (JVM) by asserting that the `Address` variable is equal to 99000000 plus the local IP variable equal to the default proxy IP variable for all systems. It also checks the validity of `Any
26502466		tests the doRegister method of the RemoteRefStateless class by creating a new RemoteRefStateless object and an instance of the MockStateless class, then precomputed a reference to its instance and then precomputed it to confirm that
26503583		releases all bus/ports that have been marked as busy by performing the following actions: clearing all ports, unlocking all bus/ports, releasing all ports, and resetting it to free up memory.

This method removes any pending connection
26503708		defines a deployment process that is executed from a web request. It creates an output stream and input stream, then processes the deployment. The method iterates over the deployment process, handling HTTP requests and responses. The method returns an integer value indicating
26545306		multiplies two 3x4 matrices and returns a new matrix.
This method multiplies each element in the other matrix and returns a 4x4 matrix with the result.
This method multiplies each element in the col4 matrix and
26546402		visits and performs an action on each child node of a given node. If no child node was encountered, it negates their dependencies and pushes the given node back onto the stack.
SUMMARY
This method is used to remove
26546529		takes a list of children and an object as arguments, and performs a composite path operation on the children's contents. It logs the result and returns the result.
SUMMARY
This method is used to determine the relative path between
26615051		mutates the values of an array by a specified number of random places to create a consistent new array.

This method generates random integers and adds them to the array.

This method adds a value to the array.

This
26615070		iterates all the worlds in a world iterate and calls itself recursively, as well as the next iteration forEachWorld if the iterateParallel parameter is true.

This method iterates all the clients in the world if
26615150		returns a specific cell in the population by first checking if the corresponding cell is already in the cell collection and then retrieving the cell from that collection. If either of these conditions are met, the cell is returned, otherwise null is returned.

26615217		takes a class name as an argument and constructs a Java code for the class using the AgiAgent. If the class name already exists, creates a new Java code resource by combining the agent class name with a filename and environment. It then
26615239		sets the network algorithms and architecture types for a network, including feedback, error, and output algorithm.
This method sets the network algorithms for a network, including feedback, error, learning, and training data.
This method sets the network algorithms
26615242		prepares for and saves the training set XML. If the training set XML file does not exist, it prints an error message. The XML is formatted and then loaded into thenetwork.

This method closes the training set XML file.

26615335		adds a listener to the toolbar that triggers the Toolbar_Clicked method when clicked.
This method sets the toolbar to be visible.
This method adds the toolbar to the frame.
This method adds a string listener to the menu
26615349		triggers a click event on all registered GUI listeners, passing the text as an argument.


This method fires a click event for all registered GUI listeners with the text "fireClicked" as an argument.

This method fires
26615353		defines and adds a button with a tooltip to a graphical user interface, given its name.

This method inserts a button with a tooltip or a button number within a button list.

This method inserts a button with a tooltip,
26615362		sets the data set and fires a table structure changed event when the data set is updated.
This method sets the variable inputCategories to the provided variable.
This method sets the variable outputCategories to the provided variable.
This method
26615382		deletes a line at the given row if it is currently selected.

This method handles deletion of an item from the database and updates the GUI to reflect the deletion.

This method handles the table table MouseEvent, deleting the selected
26615389		deletes a row from a database table by deleting the specified row at the given index. If the row was not found after zero or the table contains only one row, it is not writable.

This method takes two arguments: a
26615406		loads and displays a project and displays any errors in the status bar.

This method loads a project from a filename.

This method refreshes the tree of components when a file is found.
SUMMARY
This method
26615407		creates a new DataSet with use case name="Test","creates a DataSet with name "test", creates a new Datum with name "test", enters a loop to add a DataSet to the DataMatrix. enters a loop
26615431		appends a menu item to a given parent menu with a specified name and item list.

This method attempts to append actions to a given parent item with a given component ID.

This method tries to append an action to a given
26615464		adds a new menu component to the Container with the specified name, id, and description.

This method adds the specified menu to the Container with the specified id.

This method adds the specified menu component to the Container with the
26615482		logs the location and file name of the caret in a Java text editor and updates the status bar with the new file location. If the caret is at the end of the file, it clears the log. It then updates the text
26615491		checks the position of the neuron by finding the nearest neuron and checking the nearest neuron position. If the neuron is not near from the target.

This method fills the list with entities that are not in the given position.
SUMM
26615505		returns a Vector of the selected neurons from the GUI layer of the selected neurons list.

This method returns true if any neurons are selected in the GUI layer, otherwise false.

This method returns a Vector of the selected neurons from
26615507		checks if a position on a given point is contained within any neuron in an array of neurons. It iterates through the list to find the position contains the given point. If the point is found, the method returns it, otherwise it returns null
26615523		clears the selection of all displayables in the environment.
This method calls the superclass's "clearSelection" method.
This method returns the number of rows in the environment, in which each item in the list is removed from
26615533		attempts to reconnect a network and executes any associated connection listeners if successful.
SUMMARY
This method is used to reconnect all neurons connected by the current network to the provided network connection.


26615534		selects neurons in the diagram by iterating through the list of neurons and selecting one non-linear neurons for the current selection.
This method is the main loop of the GUI, extracting the selected neurons by dragging each layer vertically.
S
26615555		displays information when a selection in a tree changes, represented as a string.
This method is triggered when an element is changed in a tree, checking if the element being changed is instances of AITreeNode and an AITreeNode
26615610		sets the neural network and clears the network, clearing its components and setting the GUI to red.
SUMMARY
This method is used to update the network when the network is attached to an error data model.


26615621		repaints the error graph in a graphical user interface, resizing the viewer window to the graph size and setting the center position of the view.
SUMMARY
This method is used to repaint the error graph in a graphical user
26615673		returns a `Object `obj` (a primitive Object) representing a selected type based on the `_type` parameter.
This method returns a `Class` corresponding to the `_type` parameter.
This method checks if the
26615713		retrieves the String value of an object specified by the data name (localName) of a client object.
This method calls `getReadMethod()` to get the value of a property value for a client object.
This method
26615745		returns a list of valid candidates based on the provided candidateVector, toComplete, fromCommandList.
SUMMARY
This method is used to obtain a list of valid candidates from a command's candidateVector.


26615746		initializes the console and starts the Telnet server.

This method verifies that the Telnet server is started and starts the Telnet modeler.

This test method verifies that the Telnet debug console is created and initialized
26615765		handles the clicking of the mouse by calling the ancestor's button release method and setting the tool based on the status of changes.

This method handles the mouse released event by calling the superclass's button release method and logging the action and
26615781		returns a String representation of the data element, including its input and desired values: present, name, location, and formula.
SUMMARY
This method is used to return a String representation of the object.


26615809		removes the last input category from a list of input categories.
This method removes a list of input categories from the class.
This method removes the last input category from the list and unlists all elements in the list.
SUM
26615820		adds the category name to the output category of all of the input categories.

This method overrides a parent method and adds the output category of the current object to the output category of all of the input categories.

This method
26615832		removes the product type output category from the data model underlying source.
This method removes the category output category from the data model underlying source.
This method removes all output categories of the input element.
SUMMARY
This method
26615893		paints the component with a gray square. It draws a few lines of the same size. If the component is already visible, it may be visible.

This method paints a specified image at the given x and y coordinate. If the
26615901		adds a layer to the network and starts monitoring its memory, performing new neurons, and stopping after input.

CONTEXT
- This method implements the neuron propagation algorithm. It then adds a neuron to its current layer, performs an event
26615909		sets the layer type to either `Input`.HIDDEN_LAYER`, `Output`.NAME, or `Output`.ROTATE_LAYER. If the layer type is `Input`.NAME, `ROTATE_
26615928		returns a string representation of the object. It includes the name, number of neurons, and a description of each neuron.

This method first sets the variable n to the given name and then calls the toString method to update the object
26615983		sets the value of the name and type field of the object and fires a ProjectEvent if the value is different from the one being set.
This method updates the values of all the member variables and sets the part name.
This method updates
26616008		retrieves the project part associated with a given part path.

This method searches for the project part with a specified name.

This method checks if a given path matches the pattern specified by the pattern.

This method returns
2696682		takes a file and an array of pieces from a Structure object. It parses the file using an input stream provider. The method handles cases where the file contains invalid text, files with the suffix "cover". It commits the file to
2696800		returns the timestamp in the format "hh:mm:ss".
This method generates a string representing the hours per day in the format of "hh:mm:ss".
This method generates a string representing the minutes in the format:
2696845		takes a sequence and a name as input and returns a new group or a null group if the sequence is empty.

This method adds two groups to the sequence, one created if the names do not match a list of groups, and
2697199		is used to determine if a chain with a given ID already exists. It first checks if the name is valid: If it is, it checks for a chain with that ID and updates, returning the chain if found. Otherwise, it checks for
2707964		returns a Boolean value from a list of properties, ignoring any specified properties.
This method checks if a variable is not inherited of a specific parent method.
This method returns a string representation of an Expr object, considering its type and
2768439		writes a package to a file. It creates a destination file if necessary and writes the package to the file.

This method writes the contents of an object to a file. It creates a destination file if necessary and writes the contents of
2768601		This method checks for duplicate geometry segments, which are not handled properly, and ensures that only spatial segments are highlighted by the current view by comparing the draw point value to the current point values. This method also checks for duplicate grid nodes, which are
2768625		calculates the average element in an array of Point objects by adding up the sum of the same length and the total sum of all the elements in the first array. Once the sum of the elements in the array is less than 4, it
27698918		takes two specified directories as input, normalizes those directories, gets the auto move directory from the configured directories, and sets the directory and auto move directory in the properties file.

This method checks if the specified directory has any files defined
27698939		sets the time-based filter to either true or false based on an integer input. If the input is false, it handles both set and unset filters.

This method resolves a query by creating an empty query if the filter is set
27764102		returns a string representing the name of the category associated with the current node.
This method returns the name of the category associated with the current node.
This method returns the catalog associated with the current node.
This method returns the catalog
27764268		determines whether the user is able to delete a certificate, based on the string containing the user ID and the sign-on permission.

This method deletes a certificate if it exists and is signed. If the user is signed,
27764301		sets the value of the "tid" variable, attempts to retrieve the value of the "task" object using its "id" key and, if an exception occurs, retrieves the value from the "task" object using the "id
27764861		starts a server and creates a new thread to execute the server.
This method is used to respond to a request from another server and starts a server if the request starts with a GET request.
This method is used to initiate a request
27765945		sets the identifying name of an alternative for an alternate, then asserts that the identifying name is set to "foo" and is not equal to "notFoo" after using "addAlternative" to assert that "foo" is also "foo
27766128		tests the functionality of the getPlaylist method by passing various metadata and arguments to the method.
This method tests the getPlaylist method by passing several metadata and arguments to the method.
SUMMARY
This method is used to
27766132		tests the functionality of the put and get methods in the SimpleConfiguration class by adding and retrieving values to a map.

This method tests the put and get method in the SimpleConfiguration class by adding and retrieving values to a map.
S
27766133		tests that an iterator throws an exception when attempting to iterate over an empty MP3 playlist not working properly.
This method tests that an iterator returns an Iterator that is not a property of the correct type.
This method determines the order
27766134		tests the getNext() method of the MP3Playlist class. It attempts to get the next MP3 playlist and asserts that it returns null, indicating that the String "Hello World!there" is not null. If an exception occurs,
27766155		creates and returns an instance of an IChannel object and subscribes to it.

This method returns the JMS provider to use.
This method returns the topic iterator service to use.
This method returns the topic iterator service to
27766161		creates a listener for a given channel and initializes its properties with the provided event and source if provided.

This method creates a channel's source using the connected source obtained from the given event and the given channel and source if provided.
27766163		configures the ConfigurableContext using a provided Configuration object and sets its channel factory attribute based on the value of the configuration parameter.

This method initializes an object by loading all the services configured in the given Configuration object.

This
27766164		creates a `ListenerThread` with the specified name.
This method sets a new thread for the listener using the `ThreadManager.createListenerThread(nameOfListenerThread)` method.
SUMMARY
This method is
27766181		creates a new channel, either an argument array if has been provided, or a configuration if provided. It checks that only one instance of the configuration, and throws an exception if none are provided.

This method creates a new group with
27766187		sets the UDP IP port for the UDP socket. If there is no Port, it sets it to the local port as defined before connecting to the UDP socket.

This method attempts to set the UDP port for the UDP socket, ignoring
27766190		retrieves a clone of the task listener for the specified listener name, throwing an exception if the listener cannot be cloned or cannot be null.

This method fires a task event in the event queue for the specified event type, using
27766198		returns a list of unsubscribed source elements associated with the sender.

This method calls the superclass's subscribeListeners method to get a list of subscribers for the receiver.
SUMMARY
This method is used to obtain
27766202		returns a string containing information about the number of sources, number of registered sources, number of processed sources, and average bytes processed.

This method adds an additional byte to a given register with a specified address.

This method adds
27766211		This method sets the server controller by initializing the LoggingManager, the category, and creating `ServerController` objects.
SUMMARY
This method is used to initialize the ServerController.


27766251		creates a new configuration object using a configuration input channel, either a specified channel or a default channel. It also creates an object of type ConnectorService.

This method tests the functionality of the NetworkConfig class. It creates a Config
27766266		sets the play mode of the media to either ONCE, LOOP, or OFF.
This method sets the play mode of the media to either ONCE, LOOP, or OFF.
SUMMARY
This method is used
27766269		checks if two ISource objects are equal by comparing their identifiers.
This method is used to compare IP addresses as strings.
This method is used to compare IP addresses as strings.
SUMMARY
This method is used to compare
27766288		initializes an MP3 playlist using a file input stream and the operating system specified in the preferences.
This method initializes an MP3 playlist using a file input stream and the operating system specified in the preferences, and returns true if successful,
27766315		initializes a new instance of the Thread class, setting the log to debug mode and log level.

This method returns an instance of the AbstractThread class, but doesn't initialize it.

This method starts the thread by creating a
27766325		configures the logger by setting configuration properties based on whether a log4j configuration file exists and configuring it through the configuration.

This method configures a logger based on the logging configuration properties. It sets up logging with specific properties,
27766384		adds a listener to an IP address. If the port and IP address are not known to start a new proxy connection, it returns false. Otherwise, it sets the proxy's IP address and adds it to a list of listeners.
S
27766388		searches for a listener in the listeners list, returning the matching listener if found or null otherwise.
SUMMARY
This method is used to search for a listener in the listeners list and if found, returns the corresponding listener,
27772386		displays the main menu form and starts the application.
This method adds a command to the main menu form and registers a command listener for the main menu.
SUMMARY
This method is used to display the main menu form and
27796308		triggers a state changed event for the specified type by calling the fireStateChanged method on each listener with the specified type and the state change callback to notify listeners of the item state change.
SUMMARY
This method is used
27796349		adds a mapping to the HashMap, which will be used to represent the mapper methods.

This method clears the TreeMap.

This method adds a mapping to the TreeMap, which will be used to represent the mapped
27796374		sets the visual style for the specified object and calls the visual style, and returns the previous visual style.

This method gets the visual style for the specified object and sets it. If the visual style is null, it sets it to a
27796471		takes a node and a CyNetwork object as parameters, and calculates the node shape based on the network. It retrieves the canonical name and attributes of the node, and then uses the superclass's calculateNodeShape method to calculate the node
27796475		calculates the font size for an edge in a Cytoscape network based on the edge and its attributes.

This method calculates the font size for an edge based on its canonical name and the network.

This method calculates
27796518		calculates the node size of a given node in the CyNetwork network. If the graph is null, an IllegalArgumentException is thrown. Otherwise, the calculateNodeSize method returns the calculated sizes of the nodes. If there is not
27796521		calculates the font size for the given node and network. It retrieves the node attributes, calculates their node font size, and returns it as a float value. If the calculated font size is not a valid float value, it returns -
27796585		updates the visual style based on the default stroke weight and sets various visual attributes accordingly. It then draws the default stroke weight, creates null shape points and default values if none exist, and creates default stroke points and general values, resulting in points
27796588		refreshes the UI components of the object during the changeEvent method.
SUMMARY
This method is used to refresh the UI components of the object during the changeEvent method.


27796660		sets an object for storing the object and updates the display. It checks if the object is an instance of an Icon or a Color, and updates the display accordingly.

This method sets whether or not the object to be rendered is visible,
27796748		checks the layer's calculation usage and returns a Vector of conflict words if so. Otherwise, it iterates through the layer's layerStyle objects, checking each individual layer using the checkConflictingCalculator method, and adding any conflicts between
27796788		applies the provided properties to the item, including controllers, separator, key and info fields, using a value parser.
SUMMARY
This method is used to apply constraints to a property with a given base key, including the
27796816		retrieves the value of the current mapping or maps the default user to the current user's default selected value if the mapping was not previously set.

This method maps default values received as XML and creates a ValueDisplayer object with those
27796827		returns a cloned copy of a DiscreteMapping object with no properties.

This method creates a clone of a DiscreteMapping object if it does not already have one. It then clones the attribute map of the original map
27796852		validates a continuous mapping point by updating its value and removing the previous data point.

This method validates a continuous mapping point by updating its value.

This method validates a continuous mapping point by creating a continuous mapping point,
27796853		retrieves the value entered in a text field, validates the text, and saves the current value. If valid checks pass, it updates the value of the corresponding button with the new value.
SUMMARY
This method is
27796888		records the calculated value of a specified attribute by invoking the calcRangeValue method, passing in the attribute name and the calculated value as arguments, returning the numerical value from the calculated value.

This method reads an attribute value from the specified
27797094		updates the status label with the number of nodes and edges, and calculates the total node count, edge count and total edge count. It then paints the edges and updates the status label.
SUMMARY
This method is used to
27797120		sets the perspective of the network, updates the graph view, and fires events.

This method sets the perspective of the network by updating the current edge and edge indices in the graph.

This method sets the perspective of the network by
27797174		notifies registered listeners of a new event for the specified type.

This method creates a new event with the specified type and adds it to a CyNet component.

This method creates a new CyNetwork object based on the specified node
27797914		applies the current perspective to the graph viewer and graph layout if the project is writable and the view is not null.
SUMMARY
This method is used to apply the current perspective to the graph viewer and graph layout.


27797920		updates the visual mapper enabled status of the Cy components.
This method sets the visual mapper enabled status of the Cy components.
This method toggles the visual mapper enabled status of the check box menu item.
This method
27797955		updates the component identified by the input text by setting the enabled state of the add and remove components and notifying listeners that the internal frame is activated.

This method removes the selected component from the component map when an internal frame modifies
27797981		increases focus on the network view by logging the number of focused windows and storing the absolute offset of each opened window.

This method checks if the focused window is null, and if so, returns. Otherwise, it removes all the Cy
27798021		registers the command-line plugins using the JarLoaderCommandLineParser and PluginLoader. It then logs the number of plugins registered, parses the command-line arguments, and builds the command-line arguments for the plugin. It then tries
27798028		sets the graph view handler for a specified graph view if it exists in the graph view to handle the specified handler.

This method initializes the graph view handler.

This method returns a map of graph view handlers to graphs to handles
27798034		tests the legal arguments for the GML Files (GML files) for valid input and expects a MalformedCytoscape string exception to be thrown.

This method sends a goal to the given goal address and port to the provided
27798082		updates the visual style of the network view based on the selection event, and synchronizes the appearance of the graphs. If there is an error during any synchronization or display, an error is indicated. The method then exits the program, displays a
27798186		initializes the menus by calling `initializeMenus` or `initializeMenu` methods depending on which `menuResource` has the menu item enabled.
SUMMARY
This method is used to initialize the menus by calling it
27798254		checks if a plugin registry is present for a given pluginName.
This method checks if a plugin registry contains a given pluginName.
SUMMARY
This method is used to determine if a plugin registry contains a given pluginName.
27798299		converts a string representation of a class name to its file name. It first parses the class name, then uses a for loop to get the position of a dot after the class name, which is the beginning of a period. If the
27798424		creates a scroll pane with a titled border and a scrollbar. If a scroll pane has not been created yet, it is created using the createTitleScrollPane method and returned.

This method assigns the JScrollPane with
27798524		searches for the previous value with the specified key in the buffer. If no matching value is found, it finds the default value of the specified key. This method first checks if the buffer contains more information about the previous value. If so
27798569		loads a class from a file by first attempting to load the class from a byte stream and then using reflection to load the class. If the loading fails, it attempts to define the class using reflection in both the classes and the byte stream. If
27798650		returns the resource mnemonic for the given basename and key. If no key is provided, it returns a default key. It checks for the basename and the resource mnemonic pair, and if a match is found, it
27798672		sets the TableReader object for the class and fires a PropertyChangeEvent.

This method sets the TableReader object for the class and raises a PropertyChangeEvent.

This method sets the TableReader object for the class and raises a
27798878		resets the ignore rows of the table if the table data is not null. If the getTableData() method returns null, an error is logged.

This method takes a data object as input and calls the resetIgnoreRows
27798960		creates a new PropertyValueProvider object and sets its bound property to false if the dataTypePropertyChangeEventSource flag is true.
This method creates a deep copy of the current PropertyValueProvider object.
This method creates a shallow copy
27798991		returns the old binding of a BetterNamingEvent, throwing an exception if there are multiple old bindings specified. It first tries to find the binding by its name, and if not finds the binding by its name, then it returns the old
27798996		returns a new string value containing the current name and kind of binding to be added to the Binding. It checks if the type is the original type and if not, throws an exception. Otherwise, it reverses the ordering of the new binding
27799066		resets the ignore columns in the table data to 0 if the table data is not null. If the table data is null, it prints a warning message and returns.

This method then sets the ignore columns to the count of the table
27799079		resizes ignore columns in a table using the table data, counting the table columns in each table row.
SUMMARY
This method is used to resize ignore columns in a table to increase the table columns or increase the number of columns
27799154		resets the column types of the table data if it has been reset.
This method opens a file from a URL and stores the data in a ByteArrayInputStream.
This method opens a file on a local filesystem, gets the next
27799530		returns a JScrollPane containing the content panel.
This method creates a CEList object as a JScrollPane with scroll bar display and option focus.
This method creates a CEList object as a JScrollP
27799549		performs shared tasks on a cache event. It decrements the sync cycle counter and waits until it receives a condition before continuing with the synchronous task.

This method attempts to retrieve a double value from a cache and updates the cache if
27799750		returns the index of the closest unit in an array of dimensions by calculating the distance between the given coordinates using the array's dimension unit index at the distance from the current point and the given coordinates, it returns -1 if the distance is the
27799910		updates the property value of an object based on the provided property, with an optional old value. It also fires a property change event.
SUMMARY
This method is used to fire a property change event when the old value is
27799912		returns the name of the column at the specified index, accounting for surrogate pairs of digits into letters. If the character at the index is the last letter of a semicolon, that's all taken as hexadecimal letters, and
27800016		sets the "toAdjust" setting for the table's row and column.

This method initiates a decrement of the value and does nothing if it is zero.

This method sets the row height for both the selection and un
27800218		returns the minimum size of a JComponent based on its minimum size from a tree table tool. It adjusts the width of the component if it is horizontal.

This method retrieves the minimum size of a JComponent based on its minimum
27800252		calculates the maximum size of a JComponent based on the maximum size of its menu items in a JToolBar. When the JToolBar is in major and not horizontal, the maximum size is set to the maximum size of its menu
27800734		sets the passing types for the current object and notifies any registered listeners about the change.

**setPassingType**
This method temporarily changes the passing type in the property change object.

**setPassingTypes**

27800736		sets the name of the object and notifies PropertyChangeListeners.

This method fires a property change event with the old and new names as arguments.

This method fires a property change event with the name "name" and the
27801012		sets the type for a specified class. It first checks for null input, then checks for non-null object types, and finally sets passing types for the class.
SUMMARY
This method is used to construct a passing type for
27801089		This protected method updates the name of the object based on the comparison status and the property name.

This method overrides another method for comparing two values, considering their values. If they are instances of the same class and their property name,
27801119		checks if a filter cycle exists for a given filter. If it does not exist, an error is reported. The method returns true if the filter cycle is filtered together, or false if it isn't.
SUMMARY
This method
27801486		sets the renderer type and renderer for theBetterTableColumn class in a JTable. It removes any existing renderer map and adds the new renderer of the type to the color renderer map. It also adds the new renderer
27801498		sets the bin width to a specified value, updates the property change listener, and simulates the change in value.
SUMMARY
This method is used to set the bin width to a specified value and update the property change listener.
27801499		generates a renderer for a given class type, searching for extensions that can be edited, retrieving any specific renderer for the given class type, and returning a preferred renderer.

This method shows the interface frame and takes parameters that
27801531		sets the type editor for a default class and optionally removes the default class if none exists.

This method attempts to set the editor for a column with a specified name and value. It first checks if the cell exists, then retrieves the
27801551		gets the cell editor for a given display class and type.
This method returns the cell editor for a given type.
This method calls the getEditor method on a given cell editor if the type is an AbstractCellEditor.
SUM
27801576		returns the ZViewNode, creating it if it doesn't exist, and sets the visibility of the node.

This method retrieves the ZView, creating it if necessary, and prints a message indicating which node is associated with it
27801578		sets the visibility of vertical lines in the component, notifying any listeners with the new visibility state.

This method notifies any listeners about the change in visibility, setting the argument and updating the visibility accordingly.

This method sets the
27801580		removes a specific node from the graph: it takes a GraphNode as input and removes it from the model and view.

This method removes all of the nodes from the graph without affecting their layout from their descendants.

This method
27801641		sets the destination coordinate of the object, updates the source coordinate of the source point, sets the destination point on the graphics object to the new destination coordinates, and updates the source point and repaints the graphics object.

This method sets the
27801653		removes the current group from the tree model, removes the current group listener, and removes the current node from the parent's list of parents.

This method overrides the `entryAdded` method, adds a new tree item to a
27801691		resets global bounds and updates source points when triggered by a global node event.

This method calls the global bounds change method on the parent's parent.
SUMMARY
This method is used to update global bounds when it receives
27801726		sets the visibility of a module and either displays it as a source module view or as a target module view depending on the visibility of its submodules.
SUMMARY
This method is used to determine the visibility of a module based on
27801909		returns the ZLayerGroup associated with the specified layer, or a new ZLayerGroup if the layer is not defined.
This method returns a ZLayerGroup that corresponds to the specified layer, or a new ZLayerGroup if there is
27802034		returns the source handle point of the function.

This method selects the closest point to the source handle.

This method returns the visual element at the left of the terminal.

This method returns the vertical offset of the terminal
27802039		returns the target point of the source point, uses the point opposite to the target point, or null otherwise.
SUMMARY
This method is used to determine if there are any points in a list, which is necessary for the
27802044		adds a new point to the current handle and triggers an adjustment of the handle list to reflect the change.

This method handles a mouse click event by updating the cursor and performing actions based on the click location.

This method handles
27802051		creates a named handle and sets a default location for the delta.
This method creates a non-deterministic handle for a path where its transformation is a translation view.
This method builds child handles, including initializing a new handle
27802063		determines if a named handle was already taken by any other objects or the handle already exists. If the handle already exists, it returns true. Otherwise, it returns false.
SUMMARY
This method is used to check if
27802092		updates the edge view with the current point and repaints all other edges.
This method updates the edge view, converts the current point to global and to global to global coordinates, updates the source point and the current edge, and repaints
27802160		initializes the index map by creating a new OpenIntIntHashMap if it is null, initializing the index map, and iterating through a given matrix to populate the index map with data between the nodes and their corresponding counts. It then
27802170		sets the current point and calculates the arrow and line length for drawing an arrow.

This method draws an arrow over a line, including the arrow's URL.

This method draws an arrow over a line, using the specified length
27802185		initializes the number of models to create, creates a new graph model, gets a graph for a specified number of files, and adds the graph model to the host model with the specified number of models.

If the number of files has
27802202		calculates the boundaries of the two points that are connected by another point.

This method assigns values to the bboxes of a shape and an image canvas, then calculates positions for the shapes and image to fill that rectangle.


27802244		checks if the current geometry is visible to the display window. If they are not visible, it returns true. It then iterates over the internal collection of points, checking if any of them intersect with any defined draw coordinate segments. If a drawing
27802252		activates a mouse click event, selects all the handles except for the current.
SUMMARY
This method is used to select all the handles except for the current.


27802263		sets the wait mode for allgraphviews in the graph view iterator.
This method synchronizes access to the graphViewIterator singleton object and assigns it a value.
SUMMARY
This method is used to set the wait mode
27802266		clears the handle list, removes associated point handles, and sets the stroke paint to black. It then hides the handle and sets the stroke paint to black.

This method shows the labels in the pane by creating a new instance of Can
27802547		returns a list of all elements in the matrix.
This method returns the element at the specified index in the matrix.
This method returns the element with the given name in the matrix.
This method returns the element with the given name
27802617		sets the height of the rows in the table to the specified new height.
This method iterates over the rows and sets the preferred height for their preferred distance across all of them in the model.
It also scales the newly calculated row height
27802838		creates a remove button for a panel with the name "Remove Data Set".

This method creates a remove data set button for a panel with the name "Remove Data Set".

This method creates a remove data set button for a
27802916		This method creates a remove relation button on a Swing GUI.
SUMMARY
This method is used to create a button that, upon being clicked, invokes a user-defined action in the GUI dispatch thread.


27803187		adds a row to a row model, sets the description for the row, and initializes the labels and values.

This method sets the new value for a column. It checks if the new color for the column is empty and adds
27803486		creates a new node identifier for a given node, incrementing the identifier's label if necessary until it reaches the end.

This method updates the realizer name and node when the node has a label.
SUMMARY

27803502		visits all the nodes and edges in the graph and iterates through them.
This method calls the visitAllNodesAndEdges method to visit each node and edge in the graph.
SUMMARY
This method is used
27803690		updates the position of the target point view if it is an instance of ArrowNode, and then calls the superclass's updateTargetPointView method.

SUMMARY
This method is used to update the position of the target
27803934		sets the unselected paint for a specified graph node and updates edge object properties accordingly.

This method takes in a tag number and a source page number, and updates the super property of the graph viewer with the source page color of that node
27803987		sets the preferred column width of each dimension unit in the column model to a new width.
SUMMARY
This method is used to set the preferred column width of each dimension unit in the column model to a new width.


27804221		updates the target arrow as well as calls the default target method if the target is not null.
This method calls the original method.
SUMMARY
This method is used to update the target arrow as it is no longer needed
27804295		sets the handles of the object in both the handleList and handlePointList variables, removing any existing corners and adding the new handles.
SUMMARY
This method is used to recursively add a new handles to the object,
27804311		adds a handle to the view, creating it if it doesn't exist and adding it to the handle list and reference point list. If the handle already exists and the points of the handle doen't overlap with the points of the previous handle
27804335		sets up a canvas, draws objects, and displays all objects in the canvas.
This method handles mouse clicks on two input points based on user input. It performs actions such as moving the mouse, drawing entities, translating nodes, and closing a
27804338		is for drawing the unselected point.
It removes the selected point from the handle, sets it as the selected handle, calls drawUnselected, and adds the handle to the list of handles.
Finally, it clears the list of handles
27804495		adds a column to the model by adding it to the maximum dimension unit of the model. If the column name is empty, it adds the default name for the model index.
SUMMARY
This method is used to add a
27804558		sets theuberCommunity if it has not been set before.
This method sets theuberCommunity to the given value. If the value has been set, theuberCommunity is returned. Otherwise, theuberCommunity value is set and called as the
27804603		sets the width of the node in the graph.

This method adjusts the view to show a rounded rectangle and sets the width of the panel to 0.

This method shows the panel.

This method sets the width of the
27804650		sets the offset of the attributes and updates the node for the graph.

- This method clears the attribute representing the node.
- This method synchronizes the event queue for the attribute of the event and sets the offset to the given point
27804680		sets the root graph and throws an exception if it is already set. It also sets the root graph of the parent graph to the root graph of the given graph.

This method calls the save method of the super class to save the changes
27804826		deletes an element from a data structure by first blitting and performing a recursive blitting operation on it, adjusting the layout of the graph to accommodate the removed elements.

This method removes all elements from a collection by iterating through the
27804837		creates a new Node with the given node index. If the node does not exist, it throws a NoSuchNodeException to create and return the node.
SUMMARY
This method is used to create a new node with the
27804838		creates an edge between the current vertex and the specified graph entry. If the vertex type is not one of the vertex types, it is defined as an edge between the vertex.

This method returns the edge at the specified index.

27804934		starts a new thread that calls the start() method of the Thread class from the NetworkRunner.

This method creates a new thread that attempts to start the GUI thread using the SwingUtilities thread and handles any exceptions that may occur.
27804974		initializes the viewport to ensure it stays at (60, 60, 60) by setting the current size to the size of the viewport.

This method calls the superclass's initialize method and initializes the viewport.
27804975		initializes node locations, sets up a 2D list graph coordinate system, and calls the initializeLocations() method on the graph.

This method initializes the locations of the nodes in the view.

This method is the main
27804976		initializes the location of a node based on its position and dimension, setting a random location within the bounds if the node is not already within the bounds.

This method initializes the location of a node based on its position and dimension,
27804988		sets the drag enabled status of the component. If dragEnabled is true and the component is not java.awt.event.DragSource is not null, it sets the drag source to the current event. If dragEnabled is false and the
27805020		selects all rows on the current JTable if the component is not null. If the component is not editing, it stops editing and records that it is editing. It then sets the newSelection state of the component.
SUMM
27805078		The constructor initialises the JUNGSpringLayout instance with a GraphView and an IndexedEdge2D with optional index function.
SUMMARY
This method is used to initialize the GraphView with an IndexedEdge2D
27806389		hides the Visual Viewer with an EdgeView, resets a ChangeEvent, adds a hidden edge to the event, and fires a GraphViewChanged event.

This method hides the Visual Viewer. It first checks if there are
27807361		checks if two edges exist in the graph by comparing their source and destination nodes. If the graph does not have the initial graph, it does not.

This method checks for nodes with edges in the graph that are connected with any of the
27807903		adds three indices to a selected nodes array, where the first item is a string indicating the type of node being selected.

This method adds a selected node indices to an array.

This method adds a provided array of integers to
27808131		adds the provided arrays of edge indices to the selected edge indices.
This method adds the provided array of edge indices to the selected edge indices.
SUMMARY
This method is used to build the selected edge indices for the edges
27811989		Sets the map for the object, ensuring that values are contiguous from various sources. It compares the mapped positions of corresponding shapes based on the size of the map and the distance between each shape. It ensures that the start and end positions of the
27833953		sets the selected property to the given boolean value and notifies listeners if the value has changed.

This method tests the constructor of a property with a boolean property, ensuring that the property is working correctly by comparing its value.

This
27833960		sets the name of the object if it is different from the current name.

This method sets the name of the object if it is different from the previous name.
SUMMARY
This method is used to set the name of
27834070		sets the result type of a field depending on the input type. It checks the type to determine what to do or to clear the field upon selection. This method adds a check listener to the given field, which is a set preferred size for the
27834075		sets a ResultValue object to the resultValue variable and sets the resultValue and errorStyle, then removes any previous ResultValue if it exists.
This method sets the _texts array of Strings to true or false, and if the
27834168		takes a Method object as input and executes the given method on the bean provided. If the method is not null, it invokes the method on the bean and sets the result panel as the result value. If the method cannot be invoked,
27834204		generates and returns a unique name for an object, if it does not already have a unique name, it will generate a unique name for the object as it will be unique.
SUMMARY
This method is used to generate a
27834302		removes the currently displayed panel from its parent, then attempts to load the given class name, instantiating it, and its corresponding panel. If the instantiation fails, it displays an error message. Finally, it sets the current panel as the
27834496		returns true if the current type is mutable, otherwise it returns false.

This method returns a Boolean value indicating whether or not the object is mutable.
This method returns a Boolean value indicating whether or not the object is mut
27834524		retrieves the fully qualified package name of a given class.

This method then returns the qualified class name from the underlying package name.
SUMMARY
This method is used to obtain the qualified class name of a given class
27867668		sets the initialization parameters for a servlet action. If debug logging is enabled, it logs the key and value. This method then calls the superclass's additional init parameters.
SUMMARY
This method is used to log the key
27867725		sets the ActionServlet and handles exceptions and logging.

This method initializes the Servlet, logs the initialization, and sets the doPost method.
SUMMARY
This method is used to set the ActionServlet and
27867839		verifies the input forward after validating it and redirecting to the specified path, with debug logging enabled.

This method initializes the "action" attribute with the specified namespace and sets the default label theme for "/".

This
27867860		verifies input tiles forwards if the current request path contains the name "logRecipientsDefinationPoint" or "logRecipientsDefinationValues"; otherwise, it checks for the case where the application to log during execution of the method
27867903		returns the ActionForm associated with an action, after checking if debugging is enabled.

This method initializes a request's thread local variables.

This method initializes a request's thread local variables and asserts that there are not multiple
27867916		sets the action form for the request and initializes it if the initial state is OK. It also logs the entering and exiting of the method.
SUMMARY
This method is used to initialize the form and check the initialization.


27867931		processes a request and sets the flag in theStruts process request context.
This method logs a trace message and sets the flag in the Struts process request context.
SUMMARY
This method is used to set the flag
27907882		deserializes an object from a byte array, processing exceptions, such as exceptions when there are missing or invalid keys or values during deserialization, if they are in the pool or are not in the pool but are not present in the pool
27907979		converts an atom's atom data into an expression. 

This method checks for illegal symbols in the atom data, including data.

This method overrides a parent method to check for illegal symbols in the atom data and ignore errors
27908023		takes the XPath string and a parent Node object, validates the XPath string, converts the parent Node object into an XML structure, and returns a NodeList object representing any missing nodes in the structure.

This method is used
27908224		parses an XML document and iterates over each "rule" element in the document to get the "action" element, which represents the action to be performed.

This method parses the "action" element, which represents the
27908321		recursively updates the context thing for the given thing in a tree-like structure.

This method renames an object from one location to another.

This method sets the name of an object.

This method updates the
2793579		renders the header of an HtmlView component by starting the rendering, listening for header rendering and updating the header model, and notifying listeners of rendering.
This method parses and assigns values to HTML fields, where those values should not
2795572		pauses an event and changes its state to its started, paused, or paused. If the queue size has increased, it resumes the next event. If the queue size has decreased, it resumes the previous event. Otherwise, it resumes the
2795576		starts theWatchingThread if either the startWatchingThread does not exist or the stopWatchingThread does not exist, the startWatchingThread does not exist, the stopWatchingThread does not exist, and the state's start
2795580		stops the state when the stopButton is clicked. It stops the process and launches the GUI. If the stopCommand was not null, it stops the runnable.
SUMMARY
This method is used to stop the process
2795584		returns the start time from the start time if it's not null, or null if the start time is null.

This method updates the start time to the current time obtained from the controller with the timestamp value.
SUMM
2795588		removes the specified StopWatchListener from the list of listeners. If the listener is null, it throws an IllegalArgumentException. If the list of listeners is not empty, it iterates through the list of listeners and removes each listener's
2795604		removes a list of listeners associated with the current thread. If the new list is not null, it removes the listener from the new list. If the new list is not not null, it adds the listener to the existing list.


2795607		locates an entry in the table, given a value and a count.
This method returns the row associated with a given value, given a key column.
SUMMARY
This method is used to get the entry locator for
27966355		checks if twoPermissionsImpl objects are equal by comparing their names, ids, readers, and writers.
This method compares each element of the list with the element of the specified object.
This method converts a list of objects to a
28110174		initializes properties for the class by retrieving the file location, locale, and system default properties.

This method loads the property file with the specified file name parameter, removing non-sybase properties and normalizing necessary XML declaration.
S
28110187		initializes the container, view, and model with the given starting object parameter. It validates parameters and initializes the model accordingly.
SUMMARY
This method is used to initialize the container and view with a given starting object parameter
28110203		returns the images directory path, which is the directory containing the media files for the user who created the application.
SUMMARY
This method is used to retrieve the image directory path, either from the cache or from the view configuration
28110251		initializes the instance of the ObjectStructureTreeRenderer class by loading the properties from the properties file and initializing the object structure configuration.

- This method attempts to instantiate the ObjectStructureTreeRenderer class by
28110281		returns the image subdirectory, which contains the images located inside the current object structure.
SUMMARY
This method is used to retrieve the value of the imagesSubdirectory cache property of an image object.


28110461		gets the plain class for the given name and ensures that a prior operation was successful.

This method checks if the given name is already persistent in the map by checking if all of the persistence delegates have the same name with the given name.
28110489		returns a set of packages available on both a BshClassPath and a set of paths.
SUMMARY
This method is used to obtain a set of packages available on both a BshClassPath and a set of paths
28110519		This method iterates through all registered listeners and calls the classLoaderChanged method on each listener.

This method iterates through all registered listeners and calls the classLoaderChanged method on each listener.
SUMMARY
This method is
28110549		recursively iterates through the list of unique variables, methods, and child variables. 
This method returns the names of each variable, or null if no variable is found.
This method returns the names of all child variables (e
28110594		returns an interface object for the given class and interfaces. If the class is an interpreter, it will return the corresponding interface object from the interpreter. If the class is a class proxy, the method will lazily instantiate the proxy object.
28110732		evaluates a function with the specified name and arguments, executing different code if the name is a valid QName, otherwise providing options to determine the output of the evaluation.
SUMMARY
This method is used to resolve the name of
28110941		initializes a CopyAction object with a given name, keystroke, and tooltip.

This method sets a specified ToolBarModel for the copy actions.

This method sets the user's name on the MacroModel.

This
28110956		takes the filename and name space as input parameters, and the nameSpace is used to parse the filename, reading the string value from the nameSpace into the nameSpace using the fileName as an argument. If the filename cannot be read,
28111025		executes a predicate or function to apply a variable by executing a string, using the parameter provided. If the evaluated expression is not null, it is cast to a boolean and returned as a boolean. Otherwise, it is returned as an empty string
28111100		This method takes a class and a name as parameters. It sets the field with the given object and name. It updates the value of the field with the given value. If the field is not static, it creates an instance of the class and
28111195		takes a directory file name and returns the absolute path of the file. If the file name is null, it returns the canonical path of the directory. Otherwise, it returns the absolute path of the file that belongs to this directory.


28111219		reads an object from an input stream and sets the command line's command, host, address and filename properties.

This method is a synchronized method that disposes of and removes the object from the list of registered listeners.

This method
28112339		generates an output of a grammar file for the ANTLR Compiler grammar. It reads the grammar set file, generates the header, and writes the file header to the specified file with the specified file name.

This method writes the
28604058		initializes and adds components to a panel, such as labels, scroll panes, and tables, to create a graphical interface for display.

This method composes an ActionEvent by removing it from the parent, adding the event's action
28604075		returns a string representation of the object, including its name, taxonomy base name, and lines for its attributes, parents, and children.
SUMMARY
This method is used to format the parent taxon list for the object
28604117		expands the TaxonProxyTreeNode in the _tree object, provided that no TaxonProxyTreeNode is already stored and then traverses the subtree rooted at the given node when `treeWillExpand` is called.


28604128		composes the existing tree by adding tree selections and adding tree listener to it.

This method adds components to the GUI.

This method adds components to the GUI.
SUMMARY
This method is used to create the
28604162		handles user events by executing a search action based on the source of event, identifying the command associated with the event, and performing actions accordingly.

This method registers button presses for the escape, enter, or search buttons, and enters,
28604168		composes a graphical user interface (GUI) frame by setting a border, adding components and setting up listeners.

This method creates search and input GUI.

This method creates a GUI for joining a chat room.

This method
28629700		returns a JButton instance, creating it if it does not already exist and adding an action listener to it.

This method is private, protected, final, and overridden, it creates a JButton property for cancelling the operation
28629716		returns the JPanel named `panelAreaCentral` if it has been previously created, or creates a new one with a GridBagLayout and adds the three other JPanels to the new panel if it has not been previously created.
28629825		returns a JTextField named "textFieldName" that is first created if it does not already exist. This if statement is enabled, the method sets the textFieldName to the "Nombre" of the user.


28629917		returns a JPanel named `desconecta`, which is the panel for the user to close the connection. If the panel does not exist, it is created with a JLabel, JSlider, and the JButton added to
28630217		This method returns the JPanel `jContentPane` if it is not empty. Then it is instantiated and added to a GridBagLayout with a GridBagConstraints and an elmnt added to the JPanel
28630550		creates and returns a JButton with the specified text, icon, border, and action listener.

This method creates and returns a JButton with the specified text and action listener that sets a boolean value to false.

This method
28630553		returns the menu "Archivo" and creates it if it doesn't exist. It sets the menu bar, adds the project to the menu, and adds the menu items to the menu.

This method returns the menu "Archivo
28631042		returns the JMenu object that contains JMenu objects named "Administracion" and contains JMenuItem objects for adding, canceling, deleting, and deleting users.

This method returns a JMenu object that contains JMenu objects
28657484		checks whether mptClassEnabled is false, if mptClassName is not null and has length 1, if mptClassEnable is true, checks if mptClassName is not "mptClass", and if mptClassEnable
28667796		returns the mappings in the repository provider mapping for the source representation of a resource.
SUMMARY
This method is used to get a list of local users that can be connected to a specified project.


28667894		synchronizes a resource and logs information about it, then retrieves the TeamSite3WaySubscriber instance and synchronizes the resource. It then creates and runs synchronously that calls a synchronizer with the resource. If the synchronous
28718986		retrieves a texture for use by its name, either from a dictionary or from a file.

This method returns the texture associated with a given resource name, either from the cache or by reading the file using the resource name and texture
28761040		adds a Sort object to a model if the controller has one and for each Comparator, it sorts the model and sets a listener for the SortAdd event.

This method overrides the event handler for the SortAdd operation. If
28761041		handles the action of sorting a list model when the delete button is clicked.

This method handles the action of deleting the selected element in the list.

This method handles the action of sorting the list.
SUMMARY
28761100		toggles the visibility of a specific toggle button in a list based on a given line number with a minimum and maximum number of lines.

This method sets the currently selected state of a button.

This method sets the currently selected state
28761103		sets the color of a specified line of the lineData array.
This method sets the border color and the foreground color of a specified line of the lineData array.
SUMMARY
This method is used to set the color of
28761112		sets the default values of all checkboxes based on the values in a ConfigurationValueBoolean object.

This method sets the selected state of all checkbox components within a TreeSet based on a ConfigurationValueBoolean object.
SUM
28761113		applies parameters to the configuration by iterating through the checkbox indices and applying them to the configuration.

This method applies boolean values to the configuration by iterating through the configValues map. If a value is selected, it sets the
28761234		resets the attributes of a page, including its formatter and internal modifications.
This method notifies manager of state changes and all page formatting changes.
SUMMARY
This method is used to reset the formatter state in the
28761336		displays the contents of the table in a new line, with visual formatting and visibility enabled. It also hides the newline, normal, and submaster editor divider settings. Additionally, it tracks the caret position and displays the content in
28761349		updates the view of the content outline of the view.

The content outline is then added to the top, the tabbed pane and the tree of the content outline.
This method updates the tabbed pane at the current index,
28761521		updates the list of registered algorithms, removes the error popup menu if deselected, adds the error popup menu if still selected, and sets the active flag to true.
SUMMARY
This method is used to set the menu items
28761577		constructs embeddedIn pages from a media wiki and adds it to a list of pages, potentially adding pages with empty names as the first and potentially adding it after the last name.

This method calls the constructEmbeddedIn method of
28761737		attaches a new signature to the text entered in the text field for the new section. If a text is already formatted, it replaces it before attaching it to the end of the document.

This method converts a text string into an array
28761838		displays a warning dialog asking the user if they want to modify pages. If the user does not, it displays an OK status.

This method executes the actionDemo() method.

This method displays a confirmation dialog asking the
28761880		waits for a retry interval to be exceeded or until the retry limit is reached.

This method calls another method repeatedly until the delay times are equal to zero.
SUMMARY
This method is used to delay the
28761886		increases the number of pages,DX links, andDXLinks of multiple contributors, ensuring that only the same number of pages that can be added as contributing.
SUMMARY
This method is used to increase contribution points.


28761898		adds a new page to a JPanel if the number of buttons specified is equal to the maximum number of buttons.

This method initializes the page data array list if it is null, and adds a JLabel for "Page and
28761901		checks the property of the ProjectSettings.PROJECT_NEW_YARDAY and opens the settings page, otherwise displays a message indicating that it cannot be configured.

This method determines whether any other settings should be used or not.

28762012		adds a text comment panel to the panel with 10 fields for automatic comment settings.

This method adds a JLabel and a JCheckBox to the panel with a blank space, and enables the comment text field and check box.

28762023		initializes the encyclopedic talk namespaces by converting the provided string to an integer and adding 1 to the result if the integer is not negative.

This method clears the encyclopedic talk namespaces and initializes the en
28762025		adds a checkbox to enable or disable the Close After Send button. The checkbox is added to the panel using GUIUtilities.setUpGUI() or GuiUtilities.add() depending on the current state of the checkbox
28762031		adds the add button to the panel if the text is not empty and sets the label if necessary.

This method adds the add talk page checkbox to the panel.

This method adds the edit talk page field to the panel
28762034		This method updates the check box for update duabb warning on talk page if the current page contains focus.

This method adds the check box to the given panel.
SUMMARY
This method is used to add the check box
28762039		adds checkboxes for creating and deleting DABs (booleans between user input options and HTML strings)

This method creates a user login dialog and adds input fields for username, password, role, and login status options.

28762245		will check if the page is empty, then iterate through the pages, reaching pages until the end of the overview is reached or the end of the overview is reached. The page is then checked for areas and printed them if there is a current
28762336		expands templates to a specified text using Wikipedia, provided parameters such as the site URL, the title or url, and the environment variables.

This method takes input parameters like Wikipedia and MakeRequest parameters and returns the document object.
S
28762466		increments the number of occurrences for a given page.

This method adds links and counts the links to the current page.

This method increments the number of occurrences for a given page.

This method checks if a page has
28762790		removes a page from a collection of pages, ensuring that each page with the same title is also in the collection if it is not empty.

This method removes an error page from a collection of errors if the page is not in the
28762800		takes a collection of pages, constructs a list of hidden pages by iterating over the collection, and appending the title of each page to a StringBuilder.

This method constructs a StringBuilder by concatenating each string in the
28762885		loads site metadata for a Wikipedia object using an API call.

This method loads site information for a Wikipedia object using an API call.

This method loads site information for a Wikipedia object using an API call.
SUMMARY
28775517		This method initializes the GUI, setting the location, size, and default close operation. It then sets the default close operation to dispose on close, and then attempts to read an image file and display the image in the JFrame. If an
28775558		returns a JTextField that has been initialized if it's null, otherwise it is initialized's bounds and the text of the field is set to the value returned by the initalize method.
This method initializes a JPanel with
28775689		calculates the time elapsed since the latest connection time stored in the connection map.

This method retrieves the difference between two specified time points and stores it in the connection map.

This method returns the number of connections on the
28775792		starts a timeout for communication with a Bluetooth bus by updating the time of the bus and setting the connection status.

This method attempts to establish a Bluetooth bus connection by updating the time of the bus and sending a "SUCCESSFUL
28775844		This method returns the JPanel object representing the GUI of the network, creating it if it does not already exist, with a null layout. The created GUI has a null layout, and it contains several buttons labeled "Input", "Add Matrix",
28775859		This method returns the `JButton` containing `DeleteMatrix` and adds an action listener to it.
This method returns the `JButton` containing `DeleteMatrix`.
This method returns the `JButton` containing `DeleteMatrix`.
28775860		returns a JTextField named txtDevName, creating it if it does not exist, and setting the bounds and text.

This method returns a JLabel named txtTName, creating it if it does not exist,
28775871		returns the `editMatrix` JPanel if it is not null, otherwise it creates a new one and initializes it with a new `GridBagLayout` and sets the bounds and text for the `editMatrix` JButton.
28876958		appends a message to a buffer, logging the message if it is short enough to fit the size of the buffer.

This method recursively converts a string into an array of strings, appending each string to the buffer using indent
28877058		scans the queue item for updates to be undone and updates the queue item's state accordingly.
This method waits for the next item to be processed and then enters the loop to do the final actions.
This method creates a new thread to
28919457		draws a grid using the arguments provided in the arguments.

This method sets the maximum and minimum x and y values of the grid using the new values provided in another argument.

This method checks if the x difference points between the
28919549		returns the 2D MathPainter object if the graphics object is not null, otherwise it creates a MathPainter object and adds it to the graphics and sets the rendering area of the MathGraphics object.
SUMMARY
This
28919574		sets the MathTransformSpace for the view. It takes two int arguments x0 and y0, z0, and xR and yR to create a new MathTransform object with the range of x0, y0, and z0
28919579		sets the component resize status and resizes the off-screen image.

This method sets a background color for the component to the current color.

This method sets the multi-selection option for the component to the current option.

28919701		calculates the h-coordinate of a specific coordinate in 3D space given four of the x and y coordinates, z coordinates and eye distance. It returns the delta between 0 and the direction of the object's z-axis.

28919705		calculates the angle at which an object would be rendered to a specified coordinates in 3D space. It takes into account the object's orientation with its attenuation. It also checks for collisions with existing vertices and handles potential errors.

28920040		draws a line from a point to a geometric coordinate system, with optional offsets and the end of the line.

This method draws a line between two points at the specified coordinates.

This method draws a line from a point to
28920105		draws a box with an edge or not depending on the input parameters, depending on the axis's orientation.

This method also paints the specified shapes using the provided Z-buffer mode.
SUMMARY
This method is used
28920121		draws a box edge on the graph using the specified coordinates, eye direction, or coordinates only if the coordinate is not ignored.
SUMMARY
This method is used to render the edge of the X or Y box depending on the
28921193		returns the FenceNode that is one of the predefined Fence instances or a combination of predefined Fence to single Fence instances having been in the outer parenthesis, which is a close-of-parenthesis.
S
28921224		finds the index of the first human sentence to represent a node indicating the most relevant precedence.

SUMMARY
This method is used to find the index of the highest precedence Token in a sequence of NodeImpl objects.


28921272		converts a raw XML string to a metric XML fragment by organizing it into paragraphs.

This method creates an XML fragment, obtains its raw XML string, adds opening and closing tags for XML elements, and gathers an XML node list from
28921303		translates a metric processing instruction into its appropriate node depending on its target node.
This method translates the metricprocessing instruction child nodes based on a specified template node.
SUMMARY
This method is used to translate metadata processing
28921314		takes in a string and returns a Node object. 
This method provides a content container for the mathML document. 
This method creates an inline presentation MathML content. 
This method converts the inline presentation MathML content to
28921326		parses an XML string and extracts the first node node that contains the correct data to represent a particular expression. It checks the node type of the expression and performs appropriate actions based on the type of the expression. Finally, it handles errors by
28921358		serializes a ComputereseTreeNode by recursively serializing singleton Fences, then serializing singleton Node nodes.

This method serializes a Literal node by serializing its singleton Fences.

This
28951864		establishes a secure connection using the specified description. If the description is not null and the description is an instance of StandardServer, it attempts to establish a secure socket using the server's SecureSocketFactory and returns the connection. If the description
28951865		establishes an SSL client socket for authentication with X.509 certificate. If an alternative factory initializes the socket based on a provided address. It then creates a secure server socket and listens for incoming connections. If there is an exception during connection
28951881		retrieves the value of a field using its name, ignoring the string value, casting the value to a string, and returning null if the field is null.
This method asserts a Java program with different Java versions, including various major versions
28951888		retrieves the value of the specified field as a Calendar object, handling both Date and Year references. It checks for specific values and handles case-insensitive field ordering by the case. It then converts Strings to integers and logs warnings for
28951889		adds an entry to a map and populates the inverse map if it is not null.
This method adds the value of the variable 'name' to the map, and populates the includes map if it is not null.
This
28951897		returns a CodeSystem object corresponding to the given Code system name. If the CodeSystem object cannot be retrieved, the method returns null.

This method returns a CodeEnumeration object corresponding to the given Code system name.
S
28951903		gets the value of a measure input field given its name.
This method gets the value of a measure field given its name.
This method sets measures by name, which are the same as the first measure.
This method gets the value
28951907		adds a new entry with the specified code, display name, coding scheme name, and extension to a code set storage. It only adds those entries with the same code and display name and extension.
SUMMARY
This method is
28951931		sets the universalId field and also sets the universalIdType field using the input universal string.
SUMMARY
This method is used to set the universalId field.


28951938		sets the universal ID type, ensuring it is not null and extracting the name, surname, and user records.

This method overrides a parent method and sets the universal ID type of the current object, if the universal ID is null,
28951949		adds a new PatientID object with a new ID using the namespace.

This method saves a PatientID object to the database.
SUMMARY
This method is used to add a new PatientID object to the database.
28951955		generates a query for a query scheme, where the authority name follows both the namespace ID and all IDs separated by an ampersand, then the authority name follows both the namespace ID and the universal ID.
SUMMARY
This
28951960		calculates and returns the hash code of the object.
This method checks if the given ID position is fixed.
This method returns the hash code of the given ID position.
This method returns the hash code of the given ID position
28952063		adds a code set to a map of code schemes
28952075		sets various properties of the dictionary to match the provided property name and value. If the property is null or empty, it ignores the property name. If not null, it replaces the property with the provided value, separated by commas.


28952088		adds a property set with a given name to the connection.
This method filters events by class, field, and event details from the event repository.
This method creates a properties object for property set mapping.
This method adds a property
28952097		adds an EnumMap to a connection using its name and the values in the form of a Map
28952106		adds a string map to the connection's string map, if the parameters and parameters nb.
SUMMARY
This method is used to add a string map to the connection's string map and populates it with the names of
28952117		adds an ObjectMap to the object maps Hashtable if the ObjectMap is not null.

This method gets the name of a given Object parameter, and the object map from the properties object if it is not null.

This
28952125		adds an object to a connection and initializes its start and end points.

This method sets the layout of the window to a BorderLayout and adds a title field to the bottom of the window.

This method sets the layout
28952132		adds a list of objects to the connection, creating the connection if necessary.
SUMMARY
This method is used to add a list of objects to the connection if there is no name for the list.


28952139		adds a new identifier with a given name, type and authority to the current connection, creating a new identifier if already exists. 

This method processes incoming message and responds with specific commands related to game-ending, winning, and
28952191		determines if an object is unique based on whether it has a local unique identifier or an optional cross-reference method.
SUMMARY
This method is used to check if an object is unique based on whether it has a local
28952215		returns the id of the XML element. If the xml:base is null, the method returns the full local id of the catalog.  If xstream-formatted or xml:base xml:base is not null, or there are
28952232		converts a list of string ids into a comma-separated string of comma-separated values.

This method returns a string representation of the object, consisting of the values separated by commas and spaces.
SUMM
28952649		adds an address type to a list of addresses and removes the old entry if the message is not a multicast message.
SUMMARY
This method is used to remove the old entry if the message is not a multicast message
28952659		removes an address type from the list of addresses associated with an address.

This method removes a remote system based on the provided string.
SUMMARY
This method is used to remove an address type from the list of addresses
28952718		adds a phone number to the list of phone numbers. It first gets the phone type from the phone object and then adds the phone number to the list of phone numbers to be added. It then invalidates the cache and updates the UI components
28952734		removes a phone number from the list of phone numbers associated with a type of address, if it exists. 
This method updates the list of phone numbers associated with a specific type of address.
SUMMARY
This method is
28952790		sets up a secure connection with a specified port number, key store, and trust store and starts a SSL server with the specified port number and logs that it starts one.

This method creates a new instance of the class, and then config
28952811		tests the functionality of a simple connection by running an update. It checks various assertions, including the disconnection and established streams, to ensure that the streams are closed correctly before stopping and closing the connection.

This method starts the server, sets
28953001		submits a document to multiple consumer with a provided description and content code with optional content validation.

This method submits a document to multiple consumer with the provided description.

This method submits a document to multiple consumer with the provided
28953024		submits a collection of documents to a document consumer.
SUMMARY
This method is used to submit a collection of single documents to a document consumer.


28953066		updates the test data by filtering the ACL to the XdsDocumentActor and iterating through a list of XdsDocumentProducerDocumentProducers and documents to update their patient forms. Finally, it updates the patient's test patients in the
28953113		takes an authority and a connection description and returns an Identifier representing that authority. It iterates through a list of identifiers associated with the authority and retrieves any that match the connection description.

This method checks if the authority matches
28953117		creates and populates a QBP_Q21 object, which includes adding a Query-P fragment, QPD segments, RCP fragments, and MBP fragment.

This method initializes the QBP_Q21 object with
28953143		populates the RCP object with data from a given RCP object, including the count, quality of service, and limited flag. It throws a DataTypeException if an error occurs.

This method populates the RCP object with
28953149		creates a continuation query message between two different message UI elements, including the message header and DSC.

This method creates a QBP_Q21 message with continuation pointer and disables the default encoding for the message. It also updates
28953492		defines the class with the name "Severity" which implements the Enum constants Severity.
SUMMARY
This method is used to provide a severity implementation for two custom enumerations.


28953582		performs an application activity specified by the name parameter and instantiates an AuditObjectFactory object, sets the EventIdType, and appends an ApplicationMessage to the message transport. If an AuditLevel is enabled, it also logs the AuditEvent
28953662		verifies the HTTP method and determines if an operation given a response is of the type "execute". If the operation is "execute," it attempts to invoke the operation on the server, either in an SMTP server or a registry response, and
28953663		logs an info message indicating that a node authorization failure has occurred.
SUMMARY
This method logs an asynchronous acknowledgment and notifies the server.


28953664		extracts XDS response from a given response target object. If the content is not null, it returns the extracted content as an object. If the response type is not specified and only one object is specified, it returns a structured response.
28953672		writes an OMElement message to both the logger and a single logger created with a specific element name.

This method logs a message containing the X-axis class name and the contents of an XML element called "message" with the
28953673		writes an HL7 message to the output.
This method handles a message by encoding it and updating history accordingly.
This method writes the message to the output.
This method writes the identifier to the output.
This method writes the
28953674		logs the user into the message for successfully taking them the sender and the context of the user in the form of an ActiveParticipant.

This method attempts to log into a user using the Util class, with the user ID provided
28953679		returns an EndpointReference object containing a URL constructed from the provided connection.
This method returns a connection reference for the connection.
This method connects the specified endpoint to the SDS registry. It checks the protocol and URL details of the
28953689		logs out the user by setting their role to "Source" in the user authentication object.

This method sets their role to "Audit" in the action context's userAuthentication object.

This method logs out the user
28953712		records an imported patient to a specific destination with a given media descriptor, identified by the argument's participant object type code. It logs the data in the patient object and sets the patient's properties accordingly.

This method logs the capturing and
28953715		reads a response from the input stream and returns it as a string.

This method returns a String containing the response's contents first.

This method handles exceptions and prints them to PrintWriter.
SUMMARY
This method
28953726		records the patient and all of theirMedia field added to the system. 
This method, 'recordExported' adds the patient as a recipient to the user and record an imported patient.
This method, 'recordExported'
28953734		returns the non-wildcard components of a value. It does this by iterating through the value of each component and replacing any occurrences of the wildcard character with "*". If the component does not contain the wildcard character, it
28953745		These methods override different constructors to provide extra information about its description.
SUMMARY
This method is used to provide a description of a document relationship for XML content.


28953778		adds a raw PDF query message to an HL7 HL7 message. It sets the query parameters to be either their values or their sum, and associates them with the corresponding HL7 query.
SUMMARY
This method is
28953798		creates a message for opening HLS Query Box to a PIX Query Hardware Service (HLS) hardware and returns the message object. It includes message ID, WF service name, and MTMF.
SUMMARY

28953808		formats an input value, taking into account whether it's opaque and whether it's opaque. If the input value is opaque and its prefix is empty, leading slashes or consists only of lowercase letters, their uppercase letter conversion are
28953818		retrieves the Adhoc Query Response of a SOAP message.

This method overrides the performOperation method and creates and returns an XmlAdhocQueryResponse.

This method creates a message and sets its SO
28953873		adds an RIM (Resource Name Record) attribute to the root element, setting its value and optional flag. If the attribute is required and the value is null, it throws a request-response exception. It sets the target namespace and adds
28953881		adds a name to the root element, with optional boolean parameter, and throws exceptions for error codes XDSRIM, XMLStreamException, and SOAPException
28953888		adds a description to an item, including a comment, list of items, or complex item, if provided.

This method adds fields to an XML element, including the patient name, patient adress, name, department, and gender
28953893		adds a slot to the SOAP message and handles exceptions related to missing or invalid slots during the ADD operation.

This method handles ADD operation by creating a SOAP Message (SmsRequest) within the root element of the collection.
28953900		gets the object instance for the given class.
This method attempts to assign a value to the variable with the given name using reflection.
This method assigns a value to the variable by invoking the last() method on the object object of the first
28953901		adds a slot with the specified name and value to the specified root element, or throws an exception if the slot is not set and the provided name is not reserved.

This method sets the "addRimSlots" property of
28953912		adds a classification to the object with specified code type, collection of values, classification scheme, and required status.

This method adds a classification to the object with specified code type, representation of information, classification scheme, and required status.
28953926		adds an external identifier to a RegistryElement.
This method adds an inheritance to the RegistryElement.
This method adds an external identifier to the RegistryElement using the specified name, value, and identification scheme, and sets the URI using the
28953964		scans an input document, parses a MIME type, sets metadata, and creates CCDDocument.

This method sets the author information and metadata to the specified ccdDocument, optionally adding stylesheets and errors if provided.
28954001		sends an AR400 personal registration feed with a specified authority to a patient identified by a given patient identifier and returns a boolean indicating the success of the operation.

This method sends an AR400 personal registration feed with a specified patient identifier to
28954229		returns the chosen patient ID as a string, which is the result of the getSourcePatientId method.
SUMMARY
This method is used to select the target patient's source patient ID.


28954261		retrieves the effective time as a Date object from a located file or an absolute path within the property file.

This method returns the starting time of an event as a Date object.
SUMMARY
This method is used
28954277		retrieves the effective end time of a service.

This method returns the value of the field `serviceEndDate`.

This method returns the value of the field `serviceEndTime`.

This method returns the value of
28954907		adds an ID to a collection of IDs if the ID already exists, otherwise it builds the ID based on the ID data and a boolean indicating whether to use an extension.

This method generates ID and adds it to a map by ID
2896279		This method prints a string representation of the object, including an empty column.

This method prints the type of the object.
SUMMARY
This method is used to print a string representation of the object, including an empty column
2896317		retrieves an integer value from the underlying bits array by performing bitwise operations on the two values.

This method sets the last bit at the specified index if the value is positive.

This method sets the last bit at the
2896382		checks if two IntCharSet objects are not equal if they have the same size, containOnlySubSet, and are intervalls.

This method sets the integer variable stored in the variable named "x".

This method sets
2896433		returns a string representation of the character classes, formatted with a line separator between each class.
SUMMARY
This method is used to stringize classes and their respective form (Class C and Character Class), throwing an exception if
2896454		returns the highest priority action for a given set of states.

This method checks if an input string starts with a letter code, adding an n abbreviation if necessary.

This method analyzes a string and returns a string by
2896471		inserts a macro with the given name and regular expression into the macros map, and returns true if the macro was successfully inserted. If the insertion is successful, it adds the name and definition to the variable list and returns true.

This
2896476		returns an enumeration of all unused objects in the collection. 
This method returns a string containing the names of all the elements in the collection.
SUMMARY
This method is used to prepare the enumeration of elements in
2896534		writes the contents of a character array to an output stream, starting at a specified offset and ending at a specified length, if the maximum length is greater than the specified maximum length.
This method writes data to a file or stream, in
2896535		writes a string to the console, splitting it into individual text if the user sends the newline character. Otherwise, it normalizes the text and concatenates it with spaces. If the user sends more than 78 characters, it prints the
2897190		returns the index of the first occurrence of the first occurrence of the specified text value in the XML document.
SUMMARY
This method is used to retrieve the index of the first occurrence of the specified text value in the XML document
2897212		returns the namespace URI of an XML parameter's type or XSP param type.

This method maps variable names into a variable map, matching the prefix prefix and local name of the given namespace URI with null checking.

This method
2897220		retrieves the value associated with the specified URI and local name from the data map.

This method checks for a previous read of XML response and returns the "Response" value, or null if there is none.

This method
29065191		adds the North section of the GUI to the specified container, including various sub-comps (panel and strut) above it.

This method creates a new panel with a BorderLayout and a JLabel displaying the text "Current strategy
29065235		initializes the GUI by setting the location and size of the parent window.

This method sets the size of the parent window to the specified dimensions by calling the `initGUI()` method.
SUMMARY
This method is
29065343		determines if a resize column is allowed in a JTableHeader based on the mouse coordinates of its mouse click point.

This method checks if the selected column in the JTableHeader is less than 1. If so, it checks
29065823		adds a page to the tree. It creates an instance of the class M**, then adds it to the tree.

This method appends the children of the parent node to the tree. It checks if the parent has children.
29065855		initializes the JFrame object by setting its frame to be the home panel, setting the menu bar to the status bar, and making the JCanvas object the canvas.

This method initializes the frame by setting its title and size
29066349		retrieves an OLAP model using an input ID. If the model does not exist, it creates one based on the definition. If the mode XMLA is enabled and the ID is specified to create, it adds the model to the OL
29066788		takes an integer value 's' and calculates the corresponding cell value using the formula 'a2cmscr' for the cell.
This method, after calculations, calculates the integer value of 's' if the cell's value is not
29069894		takes an HttpServletRequest and retrieves parameter data from it, it first retrieves an existing GridBean object for that data ID.
If the ID is null, it returns a new Gridbean object with an empty string
29272557		takes in two contexts and iterates over them to get the relation name for the resource range and the related resource. If the resource is a class, it retrieves the related resource with the same name as the given resource range and the related
29298277		closes a Recordstore by removing its reference from the list of listeners and closes the store, setting the name of the list to the name of the recordstore, and saving the new name to the Recordstore.
This method closes the Record
29318680		adds a SOAP header to a header element, validates the SOAP header's fault, and adds each fault to the endpoint header. It throws a MalformedURIException if the header element is outside of a specific set. The end
29318722		adds a single Axis header element to the message message.
SUMMARY
This method is used to add a single Axis header element to the message message.


29318839		adds a fault response header to the response document, creating a new response member if the fault response type is not set.
This method adds a reply to header to the first SOAP header element.
This method adds a reply to header
29318894		extracts the target service name from the headers, returning null if there is no path or if the to address is null.

This method adds a WSA-AdHoc to the registry, checking that the application is running before
29318909		takes a string representing XML by inserting whitespace into it and then attempting to parse it as a Unicode document. 
This method takes an input string name and a text string as input, and an XML parse operation as input, and returns
29318932		reads a line of text from an input stream. If the end of file is reached, it returns null. Otherwise, it returns the line as a string.

This method parses a given input stream into a list of strings. If
29318949		This method checks the address of a SOAP and throws an exception if it is not null, not equal to a pre-defined address, or other service type.

This method handles an exception, and if the endpoint reference type is not
29318952		checks the port type of the endpoint reference and throws a remote exception if the port type is not "CPA", "PIC", or "ACP".
This method also ensures that the endpoint reference type is an instance of Activity, if
29318964		This method tests that removing headers from an array of headers is successful, removes handlers with the correct configuration, and asserts that the resulting string is the output.
This method checks that removing headers from an array of headers throws an exception.
This
29318969		This method asserts that the endpoint reference address of an RPC endpoint request matches the specified actor name.

This method asserts that the endpoint reference address of an RPC endpoint route request matches the specified actor name.

This method ensures that the endpoint
29321229		returns a JButton for controlling position over the map mode.
This method returns a JButton for adjusting the camera's look via when the button is clicked.
This method initializes the map by setting its properties such as the frame size
29523296		returns the perimeter point of an edge view, taking into account its line segment and the specified point. If the renderer is an MultiLinedRenderer, it will use the super class's perimeter point to get the perimeter point
29572299		starts a server on a specified port and listens for incoming connections. It continuously receives new connections from clients and starts them.

This method listens to incoming client connections and creates a separate thread for each connection. It loops through the list,
29591729		initialises a new ASTNode with the given type, selector, authority, and project. It initialises the source using it's name, target, and filter, first iterates over the source, adding child nodes based on the provided request and
29591798		searches for a coordinate axis by name within the data set and returns it if found. If not, it delegates the process to the superclass.
SUMMARY
This method is used to find the coordinate axis with the specified
29591805		searches for a coordinate system by checking if its name matches any of the coordinate systems in a list, returning the first match.

This method retrieves the version details of a coordinate system at a specific index, such as its coordinate
29591835		initializes a new `CoordinateTransform` object with the specified name, authorities, and transform type.

This method initializes a new `Transformations` object with different settings: rotation, magnitude, and normalizing within the image,
29591858		converts a list of coordinate axes into a string with a hyphenation separator.

This method generates a string representing the axes of a shape.

This method loops through a list of axis properties and sorts them based on their
29591879		adds a coordinate axis to the dataset, replacing the existing coordinate axis with the new one if it already exists.
This method adds a coordinate axis to the dataset, removing the existing coordinate axis if it exists.
This method removes a coordinate
29591899		returns the value of a property as a string if the property is a string, otherwise it returns the default value.
This method gets the current character of the specified object. If the current object is null, it returns a new StringBuilder
29591977		checks if all the dimensions of a variable are present in the specified domain.

This method checks if data is empty.

This method connects the nodes of the variable and then checks if all the variables in the variable are of the same
29591994		takes an index and returns the corresponding game level name String.
It first checks if the vertZaxis is null, then checks if the index is within the valid range, and if the index is within the valid range, it throws an
29591999		retrieves the name of the time at the specified index by checking if they are in the one defined in the class's config. If an index is out of bounds, an IllegalArgumentException is thrown.

This method executes an
29592096		finds coordinate variables in a NetcdfDataset using a NetcdfCoordinateAxis variable iterator. If the variable is not an instance of CoordinateAxis, it duplicates the variable. Otherwise, it iterates through
29592217		searches for a structure with a given name in a list of structures.

This method searches for a structure with a given name in a list of structures.

This method searches for a structure with a given name in a list
29592224		takes a filter and a search form as input, and inserts a group element into the database if the filter contains any structures with matching short names. It then finds the structure from the database and, if it finds a group element, updates its
29592240		takes an event list and allows users to select a variable to bind to. It clones the list of variables, creates a new Value object, finds the variable with the specified short name, and puts it back on the original event.


29592287		finds the data structure in a given index by extracting it from the current element's structure, then finding the associated stream.
This method takes a vector of objects as input and returns a structure object that contains the data structures.
SUM
29592368		reads a multiarray object from a given reader within a specified shape. If the shape is a byte or int array, it creates a multi-dimensional array with the specified length and storage type. It then sets the storage to the array's
29592435		returns a string representation of the object, which includes the name, type, and data structures separated by commas and spaces.

This method converts a C++ value to a string representation. It checks if the C++ value is null
29592455		adds a dimension to the dimensions list with a given name if the size of the dimension does not already be set. Otherwise, it throws an exception.

This method throws an exception based on the usage of the command line option and prints
29592481		removes all non-whitespace characters from a string.

This method returns a string, and has very few special characters, separated by single "and" and single "or" characters.
SUMMARY
This method
29592487		removes all characters from a string until it finds all characters with a specified character, or until there are no more characters.
This method takes a string as input and returns a string.
This method takes an array of integers as input and
29592491		replaces all occurrences of a specified search match string in an original string with a new string.

This method replaces all occurrences of a specified pattern string in an original string with a new pattern string.

This method replaces all occurrences of
29592493		creates a NetcdfFile and initializes it.
This method initializes a NetcdfContainer.
This method creates a NetcdfFile and checks if the container file is null. If it is, it throws an IO
29592597		searches for a variable with the specified name within the given environment by iterating through the variables and checking if the variable contains any of these names.
This method finds the variable with the specified name within the given environment by iterating through
29593176		increments the position counter and resets the digits and element, then checks if one of the digits is decremented with the other decremented. If one is not decremented, it resets the digits and increments the position counter.


29593652		This method initialises four new Index6D objects with specified length and origin. It calls the superclass's init method to initialize new objects.
SUMMARY
This method is used to initialize a new Index6D object with a
29593661		copies a portion of an int array by copying the elements at specified positions into a destination array starting at specified positions, with a specified length.

This method copies a single integer to a destination array at a specified position and length.

29593696		calculates the dot product of two MXVectors, throwing an exception if the given MXVector is null.
This method compares the current MXVector with another MXVector by comparing their coefficients.
This method returns the next element less
29594254		returns a string representation of a character by iterating through a series of array methods. If a method returns a value, the string is returned with spaces, and each string is replaced with a new string before the method returns the return value.
29594342		takes in two integer coordinates and a start and end value. It then computes the total number of integers in the first integer and its remaining integer representations. It uses the `computeStrides` function to combine the integers in the two
29599075		copies an InterchunkWord object to the old object.
It updates the hash code, lineNum, startKey, and endKey attributes with the values from the existing object.
It also creates a new lineInfo object if the
29599150		takes two integers, c1 and c2 and casts them all to integers within the range 0 to the size of the spair if the spair is not full.
This method prints the count of classes in the word list, then
29599208		checks if all whitespace characters in an XML event are ignored.

This method iterates through a list of characters read from the XML reader and identifies the next XML event as the start of the XML tag, then populates a list with
29599228		appends a pair of string arguments to an EntList separated by periods, merging the entries into the result and returning the result.
SUMMARY
This method is used to append pairs of string arguments to an EntList by adding the
29599231		recursively extracts attribute values from an XML reader. It extracts names and values as strings. If the value starts with a slash, the method returns an empty string. If the value starts with an attribute, the method returns an attribute with the
29599234		checks if the XMLStreamReader passed to the factory is empty by checking if it has a simple text:empty element with no text content.

This method checks if the XMLStreamReader passed to the factory is empty or contains only text content
29599334		This method checks if a given HTML name attribute represents an attribute and throws an exception if it does not.
This method validates the presence of a name attribute and throws an exception if it does not.
This method validates the presence of
29599903		adds a pattern to a list of patterns with a unique ID and specified number of seq IDs. If the interval ID exists, it is kept for storing it. If any repeat interval (period), it adds the sequence data to the same interval
29599924		returns a string containing the tags of all the array tags in the tags object.
SUMMARY
This method is used to return a string of the tags from all the array tags in the tags object.


29600497		calculates the residual memory of a given list of applications based on runtime information and an array of applications.

This method calculates the residual memory using the runtime manager.
SUMMARY
This method is used to compute the residual
29600508		copies all of the information from a ServerInformation object to another ServerInformation object.
SUMMARY
This method is used to copy all of the information from a ServerInformation object to another ServerInformation object.


29600598		converts an input 3D integer array into a string of tags, separated by periods, with characters separating each tag with a period.

This method fills in numeric and string tags provided in a given array of integers.

This method
29600607		adds an entity to the text during parsing of XML. It traverses the XML content and processes it for each structure in the document represented by spaces or markup elements, respectively. If there are any missing content to process, it adds the entity
29600928		updates the assessable load and the predicted load for a given observation, resets the waiting time and calculates the new percentage of samples received by the data source. If the new percentage is zero, it resets both values. Otherwise, it
29601303		returns the source word label, initializing it if it is null.
This method returns a string item component which is an array of items, along with a text field and a button.
This method returns a string item component which is
29601334		returns the font specified by the input string, or creates and initializes a new font object if it doesn't exist.

This method sets the text for the name of the current screen and returns it.

This method sets the
29601365		This method gets or creates a Menu object named `okCommandLookUp` with title "Look up" and a null type of Type.
Then it adds a Command object to the `okCommandLookUp`.
Finally, it returns the
29601373		retrieves the "Back" command, if it has not already been created, it adds the "Back" command to create it.
This method returns the "BackCommandLookUp" Command object.
SUMMARY
This
29601417		returns the Ok command.
This method also initializes the OkCommandSelectDirection field if it is null.
SUMMARY
This method is used to retrieve the Ok command to select direction.


29601436		returns the backCommandSelectDirection sp object, which is initialized if it is currently null.
This method gets the backCommandSelectDirection edit command.
This method sets the command listener for the back commandSelectDirection edit command
29601460		returns the menu list for the application, creating it if it does not exist and adding the exit and list commands to it. It also sets the item click listener for the exit menu item and disables menu items.
SUMMARY
29601536		This method returns a list of "Back" and is used as the previous command in the list. If the list is currently null, this method is initialized with a name and command listener. It then adds one item at the top of the list
29601579		returns the command used to exit the application, creating it if it does not exist.

This method returns the command used to start the application's main menu.

This method returns true if the command was successfully executed.


29601588		returns the most suitable suffix of a name from a map of name-value pairs.

This method calculates the average sum of squared differences between the keys printed in a row divided by 1000.

This method updates the count of expected
29601593		creates a new element with a given name and attributes.
It creates a new node and adds it to the element list.
It creates a new monosaccharide and adds it to the node.
It sets its child,
29601641		returns the "Back" command, initializing it if it has not been initialized yet.
This method adds the "getPlaylistLine1()" command to the "Back" command list and sets the command listener to one of the
29601673		returns the Dictionary Loader Form, which is a Form object that contains the "Loading dictionary" message.

This method returns the Form Dic -> DicLoader Object.
SUMMARY
This method is used to
29601685		is returning the progress bar, which is one of the Gauge objects in a sequence.
If the progress bar cannot be created, it creates a new one, adds a command to it, and sets the command listener.
The progress bar
29601696		returns an instance of the DictakOk class, creating it if it does not exist.
This method returns the result variable, which is the result of the getNextResults method.
This method returns the result variable, which is
29601719		This method returns the "Back" command.
This method sets the command listener to the previous command listener.
SUMMARY
This method is used to define the Previous command and set its command listener.


29601732		returns the value at the specified index of the list object, if the value is null, it creates a new List object with the specified label parameter.

This method sets the command listener for the list object to the current object.

29601757		retrieves or initializes the "About" form, creating it if necessary.

This method returns the "About" form if it exists, otherwise it creates a new one and adds it to the form's list of forms. It
29601791		returns a form for displaying the about command, creating it if it does not exist.

This method sets a command listener to enable or disable another command based on true/false result of the system.

This method sets the command
29601856		returns the "Agencia" form, creating it if necessary.
This method returns the Spacer "SP_ALMA" and adds it to the "Agencia" form if the "spacer" variable is null,
29601900		returns the spacer1 variable if it is not null, otherwise it creates a new spacer object and adds it to the spacer1 variable.
This method returns the spacer1 variable if it is not null, otherwise it creates
29601931		returns a list of commands for the menu. It initializes the list if it is null and then retrieves the OK command menu; otherwise, it retrieves the existing menu with the ID "OkConfirm" and returns it.

29601956		removes a specific number of arguments from an array and shifts all subsequent elements of the array into one room, preserving the numbers of necessary positions.

This method checks if an array is not null and returns. It then checks if the size
29638426		triggers drawing on the foreground layer of an object and stores the current position in an array. It then draws the background colors of the current game element.

This method is used to draw a foreground color to the graphics context. It
29638449		draws an object with the specified data. If transformation is include translation, it returns. If transformation is include rotation, it returns without drawing. If transformation is include scale, it returns, it returns without drawing. If transformation is include translation scale
29638460		returns the image index at the specified image layer, but if the layer is out of bounds, it throws an IllegalArgumentException with the specified error message.
SUMMARY
This method is used to check if an image index
29638465		returns the block index at the specified block (x,y) for that index. The block is represented by a JiffieListSet, {Y=4} (in blocks with 10 different blocks). The method throws an IllegalArg
29638471		draws an image onto a graphics object given a boolean value, x, y, width and height.

This method draws an image onto a graphics object given a boolean value, x, y, width and height.

This method
29638472		retrieves a user's information by getting user data from the server. If the user data is retrieved from the server, it reads the number of parameters from the server and throws an exception if the number of parameters is out of bounds, else
29677451		opens a progress monitor dialog and runs the specified runnable with the given progress monitor, handling any exceptions that may occur during the run.
SUMMARY
This method is used to generate QB session by opening a progress monitor dialog and
29678378		takes a session ID and an IQAEntryComponent object as input and shows the entry component of that session when the user selects the entry component. If the user selects the entry component, the method returns without doing anything.
SUM
2971333		writes a set of integers to a DataOutputStream as an integer array.
This method writes an element, object, int, and int to a DataOutputStream, with default values for QName, XSDSchemaLocation,
2971379		takes a sample number and converts it to a sample number with the same position as the first sample in the spectrum that matches the given number, it returns 0 if no match is found.

This method returns the position of the given position
2971386		receives the sample number and a new position as input and adjusts the alignment number if necessary.
This method is triggered by an action event. It updates the sample position and changes the sample location if a new sample position is detected.

2971392		sets the error value for a specific sample based on the sample number provided. This includes conditional logic for specifying whether the sample is a user sample and checking if the user is allowed to edit the sample.
SUMMARY
This method is
2971399		searches for a specific sample in a list and sets its sample colour to the specified colour, otherwise, it returns null.

This method checks the next row and column of a board and attempts to find a match for the provided color
2971405		writes sample and color data to a DataOutputStream, including sample number, level, pitch, yaw, and colors for each row.

This method calculates the peak frequency for each row and iterates through the data tables to write
2971420		calculates the sum of the error values stored in a list of FMSamples and returns 0 if the list of sampleArr is empty.

This method checks if a list of sampleArr is empty, and if not,
2971425		calculates the maximum error of an operator dataset by iterating through the sample samples and summing their errors.

This method returns the maximum error value.

This method returns the sum of the errors of all the samples.

2971426		updates the resolution textfield with the square size in points. If the length textfield is empty, it displays "Resolution error" and clears the textfields. If the square size in points is greater than the length in the length text
2971437		returns the FMSample object with the specified sample number from the sampleArr list.
This method searches for an FMSample object in the sampleArr list based on a query. If found, it finds its corresponding field in
2971442		retrieves a specific FMSample object from a list of sampleArr. It returns the sample at the given position. If the sample has no position or no FMSample is found, it returns null.
SUMMARY
2971444		returns the ID of the selected test.
SUMMARY
This method is used to retrieve the ID of the selected test from a list of tests to be run.


29726560		calculates the total sum for all theRouteMarks between a single element in each element in the current RouteMark.

This method calculates the distance between all theRouteMarks in the current RouteMark.

This method calculates
29727073		prepares a column cluster, creating a single snapshot if the cells are not cached.
It returns the snapshot by creating a ColumnClusterSnapshot object, preparing it, setting its layout, and setting the data properties with the appropriate data.
29727222		adds penalties to a paragraph based on information from the previous paragraph, including penalty weight, line head height, line head weight value, penalty content, and penalty layout override.
SUMMARY
This method is used to create penalty data
29727270		loops through a range of paragraphs except the first zero and orders them by their labels. It then lays out the clusters between them using the layoutParagraphCluster method.


Out of bound components: two paragraphs with labels "one",
29727372		takes a list of floats as input and places them manually, returning an InterimFloatPlacement object.
SUMMARY
This method is used to place floats in a page repeatedly.


29727458		adds deferred paragraphs to the beginning of a paragraph. If there are existing deferred paragraphs, it iterates over them and adds each paragraph to the list of deferred paragraphs. It then adds the deferred paragraphs to the end of the paragraph before them.
29740325		stores the current properties object to a file.
This method stores the properties object and the internal object into the main field.
SUMMARY
This method is used to store the properties object and the internal object into the main field and
29778273		returns the cell type of the pieces located at the specified coordinates (row, col) in the grid, throwing an exception if the coordinates are not valid.
SUMMARY
This method is used to determine the cell type of the
29778585		handles the action performed events generated by the user interface on the event source. It validates the board and displays error messages or messages accordingly. It then attempts to move the canvas in the target location using the specified color and updates the canvas to
29800665		returns a vector of JSP pages that are present in the list of files in the current listing. The method iterates through the lists and returns a vector with all the file objects that match the specified filter.

This method takes an
29800666		adds a file to the ZIP archive if the file name is not blank, and returns true if the file exists and is not empty.

This method checks whether the specified file exists. If it does not exist, a message is displayed
29851560		This method initialises the program by calling the parseCommandLine method specified by the args array. It then initialises the logger, pars the arguments using the createLogger method after parsing the command line, and if an IllegalArgumentException is
29851614		returns a boolean value indicating whether a node is already in the graph by checking if a node is already in the graph and, if not, searching the graph for an edge with the incident edge type and source and target nodes.
SUM
29851811		returns a string representation of the Rule object, including the statement, rules, and tokens.

This method returns a string representing all the rules that have been generated that have none.

This method returns the translation of the final actions
29852099		subtracts the bits in the input BitSet 'a' from the bits of itself, if 'a' is not null it turns off corresponding bits of 'this' and then sets 'a' to the bitwise complement of '
29852467		returns a TableReference object representing a database table, either from the alias table or from the alias object, and its options.
SUMMARY
This method is used to create a new FieldNameListTableReference object if it does
29852582		generates SQL code for an element in a given file and prints it if the output file is modified if the print stream is not null.

This method generates SQL code for a unit by printing it with indentation if the flush space option
29852660		checks if a database column is equivalent to another item based on their flags and checks. If the superclass overrides are used, it checks the check data for compatibility.
This method returns the index of the column reference with the given reference index
29852881		takes a TokenReference object and returns a JExpression object created with the given TokenReference.
This method converts a JExpression object to a JExpression object created based on a new CharSequence, a token reference, and
29852939		returns a visitable writer that will pretty print the syntax of the SQL statement. It iterates through the syntax, and prints the SQL statement itself and its first and then parameters. It then updates the SQL string with the information from the source
29853026		returns information about metadata such as name, table name, type, and size, as a Java object that contains the data stored in the DatabaseObjectInfoSet. It creates columns for Id, Name, ColumnInfo, and Help which are either
29853713		fetches a table definition from a list of statements and populates a Hashtable with those definitions from the list.
SUMMARY
This method is used to populate a Hashtable with tables that do not have type names.


29853719		returns a list of InsertStatements that are related to the specified table name.

This method executes a batch of SQL statements and returns the first result as a result.

This method fetches all of the insert statements for the
29853919		prints a key and a list of keys along with their corresponding names.

This method prints the key, the key's attributes, and the value of the key to the specified print field.

This method prints the key and the value
29854154		converts the text of a Postgres SQL string into a native SQL string.
This method attempts to convert a Postgres class using a provided string. If the conversion fails, it attempts to convert the class using the default implementation.
S
29854223		converts timestamps to a Date object in the format date_time.

This method converts timestamps to a Date object with a different date format.

This method creates SQL statement parts by iterating through the columns of
29854287		visits the lower bound of a short type, prints its lower bound, and prints its upper bound. If the upper bound is not null, it prints the string "SHORT", and if the min and max are not null, it prints
29854311		is called to fetch data from the database and if the database cursor is open or closed, it will throw an exception. If any SQLException thrown while fetching the data, IOException thrown, or `ConstraintException` is
29854317		executes a commit SQL-related function by executing an insert query and then logging the result.

This method synchronizes the database, iterates through the sessions in the database, and for each session, it executes the update procedure for the
29854322		closes the underlying result set and statement in either case insensitive or non-case insensitive manner. It also handles closing result sets, result sets, and statement parameters, and subqueries if specified. It returns the number of rows affected or the
29854410		formats a given string using the specified locale, along with the year, month, and days of the month, and inserts a new line after the formatted string.

This method appends to a destination buffer and updates the clip with a
29854416		returns a string representation of the object, containing the date, seconds, nanoseconds, and milliseconds in different formats based on the value of the "value" variable. This method generates the string based on timestamps.


29854418		returns a GregorianCalendar object representing the date or time of the current object. If the current date is null, it initializes it to the current time. If the current date is invalid, it sets the refresh flag to true,
29854426		takes a string format and a locale, validates that the format is not null or empty, generates a string representation of the calendar to be formatted, and returns the formatted string.

This method is the main method of the program,
29854430		converts a Calendar object to a new GregorianCalendar object by setting the hour, minute, and seconds components of the new Calendar object.

This method attempts to convert an Object array to a GregorianCalendar object. If the
29854457		returns the first quarter of the week without considering daylight savings.
SUMMARY
This method is used to determine the last quarter of the week that can be used.


29854498		formats a date string based on the specified format string and locale, with the day of the week plus one day.

This method writes the specified file and a record to the file associated with it.

This method converts the given
29854623		generates a constructor call for an array with the specified type qualifier, length, name, and value.

This method generates a constructor call for a type element by inserting an assignment expression and updating the type.

This method generates a
29854650		returns the identifier of the token.
This method, isVerbose(), returns a string representing the verbosity of the search.
This method, isGenerateDoc(), generates a report of the search.
This method, get
29854715		returns a block with the given name, throwing an exception if the block does not exist and getting the block in the hierarchy of the process.

This method verifies that a given Block object is valid and belongs to the correct type.
29854739		adds a new actor to the stack and sets its identifier, label, and help fields to the provided values. It then adds the newly created actor to the top node of the stack, increments its top index, and assigns it to the token
29854744		retrieves a definition of the types of a field of a specific type. If the field is not an AS.ENTITY, it returns null. If it's an AS.FIELD, it returns the type's definition, otherwise, it
29854766		retrieves an instance of the VKCommandDefinition associated with the given name or creates a new one if it does not exist, using an object search to add triggers.

This method dynamically loads a command definition from an object input stream.
29854794		generates an internal array of JExpression objects representing the initial identifiers of the arrays, which are used to represent data structures for a group of users in a program. It takes an array of integer and string arrays as input and generates the data
29854960		returns the boolean value of the value of the expression.
This method checks if both the expression and the value are instances of Boolean. If both are true, it checks if the value is an instance of the Boolean class and if so,
29854961		returns an integer value, which is the integer value of the message, but also throws an InconsistencyException if it fails to do so.

Once the value of a long, this method returns 0 if the calling method is
29854964		returns the fixed for the value.

This method throws an exception if the value is not fixed.

This method returns the value of the variable fixed.

This method sets the value of the variable fixed in the context.
29854967		returns a string value of a field, but throws an exception if the specified field's value is null or not a string.

This method tests the getString() method of the JavaCodeWriter class by creating a mock writer, a
29855109		clones an array of VKFieldColumns to a position specified by the 'pos' parameter.

This method clones the end of an existing VKFieldColumnView array to the position specified by the 'pos' parameter.

This
29855292		returns the index of the first occurrence of the specified element in the array.

This method returns the value at the specified index in the array and first checks if the index is within the range of the array.
SUMMARY
29855346		localizes a field using the parent FieldLocalizer and sets the locale if present.

This method localization the types of a class using a localizer.

This method localization the classes of a class using a localizer.


29855497		sets the enabled value of a command by starting and ending the command handler thread, adding the command to a vector, and updating the UI with the new value.
SUMMARY
This method is used to enable or disable a command in
29855505		checks if a report is unfolded by recursively traversing its child rows in reverse order.
SUMMARY
This method is used to determine if a report is unfolded based on its level and child nodes.


29855507		sets the visibility of the child nodes of each specific tree row, triggering the visibility of its descendants.

This method sets up the left child of the table row as a table header control, and updates the visibility of the left child of each
29855640		creates or opens a print job based on the operator type: 
- Creates and sets the layout manager and adds a key adapter to it.


29855696		adds an ImageIcon to the list of image commands if the image is not null.

This method adds an ImageIcon to the list of image commands if the image is not null. 
This method adds an ImageIcon to the
29855758		resets various properties of the object by setting their initial values to default values.
This method tests the reset method by filling it with data and creating a new BlockView.
SUMMARY
This method is used to reset the object
29855838		locates an existing menu-like object by name and assigns it to a variable.

This method initializes the menuItem variable, sets its text, adds the action, name of the menu button, and sets its icon based on the
29855850		sets a dialog box with the given message, waiting controls, and updates the message information to reflect the changes in the text area while hiding the progress bar. It first hides busy controls, sets the busy pane to null, and then shows the dialog
29855854		unsets the wait information on the message panel, if the Eventdispatch thread is not on the event dispatch thread.

This method sets the wait information to true if the wait info change event is triggered, or false if it has already
29855924		executes a specified command based on the command associated with the mouse event.

This method handles camera triggering events. It first executes a command on the screen and then executes a void trigger command.

This method posts code for a v
29855930		recursively builds the domain object's dependencies within a hashtable.
This method recursively tests the hierarchy by building dependencies specified in the Vector's contents. If the hierarchy is empty, it recursively calls itself to build the dependencies
29856019		checks if the current node is hidden, and if not, it sets the visibility of child nodes to false for every row in the tree. If the tree node is expanded, it gets the path to the child's parent and expands the parent path
29856026		adds a runnable to a queue and checks if the queue is not being run concurrently, if so, it calls the invoke method on the queue.

This method fires a runnable event to the event queue and sets the
29856028		calculates the preferred size of an image with optional caption.

**getPreferredSize **
The method retrieves the preferred size for the component based on the image size and the caption.
SUMMARY
This
29856031		updates the activity's text, error, and wait status, and if the thread is not busy, it displays an error message. It sets the visibility of the waiting dialog. It reports the status and waits value.

This method makes
29856135		returns the value at a given row and column in a table, returning null if the row is the first row or if the column is equal to the display level of the model.

This method returns the value at a given row and
29856230		closes the model when the specified model exit or quit button is clicked, depending on the event type.
SUMMARY
This method is used to notify listeners that a model has closed.


29856255		sets the wait dialog message and wait dialog time for the listener's list.

This method attempts to create a WaitDialog object, indicating that the dialog needs to be created again. If the dialog was created successfully, it is refreshed and the
29856301		executes an void action when a given task is executed, including getting the short target of the task, checking integrity, executing shortcut triggers, getting all selected tasks, and loading shortcut logs. It handles exceptions by displaying error messages and completing execution
29856699		sets the color of an item in the range specified by the index parameter.

This method sets the background and foreground colors of a specified row in the table view.

This method paints a label in the component.

This method
29856702		sets a time value to zero or more, clears any previously set values, and notifies listeners of the value change.
This method sets a time value to zero, clears any previously set values, and notifies listeners of the value change.
29856703		sets the object at the specified row and column index, and formats the given object, if it is a byte array, it sets the object in the current renderer component. Otherwise, it creates a new renderer component and sets the object to
29856736		in a SwingUtilities thread to dispose the window after lost focus in a window. It destroys all listeners and disposes the window.
SUMMARY
This method is used to dispose pending events before and after a window loses focus.
29856740		clip rectangles equal to the specified coordinates within the specified bounds: one for the page, one for the center, one for each area, and one for the footer.

This method clips a rectangle by swapping coordinates and setting clip rect
29856823		adds actors to a graphical user interface (GUI) based on the provided vector of actors.

This method serves as a modal dialog for managing actors to interact with.

This method adds each actor to the GUI.
S
29856850		sets the model text to a string representation of the model, updates the progress bar to 0 if the string is not empty, and sets the model text to the unparsed string.
SUMMARY
This method is used to set
29856868		clears a rectangular area on the screen with a red color.

This method also clears a rectangle on the screen with a red color.
SUMMARY
This method is used to clear a rectangle on the screen with a red
29856937		verifies that the current model is not in the transaction and if it is, it generates a debug message when a DWindow is rendered.
This method publishes an action event by verifying the debugMessageInTransaction() method of the targetModel and
29857000		drops an image from a single image file associated with it. If the file is empty, there's nothing to drop and returns.

This method checks if the file is null and then attempts to read from the file as an image file
29857087		begins the process of leaving a specific field after entering the next field. It logs the entering of the field, checks if the command is stopped, and if not, returns. It also checks if the command is in the process queue, and
29857234		sets the month of a Month object at the specified index.

This method takes a MonthBean object as a parameter and sets the value of the bean.

This method takes a Month object as a parameter and sets the value of
29857325		sets the week of a date event depending on the input parameter and updates the current row in the spreadsheet.

This method checks if there is at least one year selection and returns if so. It updates the row numbers, fields, and week
29857398		takes a string value and formats it by checking if it matches any matches in a counter, increment, or error string. If a match is found, it returns the corresponding character.

This method initializes variables, checks if the number
29857425		sets a timestamp value for the specified row and value in the audit log, and updates the setUpdateFlag to true if the new value is different from the current one.

This method, copyPropertiesFrom, copies properties from a source
29857570		sets the scale of a specific record in a record, and throws an exception if the scale is out of bounds.

This method validates that the scale of a record is greater than the maximum scale and throws an exception if they are not
29857595		localizes the localizer with the title of the form title and calls the localize, pages, and blocks methods of the form manager to save the localization window.

This method localizes the form with the specified source.

This
29857662		returns the display for the panel, if the panel has a listener, it returns the current Display object. Otherwise, it returns null.

CONTEXT
This method iterates through the fields in the panel to find the specified FieldConfig
29857686		computes the number of seconds based on the number of digits that can fit by the given width and scale.

This method calculates the number of minutes between 1 for the given number of digits in the provided width.

This method calculates
29857689		checks if any of the triggers have been changed. For each changed trigger it checks if any of the blocks has been changed, and if so, it calls the block's isChanged method.

This method returns true if the trigger is changed
29858357		sets the throwables map and initializes the exceptions array if the throwables map is null.
SUMMARY
This method is used to initialize the exceptions array.


29858632		prepares the code for analysis by creating a new CMethodContext object and preparing its initializers. It then iterates through the modifiers and extends, validates the type using the type definition, declares it as an import statement with the compilation unit
29859140		generates the string representation of the object passed as an argument.

This method appends the string representation of a Boolean object to the object.

This method appends the object to a new string buffer using the specified generation context.
29859171		recursively fixes variable positions in all child blocks of the current block context within it, setting the child variable positions for each, excluding loops. It throws an exception if the child block is null.

This method executes an end block for
298592		creates a list of filterable categories, default to some level category, and initializing it with the input categories.
The method also sets the selection mode for the categories list.
This method sets the category to be selected, updates the
29859244		takes a string as input and, based on the value of the string, splits the string into an object of the appropriate type. It returns the object of the result type.

This method adds two lists (`x` and `
29859267		is used to close the socket connection and set the connection to null after iterating over the socket connections. It then attempts to open a connection using the handle() method and check if it is successful. If the connection is successfully established, it sets
29859435		is used to optimize a class file for processing, it reads the file, reads its header, optgates the class file, and copies it to another file at the same location.

This method takes a file name, calls the optimize
29859440		adds line number information to a Vector, given a NameSignature.
This method adds a line number information object to a hashtable if it is not null.
This method adds a line number information object to a hashtable if it
29859627		loads a class by name from a list of directories, with an option to provide interface-only information.

This method loads a ClassInfo object from a string resource by name, handling escaped characters for classes, such as strings that do not
29859786		adds an accessor container to the existing list of accessor containers and attaches it to the target line if it is a line attribute.

This method creates a new object based on the type of the control, which can be a Control
298599		resets the options by removing all items from the filterableCats, adds a category filter for values 1, and resets the elements of the typeCombo boxes. It also clears the elementTypeCombo boxes and resets the _
29859965		deletes the last instruction for an array and updates the stack based on the number of elements present in the array.
SUMMARY
This method is used to remove or create a last element in a stack.


29860118		inserts a new use reuse and their distances into an insert setup panel and adds it to a list of more reuse reuse.

This method sets a reuse value at a given position in a list of used reusees.

This method
29860149		adds catch instructions to the try block based on the specified mode. If the mode is free, it attempts to allocate a phi range and if required combinations are not found, it creates a new variable or a new basic block. If the
29860153		adds a phi return to a given BasicBlock by converting the control flow graph into an HsaBasicBlock, creating a phi register and a subroutine if necessary, and then adding the phi return to the block.

29860155		adds a PhiJoin instruction to the QFreeRange heap, which represents the phi-join of the table.

This method adds phi- join to the array of phis. If the array is null, it creates a
29860203		returns the next set of exceptions of a block by iterating through all edges in the specified block and adding the target of the individual edges to the set.

This method collects successors associated with the specified edge and its source block, checking
29860246		sets the access level of all active blocks to the specified value and all active fields to the specified value, within 10 frames.

This method copies the active fields from one form to another.

This method creates a new map from a
29860314		removes a node from a list of successors, casting it to an Edge.
This method removes a node from a list of successors, casting it to an Edge.
This method removes a node from a list of successors, casting it
29860331		assigns a value to a variable and returns its integer value.
This method calculates the number of blocks (BMLs) needed to create a new BML element in the provided array based on the provided start and end block positions.
29860369		adds a line number to the interface, generating a unique label for the line.

This method creates a new line number generator, sets its line number to the specified line number, and adds it to the current line number generator.

29860376		checks a quantified expression to see if there is a label, then it resolves the label within the structure. It performs semantic actions such as resolving labels, resolving annotations, resolving label indices, resolving label annotations, and resolving label fields, beginning with
29860412		searches for a method with the given name and descriptor in the class and returns the first instance of the given ClassInfo with or without the descriptor.

This method searches for a constructor with the given name and descriptor in the class and
29860815		returns a string representation of the search by generating a log element with the field names and suffixes.
This method returns a string representation of the search by generating a log element with the search name and suffixes.
This method returns a
29860884		checks if a table has any nullable columns for all its fields.
This method adds all the nullable columns in the specified indexes to the table.
This method returns the index for the given table by initializing the IndexSet and adding
29862597		copies a record from one index to another, optionally making it trail.
This method copies a record to a destination index at the specified indices.
This method inserts a record into a destination index based on its type.
This method updates
29863076		trailes records in a record store, checking if they are equal based on specified conditions and if not, creating a new record and adding it to the buffer. Additionally, it also checks for any exceptions and forwards the call back if necessary.
298783		hides all relationships in the given part class.
This method iterates through the relationships associated with the given part class.
If there are any relationships, it hides them and adds implicit relationships.
If there are multiple relationships, it hides
298785		invokes the displayRelationshipsOfType method of the class <code>partClass</code> if the method is called.

This method shows relationships for a specified type of object.
SUMMARY
This method is used
298811		updates the menu by expanding and expanding menu items and updating the display for those menu items based on those that are nested and visible actions.
SUMMARY
This method is used to update the display of menu items in the menu.
299085		This method checks if the list contains a duplicate ID and prints an error message if it does. It then iterates through the elements in the list, checking if any of them conflict at any existing ID or different IDs. If a duplicate ID is
299113		converts an image, including inline text, into XML and adds an "insertion type" tag as a child of the XML.

The addNoteToXML method creates XML files with images and copies them to the specified file using
299200		appends quick fix actions to the provided menu, adding them to a list.
SUMMARY
This method is used to add quick fix actions to the given menu.


299265		initializes a member part with its image from an image object.

This method initializes the state of a member part, which will be disposed of quickly if the photo icon has changed since the first attempt.
SUMMARY

29937799		This method adds two integers and two long integers to the right-hand floating-point value of the RTC by wrapping them together to ensure the values fit in the right-hand floating-point value shift.
SUMMARY
This
299406		updates the font under the entry of a Java model by disposing the old font, updating the font helper, and setting the new font as the label text.

This method calculates a new font size based on the difference between the font
299475		updates the icon of an IFigure using an icon cache. It checks if the figure is cached and returns if not. If previously cached, it updates the figure's image and sets a flag stating that the new image is not being cached.
299762		recursively generates a string representation of an XML node with a specified level and its children.

This method converts the nodes to a string with the specified indentation level.

This method converts a collection of XML nodes to a string
299828		tries to initialise relationships, selects it, and enables the owner. If the initialization is successful, it initializes the actions, sets the relationships with the initial relationships selection, enables the owner, and sets the relationships with the selected relationships and
299851		takes three lists (e1 and e2), and returns true if (e1 or e2 is null) or false if it is.
This method returns the count of objects in an IMethodInfo that match a given qualified
29986973		receives a string value and returns an image data, using a key to retrieve the image data.
SUMMARY
This method is used to retrieve image data for various image combinations based on the input string value, using different keys
299870		adds a new node to the graph by setting its color and adding it to its list of nodes. It also adds the node to the clusters list if it isn't already in the list.
SUMMARY
This method is used
299887		creates an assignment, setting its left-hand side and right-hand side, and handling imports, statements, and assignments.

This method initializes an Assignment, setting its name and type variable.

This method sets the type
29988724		creates the view and sets the help context for the composite parent and sets the control as the content of the Composite parent.
This method creates the child Composite parent of the view and sets the help context for the Composite parent and sets the control
29988731		sets the default message for the SQLResultsView dialog to "No results found".
This method checks if the viewer has any query results and returns if it does and set up with a message.
This method sets up the dialog displaying the results
29989220		returns a comparator that combines the names of two nodes, where both nodes have the same name, or both nodes have null values.
SUMMARY
This method is used to compare the names of two nodes by their values.
29989243		clears the name filter and folder filter expression fields. This method clears the folder filter and schema filter expression fields. This method clears the filter and schema filter expressions. This method sets the alias that will be used by another user to the session.
29989288		returns an object of type called ISQLAlias from a column name, or null if not found.
This method retrieves the current object by iterating through the list in reverse order, getting inner objects, and invoking the getAlias method
29989533		closes all open SQL connections that have a non-null ID, ensuring that no new connections are created upon closure.

This method closes all open open connections that have a non-null ID, ensuring that no new connections are created upon
29989584		checks if any selected objects are available in the data provider, returning a boolean result. If none are available, it returns false.

This method initializes the tree viewer's viewer with a tree input and a label provider. It shows a
29989614		checks if the specified node is available to be visible in the workspace. If not, it checks if any items in the workspace are not in auto-commit mode, and returns true if at least one non-auto-commit item is found.
29989675		executes the postWindowOpen method of the superclass, then configures the window title to "Application.SQLExplorer.WindowTitle" and sets the coolbar flag to false and false indicator to true.

This
29989720		initializes the SQL syntax for a SQL statement by parsing various SQL tokens to determine how to insert statements and handling accordingly.

This method updates the client state by handling client state messages, setting sent count, handling empty strings, and updating query
29990060		This method initializes a default view list by creating a new list of specific data type objects and setting its type.
This method sets up a default view list with an empty list.
This method initializes a default view list with only one
299906		calculates the distance between two 3D vectors
299909		calculates the distance to the bottom of a biuzzle using given positions and band length.

This method returns the distance to the bottom of a biuzzle by calculating the distance to both the bounds and the center of the biuzzle.
29995280		takes an event as an input and executes any macro-specific tasks on the event, printing its name, content, and timestamp. The method then rewrites the content and checks that it is empty before a new element is inserted.

29995305		updates the move by setting the speed, cursor positions, and initial character to none. It also updates the track and timer if the cursor is initialized.
SUMMARY
This method is used to update the movement of a space vector
29995326		executes an event and prints the event and if the plane is not flying, it asserts that the event's airport is multiplied by the airport index.
SUMMARY
This method is used to determine if the plane is in a airplane
29995477		simulates the simulation, checking if changes have occurred and handling double and long clicks accordingly. It also starts new simulation.

This method accepts a simulation event,simulates the event, and handles the end time of the event.
S
29995537		analyzes a subtree of tokens and calls analyze() on the left and right subtree subtrees as appropriate.

This method recursively walks the tree and analyses child elements of the tree starting from the first token.

This
29995538		This method inspects a given identifier by extracting its subidentifier and its value from a string. If null, it throws an exception. It then extracts the key and value from the string and adds them as children to a specified node.

29995560		adds a key to the set of keys, avoiding adding null if the target is the same as the map keys.
This method adds a partition key to the set of partition keys starting at the specified index, avoiding adding additional partitions if the
29995601		calculates the longitude of an arc representing an arc long angle and length given a latitude and a longitude. It uses the given angle and the calculated length to create a new Coordinate object. The method tests if the calculated length is
29995639		reads the minimum distance from the given path from a given space vector representing the direction of movement.
This method calculates the minimum speed from the given space vector.
This method computes the gravity vector from the given vector.
This method comp
29995641		This method returns the weighted average squared deviation of the vector associated with the given object.

This method handles the FFT training for the given variable f to the given target array. It calculates the accuracy of the target array and adjusts the values
29995665		returns the direction of a vector, which is the same as the origin direction.
This method returns the direction of a vector, which is the same as the origin vector and its direction is aligned.
This method gets the center of the
29995754		compares two events based on their time, priority, and event ID.

This method compares two event objects by their time, priority, and event ID.

This method tests the properties of an Event object.

This method
299958		refreshes the list by assigning it to the data field and removing all items from the list.
This method invalidates the data to adjust the positions of non-cluster clusters.
This method iterates over the cluster and sets the
29995909		creates a table labeled "speed" based on a value of "12:00:00" and adds it to a Simulation object.
SUMMARY
This method is used to create a table labeled "speed" based on a
29995915		checks the conversion of a linear move object to a string and creates a new LinearMove object with the converted string.

This method asserts that the converted move object has the same level and the original movement object, as well as the original string
29995917		moves an object by the specified amount in an inventory element. It tests the movement of the moved object, which is expected to result in different movement scenarios
29995918		tests the update function of the LinearMove class. It initializes an instance of the class, initializes a new LinearMove object with the segmentar and target values, and loads an email queue. It sets both email updates made by the source
29995922		tests the conversion to the same speed vectors and prints the new speed and difference. The original speed vector is given a new distance and a new direction. The distance and direction are then adjusted to those new values, and the distance is rounded to those
29995929		This method tests the functionality of the multithreading of the arc to a multiplier of 1.23456789, and specific mathematical operations such as multiplying, adding and removing a point, and calculating the resulting arc.

This
29995931		tests the compare method of two Arc objects, asserts that the comparison of its values is an equals operation.
This method tests the equals method of an unspecified Arc and asserts that the comparison of its attributes are equal to properties in the Arc class.
29995949		tests the compare method of Speed.isEQ, by asserting that the comparison result in different units of speed is used for ordering.
SUMMARY
This method is used to perform a speed test for the compare method of Speed.
29995959		is a unit test that asserts that the compare method of the VersionInteger class correctly compares two VersionInteger objects and asserts that the number of versions remains consistent.

This method is a unit test that asserts that the compare method of the VersionInteger
29995970		tests the functionality of the `compare()` method in the `TimeRange` class by comparing different time ranges based on the specified field and returns the result as an integer.

This method tests the comparison of two `TimeRange`
299982		enables or disables various UI elements based on input boolean values, using a switch statement to determine the appropriate UI element to process.
SUMMARY
This method is used to enable or disable UI elements based on input boolean values,
299985		checks if a given IMember only accepts any visible member types or matches any of the flags of this IMember.
This method checks if a given IMember has the specified attribute, and if it does, it enables or disables elements.
299988		enables or disables various options for drawing, including hiding source, background circle, animation, the fonts, colors, and scales.

This method enables or disables options for drawing, including hiding source, background circle, animation, the
299991		enables or disables SVGF_SHOW_SHOW_TYPE_NAVIGATOR and svgsaveCheck.
This method enables SVGF_SHOW_SVG and svgsaveCheck.
This method enables SV
30008650		runs the referred XML document handler by iterating through entries from the XML document and calling the appropriate method on each entry which has not yet been set.

This method refills the character collection with the same characters corresponding to the retrieved data,
30008905		receives a string representing XML to test the change encoding function in HTML. If a string is not in a valid format, an exception is thrown. The method correctly parses the XML into a HTMLConfiguration object, and compares each entry in
30008921		adds an element to an array of elements, dynamically resizing the array if needed.

This method appends an element to a string buffer, dynamically resizing the array if necessary, and appends the element if it is contained in
30008943		checks the output of the characters() method, first invoking it regardless of the type of the characters in the output buffer. If the characters remain up to a certain length, it reports an error. If the characters are left alone, it exports the
30012366		removes non-space characters from the provided string. If the resulting string is empty, it returns NaN. Otherwise, it returns the resulting string.

This method converts a value to an integer according to its type and value.

30027703		sets the active editor for the text editor based on the model type passed as an argument. It then sets the content assist proposals and updates the action for content assist tips based on the model type passed as an argument.

This method sets the
30160011		initializes the components of the frame.
This method sets the frame's size, content pane, and title.
This method sets the frame's center and north-south positions, and adds a window listener to it.
This method adds
30160023		creates and returns a menu that contains options for displaying information about the application application.
SUMMARY
This method is used to create a "About" menu item that displays an "About" dialog associated with the application.


30160641		tests the functionality of the `steensBug` method by executing it once with an argument that sets the default value to a boolean value of true.
This method calls a search, puts the results in the result field, and sets the default
30160754		tests the functionality of renaming an element. It creates XML elements and adds them to a variable context, then checks that the variable context is updated correctly and that the new name is updated accordingly.
SUMMARY
This method is used
30160884		returns a list of internal declarations, which contains a single declaration for keywords and an external entity declaration.
SUMMARY
This method is used to obtain the declaration list for the class.


30161003		tests the generation of parent nodes by finding the root node of the hierarchy and asserting that it has a child of the root node.
SUMMARY
This method is used to ensure the parent and sibling relationships of the root node are correct
30161005		tests a document by iterating over the branch elements and asserts that the root node has values for the document name, nodes, attributes, and children of the document.

This method tests the creation and modification of an attribute node using a newly
30161014		attempts to start the application, attempts to start the application using the start method, and if successful, sets the result to "success".

This method is triggered when the user clicks the window by clicking an element or button. It
30161261		removes duplicate values from a list of lists based on a comparison of the distinct values vector of the sorted maps maps. If the list is empty, it returns. Otherwise, it by casting the list to a list and iterating over the elements
30162830		returns the DatatypeElementFactory associated with the specified element QName, if the factory is null.
This method returns the element factory associated with the specified element QName, otherwise it delegates the retrieval to the superclass.
This
30162895		extends a class instance by checking if a name attribute exists and if not, it performs inherited ones. If a name attribute exists, it checks its ns prefix and checks if it starts with 'schema'.". If it does, it attempts
30162942		takes an Element object representing a simple type declaration and converts it into a "simpleType" object, setting its name and datatype attributes.

This method applies the schema and XSD to the schemaSimpleType element.


30187017		creates field editors for the welcome page, including setting up the message client and log client.

This method initializes a preference page.

This method sets up the field editors for the text editor.

This method sets up
30234508		begins the server by creating a socket and launching a thread to handle potential error requests and response.

This method launches the thread and interrupts the thread.

This method handles client port events.

This method launches the application and
30234580		closes the message stream by sending the XML to the message stream and flushing it.
SUMMARY
This method is used to close the message stream by sending the XML to the message stream without flushing it.


30235705		performs an acceleration action on a node by simulating the mouse wheel.
SUMMARY
This method is used to perform an acceleration action on a node by simulating the mouse wheel.


30235706		updates the keyboard actions in case it is triggered by a presses within input and contains specific event handlers for key input, button presses, and action listeners.

This method updates the actions that were created by the node when it is right-
30235708		performs adriven drift action on a node, moving it based on the input action event.

This method moves a node by a specified amount, returning immediately if the camera needs to be restricted and not moving with a temporary vector.

30235755		sets the model for the view and detaches all of the previous models.

This method sets the bounds of the view to all of the specified dimensions, ensuring that the user can set the model bounds.

This method sets the model
308884		sets the MDCHostNameKey for setting the MDC_hostname_key list.

This method first checks if the data in a list of files has any child files. If so, it iterates over them by file name
308919		sets the MDCConfig object to the initial value if it's set to null or empty. This method first checks if the MDC is already established to the client, then loops to retrieve the value of the configuration value and the configuration ID
31014484		adds a WindowListener to the window with the specified callback. The WindowListener overrides the callback on a windowOpened event and, if the calling method is an internal source, registers a new listener for the frame as the windowListener
31014612		takes a string as input and returns a new string with only unique characters.
This method takes a string with only unique characters and returns a new string with only unique characters. It capitalizes letters and replaces single and double spaces with single spaces
31014613		takes a string as input and returns a new string with all the characters converted to uppercase.
This method takes a string as input and returns a new string in uppercase.
This method takes a string as input and returns
31014617		adds an element to the pool.

This method adds a parent group to the top group.

This method adds a child to the top group.

This method sets the current ring index.

This method sets the
31014618		adds an element to the end of the linked list if the current boundary is consistent or the list is empty.

This method inserts a new element into the list as a foot element, sets the end boundary of the element to the same
31014621		removes and returns a current element from a ring by moving other elements to the previous or before the element.

This method removes an element from the ring by deleting it from the list and setting its next element to null.
SUM
31015138		reads and parses lines from in-game data and creates a list of people, including their real planets and the height.
SUMMARY
This method is used to set the initial position of a planets by reading from various input sources
31015292		generates a new universe and vector of positions onto a given universe. It iterates through the provided scene. If the scene is in the front of bounds, it retrieves an activity object for each position. This method generates all positions from the
31015348		reads two bytes from an input stream at a specified offset, then reads a short integer value from the stream.

This method ensures that the buffer is full, and if not, resets the buffer to 0.

This method retrie
31015350		reads four binary bytes from a buffered input stream and returns the result as an integer.
 *
This method reads a four-byte integer from the input stream and returns it.
SUMMARY
This method is used to read
31015395		reads messages from the source input stream until a complete character is encountered and returns the message as a StringBuffer object.

This method reads a string from the source input stream and combines the characters from the beginning and end of different characters into a
31015410		writes the message content to the specified LSBWriter, splitting the message content by the code. If the message is a string, it escapes special characters for "#00100", "#fff", and ";" to their corresponding Unicode value. Otherwise
31015531		determines if the hull method is advanced by checking if both parameters are provided and if the hull ID is a valid ID. If these conditions are not met, it gets the hullfunc object from the game, then gets the vector from the
31015621		generates a list of engines that come in from a given source. It loops through the lines in "_source.length", which represent all of the engines in the _source, and adds them to the "_firstEngine" array. For each
31015658		reads a rst, generates all possible moves, and reports the move status.
SUMMARY
This method is used to read a generic move, generating any outgoing transitions.


31015808		calculates the cost of NACL tax along 5-30 units of the system. It includes different metrics (cost of 2 hours, tax rate, number of owned taxes, and other related metrics) as well as the other related
31015813		calculates a specific tax rate for a given map cell based on input data.

This method takes in an owner, cell, nation, cell unit, and double value.

This method calculates a tax number for a given currency
31016014		returns the engine at the specified index, or null if the index is out of bounds or invalid.
SUMMARY
This method is used to get the engine at the specified index, with handling for negative input and exceptions.


31016023		returns a new Torpedo object for the specified type for the given current entity. If the type is unexpected, an IllegalArgumentException is thrown.

It first checks if the type parameter is a valid integer value and the current
31016474		returns a Vcr object based on the provided id1, id2, and optional isplanet flag and the first Vcr object is found on the combatant 2.
SUMMARY
This method is used to retrieve a V
31194689		executes a task and retrieves a list of data objects from the data manager.
SUMMARY
This method is used to delete a data object from the data manager with the specified timestamp.


31195465		refreshes the data in the table model when the current page is new.
This method also calls the super method to refresh the table.
SUMMARY
This method is used to refresh the table by firing a table table data
31195537		notifies registered listeners that the number of active pages has changed, firing a page index change event through registered listeners.
SUMMARY
This method is used to notify registered listeners that the number of active pages has changed.


31195547		sets the page index of the current page to the given value, ensuring that the offset is within the valid range within the page range.

This method handles mouse clicks, first checking if the mouse was within a valid bounding box and returning
31202546		shows the Help about dialog when the user clicks the "help" option.

This method, when the user clicks the "about" button, it shows the About dialog directly.

This method, when the user clicks the "about
31202582		sets the database for the database connection and returns the connection. If the database is already set, it returns the existing connection. If not, it creates a new database using constructor and inserts data into it.

This method initializes the database
31202607		allows the user to launch a viewer for converting a selected project from an external library to a selected external library. It establishes a connection, launches it, and prompts the user for input. If the input is valid, it processes the input to perform
31202613		launches a viewer for a given plate ID.
This method starts the viewer for a given plate ID.
SUMMARY
This method is used to start the viewer for a given plate ID.


31202936		clears the project by setting the project name, clearing the user's tasks table and task table, and invoking the clearProject method. It also sets the project to be cleared and updates the data to reflect whether the clearing was requested.


31203019		calls the button_makeABI method with several arguments and then calls the refresh method with four arguments.

This method calls the button_closeAll_actionPerformed method for the frame, passing in the current application as an argument
31203037		adds a technical comment to the text widget if the technical comment is present or sets the text's value to the provided comment when it is not present.

CONTEXT
This method handles insertion of an item into the table, prompting the
31203099		sets the raw sequence OIDs array and fills it with the OIDs when a new OID is created for a previous OID was added.
SUMMARY
This method is used to set the choices for sequence OIDs (O
31203120		refreshes the project by updating the table summary with the SQL command and the selected project.

This method updates the project tree, submits the SQL command and project on the server, and to enable or disable project deletion based on the
31203138		sets the additional sequence IDs of Segment Add Arrays and ensures that the provided array is not null. It then sets the additional Segment IDs in the class based on the valid values in the array. Finally, it checks if any non-
31203196		opens a dialog box to edit a plate with the provided plate ID. If the plate already exists, it displays an error message and returns. Otherwise, it creates a new plan and launches the corresponding plate editing thread.

This method opens a
31203213		sets the primer OIDs in the array of primer IDs to the specified array of primitive OIDs.

This method sets the primer OIDs in the parameter to the specified array of Ns in the array of Ns parameter.

31203261		sets the vector OID (Object Identifier) of the object to the specified array of integers. If the array of integers is null, it returns. Otherwise, it retrieves the array elements from the vector OIDs array based on the specified
31203298		sets the contig_oids property to an empty array, calls the method of the superclass, and adds the contig_oids array to the top of the list.
SUMMARY
This method is used to customize the properties
31203322		checks the validity of a string base and throws an exception if it is invalid. It then checks the length of the string, ensuring it is 1 and that it starts with "G.C".
This method checks the validity of a string base
31203409		sets the trace position to the specified position. If the position is null, it checks if the trace position value is less than 10. Then it sets it to 0 if it is less than 10. If it is less than 10, it removes
31203462		refreshes the sequence renderer by clearing the existing renderer and adding a new one with the provided sequence renderer.

This method sets the component orientation to z-axis and updates the renderer with the new orientation and component orientation
31203589		returns a DesktopPane containing a DirectoryChooser component.

This method creates the initial directory chooser dialog.

This method adds action listeners to the Directory and Select directory buttons.

This method creates the button panel for
31226384		takes an array of Goal objects and a boolean of indicating whether to continue running, by iterating through a list of eligible goals until it finds one that can do so. If a better goal is found, it then executes it and returns the
31226391		adds a rule to the grammar. If the rule with the same name already exists, it adds an error message to the error list. Otherwise, it replaces the existing rule with the new rule and adds the new rule to the grammar. The
31226472		generates a hash code based on the hash codes of the rule list and the number of declarations.

This method calculates the preferred hash code for a given object by performing a bitwise exclusive OR operation on the computed hash codes of its parts
31226559		inserts an option into the knowledge base, either by querying the knowledge base with the current options or by inserting a new option into the knowledge base if no previous options exist.

This method overrides the `clone` method and returns
31226664		removes a listener from the rule firing and updates the rule firing state based on the number of listeners.

This method removes a listener from the rule firing and updates the rule firing state when the rule firing is no longer in progress.

31226681		removes the specified object from the knowledge base and clears the conflict set, then loops through all join nodes, removes the given object and its nodes from the conflict set, and returns true if any objects were removed, false otherwise.
SUM
31226818		runs a loop that continuously checks if the game is in group and updates the group. 
This method iterates over all players in the group until all players have group resources. 
This method iterates over all players in the group until
31226837		sets the strategy for the agent and updates the event handlers.
SUMMARY
This method is used to set the strategy for the agent and update the event handlers.


31226940		returns a copy of the cards vector, including the cards without cards placed before the corner of the card.
This method returns the start card.
This method returns the corner card.
This method returns the turn card (either right or
31227092		updates a matrix by iterating through two data arrays, assigning matrices to each. It checks if the array of elements is empty and if so, starts a new calculation. It then gets the number of rows and columns of each row and
31238641		returns a set of fixture names that are not included in the test suites not included from the file system and not included from the selected test suites.

This method does not allow the filtering to be applied to the test suites in order to
31252948		shows a message if the user has opened a message window, such as a modal dialog for a dialog.

This method shows a message dialog with a specified message and icon, and also shows the dialog when the user makes it visible.
31253051		adds an ActionGroup object to a list at a specified index. If the group already exists in the list, the method returns false. Otherwise, it is created and added to the list, with the key "actiongroup" and the new
31253055		updates the text of a control and updates the background of the control's control if one is registered. If enabled, it updates and disables the control's background based on the display style of the object. If system actions are enabled, it
31317665		creates a JMenu object named "File" which contains the File menu, each of which is annotated with the GenericMenuItems annotation.

This method, "createFileMenu", adds a File menu to the menu bar.

31317687		returns an `JButton` with a `JToggleButton` that is configured and has an `ImageIcon` with the text ICON "toggling.gif" and the selected state of the `JToggleButton`
31317710		creates a JScrollPane that has a FlowLayout wrapped in a table. The table is set to view rows and columns, and the user list component is added to the table. It also sets the title of the JFrame.

31317826		returns the logged-in user of the specified display name, or null if the specified display name is not one of those users.

This method finds the registered users from the database to check their display names to determine if they are logged
31317855		This method updates a block in the document model and updates the block view for a line.

This method updates a block in the document model.

This method updates a line in the document model and updates the block view for a line
31317894		adds a listener instance to the model, and creates a new model adapter.
This method creates a new instance of the given class and adds it to the model.
This method adds a listener, if the model does not exist it creates
31317895		removes a specified DataModelListener from the collection of listeners. If the dispatcher flag is set to true, it also removes the listener from the model listener set.
SUMMARY
This method is used to synchronize the addition and
31317901		This method iterates through the event notifiers and dispatches them to their listeners.
This method dispatches an event notifier with specified event parameters.
SUMMARY
This method is used to dispatch an event notifier with specified
31317923		compares two objects by comparing their Java time address values if the other objects belong to the same known network time type.

This method checks if two NetworkTime objects have the same Java time address.

This method compares two instances of
31317929		finds a line that matches the given line ID from the network, asserting that the selected lines are not the same, have not been removed or being created asynchronously, and have the same internal ID as the selected lines.

This
31317959		attempts to add all orphans to the list and reconnects the existing list accordingly.
This method attempts to add all orphaned lines from the list to the list and returns true if successful.
SUMMARY
This method is
31317994		deletes a block from the network by first checking if the block is the current block, if it is, it returns. If not, it finds the block, checks if there is a parent block, if there is, it removes the block
31318011		finds a block in the block list that matches the specified message ID, given a network ID.

This method registers a `BlockSet` with the singleton layer, invoking it and obtaining the block from the `Group` network.
31318018		checks if a block with the given ID is missing and adds it to the list if it is.

This method logs that a `NetworkID` is being used.

This method logs that a `NetworkID` is being used
31318025		returns the processing UDP packet after encrypting it if necessary.
This method returns a temporary buffer buffer that contains the length of the standard message.
This method attempts to run a proxy on a thread-safe socket, and if successful,
31318029		sends an update for an ID if there is another ID in the request object and the protocol's network interface is not interested in it.

This method publishes a change request to the network interface. It checks if the monitor has expired and
31318055		retrieves an instance of the appropriate PacketHandler for a provided Packet.

This method returns the PacketHandler associated with a given Packet.
SUMMARY
This method is used to convert an incoming packet to
31318060		handles packet events by getting the module of the user and checking if the module is alive. If not, it forwards the packet to the appropriate handler based on the module's source ID.

This method throws a java.net.Unknown
31318107		sends a retransmit advertisement message to the previous endpoint based on a change in encryption mask for a given endpoint.

This method sends a retransmit advertisement message to all ports except the specified endpoint, if any are specified.

31318130		broadcasts updates after a specified network time.
This method sends updates after a specified network time.
SUMMARY
This method is used to send updates after a specified network time.


31318139		handles incoming packets from users or to other users. It updates the report, handles block messages, and adds new blocks or removes them from lists. Finally, it releases the access lock.

CONTEXT
This method handles a packet and
31318149		creates a new line with the given data, including line properties, timestamp, and number of lines received. It sets the line number and creates a new line message indicating the number of lines received. After reading lines data, it inserts the line
31318160		updates the clock by adjusting the time taken by the application time, and adjusting the running time if applicable.
This method normalizes the time of the clock, ensuring that there is only one system clock associated with it.
This method sets
31318161		updates the block of the parent block.
This method adds lines to a list of paragraphs and iterates through newLines to process each line.
It then creates a Document for each newLine, sets various labels, writes HTML to
31318166		queues a Packet by a packetDispatch listener and adds it to a queue of packets. It returns the packet ID of the waiting packet.

This method queues a Packet by a packetDispatch listener and adds it to a queue of
31318167		dequeues a waiting packet from the queue, blocking until the queue is ready.
This method dequeues a waiting packet from the queue, blocking until the queue is ready.
This method dequeues a waiting packet from the queue
31318178		starts the network listener, incoming and outgoing packets waiting for incoming packets, starting a new thread if not already running. It also starts incoming and outgoing packets waiting for incoming packets. The method then starts outgoing and started connections. The method starts incoming
31318224		takes a pointer type and returns the corresponding action code.

This method converts a 4-character image into a variable bitmap. If the variable exceeds the capacity with the size of a pointerless type, then it throws an IllegalArg
31318227		takes an integer pointer type code and obtains a string style from the pointer type enum for that key.

This method returns the style for the specified type name.

This method returns the style for a unique id.
S
31318314		changes the local user's colour by changing the local user's colour to the specified value and notifying the table model of the change.

This method changes the local user's colour to the specified value and notifies the table model of the
31318315		changes the typeface of a block to a given face descriptor. If the descriptor already exists, it automatically sets the last modified time and the typeface of the new block. It then updates the block's last modified time and sends a message to
31318325		tests adding, removing, and verifying a block of an element in a document. It asserts that the block has been modified using assertEquals and assertNotEquals methods, and deletes and verifies the block.

This method tests
31318336		tests the validity of the NetworkID class by checking various scenarios involving null values and invalid IDs.
SUMMARY
This method is used to test null values within random-bit integers and integers to verify proper functioning against the NetworkID class
31438246		compares this object and the argument to see if it is an instance of the RadiusPrincipal class and if so, compares the name and value of the current object (if they exist), returning true if all fields are equal, otherwise returning false
31438248		sets the attribute of the RadiusAttribute object by validating the new radius attribute and then setting the attribute name to the new attribute name and nullifying the radius attribute.
SUMMARY
This method is used to validate that the radius attribute
31438287		logs out the user by removing all relevant information from the session and setting the challengeReturned flag to false.

This method logs out the challenge of the current user provided by the Authenticator and clears any user principal attributes.
S
31438632		returns a string representation for the RadiusClient.
This method creates or merges the data for the RadiusClient.
This method serializes the AddressElement object.
This method serializes the BindingsElement object.
This method serial
31465402		searches a path for a property instance in the properties map and returns its value when the property is accessed.
SUMMARY
This method is used to find the value of a property by searching for it in the properties map using
31465580		saves an image set into a 2D array of Graphics2D objects.

This method writes an instance store's image number to the specified output stream.
This method writes the bounds of the image set to the specified output stream.
31465604		checks if an image is being prepared and loads it if necessary. It also updates the image's state and schedules an image discovery task if specified.
SUMMARY
This method is used to update the image's state and interest in image
31465622		is used to paint the component to the screen, setting the screen's size and then rendering the map into a graphics object.

This method overrides the paintComponent method of the superclass and paints the component if map is not null.
31465641		checks if the user has specified the username already exists in the map. If not, it checks if the user has specified the password in the map and displays an error message if not. It also handles closing the map.

This method confirms
31465655		checks if the map panel is active and if the user confirms, prompts the user to save changes if needed. It then closes the window and deletes the map.

This method closes the window.

This method closes the map.
31465689		adds a map object factory to the list of factories, resizing the list if necessary.

This method, doTest()`, tests the behavior of adding and removing maps objects.

This method, testCopy(), returns a copy
31465762		calculates the coordinates of the physical map size for a given set of tiles. It calculates the bounds of each tile and adds the horizontal or vertical tile size multiplied by the set size. It then compares the retrieved values to determine how much space
31465791		takes in two Version objects and compares their major and minor numbers, returning 1 if the first is less than the second, 0 if it is greater, or 1 for the third if it is less than or equal to the specified version.

31465798		selects an object from the floors array and fires a property change event if the object's y value is different from the current value.

This method deselects the object if it is currently selected on the floor, else updates the selected
31465869		finds and returns the JAR file for the application.

This method replaces a reference in the class loader, but the time zone will remain if the reference is in the same daylight as the original.

This method finds a J
31466009		is used to fire a property change event with the given property name and old and new values.

This method iterates over the listeners and fires property change events for each registered listeners with the specified property name, old value and new value.
31466011		searches for a resource entry with the given name in a Jar file, returning the corresponding JarEntry if found or the original entry if not found.

This method checks if a file is a directory, if so, it recurs
31466025		saves a tile set manager to a file.
This method saves a map manager to a file with a specified ID.
This method saves a map to a file with a default name stored locally.
This method saves a map to a
31468595		returns the number of elements after an array of elements in the array, taking into account any changes to elements
31468634		synchronizes data by setting syncData to false and setting value and ignoringWhitespace to true and fluff data from the owner document.

This method sets the name of the node and updates the local name of the node based on
31468660		clones a specified node and returns a clone of it. It does this by creating a deep clone of the node, checking for duplicates and the type of the node, then returning the deep clone.

This method reads an Element into
31468735		appends the string data of one element to another, utilizing synchronization to ensure data consistency and notifying observers of the change.

This method sets the second element of the data buffer to null and appends the string data to the buffer.
31468752		synchronizes the child nodes of a node after checking if there is any child or until the next sibling.

This method returns an array of the objects contained in the specified region, starting at the specified index.
SUMMARY
31468812		retrieves the value of an attribute to the specified namespace URI and local name. If the attribute is null, it returns the value of the specified namespace URI and local name. If the attribute doesn't exist, it returns the value of the
31468831		adds an element with the specified name and type to the hashtable and triggers a "synchronizeData" event if the object is being modified.

- This method adds the specified element to the hashtable.
SUMM
31468840		returns the value of the first child of a node. If there are no children, it returns the string "n/a" or "n/a" to return null or the number of siblings. If the node has more than one
31469080		clones a node, either the original node if deep is true or the clone of its superclass and its internal nodes if deep is true.

This method clones the nodes by cloning the base, nodes, and attributes.

This
31469095		sets the read-only property of an element for a given node using the specified read-only boolean and deep boolean.
SUMMARY
This method is used to set the read-only property of an element for a given node.
31470890		returns the first element of the document's first child.

This method returns -1 if the document's first child has no child.

This method returns the first child element of the document's first child, or -1 if
31470909		returns the index of the next element in the input DTD node.

This method searches for the first occurrence of a specified namespace and element name within the input DTD and returns its number.

This method searches for the next
31471226		overrides the dates of any durations defined by the given dtStart and dtStop parameters, ensuring the date is before the startdate or after the stopdate.

This method overrrides the dates of any days defined
31476438		inserts an item into the dispatcher if it does not already exist, or replaces an existing item if it does, and then notifies all waiting threads.

This method fires a life changed event when the widget selection occurs. It ensures that
31494586		returns a rectangle representing the rectangle at the specified row and column by converting the top, bottom, left, and right corners of the square represented by the given coordinates.

This method sets the cursor position to point where the board should show
31494588		generates a random cell from a given point within the specified grid, checking for invalid coordinates and scaling if valid.
SUMMARY
This method is used to create a new GridCell object that is positioned within the specified grid.


31494605		overrides a superclass method to paint a grid onto a different Graphics2D object if the matrix is not null, sets the transform to the original transform, draws the matrix onto the Graphics2D object if showGrid is true, translates
31494860		retrieves the selected option for a given character and message, validates the input settings, and prints an error message to the console if an error occurs.

This method determines if an option contains an option with a given value.

31494872		takes a directory as an argument and returns an Album object containing songs in the directory, including songs included from the source, cover image, tracks, tracks skipped, and tracks completed. It also includes all the specified playlist files and file source files
31495109		returns a string representation of the object, based on the value of the object.
This method returns an integer representation of the object. It handles primitive objects by converting them to integers and returning the appropriate type and concatenated string.

31495122		initializes the "Basic" Album object with the provided directory, file, picture settings, album filter and image filter options.
SUMMARY
This method is used to initialize the "Basic" Album object with the provided directory, file
31495198		runs the data channel's process function. It checks if the metadata is empty, sets the target image, clears the album files, copies the album to the target image directory, and updates the list with the new target image.
SUMM
31495341		adds properties from the BProperties object to the superproperties of the current BProperties object. It checks if the properties exist, and if not, initializes them by iterating over the entries of the BProperties. If the
31495664		takes a query and removes all adjacent regions from the current list. It inserts the first region of the current region into the list without shifting the other regions. If any regions were adjacent, it returns the modified query list.

This method
31495695		adds an element to the queue, but only if the queue is available and the priority is less than or equal to the minimum priority. 
This method adds an element to the queue, depending on whether the queue is in one of several
31496645		sets up object visible or invisible in response to a view from a new server.

This method is a protected void function that checks if a client is running, and if not, returns. It then updates the game state and enables a confirmation
31496751		sets a data value for a specific index in an album object array and updates a flag indicating that changes have been made.
SUMMARY
This method is used to update the data value in the album object array, setting the safe flag
31499752		subtracts two integers with the same value.
This method subtracts two integers and returns the result.
This method subtracts two integers, where the first integer is the negative of the second integer and the other integer is the same
31696447		This method repeatedly parses negative parse tests, verifying that it catches SAXException that occurs. It then checks readability and test for stopping the parser when parsing fails.
SUMMARY
This method is used to check for parse exceptions
31741255		takes a file URL and returns the translated URI by parsing it into a path and extracting the file's absolute path.

This method converts a URL to a list of files for validation.

This method translates a URL by converting it
31741266		starts the request by sending the status, send plain headers, send MIME types, and set file size of the request. It then sends the HTTP Status and sends the HTTP MultiEntity header, header entry containing the MIME type, M
31787964		returns a JNDI Context object, creates one if necessary, a connection factory and provider URL, and updates the context. It also throws a MessagerException if there is an error getting the JNDI Context.
SUMM
31788035		removes a subscriber from a messageable node by fetching the messageable object and removing it from the object's subscriber table based on the message class.

This method removes a subscriber from a messageable node by obtaining a messageable object
31788200		retrieves a target method object by the specified code and return type, either directly or through its superclass.
The default mode can be set to internal, if the return type is boolean, or if the environment is not absolute it returns
31788225		retrieves the file separator from the "src" directory and returns it as a string, optionally appending ".java" to it, optionally adding ".class" if the class name starts with "java." or "com.objectwave
31788234		returns the location of the files ending in "java." in the source directory.

This method generates the source code for the current unit.
SUMMARY
This method is used to get the Java Interface file path for a
31788502		dumps a list of tables in XML format, recursively calling itself, and logs information about the tables. If debug mode is enabled, it traces the structure differences if debugging is enabled.

This method recursively calls the super
31788590		initializes the form manager if it is null. If the form manager exists, it creates a new form manager and creates a new form bundle. It then initializes a new form helper and a new form form decorator container. It then pars
31788600		returns the location of the sand home file within the specified directory.
This method returns the location of the current directory in the specified directory.
This method returns the full path of the current directory within the specified directory.
SUMM
31788609		recursively adds all the needed projects and the required projects of a given project.

This method returns a list of project archives and combines their paths to create a hash mapping folder names to paths.

This method calculates the path of
31788623		takes an element from a workspace and retrieves its title for that element. If the title is "sand", it sets the subtitle to "title1". Otherwise, it validates the element and returns either the title-text or title-
31788644		moves away from the "build_C" string buffer by removing the "elem" element from the "core" string and setting its "globaldefinition" attribute to the given value. It also sets the "_CoreSpec" attribute of
31788651		generates a hyperlink string based on the input parameters.

This method returns the link to the node builder by constructing the URL using the set parameter, node IDs, tree attributes, selected nodes, and property values.
SUMM
31788763		adds a new file to the list of ejecutes.

This method adds an environment file to the list of environment files.

This method adds a file to the list of files in the environment.

This
31788771		adds a new link to the superclass, creates an array of `SandUIDeployment` objects, and adds them to the current thread's `super` package.
This method adds a module to the superclass.
This
31788809		removes a child node from a node if it exists in the node hierarchy.
SUMMARY
This method is used to remove a child node from a node and all its descendants from the node hierarchy if it exists in the node hierarchy
31788838		This method builds the build of a Java class and includes any warnings or errors found in the "warnings" and "errors" variables. If a "error" is found, it logs the message and the stack trace. If no exceptions are
31788842		returns a string representation of the errors contained in the errorList.
SUMMARY
This method is used to convert all errors in the errorList into a string.


31789008		checks if the jar file exists and is a valid jar file. If it is valid, it attempts to create the file on that file object and open it in an autodetection.

This method logs a message when the jar file
31789009		sets the build root to a new value, first checking if the new value is not null and is different from the current one. If the new value is different, it sets the build root to the same value.
SUMMARY

31789051		checks if an object is equivalent to a given object. It does this by obtaining the action of the moving and converting it to the correct action type. If the object is not equivalent to the current action, it does not return anything. If the
31789085		retrieves the data URL of the tools.jar file.

This method initializes the SDK home as a resource, loads the boot config directory, deletes the temporary JAR file, adds the original resource to the JGroups
31789181		returns the value of the given key as a string. If the key is null or empty, it returns an empty string. Otherwise, it iterates through an array of class to get the value and set it on the string variable.

31789184		takes a string and returns a string value associated with that string. If the string exists as a key in the keyValues array, the method returns the key associated with the string as a string. If the string is not found in the key
31789186		establishes a task based on the value of the nodoc property in the ant build trigger configuration.

This method sets the ant property "nodoc" in the build trigger configuration to the value of the "nodoc"
31789204		trims the last update time of all updates to zero.

This method calls the same method in the superclass, passing the arrays as arguments.

This method checks if the cache is empty, if so, it returns. 
31789259		logs and creates a DependencyGraph object of type SandProjectDependencyGraph, which iterates over an array of SandProject objects and calls the dumpDependencyGraph method on the SandProject object to get all of the dependences
31789275		This method loads a package from a project XML file, sets the generation directory, sets the project in the project namespace, converts the artifacts to a list of artifact info entities, and adds them to a list of artifacts.

This method loads
31789287		sets the build trigger directory for the ant project and all required projects in the proj's Ant project to the specified value.
SUMMARY
This method is used to set the build trigger directory for the ant project's Ant project to
31789333		retrieves the value of the specified parameter from the parameter map.

This method returns the value of the specified parameter as a string.

This method returns the value of the specified parameter as a string.

This method returns
31789373		sets the supported actions to a given boolean array.
This method initializes the object with the specific actions string, depending on which action is supported.
This method sets the supported actions to the given boolean array.
SUMMARY

31789448		returns the unique ID of the given value array.

This method takes an array of SandAttrVal objects as input and returns the result of calling the specified method with the array as an argument.
This method takes a SandAtt
31789560		returns the paths of the current mode path by removing the file extension and constructing a path string for each mode in the mode stack.
SUMMARY
This method is used to construct a path string for the current mode state.


31789586		calculates the source path of a source file by removing the source file root in the directory by concatenating the source file root's path with the index from the "sandmessages" folder within the directory.
SUMMARY
31789599		returns the package name of the class in the field's type name, if it's not null.

This method extracts the class name from the start of a table to get the package from the class name if the package name is not
31789640		adds a tag to the tag map. If the tag already exists, it returns the existing tag; otherwise, it creates a new tag and adds it to the table. This method retrieves the new tag using the TagManager and adds it
31789695		writes a subarray token, with its corresponding key to a PrintStream.
This method writes a separator in between XML elements.
This method writes the key of an object to XML stream, using a given data map and a tree
31789712		determines whether a given screen is secured or not by checking if the security for the screen matches those in theSandUI's default security.
SUMMARY
This method is used to determine if a given screen is secured based on
31789741		returns the value of an attribute for the given SandAttrVal. If the attribute is null, it returns an empty string. Otherwise, it returns the value of the attribute as is.
SUMMARY
This method is used
31789908		checks if the mode is set to forward and if it is, checks if the top of the stack is null. If it is, an empty FindCollectionView exists - otherwise returns false. If the top of the stack is not null, the
31789966		adds a number of hours to a calendar day. It increments the remaining hours, checks if the current year has passed, and ignores the day if not. Finally, it checks for time zone changes, saves the calendar day, and adjusts the
31789969		checks if the current date is not a holiday or holidays or doafter.
This method returns a boolean value indicating if a timestamp is needed since the start of the timestamp, based on the previous known dates of the calendar.
SUMM
31790896		normalizes a directory string by removing any path separator.

This method normalizes a directory string by removing any trailing slash and making it consecutive slashes, replacing "*" with ".*", re-allocating characters between them,
31897999		retrieves database data from the PostgresQL driver before initializing them with provided data and order. It then evaluates the query against the modified data and returns the result as a set.

This method retrieves database data from the Post
31898043		sets the value of the field dbDataVector to a new vector if `dbDataVector` is not null, otherwise it sets field dbDataVector to a new vector that is initially empty, and then calls `setDbDataVectorNull`
31898056		sets an error handler for the property "errorHandler" of a Java program.

This method sets an error handler for a Java program.

This method is the main method that sets the error handler for an XStream object using GW
31898083		retrieves data from a batch using a specified condition, order, and limit and returns an array of results, or a vector of unknown results.

This method returns a long value representing the number of records returned.
IIML
31898102		sets or finds a relevant database connection based on the provided DatabaseAccess object.

This method loads settings from a settings file.

This method retrieves the enabled status of a database connection button.

This method sets the DBA
31898138		returns the JLabel component for the object, initializing it if necessary by returning it.

This method creates a label for the window to display the message.

This method returns a button for exporting the object to the help page
31898169		sets the current card to the value of the given integer value.
It first casts the int value to an integer, and then calls the setCurrentCard method with the integer value as an argument. Then, it creates a new AddCardProperty
31898171		sets the "done" property to the specified boolean value of the thread.

This method notifies the thread that it is busy.
SUMMARY
This method is used to notify the thread that it is busy.


31898245		returns the lengthField property value, which is a JTextField object that contains all of the text fields for displaying the length value.

This method returns the label field, which includes the value of the length label.

This
31898247		returns the JTextField called nameField if it is not null, otherwise it instantiates a new JTextField and returns it.
This method if the fieldNameField is null, it creates a new JTextField and returns it
31898249		returns a JTextField for the scale field, creating the JField if it does not already exist and adding it to the text area.

This method returns a JTextField for the scale field, creating the JTextField if
31898251		returns the typeComboBox property value, if it is null it creates a new JComboBox with the specified label and adds it to the parent panel.

This method initializes the JComboBox referencePanel and sets
31931962		sets the response status to a new integer value and sends an AddContactV10 message, recording the log in the process using a MessageCoder object. It then catches any exceptions and stores them in a list. The method sets the status of
32019844		overrides the default `toString` method, returns a string representation of the object, including the `size()` value.

This method takes a `Message` object and returns a string representation of it, which includes the `
32019849		checks if the given message is a duplicate.
This method adds the given `Message` object to the message list and returns the list of messages.
SUMMARY
This method is used to check if the given Message as a duplicate
32019876		loads a properties file from a specified resource name. If the file exists, it loads the properties.

This method creates a repository from a given class definition using default values.

This method loads resources based on a given class definition.
32019953		checks if two messages are equal by comparing their names.

This method handles the selection of the item in the stack. It checks for a selected state change and the action command in the action event. If a specific menu item exists, it
32020507		sets the values of the 'row' instance variable by constructing a new row from the resultset if it exceeds the current row count.
This method throws an exception if the field <code>id<code> is empty or if the id
32020803		sets group mail information based on provided list of SimpleMail objects, a list of String objects, an array of String objects, and a list of files.

This method sets the group mail information and returns true if successful.

This
32020807		sets the mail, attachments, and file list for a SimpleMail object by initializing them with the provided list of attachments and file lists. For each attachment, each file is added to the list of file lists if it is not null.

32021601		retrieves an object of the specified type and id from the database by loading the object type from the database and passing in the id.
This method adds an assignment to the persistence layer by creating a new M_Assignment object using the
32021980		returns the header row count of the ResultSet object.

This method returns the number of rows in the ResultSet that match the condition header field with the specified ID.
SUMMARY
This method is used to count the
32022245		creates the HTML header with a "Tr Tag" tag using the provided HSSFRequest object.

This method returns a string containing the bg color for the tr tag.

This method creates a HSSFFont and
32022307		This method returns the current school, which is a String representation of the school name.

This method attempts to find the current school by calling the create method of the superclass, passing in the current school.

This method asserts that
32022510		performs a list search using a given example query and returns the results as a list of Model objects.

This method performs a list search using a given model and value and returns a list object of Model objects.

This method performs
32022595		This method takes a Hibernate query and executes it using the Spring JDBC batch transaction.
This method takes a Hibernate query and executes it using the Spring JDBC batch transaction and returns the results as a list of objects
32022646		queries the database using the given query string and parameters, executes the query, and returns a list of results.

This method persists a list of objects of given type using Hibernate, creates a statement with just the generated SQL
32105436		clones a node by cloning its children, including attributes, text content, and CDATA, and potentially preserving the attributes of different child nodes.

This method clones a node by cloning its links, attributes, and text content, and optionally
32105803		creates a copy of a DOM Node. It has the option to specify whether to include child nodes. It clones the child nodes based on the specified boolean value, handling different node types and their equality. 

This method clones an Entity
32105832		removes a child from the current node and clears the cache of its ancestor resolver. If the removed child is an ElementNode or DocumentType node, it removes the node from its parent and recursively removes all child nodes if the removed
32120313		finishes the zip file, writing the central directory header, ZIP entry header, and end-of-file flag.
This method writes the contents of a ZipEntry to a RandomAccessFile, and suppresses any necessary data.
This
32135937		recursively calculates the maximum score for a given node in a tree. It checks if the node has any other nodes and has not reached its maximum depth.

This method checks if the current node is closed by a terminal node, ensuring
32163910		calculates the amount of materials required for an action and initializes fields accordingly.

This method updates the player's inventory items and checks if it is necessary for the given item being dropped or being dropped. If necessary, it sets the
32163928		This method sets the forbidden cells to all cells. If the current cell has only two rows and one column, the cell does not have forbidden cells.

This method scans a 2D array of cells, creating new cells with forbidden cells as
32163954		checks if a given position is valid.

This method checks if a cell is in the game or not, and if so, it updates the position and repaints the screen.

This method prints a message to the console indicating that
32163981		This method sets up the list of the game board by adding radio buttons and calling other methods to add an action listener to the button.

This method is a set of method that allows the user to add a new state a game ends.
32599520		swaps the entries in a sorted list with an item that is above the other specified index.
This method is used to change the selection model of a list.
SUMMARY
This method is used to change the selection model of
32599536		applies values to the text fields used in the program, including the segment name and number of steps.
This method allows editing of the user-entered value.
This method allows editing of the user-entered value.
S
32773680		iterates through a list of threads and removes them if they are still alive, notifies listeners of the updated thread, and removes them if they are no longer alive.
This method notifies any listeners that the thread has been updated. 
32773766		compares two TimeUnit objects based on their conversion factors, throwing a ClassCastException if the conversion factor cannot be identified.

This method compares the conversion factors of two TimeUnit objects, returning 0 if they cannot be treated as TimeScale
32822593		tests the save function by opening a file, changing the text in the controller's text area to the string representation of the file, and deleting the file after the changes.
2. This method tests the save function by opening a file, changing
32822594		tests the saveAs method of the MusicEditorModel class by opening a file for editing, saving or viewing a music file, asserting that the saved and viewed music files remain on the same source.

This method is used to execute a test
32897708		returns the value of a named variable for the given key, or the default value if the variable is not present or the variable is empty or out of range.

This method prints the usage message and exits gracefully if the user code
32897820		paints the righ and righ border of a rectangular region on a graphics object.

This method paints the righ border of the component, with one line at the top.

This method iterates over the text it is
32897826		returns a JButton with the text "Close" and an icon of "ic_close". The button is visible when clicked, and the icon is set to not be null.
SUMMARY
This method is used to create
32898258		sets the force heavy-weight work in Menus, if none is present, to false.
This method disposes lightweight forcer windows if the menu is not an instance of heavy-weight quick menus, otherwise only the menu.

32898355		stores the alpha value for a specific window if it is an instance of RootPaneContainer. If it is not, it does nothing.

This method stores the alpha property for the given window. If the width or height properties are not
32898373		returns an argument of a byte value representing the alpha value of a Window.

This method returns the alpha value of this Window.

This method checks if this Window is an instance of RootPaneContainer, which checks if it
3311617		sets ships ordered by the ship design in a SpaceCraft. It first checks if the ship is part of the colony design, and if so, it recovers it to avoid blanks. It then iterates through the ships and checks if the ship
33152164		verifies a rule by checking the descriptor and if all rules are met, it stops the rule. Otherwise, it calculates the rule using the specified number of parameters, then rotates the molecule and checks for failures. It calculates any failures in its
33153818		calls another method `testRodovenue0` with a number of `object` parameters. It then creates an array `smiles` with the object, creates an int array `rows` with the number of columns in the array,
33153902		calls the `testAmmine13` function with the specified arguments and passes the result to the ` AmineGroupSubstituent` class `amine`.
SUMMARY
This method is used to test the linkage
33153983		tests if a chemical formula is correctly solved by performing a complex aromatic calculation on a molecule. It asserts that the result is 6, and that the mathematical formula matches the expected value. 

This method tests the dual functional formula at the
33154175		tests the SUMMARY structure, including a seed molecule by subjectivity. It adds several rings with the same symmetry, atoms, bonds, and bond directions. It then creates two Smiles from a ring, adds hydrogen atoms and bonds to the
33156163		formats a string in a specified format using a specified number of characters.

This method formats a string in a specified format using characters from the beginning of the string.
This method formats a string in a specified format using characters from the
33177741		checks and starts distributed bindings for servers, registers services, and logs the number of attempts to do so.
This method logs the entry of a distributed bind method and the response.
SUMMARY
This method is used to ensure that
33177744		sets up a vector of filters by matching patterns in a string of names separated by spaces to parse and extract features (in, out, in, or outL) into regex expressions. The Vector is then used to forward request processing to a serv
33177913		converts a nested class declaration into a string representation, adding its declaration with an "public class" method if it has a non-static field which has a non-abstract field whose contents are a single or part of a collection.

33178125		generates formats by name by invoking the `generateFormatsByName` method of `clazz` of `clazzHeader` and iterating through its field information.

This method adds an accessor format to a class header
33178242		sets the accessible flag of the specified object to the specified value. It uses reflection to invoke the "setAccessible" method on the specified object that contains the specified value.

This method is the entry point for a Java application. It
33178349		prints a specified string using a predefined format if the format is '%s'.

This method adds a CRLF to the beginning of the output.
SUMMARY
This method is used to print a string with indent
33178451		calculates the maximum ship speed of all ships in the collection.
This method generates grid-based vectors for each ship in the collection, including the maximum speed of all ships.
SUMMARY
This method is used to calculate
33178475		prints a field in the form of the header, including the address, name, accesses, parent, and subfields.

This method prints a `FieldAccessor` structure in a hexadecimal format.

This method
33178671		splits an offer by the specified quantity, updating the creation time and quantity of the sender of the split offer if necessary.

This method creates a random offers for a particular amount and returns a list of offers that match the specified conditions.
33178713		retrieves local variables for a given name.
This method adds a string variable to the string.
This method adds a string pattern to the string.
This method adds a string variable to the string.
This method adds a string
33178762		initialises the derived data by calling the superclass's initialiseDerivedData method if all of the lines in the left and top lines are null, otherwise it initialises them with the lines in the lines.
SUMMARY

33178793		returns a list of the two lines in a given side.
This method adds the corners of two lines to a vector of new vector.
This method returns a list of the second lines in a given side and adding the corner of a
33178857		calculates the nearest pair of coordinates to a given number of positions specified in an array of Geometry objects.

This method computes and returns the nearest point to a given number of positions.

This method finds and returns the
33178892		calculates the intersections between a collection of rectangles by iterating through them and adding any intersecting rectangles to the collection.

This method computes the intersection between a collection of rectangles and a rectangle. If one of rect
33178904		converts a source string into an array of individual lines. If an error is encountered, an InterruptedIOException is thrown.
It checks if the length of the source string is less than the specified length and if not, it calls the
33178957		returns the stop string of the token at the specified position if it satisfies a number of white space requirement.
This method returns a string representation of the specified string token, or an empty string if the specified string is null.
This method
33178976		reads an integer from the input and throws an exception if the integer is invalid.
This method throws a ParseException if the input is not of the expected type.
This method throws a ParseException if the input is not of the
33179017		takes a string of text, removes any carriage return, tab, and newline, and returns the modified string.
This method transforms the input string by removing non-printable characters and converting them to a string, while removing the platform
33179021		substitutes references in a name and value, replacing each reference string along with other variables if the string contains an indicator indicating which effect is needed.

This method interprets user-defined arguments for a Velocity interpreter, considering format specifications and
33179073		substitutes variables within an XML element, returning them as a string. 

This method returns a string representation of the current element. 

This method returns a string representation of an abstract element, including name, value, access
33179249		takes a message and a list of namespace mappings from a given context. It extracts the associated element and the schema URI from the message. If a mapping-parameter is not found, it retrieves the attribute values and converts them into
33179463		takes a string array as input and returns a string containing all the names in the string array. Otherwise, it throws a NameNotFoundException with a predefined message.

This method takes a file and a boolean value as input and
33179526		returns the index of a variable that matches the given name in the list of variables.

This method returns the index of the "xsl" variable in the list of variables, excluding the "xml" variable.

This method
33293838		generates a comma-separated string of the names of the processors in the object's processors list, separated by commas.

This method generates hashCode for an object by concatenating the hash codes of all the properties represented
33304016		returns a map with the keys of the test method's definitions.
This method retrieves a collection of values from a collection.
This method refreshes an IPanel object.
SUMMARY
This method is used to
33304056		returns a string representation of the list of objects associated with a given key in a JSON string.

This method combines two lists into one string, using a new StringBuffer and a separator, without considering the sort flag. It then
33304310		retrieves a multipart FileInfo object based on its name, or returns null if not found.
SUMMARY
This method is used to get a MultipartFileInfo object from a hash map called files using its name
33387490		calculates the percentage of progress using aProgress variable and returns a double value.

This method returns the maximum progress that the progress monitor is taking place for.

This method returns the minimum progress that the progress monitor is taking place
33387504		adjusts the width and display of a text element to ensure it stays within a multiple of the total size of the text content and centers it within the widget.

This method adjusts the width of a text element to fit the text content,
33387508		resizes the component to the client width and height if it is attached.
This method calls the redraw method when a label is clicked.
This method calls the redraw method when a button is selected.
SUMMARY

33387548		sets the text visibility of a text element, updating the text display to include the new value if it is different from the current setting.
This method changes a text element's style to the specified one, enabling or disabling it based on the selected
33483443		returns an IPLocation object corresponding to the specified byte array offset, initializing the object if necessary.
SUMMARY
This method is used to initialize the object with an IPLocation object representing the location from a specified IP.


33483478		searches for a user's online online status by their ID and returns the result in a UserOnline object.

This method returns a UserOnline object representing their online status.

This method filters the UserOnline objects by their login
33483479		returns the online user's name by finding the user's online list.
SUMMARY
This method is used to find the user's online list by their username.


33483567		searches for login errors by the specified user ID and returns it as a LoginError object.

This method searches a list of exceptions by user ID and returns a list of LoginErrors objects.

This method returns a list
33483576		searches for a board permission by bid and group ID, and returns the corresponding BoardPermission object if found.

This method finds a board permission by group ID and filter property, and returns the corresponding BoardPermission object if found
33519719		returns the content as a string as a String object, either by using the connection object or using the getContentAsString() method to retrieve the content as a string.
SUMMARY
This method is used to retrieve the content
33519720		encodes a string in base64 format into a string using the specified decoder.
SUMMARY
This method is used to encode a string using a decoder and Base64 format, by converting the string to bytes using the decode
33519726		sets a basic authentication cookie using the provided username and password. If the cookie is in the current basic mode, the cookie is modified and set in the HTTP request header. 

This method sets up an HTTP client and HTTP POST request to
33553925		initiates a search and launches a background thread if the result is not empty.
This method in processes incoming call calls, retrieves intent data and handles search results or calls if not in the background or UI thread.
SUMM
33553987		retrieves a subset of data from a database given a requested start and count and returns the results as an array of ApiResult objects. It validates the counts and returns the final fetched data as an array of ApiResult objects
33583233		refreshes the graphical user interface (GUI) by updating the configuration, enabling or disabling the quit menu item, and checking game state to determine if the game is a round and round-able.
SUMMARY
This method is
33583240		calculates the number of vertical gap between two elements based on the width of the component and the number of elements it contains within and gap.

This method adjusts the number of vertical gaps using the provided number of elements. It returns the
33593226		selects a customer and sets its properties based on that selection. It handles adding, removing, and updating entries and elements, and the components also outputs their selected values.
SUMMARY
This method is used to select a customer and
33593459		executes a method invocation on the input phone number. It checks if the input phone number is valid and retrieves the customer object associated with the phone number. If customer exists, the method processes various forms such as creating and editing contacts, creating
33611840		This method, flush, flushes the current ReportQueue by removing all ReportReport objects at the beginning of the queue and writing the remaining ReportQueue data to an output stream.
SUMMARY
This method is used to flush a Report
33624914		initializes a new array called compactedArr with zero elements and doubles an input array called points. It then calls the computeHand method.

This method compacts the hands of cards from the first element of CardData. If the
33625289		picks up or pastes a pile based on a given parameter. If the parameter is equal to "fromDeck, fromThrown, choosed, or !choosePickup, the method reads the parameter and determines the pile accordingly
33630301		inserts an item into the database with the specified attributes such as category, description, start time, end time, and reserve bid.
SUMMARY
This method is used to insert an item into the database with the specified attributes,
33652878		This method retrieves the operating system associated with the operating system. If the operating system does not exist, it loads the operating system, sets the operating system name, and sets the operating system if enabled.

This method searches for or finds
33652883		returns the name of the window system. If the extension is invalid and the Windows system is not Linux, Mac OS X, Linux, or Windows, it returns "unknown" for Windows systems, Linux if the Windows extension doesn't match "
33652915		retrieves the jars in the specified jar file for a Java project. It creates a new file handle and adds its manifest, libraries, and jars together. It creates a native ZIP entry with additional class names and returns the entry.
S
33652923		creates a Manifest file within a specified directory or a default manifest file if none is provided by calling the getManifestFile method and then checks if the file exists before adding it to the directory.

This method, validateManifestFile
33652948		copies a file from a source location to a destination location using IOUtil. It compares the destination file and source file, and writes the result to a new file.

This method first checks that the destination file already exists, then
33652953		copies an artifact to a copy-file, replacing any matches with a list of options. 

This method checks the status of an internal command and executes it if it starts with COMMAND_START_TEMPLATE.
33652964		dumps the project properties and logs the start and end of the process for printing the properties.
This method overrides the superclass's implementation of the method.
This method adds a variable to the variable map, as long as the variable
33652966		dumps the modules by logging information about each module, all of its ancestors, and all of its ancestors, as well as the configuration of the project.

This method executes the process and handles exceptions by logging some information and returning a status
33652989		returns a File object representing the manifest file for the testing specified in the getPlugin-output-dir argument.

This method checks if the new manifest file is null and throws an exception if not. It then sets the output directory and
33652999		tests the lookup of a module by first looking up a module instance, instantiating it, and then checking if the home directory of the artifact is .jar.jar but not .jar.
This method tests the lookup of a module by creating
33653016		retrieves the dependencies using a byte stream and reads them from the input stream.
This method ensures that any errors are encountered during parsing within the manifest.
This method reads and parses a manifest file, checking for both the manifest and
33653067		sets the default prefixes to "." and "." in the maven project's dependency.
SUMMARY
This method is used to set the default prefixes to "." and "." in the maven project's dependency.
33653079		accepts a filename in CSV format and a log file name to generate a log file associated with the log command.

This method takes a command and a File object as parameters, and returns a FileWriter object to write to the log file
33659741		initializes the class by adding static initializers.
This method initializes the class by creating three javax.jms.TextMessage objects.
This method initializes the class by creating four javax.jms.Topic
33692122		sets up and starts a timer to listen for incoming and outgoing call notifications, initializes various objects, and starts a timer to handle each incoming/out of the filter. It then handles logout and reconnection of the filter chain.


33692128		shuts down the current media by stopping all frames associated with the audio channel, closing the audio window, and changing the status to idle.

This methodHolds up the audio player by calling the hangup method of the audio ring and
33692179		is used to stop media applications by stopping playback by creating a new MP3Generator object and calling its `stopMedia` method. It also closes the media application if it is not null.
SUMMARY
This method is used
33692242		logs the re-invite acceptance and invokes the re-invite acceptance callback when a call rejection or unaccepted status changes. It then returns a boolean indicating whether the call has been accepted or rejected based on the type of change
33692326		logs the accepted call and either fails the transfer received to its caller or has passed the call with the given reason and value.

This method logs the accepted call, changes the call status to "transfer accepted", and changes the call transfer
33692342		handles re-invite requests by logging the event and invoking the appropriate method based on the reason provided.

This method handles a response message for an invitation using a transport protocol and sets the status code accordingly.
SUMMARY
33692374		handles failure between the transfer handling and processing based on the provided exception message.
SUMMARY
This method is used to handle failure during transfer of call information.


33698338		reports the attacker's report, updates the form info, resets the form info after attack operation, determines the time left based on the search room threshold, adds a click listener to record the attacker's location, and repeats the execution of the attack
33701470		searches for a customer with a specific PIN number within a customer list based on a provided number and pin position.
SUMMARY
This method is used to determine a customer handle for a specific PIN given a number and an integer
33702557		listens for keystrokes and responds to enter and delete key inputs. If a response is received, it reads the entered text from the text field and sends it to the server.

This method adds an action listener to an action bar
33707109		checks if a filter can be accepted for any of the specified constraints. Depending on this condition, it delegates the checking to the superclass and returns the result.

This method checks if a filter can be accepted by a given date in either
33718414		is a test case for the setFName method of the Sample instance, it prints "setFName" to the console and creates a new instance of the Test class with the filename "James". It then calls the testSetFname function
33718416		This private method tests the getFName method of the Klistener class by creating an instance and calling its getFname to assert that expected and actual String values are equal.
This method initializes a new Klistener object with the
33718419		tests the setLname() method of the instance class by setting the lname to "Jones" and asserts that it is equal to the name "Jones".

This method tests the setLname() of the instance class by assigning a
33718423		This method tests the getLname() method of the class by creating a new instance and verifying that the name variable is set correctly.
This method tests the getLname() method of the class by creating two new instances of the class and
33718431		This is a test method that tests the getAddr1 method of the Date class. It initializes a Date object and calls the getAddr1 method on the object. If the returned Date object equals an empty string, null is returned
33718438		is a test case that is a prototype test of the class, it is empty, a good test of the method is called when added, then it removes the event with the specified id.
SUMMARY
This method is used to
33718441		This method tests the 'getAddr2' method of the 'Entry' class by setting up test data and initializing assertEquals() method.
This method tests the 'getAddr2' method of 'Entry' class by
33718442		is a unit test that calls the searchEvent method of the Event_StubImpl class with an empty string as a parameter.

This method is a unit test that calls the searchEvent method of the Event_StubImpl instance with
33718443		This method tests the getId() method of the Event_StubImpl class by setting the expected and actual Integer results for a given entity id and ensuring that they are set correctly.

This method tests the getId() method of the
33718445		This method is used to test the setId method of the Event_StubImpl class for a non-numeric id input parameter. It sets the id property in the instance to 0.0 and then calls the setId method of the
33718447		This method is a JUnit test case method that calls the testGetTitle() method of the Event_StubImpl class and prints the method name.

This method tests the getTitle() method of the Event_StubImpl class
33718448		is a unit test for the getCity method in the Postcode class.

**TEST-NEW** testGetCity:**
This method executes the methods that call the testGetCity, getCity, testGetAddress:**
33718450		is a test method that tests the setTitle method of the Event_StubImpl class by setting the title to an empty string and returns false.
This method is a test method that tests the getTitle method of the Event_Stub
33718454		tests the setDescription() method of the Event_StubImpl class by setting a description to an empty string and expecting a RuntimeException to be raised.

This method prints the test name "testSetDescription" to the console.

33718455		This is a test method that tests the getClassId method of the Event_StubImpl class.

This method is used to test the getClassId method of the Event class.

This method is used to test the get
33718456		This method tests the getState() method of the TestPartitionerTest class by comparing the expected and actual results for the partitions and fieldStates.

This method creates a series of test cases for testing the getState() method of the
33718458		This test method sets the class ID of an Event_StubImpl instance to a non-existing integer value.

This test method prints "setClassId" to the console, sets the class ID of an Event_StubImpl
33718459		This method tests the functionality of getZip() method in the ZIPFilter class, specifically testing for the accuracy of the "getZIP" method.
This method sets the zip base (the value inherited from the superclass).
This
33718462		tests the getLocationId method of the Event_StubImpl class with a valid integer value for the location ID.

This method simulates the call to the Test_4M_ServiceGPServiceImplTest class.

33718465		This private method creates an instance of the Event_StubImpl class and calls its setLocationId() method.
SUMMARY
This method is used to set the location ID of an event stub.


33718466		tests the getPhone method of the EmployeeBean class by asserting that the correct phone number is returned when the getPhone method is called.
This method uses the EmployeeBean to add a new member with the specified details to the specified database
33718467		This method tests the getGroupId method of the Event_StubImpl class by creating instances with different test cases, adding an event to the DB, and asserting that the ID of the event is 0.

This method tests the get
33718471		This method tests setting the group identifier of an Event_StubImpl instance. It sets the group identifier to 0 and fails.
SUMMARY
This method is used to set the group identifier of an Event_StubImpl instance
33718473		is a test case that checks the getCreatorId method of the Event class's Event_StubImpl class.

This method tests the testGetEventID method of the Event class by calling it.

This method tests the
33718474		This method is a test method that tests the getCell method of the DenseDiskMatrix4F class. It creates a DenseDiskMatrix4F object, calls the testGetCell method on the object, and checks that the result matches
33718476		tests the 'setCreatorId' method of the 'Event_StubImpl' class by setting the 'creatorId' attribute to 0 and calling the 'testSetCreatorId()' method with that value.

This method
33718479		is a test case for the "testGetWarningMessage" method, which prints "testGetWarningMessage" and then generates a test case that prints "testGetWarningMessage" with an empty string as the test parameter.
SUMM
33718481		This is a test method that compares the 'getEmail' method of the 'Nanny' class to an 'String' input to ensure they are equal. It prints "testGetEmail" and then calls the 'testGetEmail` method
33718482		is a test case for the setWarningMessage method of the Event_StubImpl class. It creates an instance of Event_StubImpl and calls its setWarningMessage method with an empty string as an argument. It sets the warningMessage
33718487		This is a unit test method that prints "testGetPassword" to the console, and then executes the "resetPassword" method with an empty string as an argument. It checks if the "resetPassword" method returns the expected value.

33718490		is a test case that checks the setStartTime method of the Event_StubImpl class when given a null startTime parameter. It prints an error message and fails if no valid StartTime is given, catching a ClassCastException.

33718492		This method calls the testSetStartTime method of the Event class and then checks if the expected result matches the actual result returned by the method.

This method calls the testGetStartTime method of the Event class and then tests the get
33718493		is a test method for the setStatus() method in the Status class. It uses assertEquals to ensure that the assertEquals method returns two independent status strings after setting the status method and asserting that the assertEquals method returns an empty
33718496		tests the setEndTime() method of the Event_StubImpl class by setting the end time to an empty string and then calls the testSetEndTime() method to test the functionality of the setEndTime() method.

This
33718499		This method tests the getEndTime() method of the Event class by creating an Event_StubImpl object and checking that the end time is an empty string.
This method tests the nullString getEndTime() method of the Event class
33718500		This method retrieves the validation string from the "Validation" class and prints it to the console.
This method tests the getValidation() method of the "Validation" class by adding validations to the record and verifying that the
33718504		tests the getStartDate() method of the Event_StubImpl class.
This method tests that the getStartDate() method of the EventImpl class returns an empty string if the parameter is null.
This method tests that the java
33718507		This method tests the data set's getRegDate method by setting the expected date and calling the method with null as the parameter.

This method tests the getRegDate method. It sets the expected date and calling the method with Integer.
33718509		This method tests the setStartDate() method of the Event class by creating the test objects (TestEvent_StubImpl) and calling the setStartDate method.
SUMMARY
This method is used to test the setStart
33718511		This method tests the getEndDate method of the Event_StubImpl class.
SUMMARY
This method is used to verify the correct functionality of the getEndDate method for the Event_StubImpl class.


33718513		This is a test method that runs an instance of the DateProperty class.
This method runs method testGetLastVisit().
This method tests the getLastVisit() method of the DateProperty class.
This method tests the getLastVisit
33718514		is a test test method that sets the end date of an Event_StubImpl instance.
This method handles a test for setting the end date of an Event object.
This method adds an Event object to the collection.
This method
33718554		is a test method that calls the login method of the instance object, and prints the username and password inputs to the console, which is empty.

This method creates a null user exception and prints an empty stack trace to the console, which
33718801		checks if a given integer is in a list of groups and returns a boolean value.

This method checks if there is a group with the specified group ID or all groups in the list.
SUMMARY
This method is used
33718804		retrieves the name of an affiliation group for a given affiliation ID.
SUMMARY
This method is used to obtain a name for an affiliation group based on the specified ID.


33718805		retrieves the group_id associated with a given group name from the automap. If the group list is null, it is returned. Otherwise, it iterates over the automap's group list and calls the GetAutismGroupId
33719024		searches for an event by title, city, and state for a given user ID and returns a result set containing the results.

This method handles exceptions and retrieves data related to events.

This method returns a list of
33719106		This method tests the `getEmail` method of the `Email_DBImpl` class by setting the 'testGetEmail' method to null, calling `getEmail` on the object, and asserting that the result is empty.
33719107		is a test method that sets the email property of an Email_DBImpl object to an empty string and fails the test case.
This method sets up a test fixture for the Email_DBImpl class.
This method
33719109		This method is a test method that calls the getAllEmail method of the Email_DBImpl class to retrieve all email addresses from the database.
This method is a test method that calls the testSetAllEmail method of Email_
33719112		This method is a test method that calls the "testGetUpComingEventList" method of the "Email_DBImpl" class. It asserts that the expected and actual results of the "getUpComingEventList" method are
33719113		This method tests the getEvents_value method of the Email_DBImpl class by asserting that all expected string values are returned.
This method tests the getEvents_flag method of the Email_DBImpl class by asserting
33719114		This is a test method that sets the evtID field of the Email_DBImpl class to an empty string.
This method sets up the test environment by creating a new instance of the Email_DBImpl class and
33719115		is a test case for the getChkEvtID method of Email_DBImpl class. It prints "getChkEvtID" to the console, initializes variables, connects to the database using a JDBC API
33719117		This method prints the string "testSetChkEvtID" and then calls the testSetChkEvtID method of the Email_DBImpl class to set the chkEvtID to an empty string.

33719118		This method is a JUnit test method that tests the getEvtIDs method of the Email_DBImpl class. It creates an instance of the class and asserts that the integer values returned by getEvtIDs() are equal to
33719119		This is a series of test methods that set and get events and test the functionality of the Email_DBImpl class.
SUMMARY
This method is used to test the consistency of the setEvtIDs method in the
33719127		This method tests the contains method of the MysterGroupController class by calling it multiple times with different input strings.
This method initializes the controller with the given test model, data model, and configuration set.
This method tests the contains method
33719130		This method is a test method for the GetAutismGroupId method of thesisArchitecture class. It creates two instances of the class calledsisArchitecture and calls getAutismGroupId() on them.
It asserts that
33719132		This method tests whether the method GetAutismGroupList returns a TreeSet of all the autism groups in a single group.
This method tests whether the method GetAutismGroupList will produce a unique group that matches a given string.
33719137		is a test case that sets the group ID to 0 in theisolated file.
This method is the main test method of a Java application, making sure the group ID is set correctly in the database.
This method sets the group ID
33719139		is a test case that tests the functionality of the SetGroupName method with various input parameters and asserts that the resulting string is "Group01".
This method is a test case that asserts that a string input does not contain a hyphen and
33719142		This test method sets the group description of anometric group instance in the GUI test case.
This test method prints the text "SetGroupDescription" and then calls the setGroupDescription method on the instance.
This test method initialises a
33719144		This void method calls the testSetGroupValidate method of theouchgroup class and passes.
SUMMARY
This method is used to provide a test case for setting the group validation status of anOTHERgroup.


33719145		This method tests the functionality of the 'SetGroupStatus' method by creating a string of attributes, invoking the 'execute()' method on an instance of the class, and asserting that the returned status matches the expected value.
This method tests
33719148		This method sets the group creator of theFlickrGroup object to 0.
This method tests the SetGroupCreator method in theFlickrGroup class.
This method tests the SetGroupCreator method in theFlickrGroup object of the class Group
33719154		tests the "SetGroupMemberList" method of the "GroupMemberList" class by creating a new "GroupMemberList" instance and setting the list variable.

This method tests the "setGroupMemberList" method of the "
33719156		This is a test method that constructs a string representation of theshowspan element of a web page.  It prints a message to the console and concatenates multiple character strings into one. It then sets a temporary variable.
SUMM
33719159		This method tests the setGroupEventList method of thepureGroup class by passing a null TreeSet to testGetGroupEventList, a Model instance, a SetGroupEventList instance, and a String to testSetGroupEventList.

33719160		is a test case that calls the testRemoveEvent method of the Event class.

This method is a test method that checks the removeEvent method of the Event class.

This method is a test method that sets the timeout of 123
33719161		tests the "GetGroupId" method of the "VicAccount" class by setting an ID of 0 to indicate that it is null and then attempting to get the ID of that ID and fails if it should fail.

This method
33719163		This method tests the functionality of the GetGroupName method in thecontrolledPeerGroup class. It adds a test case to test the functionality of the GetGroupName method.

This method prints the "TestGetGroupName" function.
33719164		tests the GetGroupDescription method of the SCMigratooltool class by asserting that the expected group description equals the actual group description.
This method outputs a message to the standard error stream and logs a message indicating the test case start.
33719165		is a test method that calls the testSearchEvent method of the Event_DBImpl class and prints an error message to the console.

This method calls the testSearchEvent method of the Event_DBImpl class and
33719168		is a test method that tests the AddGroupsDTM method of theocial groupDTM class. It prints "TestGetGroupValidate" and null checks.

This method sets the message received from a GUI test user. It
33719170		tests the functionality of the GetGroupStatus method in thedalcManager class.
This method tests the AddUndefineGroup method in thedalcManager class.
This method tests the AddUndefineDefineGroup method in the
33719172		is a unit test that shows the 'GetGroupCreator' test case and calls the 'SetCreator' method with different arguments.

This method overrides the 'testGetGroupCreator' method. It calls the 'Set
33719173		is the test method that calls the "testConvertDate" method from the "Event_DBImpl" class, passing in an empty string as a parameter.

It prints "convertDateTest: Started" and prints
33719174		This method creates an instance of theWikisAdminModule class and calls the AddGroupAdmin method to create an instance of theipediagmodule.
This method performs various tests on the GetGroupAdminList method created using the specified test data
33719175		This method runs tests for the `GetGroupMemberList` method of the `Automovel` class. It prints "testGetGroupMemberList" and then asserts that the `GetGroupMemberList` method is empty.
SUM
33719178		is a test method that calls the "testGetGroupMessageList" method of the "AutopaddingGroupTest" class and prints "GetGroupMessageList" to the console.

This method is a test method that calls the "
33719179		This method is a test case that initialises various data structures and calls the GetGroupEventList method to obtain a set of events for aBrain. Additionally, it checks if the expected and actual results are equal, as expected, and produce an
33719180		This method creates an instance of the Event_DBImpl class and attempts to convert a date object using the convertGregorianDate method.
This method invokes the testCalculateDate method of the Event_DBImpl
33719187		tests the event list size of the Event_DBImpl class.

This method tests the size of the LinkedList.

This method tests the events list size of the LinkedList.

This method tests the
33719194		is a test case for the setTempEvent method in the Event class. It sets the temporary event for the instance.
This method is a test method for the setTempEvent method in the Event class, sets the temporary event for the instance
33719199		This method prints the string "testNumberOfEvents" and then calls the testNumberOfEvents method of the Event_DBImpl class.
SUMMARY
This method is used to initialize an instance of the Event_D
33719206		prints "testFocusOnEvent" to the console and calls the focusOnEvent method of the instance.

This method fails the test case with the message "Keypad <Enter> <GOTO> [a type]. TEST OVERLOAD
33719220		tests the getId() method of the Event_DBImpl class by calling it and checking if the result is equal to 0.
This method initializes variables for test methods and calls the superclass's `testGetId()`
33719225		This method adds test cases to the test cases variable, initializes each test, and defines test methods for the setId() and testSetId() methods.
SUMMARY
This method is used to create an instance of the Event
33719231		is a test case for the `testGetTitle` method with the `TestSetUp` class for testing the getTitle() method.

This method is a test case for the `testGetTitle` method with the `TestSet
33719236		tests the setTitle method of the EventType_TEST class by setting the title property of the given Event_DBImpl instance to an empty string and then calling the testGetText method of the caseTest object.

This
33719243		This method sets up a test for getting the start date.
This method tests the calculateStartDate() method of the Event_DBImpl class.
This method tests the getDate() method of the Event_DBImpl
33719248		This method tests the setStartDate method of the Event_DBImpl class by setting an empty string as the start date and asserting that the test passes.
SUMMARY
This method is used to set the start date to
33719254		This method is a test method that checks the getEndDate method of the Event class. It sets up a test case with an expected and actual end date, and then runs the test.

This method is a test method that checks the
33719259		is a test case for the setEndDate method of the Event class. It adds three assertions to the test set, which set the end date for the test.
This method is a test case for the getEndDate method of the Event
33719265		This method is a test method that tests the method getStartTime() of the Event class. It also is used to set up expected results in methods that add, replace, or remove events to schedule events.

This method is a test
33719271		is a test case that calls the testSetStartTime method of the Event_DBImpl class and creates a new instance of the class with the startTime set to an empty string.

This method testSetStartTime method of
33719277		This method tests the getEndTime method of the Event class by passing in an empty string and expects it to fail.
SUMMARY
This method is used to test the getEndTime method of the Event class by passing an empty
33719285		is a test case for the updateProfile() method. It sets the test variable to false and prints "updateProfile" to the console.
It then calls the testUpdateProfile() method with the same name as the test case, and prints
33719292		This method tests the set end time.
This method tests the setEndTime method by setting the end time to an empty string and asserting their string representation, as expected.
SUMMARY
This method is used to set the end
33719296		This is a test case method that tests the creation of a profile for an instance of SystemClient_DBImpl. It executes the createProfile method on the instance and asserts that the boolean result is true.

This method is a
33719299		is a test case prototype that tests the getDescription() method of the Event class.
This method runs a test.
This method tests the getDescription() method of the Event class.
This method tests the getDescription() method of the
33719303		This private method tests the getErrorMessage() method of the SystemClient DBImpl class. It creates an instance of the class with a null error message, then invokes the testGetErrorMessage() method with a null error message while
33719307		This method initializes the test case by calling the superclass's tearDown method, setting the test name to "Test" and deleting a file named "TestEPICS-generated.tex".

This method generates an ECICS-data
33719314		tests the getClassId method of the Event_DBImpl class.
This method tests the getPackage method of the Event class.
This method tests the getEndTime method of the Event class.
This method tests the get
33719321		is a test case that initializes an instance of the Event_DBImpl class with a null classId and throws a RuntimeException.

This method initializes an instance of the Event_DBImpl class with a null
33719327		is a test case that sets the filename to an empty string and then calls the setFname method of a SystemClient_DBImpl instance to set the filename.

This method is a test case that calls the setFname
33719329		This method is a test case for the testGetLocationId() method of the Event_DBImpl class, it prints "testGetLocationId" and checks if the returned value is equal to 0, a negative integer is returned when
33719333		is a test case that creates a new instance of an object of type SystemClient_DBImpl and asserts that its getFname() method returns an empty string.

This method is a test case that verifies the functionality of
33719335		tests the "setLocationId" method of the "Event_DBImpl" class. It creates a new instance of "Event_DBImpl" and calls the "testSetLocationId" method, passing in null as
33719340		is a test case for the setLname() method that sets the name of the System Client DBImpl instance to an empty string.
SUMMARY
This method is used to set the name of the System Client DBI
33719348		tests the getLname() method of the SystemClient_DBImpl class using various input strings and expected output from the test cases.

This method prints "testgetLname" to the console before calling the testGetL
33719354		is a test case for the setAddr1 method of the SystemClientDBImpl class. It sets the address of the system to an empty string and prints "setAddr1" and fails.
SUMMARY

33719357		This method on a test case for the getCreatorId method of the Event_DBImpl class, which verifies the getCreatorId() method of the DBImpl class.
This method on a test case for
33719360		tests the getAddr1 method of the SystemClient_DBImpl class by initializing a null string and asserting that the "getAddr1" method of the class returns an empty string.

This method calls the test
33719365		This is a method that requires a JUnit test to run.
This method sets the value of the field to the specified integer.
This method prints the current values of the fields in a HashMap in a formatted way.
This method
33719368		This method tests the setAddr2 method of the SystemClient_DBImpl class by setting a string value and asserting that the returned value is an empty string.
SUMMARY
This method is used to set the add
33719375		This method creates an instance of the Event_DBImpl class and passes it as an argument to the methods getWarningMessage.
SUMMARY
This method is used to test that the getWarningMessage method of the Event_
33719382		tests the getAddr2 method of the SystemClient_DBImpl class by asserting that the expected and actual results are equal.

This method creates a new instance of the SystemClient_DBImpl class, sets various
33719389		This is a test method that tests the setWarningMessage method of the Event_DBImpl class by setting a warning message to an empty string and calling the setWarningMessage method.
SUMMARY
This method is used to
33719394		is a test case that calls the setCity method of the SystemClient_DBImpl object with an empty string as a parameter.

This method prints the string "testSetCity" to the console.

This method sets
33719408		This test method checks if the getCity method of the SystemClient_DBImpl class returns an empty string when called with the "DELETE" key.

This method checks if the getCity method of another SystemClient_
33719424		This test method validates that setting the state of a SystemClient_DBImpl instance results in an empty string indicating the failure to set the state.

This test method tests the setState method of the SystemClient_Misc
33719438		This is a JUnit test method that tests the setNewId method of the Event_DBImpl class.
SUMMARY
This method is used to call the methods testSetNewId and testSetNewId, leaving
33719445		tests the `testGetState()` method of the `SystemClient_DBImpl` class. It prints "testGetState()" to the console, initializes two objects and calls the `testSetState()` method on
33719458		tests the setEventById method of the Event_DBImpl class by setting the event's ID to 0.

This method sets the second Event_DBImpl instance of the model to undefined.

This method executes
33719459		is a test case for the getZip() method of the SystemClient_DBImpl class and prints "testGetZip" to the console.

This method prints "getZip" to the console using the SystemClient_D
33719466		tests the setZip method of the SystemClient_DBImpl class. It sets the zip for the instance and expects the method to throw a NullPointerException.
This method calls the setZip method of the instance.
This
33719471		This method is a test case for the getPhone method of the SystemClient_DBImpl class, by creating a new SystemClient_DBImpl instance, setting the maximum and minimum phone number of 7, setting the phone number
33719479		is a test case that sets the phone number on the SystemClient_DBImpl instance to an empty string.

This method is a private test method that creates a new instance of the SystemClient_DBImpl class.
33719482		This is the test method for the testGetAllEvents method of the Event_DBImpl class, which tests the getAllEvents method.

This method fails the test.

This method initializes the instance number, user
33719485		is used to test getting the cell in a SystemClient_DBImpl instance. 
This method adds a string to the database. 
This method ends the test case.
SUMMARY
This method is used to
33719490		This is a JUnit test method that tests the setCell() method of the SystemClientDBImpl class. It sets the cell to an empty string.
SUMMARY
This method is used to test the setCell()
33719495		is a test case that verifies that the getLocation method of the Event_DBImpl class returns null when called on a null location array.

This method is a test case that verifies whether the getLocation method of the
33719500		This method sets the location of the event_DBImpl object to the specified Location_DBImpl object, then calls the testSetLocation method from the Event_DBImpl class.
SUMMARY
This
33719508		is a setup method that sets up a test schema by adding schema support dependencies.

This method tests the setPassword method of the SystemClient class by setting an empty password and the setPassword method in Derby to set incorrect passwords.


33719513		This method tests the addComment method of the Event_DBImpl class with mock data.
This method tests the addComment method of the EventDBImpl class with mock data.
This method tests the addComment method of
33719514		tests the setPassword method of SystemClient_DBImpl class by providing a random password and verifying that the password is set correctly.
SUMMARY
This method is used to test the getPassword method of SystemClient_D
33719520		This method tests the getFontComponent method of the SystemClientDBImpl class by comparing the returned font color string to an expected font color string.

This method tests the getFontComponent method of the SystemClientDBImpl
33719527		tests if the font color of an instance of the SystemClient_DBImpl class is set to "FONT.RED".

This method is an event listener that responds to property changes. It checks if the new font color has
33719535		is a test function that calls the testGetStatus method of the SystemClient_DBImpl class, and uses a testEnd method to test with different statuses, including an empty status, a status of 0, and a status of
33719544		This method sets the status of the SystemClient class.
SUMMARY
This method is used to set the status of the SystemClient class.


33719551		This method prints "testGetValidation" and is a test method that calls the getValidation() method of the SystemClient_DBImpl class.

This method prints "testGetValidation" and is a test method
33719558		This method is used to test the setValidation method of the SystemClient_DBImpl class, ensuring that the validation field has a non-empty string.
This method is a test case that requires an empty string as the password
33719564		This test method initializes various variables, executes tests using the SystemClient_DBImpl algorithm, and prints and asserts that the expected result matches the actual result. 
This method tests the getRegDate method by invoking it, and
33719573		is a test case that sets the RegDate property to null and prints "setRegDate" to the console.
SUMMARY
This method is used to set the RegDate property to null and print "setRegDate" to
33719580		tests the getLastVisit method of the SystemClient_DBImpl class.
This method tests the setLastVisit method of the MathClient_DBImpl class.
This method tests the 'SetLastVisit' method of
33719593		This method tests the setLastVisit method of the SystemClient_DBImpl class. It creates a new instance of the class and sets the last visit date to null, then calls the setLastVisit method and prints "setLastVisit
33719598		This method tests the getDob method by setting up predefined strings and getting the DOB from a database client.
SUMMARY
This method is used to generate a test case for the getDob method.


33719602		is a test case that asserts whether the setDob method in the SystemClient_DBImpl class correctly sets the 'dob' property of an instance of the 'SystemClient_DBImpl' class, with an empty
33719607		is a test method that creates an instance of the SystemClient_DBImpl class and calls the testGetClassification method to retrieve the classification value from the instance.

This method creates an instance of the SystemClient_DBI
33719612		tests the getClassification method of the SystemClient_DBImpl class by passing null values as a parameter to the necessary test methods.

This method is similar to the currently setClassification method for the SystemClient_DBI
33719617		tests the getGroupList method of the SystemClient_DBImpl class by printing the name of the test, instantiating a new instance of the ClassifyingClient class, getting a list of all groups, and printing the gid of
33719619		is a test case for the addUser() method of the SystemClient_DBImpl class. It prints "addUser" and calls the addUser() method of the instance.
SUMMARY
This method is used to
33719622		is a test method that calls the 'testUpdateUser' method of the 'SystemClient_DBImpl' class. It prints "updateUser" and calls the 'call` method of the 'SystemClient_DBImpl
33719625		tests the login functionality of the SystemClient_DBImpl class by setting the email and password variables to empty strings and calling the login method on the instance.

This method creates a user, sets their username and password, and creates
33719640		is a test case that calls the "testGetEvent" method of the "SystemClient_DBImpl" class. It creates an instance of the "Event_DBImpl" class and calls the "testGetEvent"
33719662		This method is the main method of the class, and it creates an instance of the TestCalculateUser createInstance().
SUMMARY
This method is used to test the setEvent method of the SystemClient_DBIm
33719676		This method tests the "getMyEvents" method of the "SystemClient_DBImpl" class by setting the expected result to "test" and asserting that the result is not null.

This method initializes the "my
33719692		This method is used to test the functionality of the `getMyUpcomingEvents` method in `SystemClient_DBImpl`. It prints "getMyUpcomingEvents" to the console and then calls the `testGetMyUp
33719704		This test method creates a new `UserEvent` object, adds the `userID` argument to it, executes the `removeMyEvent` method on the `umd`, and checks if the userID is the old userID. 
33719712		This method reads a TestObject.
This method tests the getAttendingEvents method of the SystemClient_DBImpl class and checks that the expected and actual results match.
This method tests the setEventStatus method of the System
33719729		This method adds test cases to test the getAttendedEvents method of the SystemClient_DBImpl class.
This method adds test cases to test the getAttendedEvents method of the Singleton class.
This method adds test
33719744		This method executes a test case generated by testGetAreaEvents command, and it then retrieves an Area/Image entity.
This method calls another method named testGetAreaEvents with the arguments 0 and the result of calling currentMethod.

33719768		tests the functionality of the checkCalender method in the SystemClient_DBImpl class. It passes 0 as an argument and expects an InvalidAlgorithmParameterException to be thrown.

This method calls the testCheckCalender method
33719836		tests the addEventToCalendar method by initializing variables and invokes the method.
This method tests the addEventToCalendar method by initializing variables and invoking the method.
This method tests the addEventToCalendar method
33719856		This is a JUnit test method that tests the getWelcomeMsg() method of the SystemClient_DBImpl class.
This method is a JUnit test method that tests the compareTo() method of the SystemClient_DBI
33719869		is a test case instance with a testName of "testSetWelcomeMsg" and a test description of "setWorld!".
It creates an instance of the SystemClient_DBImpl class and then calls the testSetWelcomeMsg
33719885		tests the getErrmsg method of the SystemClient_DBImpl class.
This method prints "testGetErrmsg" and prints the name of the test case to the console.
SUMMARY
This method
33719898		is a test method that calls the testSetErrmsg method of the SystemClient_DBImpl class from the testRunProxy class.

This method is a test method that calls the setErrmsg method of the System
33719910		is a test method that calls the `removeEventFromCalendar` method on the instance of the class `SystemClient_DBImpl`. The method is invoked in a test case with size 0 and the total number of events removed to
33753270		registers two job descriptions (x and y) into the job description map, assigning them a unique ID and checking if they are already in the map, before assigning a new descriptor while creating one if necessary.
SUMMARY
This
33753272		registers a parameter by adding it to a map of job parameters. If the map contains the same key, the method throws an error. If the map does not contain the same key, the method returns.
SUMMARY
This
33778124		starts the server by configuring the server, capturing the MservConfig, and initializing the filter chain. It also opens a connection to a specified host URL and starts the server if it's online. If the server is offline, it
33778130		shuts down the communication process by shutting down the connection pool, stopping any running connections, and unbinding any associated handlers.

This method closes the connection to the pool.

This method removes clients from the manager and fires a
33778148		parses a data packet into a ByteBuffer object. It first initializes variables and parses the payload header. It then creates the necessary tags if needed. It translates the payload into text, handling various transfer-related conditions. It handles
33793328		This method tests if the getEntityManager method in the FornecedorDAO class returns the expected entity manager instance.
This method tests if the getEntityManager method in the FornecedorDAO class returns the expected entity manager
33793338		This method tests the getFornecedor method of the FornecedorDAO class.
SUMMARY
This method is used to test the getFornecedor method of the FornecedorDAO class.
33793341		tests the functionality of deleting a fornecedor, including all the related records associated with thatFORNEEDORID.
This method validates that only one validation error is reported; if it does not pass validation, it throws the appropriate
33993830		This method overrides the superclass method and returns a list of property descriptor objects for the given object.

This method adds an HTML property descriptor for the source of an image widget.

This method adds an HTML property descriptor for the
33993840		adds a property descriptor for the link URL of the given object.

This method adds a property descriptor for the link widget ID of the given object.
SUMMARY
This method is used to add a property descriptor for the
33993856		adds a marginBottom property descriptor for the object.
This method iterates through all the property descriptors for the object and if they contain the specified property, it returns the property descriptor for that property.
SUMMARY
This
33993860		adds an icon property descriptor to an object.
This method adds the text property descriptor, tooltip property descriptor, and icon property descriptor to an object.
This method adds the width property descriptor, tooltip property descriptor, and icon property descriptor to
33993865		overrides the default behavior of the getPropertyDescriptors method and adds additional property descriptors to the list. It then calls the superclass method to get the default method and adds additional property descriptors for the rows.
SUM
33993868		adds a list of property descriptors to the list for the specified object.

This method adds a property descriptor for the number of columns property to the list.

This method adds a property descriptor for the columns property to the list
33993869		adds a property descriptor for the margin top feature of the group widget.

This method overrides the default method, adds a property descriptor for the margin top to the list of property descriptors.

This method adds a property descriptor
33993881		adds a property descriptor for the margin left attribute of the Table group widget.

This method overrides the default behavior before adding an item property descriptor to the list of item property descriptors.

This method adds a base property descriptor
33993892		adds a property descriptor for the margin right of a group widget to the list of property descriptors for the specified object.

This method checks if the given object is an instance of IItemPropertyDescriptor and if so, returns
33993901		adds a closable property descriptor to the list of property descriptors associated with the provided object.

This method overrides the default implementation of getPropertyDescriptors() and adds standard property descriptors for different properties.

This
33993902		This method overrides the `getPropertyDescriptors` method of the parent class and adds custom property descriptors for the title, footer, margin height, margin width, and margin padding.

This method overrides the `get
33993904		adds the maximizable property descriptor to the list of property descriptors for the given object.

This method adds the title property descriptor to the list of property descriptors for the given object.

This method adds the superwindow properties
33993906		adds a property descriptor for the collapsible feature of a portal layout group.

This method overrides the default implementation of the getPropertyDescriptors method and adds custom property descriptors for the object.
SUMMARY

33993916		adds a margin width property descriptor to the item property descriptors.

This method adds a margin color property descriptor to the item property descriptors.

This method adds an empty property descriptor to the item property descriptors.


33993926		adds a page size property descriptor to the list of property descriptors for the given object.

This method overrides the superclass's implementation of `getPropertyDescriptors` and adds custom property descriptors for all of the properties
33993929		This method adds a mold property descriptor to the list of property descriptors for an object.

This method returns a list of property descriptors for the given object.

This method adds a border property descriptor to the list of property descript
33993930		adds a property descriptor for the "multiSelection" feature of the TableWidget class to the list of property descriptors.

This method creates and returns the list of property descriptors for the provided object.

This method adds
33993938		adds an item property descriptor to the list of property descriptors for a given object.
This method adds a color property descriptor to the list of property descriptors for a given object.
This method adds a long name property descriptor to the
33993942		adds a property descriptor for the field ID of a table column to a list of property descriptors.

This method overrides the default behavior of adding a property descriptor for the table column's ID.
SUMMARY
This
33993945		adds a property descriptor for the display type of a table column.

This method also adds a property descriptor for the display type of the cell editor.
SUMMARY
This method is used to add a property descriptor for the
33993950		adds a property descriptor to the itemPropertyDescriptors list based on the data provided.

This method adds a sort property descriptor to the itemPropertyDescriptors list based on the package, reference dataset, and sort associated with the
33993959		adds a property descriptor for the refPath feature to the list of property descriptors for the specified object, with the specified ID.

This method overrides the default behavior of the `getPropertyDescriptors` method and initializes
33993971		adds a property descriptor for the splittable feature of a BorderLayoutGroup.

This method overrides the default behavior to add a property descriptor for the splittable feature of an object.
SUMMARY
This method
33993979		adds a property descriptor for "orientation" to an item property descriptor list. This method also adds a property descriptor for "enabled", "visible", and "fixed" to the item property descriptor list.

This method overrides the
33993983		This method returns a list of property descriptors for the given object, including descriptors for size, minimum, maximum, preferred, and minimum state bounds. It checks if the property descriptors have been initialized, and if not, it initializes
33994010		adds a property descriptor for the selected index of the TabsWidget object.

This method returns a list of properties that are used to define the tab order of the UiNavigator component.

This method adds a property descriptor
33994017		adds the columns property descriptor to the list of item property descriptors.

This method suppresses a "unchecked" warning.

This method provides a list of IItemPropertyDescriptors for the given object.


33994080		adds the service ID property descriptor to the list of property descriptors for the given object.
This method adds a property descriptor for the service ID property to the list of property descriptors for the given object.
SUMMARY

33994191		adds a property descriptor for the code table of a widget object

This method first checks if the itemPropertyDescriptors field is null. If it is, it calls the superclass's method to get the property descriptors and then
33994232		adds a layout backgroup property descriptor to the list of property descriptors for a given object.

This method calls the superclass implementation of the method to get the property descriptors for the given object.

This method adds a
33998075		checks for updates based on user-specified command-line arguments and sets the output marker accordingly.

This method checks for empty arguments, performs garbage collection, and executes accordingly.

This method processes a command-line argument containing various check
33998742		retrieves the system color used for a given SWT ID, and if the color is not found, it throws an IllegalArgumentException.
It checks if the color matches the normal color.
It first checks if the system color
34090221		sets the sort option for the column order of the sort list.

This method gets the selected values from the sort list and sets them in the two combo boxes.

This method sets the sort option for the column order of the sort
34091073		loads various plugins, such as TLD and Ant.

This method initialises the class with the given parameters.

This method loads the findbugs plugin.

This method initialises the class with the given parameters.


34091898		adds a policy database entry with the obligation object that triggered the method that calls it with the current parameter value of the method.

This method adds parameter deletes operations to the obligation database entry.

This method adds the parameter deletion
34092076		This method parses an Option object from a reader, setting the appropriate options for use by the OptionParser.
SUMMARY
This method is used to parse an Option object from a reader.


34092770		This method compares two BugCollection objects by comparing their source lines.
This method compares two SourceLineAnnotations objects by comparing their annotations.
This method compares two SourceLineAnnotations objects by comparing their source lines.
SUMMARY
34093280		retrieves a method descriptor associated with the given name from the method descriptor map. If the descriptor does not exist, it is created and added to the map before retrieving it.
SUMMARY
This method is used to retrieve a
34093480		takes a class name and returns the URL of the class that is the most suitable resource to use for the given class. The method first checks if the class loader is an instance of URLClassLoader, it returns null if either of these are
34093651		writes a map of filters to a properties file, optimizing the properties tree using a loop to iterate over the filters and removing obsolete keys from the properties file.

This method iterates over the filters in the properties and takes each filter
34095118		checks if the type of instruction handle is primitive. If it is, it returns true. If it is not, it returns false.

This method checks if the instruction handle corresponds to the given class. It handles an INVOKEV
34095728		returns all unique nodes with dominators in a basic block. It first gets the dominator of the block, then loops through the dominators to find those that are all dominators predefined but not the first block. If the findDef
34095900		pushes data onto the stack so that reading the stack can store the number of variables, field types, constant values, call to unsigned integer floating point values in the stack frame, long, double, and hexadecimal floating-point values
34096032		handles loading instructions from the control flow graph to record the instruction flow value.

This method handles load instructions by invoking the handleLoad instruction with the given object and a flag indicating whether the instruction was already in the top of the stack.
34096224		checks if the method invoked has a non-null return value. If it does, it checks if the method's flags contain a semicolon and the method's signature. If this is a method, it checks if the prefix is "("
34096522		configures the analysis context based on the maximum value for the "dataflow" configuration. If a "knob" configuration isn't specified, it sets it to default. For each property in the "knob" list, it checks for
34096815		deletes an obligation from the state iterator with a specific basic block ID and updates its state map.

This method deletes an obligation from the state iterator.
SUMMARY
This method is used to delete an obligation from the
34096854		adds a missing class vertex to the graph for the interface edge graph, with the specified visited nodes and successors.

This method generates a class node by traversing the subtree of the source object, creating each vertex with information about the
34097194		adds multiple warning instances to a summary of a bug collection in Java.

This method tests the add, remove, and removeBugs method of bug collection. It adds issues, additions, and bugs to a summary of a bug collection
34097293		adds a class to the package statistics with the appropriate package name, source file, number of source files, and type.

This method adds a class to the package statistics with the appropriate package name, source file, line number, type
34097300		determines if an edge requires an exception edge, adjusting the last instruction if necessary. If an edge is also a Throw Edge, it performs an exception transfer based on the exception.

This method iterates through the input of an Op
34097638		creates an instance of the class, enters the doEnd method, loads the classpath for analysis cache, creates an `ClassFactory` object and sets the bugReporter's class loader to the ClassFactory.property. It then iterates
34099744		adds a source line annotation to a deprecated instruction class, by creating a source file and using the source method. It then processes an instruction handles and an end method.

This method adds a source line to a deprecated instruction class.

34100059		creates an instance of an instance of a workflow process object using a factory method to create the workflow process. It sets the path for a specific bean class, loads the workflow definition, creates the workflow process, and creates an instance of the process
34105239		saves an element by checking if already existing entries have a unique string, then, it converts the value to the appropriate string based on a length, by removing any last digit. It then creates a key-value pair, and finally updates the
34105249		generates unique paragraphs for properties, including the definition, beginning andEnd positions, length, and width, in order to prevent altering the length of paragraphs, and set the global values for the properties.

This method ensures that all paragraph references
34231561		updates the progress of the simulation based on the progress and the remaining time taken to generate the simulation. If the maximum value has changed, it handles the case where the simulation is canceled and returns.

This method retrieves the current value
34231569		creates a graphical user interface (GUI) that includes a tabbed pane that allows the user to export the game using Java's ImageJ.
This method is called on the main loop of a Java application, it updates an original model and
34231586		removes a FlowPacket from the packet queue and updates the size of the bytes of the server.

This method, getPacketQueue, retrieves and removes a FlowPacket from the queue. It asserts that the packet is
34231739		prints the end tag of all the flow elements in a private list.

This method prints the flows contained in a protected list to the console.
SUMMARY
This method is used to print all flows in a public list to
34302383		initializes access rules by parsing all allowed roles and permissions from the provided persistence mappings.

This method compiles the given rules using the provided class.
SUMMARY
This method is used to initialize access rules by parsing allowed
34302699		appends a condition to a where clause for a JPQL subquery given a JPQLWith, JpqlWith extra condition, JPQL condition.

This method filters a subquery based on a filter clause or where clause, storing
34302708		takes a Path, an Alias and a JpqlPathNode as input and prepends the path to the pathNode by prepending its name to the Alias if it is not empty, otherwise prepends the Alias with the
34302753		This method creates an In object from a comma-separated list of tokens, adding a new line and setting the original sequence with the tokens as the sequence in that In object.

This method creates an In object from a comma-separ
34302766		creates a JPQL SELECT clause to select terms based on a provided path.

This method creates an expression pattern by processing a selected path and a JpqlSelectExpression object.

This method sets the expression start and applies
34303829		checks if a member is a single valued relationship property by examining various types of annotations such as EmbeddedId, Embedded, ManyToOne, and OneToOne.

This method retrieves the annotation property for a specified member, specifically
34313187		appends a string to a buffer, first checking to ensure the string has sufficient capacity and handling special cases like null values, null values that start and end with null. 

This method appends a character array to a buffer.

34313537		returns the current line as a string by reading the next line from a file using a RandomAccessFile. If the line is null, it returns null. Otherwise, it splits the line into a list of strings and adds each string to the
34313555		loads a list of BeanInfo objects from a Java bean object by walking up the BeanInfo hierarchy and associating them with a JavaBean object.

This method loads the Java mapped methods that create a new bean from a given bean class
34313635		adds a word to a dictionary, first checking for duplicates, then checks for duplicates in the dictionary.
This method returns the index of it in the dictionary.
This method returns either the value of the dictionary, a frequency or
34313640		formats and prints the statistics for a dictionary, including the total words and the sum of all words entered.

This method, parse`, parses command-line arguments, and prints help options, it includes options for setting common and printing
34413596		retrieves the list model for the specified desktop, either from the current desktop or the default desktop based on whether the current desktop is the default desktop.

This method returns a list model for the given desktop, either from the specified list
34413723		opens a new container window, prompts the user to input a name. If the name is blank, it sets a new name for the import window. If the name is not blank, it is opened or allowed to be changed to the new name
34413730		is used to initialize the context menu for a tabbox and set it as an initial click listener.
This method adds a context menu listener to a tabbox context listener.
SUMMARY
This method is used to add a context
34413764		checks if the import file matches the given container ID, sets the cancel flag to false, and returns if the import file does not match." It disables the import file checkbox and shows an error message if it does not. It sets the
34413795		resizes a tabbox within the root tabpanels. If the height parameter is not specified, it maps the height to a new value and resizes all of the views. If the height is not specified, it resizes the tabs within
34413807		closes all tabs in the primary TabMap, de-registers the View, and disposes of all Panels in the secondary Tab Map.

This method serializes to a file using a File object. It sets the data to
34413808		initializes the data model and sets up the listener for the source model.

This method sets up the source model as a new instance of DataModel. 
This method registers a data model with the data model.
SUMM
34413818		creates a new view based on a given header title and view.

This method calls onCreate method.

This method calls getCitiesFromHeader method in the getTitles method of the new model and creates one if it
34413832		calculates the sum of the distances between the copy and current operations. It outputs a progress bar along with the total distance and total distance. If the copy is greater than 100, it sets the copy value to 1. If it is greater
34413902		opens a tree item at the specified object id if it has not been opened before, recursively or walks upwards.

This method recursively visits the parent node of the object to open down to the object by invoking the openTo
34413905		closes a grid filter editor, handling filter changes and updating the editor window accordingly.

This method sets the grid mode and number of columns.

This method resets the filter at the grid mode to their default values.


34413992		checks if the server has already has a connection and prompts a message box to execute the user if not. If that message box is not needed and prompting the user to use the connection ID to store the object. It then checks if the server is
34414017		adds a new group to the available groups map based on the provided object parameter, replacing the object with the same object if the parameters change.

- This method checks if the current group is empty before adding a new one, and if
34414140		navigates to the next stage in the stage list, changing the status bar image and enabling/disabling buttons based on the current stage.

This method iterates through the stages in the stage list and changes the stage with the current
34414169		updates input of a date checkbox and also updates a log list box after the date change.

This method handles button click events for a form, responding to button clicks on the form for modifying log data, selecting a Log file,
34414172		gets a lock for a specified locker. If the locker is equal to the system, the method returns a locked result. Otherwise, the method throws an exception indicating that the locker cannot be locked and the object is locked.

This method loc
34414204		This method opens an integer file, loads a list of file objects, and starts an upload process. It adds a finished button to the upload process and updates the message text accordingly if the play.time is greater than 1, indicating that the next
34414259		updates the object information in the UI after changing it to displayed name and values, using a thread to configure the UI thread for monitoring and updating the graphical user interface.
SUMMARY
This method is used to create and execute a
34414390		edits a property's type (element, type, or value) in a profile. It starts editing the property, sets the start and end positions of the edit, and waits for the editing process to complete.

This method sets the
34414401		edits an icon value for a given source, ID, and new icon path. It will modify the object's icon path and delete the file if the new icon path is valid, or delete the file otherwise.

This method saves the
34414407		deletes a property name from an object, edits its value, and initiates modification.
This method sends a modell event indicating that the property name has been changed, updates the existing property with the updated value, removes the old property from
34414411		renames a property with a new name to a specified path within a user's container path.
This method updates properties for a container with the specified name.
SUMMARY
This method is used to update properties for a container with
34414416		removes a property from the container. It sets the update state, removes any headers, and fires a property change event.

This method takes two arguments: the name of the property, the other two arguments: the name of the property
34414417		edits the given value with the specified name and path for a specified user.
This method deletes all properties of a given user and recreates the properties of all other users in the system.
This method prompts the user to confirm
34414443		restores a specific object from a source object by extracting the object ID and user ID from specific properties and calling both methods to restore the object using those IDs.

This method restores a specific object from a source object by extracting the object ID
34414529		starts the parsing process by using the SAX parsing framework and throws an exception if there is an issue with the XML file.

This method attempts to start the parser. If an SQE exception occurs, it prints the stack trace,
34414800		creates a container with the specified container file name, container name, description (if any), type (if any), creator (if any), and client context (if any), returning the new editor.

This method returns the container with
34414811		removes a permission for a specific user from an XML file.

This method updates the permission tree representation of an XML file.

This method deletes a PropertyDomain object from the database.
SUMMARY
This method
34414921		adds a new TreeNode child at a specified index within another TreeNode.

This method enables menu items for insert, delete, and delete actions.

This method adds an element to the underlying model containing a specified string,
34415043		creates a new library container with the given user ID and container name, and adds it to the list of containers.

This method creates a new library container with the given source, target id, user ID, container name, and container
34415050		renames a container by setting its name, user id, and container edit, and then sends a container change event.
SUMMARY
This method is used to rename a container by setting its name and user ID.


34415130		sends a view event for adding to the list of child nodes or a child node, using the specified source, object ID, parent ID, user name, and date/time.
This method creates a new ViewEvent with the specified source
34415133		removes a lock to a given object or user, if the object is a literal, the user is not locked for that object.

This method clears the locked map of a given object.
SUMMARY
This method is
34415136		sends a view event with the specified object Ids, parent ID, user name, and date time as parameters, using the provided default message and includes additional error information for object types.

This method updates a view in the system based
34415142		sends a move event to a specified object with parameters for the object's ID, parent ID, user name, and date time.

This method processes the change status of a dragged object.

This method removes the event from a
34415149		sends a move event to a parent view with information about the specified source, object IDs, new parent ID, user's name, and date.

This method notifies observers that an addition of the file is being moved.


34415153		sends a delete event for the specified object ID and starting day for the deletion with the given date and time.

This method creates an object with the given ID, object ID, and user name in a view, then sends a delete
34415189		sends a new lock event that the source is a locking sensor, its UUID is created three times, and the event source receives a lock event.

This method checks if the token is the lock event, if so, it sends
34415237		modifies the attributes of an XML user with new SN and name, and adds a note for the new email.

This method uses the DocumentBuilder object to create a Document object, which is then initialized with the specified parameters.
S
34415307		removes a container entry with the specified section and container ID from a container. It starts a thread to perform the removal, waits for the thread to finish, and then disconnects.

This method takes commands as a first parameter and delegates
34415330		sends a container change event to the user view by creating a new ViewEvent object and invoking the sendContainerChangeEvent method with the new ViewEvent object.

This method sends a container change event to the user view by creating a new
34415643		adds multiple values to a column, iterating through an ArrayList of ModelObjects and adding each Object's property value to a row using the addValueToColumn method.

This method adds multiple values to a column, iterating
34415646		returns the base object's ID as a string. If the composite parent is null, it returns the ID of the parent's base object. Otherwise, it returns the object's ID as a string.
SUMMARY
This method
34415670		returns the ID of an object that may have been built by another model framework in a hierarchical structure. It checks if the model has the "build" field to "TRASH" or "clean" to determine if the model is a hierarchical
34417612		takes an object, x, y, width and height at a given position (x, y) and returns a string with the column titles for the given position and width.

This method takes an object, x, y, width
34425297		starts a timer that auto-updates the galaxy by a specified number of minutes as long as the timer is not null.

This method sets the game timer component and updates the status bar if the automatic update method is not enabled,
34425309		creates a new SOAP element for a login message and sets its attributes based on the input text and session attributes.
SUMMARY
This method is used to create a new SOAP element for a login message.


34425457		This method backups the current data source to the database after copying into, deleting, or creating it, optionally using a prefix.
This method creates a backup copy of data without copying it.
This method creates a backup copy of data.

34425470		returns the content of the file, or an empty string if there is no content.
This method returns an integer representing the index of the file at the specified index.
This method returns the size of the file in bytes.
This
34425491		erases the notes of the object by removing references to the instance, removing the notes from each station if the station is not null, or setting the text to an empty string if the station is null.
SUMMARY
This method
34425494		This method initializes the class instance by reading the metadata in the file line by line and creating an object factory for the class. It sets the class name, initializes the class instance variables, the read object in the file line by line,
34425533		restricts colors by removing HTML data, handling special conversions, storing the initial letters in a data set, and storing the letters in a list.

This method stores a game case by creating a new item, setting its name and description
34425541		finds the line matching a given number between two specified indices in a given source string.

This method tests for line inclusion within a given string.

This method tests for line with comments.

This method tests for line matching
34425578		sets the text of the element using the provided string in the text field.
This method sets the namespace for the element using the provided string in the namespace text field.
SUMMARY
This method is used to set the text of
34425598		retrieves a thumbnail of the image file associated with the given maximum value.

This method adds a new label with the provided value to the panel, with an image associated with the new value.

This method displays the image for
34425621		is responsible for handling the action when a component gains focus. It triggers the focus gained event and if the menu has menu items, it adds or removes menu items based on the component's state (hidden, unfrozen, empty, or focusG
34425641		adds a new folder to a mail account with a given name and owner.  This method checks for overwriting existing folders, searches folders owned by other users, and returns a list of changes made to the folder.

This method
34425645		copies all files in the list of files and directories to the specified target directory, including HTML, PNG files and JAR files.

This method copies files into a directory, by iterating through the files, copying each file using the
34425648		deletes a folder with the specified name if the user is authenticated. Otherwise, the method validates a username and password, and if validated, deletes the folder. It also notifies the server of any changes so that it is done and
34425649		handles changes to the selection state of a tree node, updating the tree's state and triggering appropriate actions based on the selected item's state.

This method focuses the selected node in a tab pane by invoking tree text editing and manipulation operations
34425652		writes a link to a document in HTML format, handling files and namespaces. If the file exists, it tries to search for child documents in the current folder, setting the current folder and returning a link to the subfolder. If the
34425690		adds a custom listener to the unhiding menu item that calls the unhideMenuItem() method when clicked.               

This method adds a new menu item to the
34425708		This method is used for providing metadata for cases where resources are being monitored, that are only used for one class it can accept, that only have one numeric class it accepts, that only have one inclusion, and that there is only one instance of
34425710		activates the helper, resetting certain object references.
This method resets all internal variables, including the lastUpdated attribute and the notes attribute.
This method prints information about an event, including the total number of events, the date,
34425716		performs an action when an event is triggered, which includes removing a submit button, creating a new note, creating a new user, setting submit parameter, doing an action to clear multiple user input and setting current users, saving a file, opening
34425730		sets the current text of the notes field to the given note, truncating it to a maximum length if necessary and comparing it to the maximum length of the notes field.
 This method takes a string as input and returns the first non-wh
34425756		creates a new name for the guard activity and initializes it.
This method adds an action listener to the name field and the description field, allowing only numeric values.
SUMMARY
This method is used to create a new
34425776		retrieves the resource name from the selected item in a list of resource names, which is used for displaying the resource's information.
This method is protected and it is called when the user receives an action event. It retrieves parameters from
34425806		assigns a resource to the GUI entry, sets localized labels for certain components, and retrieves a prepared resource from the resource_extractor_resource. If the resource does not exist, it sends a message to the user. It applies
34425872		deletes an entry from the list based on whether the removal is confirmed or not. It displays a confirmation dialog to confirm deletion and deletes the entry if confirmed.
SUMMARY
This method is used to confirm the deletion of an
34425874		updates the list of resource and resources classes based on notification status.

This method can not be executed, it first calls the superclass's method to get the status of the property change support.
SUMMARY
This method
34425932		creates and returns a JButton with the action clear button disabled, which calls the actionClearAndReset() method when clicked.
This method creates and returns a JButton with the action clear button disabled, which calls the actionClearAnd
34425957		triggers the table's mouse action, which can be a popup trigger, a drag-and-drop operation and a drag-and-drop operation, or using the action method with the second mouse pressed around the drag-and-drop
34425964		selects a row in a table, updates the viewer if needed, and calls a method to show it.

This method calls a selected rows from a list viewer, checks if the list is updated update, refreshes the table and re
34425993		updates the reminder time limit based on user input from the checkboxes and stores the new value in a variable.
This method checks if the reminder time limit is modified and adds it to the app preferences if it is.
SUMM
34426071		filters the values in an array, sets the isWorking flag to true, and updates the text fields with the results of the statistics.

This method calls `filterValues` with a `Weights` object as the argument.

34426090		validates and validates user input for the "name" field, displaying a list of available fields and checking for validity. If validation fails, it displays an error message.
This method validates and validates user input for the "first
34426102		populates several display components based on the resource class of a resource.

This method calculates and displays the statistics of an object for the specified user and resource.

This method calculates and displays the stats of an object, including any statistics
34426120		returns a JMenu object with eight JMenuItem objects for importing harvesters and owners from files.

This method overrides the default method on the default actionPerformed method of the superclass and creates a new JMenu object
34426147		creates the bottom panel of the GUI, including a bottom panel for both arrowheads, text fields for filtering by type, condition to select condition type, and select method based on user input and whether to add an assigned statement type or clear a
34426156		creates a clear button for the filter form.
This method adds action listeners to a clear button for the filter window.
SUMMARY
This method is used to display a "Clear" button for the filter form when clicked.
34426195		creates and returns a vertical Box to display a top panel with components for the harvester config and warning options panels.

This method returns the top panel of the BorderLayout, which contains a panel for managing component inheritance and configuration options
34426220		This method writes a label and text field to a SWGFile object, appending data to the text field, and updating the notes field.

This method updates the notes field based on the selected notes in the notes box.


34426248		adds a new resource to the inventory. It creates a new SWGInventoryWrapper object, sets the names from the available guard list, and opens it. If selectedGuard is not null, the inventory is added to the list.
34426284		adds filter fields forStat filters, including the number of turns and the name and description of each stats set as input.

This method initializes the filter fields used in the GUI.

This method sets the search filter using the
34426327		adds a "Add to Inventory..." menu item to the specified JPopupMenu with a series of MenuItemItems for each item in the selected list.

This method adds an "Add Inventory>" menu item to the specified JPop
34426334		adds a limit menu to the popup that contains options for writing the maximum number of days across all options.
This method adds the limit menu to the popup that contains options for setting the maximum number of days to zero for all options.

34426341		removes trailing slash, dots, and ':', and removes any ':' or ':' character from the input string.

This method handles double angle whitespace short commands, such as "\"-", "&", "
34426344		adds a menu item to a popup menu with the label "Commit", and three actions: OPEN, PUT, and RUN. It sets the font of the menu to 11px.
This method appends a string to the given
34426370		writes notes to the text component, using SWGNotes to store the file name and notes to backup the notes when reading from a text file.
SUMMARY
This method is used to create a new text file containing the notes
34426432		This private void focusTheSubPanels method calls the focusGained method on the specified actionListener object with the specified boolean argument.
This private void focusTheSubPanels method calls the focusGained method on the specified actionListener object
34426473		adds a new node to the tree view and sets it as the current node. When the tree is first selected and expanded, it removes the node from its parent and adds its notes object. The method then sets the current path of the tree
34426486		resizes a column of a JTable component with the specified modifier (modifier) to ensure its proper placement and preferred size.

This method is an event listener for an action performed on a component (request), and it is called when
34426496		takes a SWGTreeNode as an argument and sets the focus node to the non-existing node.

This method handles changes to a tabbed pane, firing a tab changed event for the component.

This method sets the
34426534		clears the filter GUI and sets the function to running on all if-else status.

This method fires a filter action when the menu item SelectAll.

This method fires a filter action when the menu item Cut.


34426588		creates a JPanel containing a metrics view and a date period panel containing a metrics button. The border of the panel is aligned with the top and the container in the center position is centered. 


34426706		handles user selection events of multiple types for three different GUI components (okButton, albumSelect, okButton) and updates the UI accordingly. In this case, it handles pre-select events from the albumSelect component, sets the current album
34426714		handles the selection of an item in a list of SWGTrk objects, updating the associated list and enabling UI operations based on the selected item.

This method handles release events (keys, button presses) during swt-related
34426725		This method lazily initializes listeners for the components and adds them to the current BorderLayout. This method first lazily creates a new Builder, creates a new JEditorPane, sets dynamic properties and adds it to the current BorderLayout.
34426727		sets the enabled property of two GUI components and either turns on or disables the GUI accordingly based on the value of the enable parameter.
SUMMARY
This method is used to enable or disable GUI components depending on the value of the
34426730		creates a popup menu for the user interface, allowing the user to customize image resizing and save properties.

This method opens a popup window with specified properties, such as width, height, minimum and maximum sizes, and an initial image
34426756		creates and returns a JPanel that contains the image canvas.

This method initializes the components and sets the color and layout of the window.

This method adds a JLabel to a JPanel and adds two JPanels
34426762		scans a SWGSetup object for mismatches between `setup` and `set`, and if at least one `SWGSetup` is found. It scans the manager for the mailboxes and for `SWGProvides`'s
34426770		sets the HTML for an HTML editor using the specified URL name or URL.

This method restores a SWGEditor to the original path when the CVS look at is applied.

This method redraws the main page after the
34426784		populates a popup dialog with various icon pop-up menus related to albums. Additionally, it handles mouse clicks and clicks on dialogs based on name and type.

This method creates a popup menu with several popup menu options.
S
34426828		checks for the existence of a directory and creates it if it does not exist. It gathers folders within the directory and creates files from them. This method creates a file dialog and allow the user to select a directory to hold the contents. It adds
34426844		creates and returns a JMenu object for adding folders. It creates the menu item for adding folders, and adds an action listener to it.
SUMMARY
This method is used to create a JMenuItem for adding a folder
34426855		removes a specified JMenuItem, clears a list of edit menu menus, and disables the edit menu if the menu menu is empty.

- This method removes the MenuItem, including it from the menu, and disables it
34426871		creates and returns a rename folder menu item.

This method initializes the JMenuItem for the rename folder.
SUMMARY
This method is used to create a menu item for renaming a folder.


34426921		creates a row of a JPanel where each row contains a JLabel, a JScrollPane, and three buttons. It also adds another row to a JPanel.

This method creates a JScrollPane and adds it
34426926		creates and returns a JMenu with the text "Mail" and an AddMenuItem that, when clicked, calls the mailMove() method.
This method is overridden to provide an ActionListener for updates within the class.
S
34426938		creates a menu for the preferences menu of the SWGAide application. If the menu already exists, a new menu is created with the title "Preferences" and the menu bar, otherwise a new menu is created that has the ability to
34426939		creates a menu item in the preferences menu with the text "Mail Editor" and adds a separator to it. It then adds the menu items to the group of menu items, which are appending "Settings" and "Delete" for
34426962		determines how colors areHarvested and returns null if both the inventory amount and the resource is null or equal to 0.
This method initializes player colors based on the SWGKnownResource's class and returns a color.

34426966		displays a context menu at the location of a mouse click on the drop role button. If the click is not a right-click and the drop type is assignee, it then checks which button was clicked and if it was it, starts
34426975		initializes the SWG universe for a given file, it tries to initialize the SWG universe with the specified file path, and if successful, it also invokes the "j3dUserName" and "j3dRoom" objects
34426984		returns localized output for a given SWGAnglishable object. It attempts to convert the object to a string. If the object can't be converted, it returns an empty string. However, if the small resource's inventory is not sub
34426986		adds a list selection listener to the assigneeCombo field.

This method creates a popup menu and adds an ActionListener to it.

This method sets the assignedees field to the selected assignments entry.

This method
34426992		creates a bottom row of the form with a row and three components: the user name label, the password label, and the remember password checkbox. The rows are then configured with their respective labels and the south way component. The content pane
34427053		adds an action listener to a save menu item. When the save menu item is clicked, it exports a file, retrieves selected items, and saves them to a file with the given tooltip. If no items were selected, it refreshes
34427057		This method saves the file as an add listener to the specified menu item.
SUMMARY
This method is used to add an action listener to a menu item.


34427069		displays an exception message dialog with a specified title and message.

**process() method:**
This method processes the error message if an error occurs.

**processNotesFileButtonActionPerformed() method.
SUM
34427071		This method creates a new JMenu object for accessing the find schema menu. It adds three Items to the menu: the "Clear" menu item, the "Find" menu item, and the "FindSchem" menu item.


34427080		creates or refreshes the "Reshow" menu option. It adds a separator and the option to show the "Resource of Offers" option when called.
SUMMARY
This method is used to create a menu item
34427129		This method writes an SWGNotes object to a file with a given filename.
This method deletes a SWGNotes object from a file with a given filename.
SUMMARY
This method is used to run a write operation
34427194		selects a schematic from the desktop and updates the GUI if the schematic is not already done. If the schematic is already selected and the GUI is waiting to select the schematic and go is true and the toolbox content is not null.


34427201		handles mouse events and checks the button clicked and calls appropriate methods based on the button clicked.
This method handles system mouse clicks on buttons.
This method handles mouse clicks on components.
This method handles mouse clicks on buttons.
This
34427235		writes resource description, notes file, and resources to an SWG log. 

This method creates an empty SWGResource object with an empty folder and a resource file name that ends with ".icons" if the resource file doesn't
34427257		populates the list of depleted resources in a resource set and updates the displayed data when there are no collected resources.

This method updates a labeled list model with the list of collected resources instead of an unchecked exception.
SUMMARY
34427273		clears the list model, gets new resources, and populates it with new entries based on current entries.
This method creates a new list model and adds items to it based on the current entries, adding them to the new list model as
34427293		This private method sets the statlessResources field to the set of statlessResources and iterates over the keys of the map to populate the statlessList.
SUMMARY
This method is used to populate the statlessList by
34427310		populates the unreported planet list in the UI, adding the build file and unreported planets to the list before doing so.
- This method builds the existing planets by updating the list model, populating them, and updating the list model
34427338		creates and returns a menu item for writing the list of resource classes to a file. It also listens for the event of the "Add Item" menu item. When the menu item is clicked, it adds an item to the list box.
34427347		is responsible for removing a user association unless the current user is not the top user, or if the association is already existing, in which case it only executes the same code, the user is added to the main GUI, updates assignments, and changes
34427352		handles mouse-pressing events, and if the left button was clicked, it retrieves the index of the item, gets the index of the first item that has been double-clicked, and sets the left index to the top index
34427355		handles mouse events in JListEditComp and updates the tree component when there is a selected item.

This method calls the actionSchematicList method when the right mouse button is clicked.
SUMMARY
This method is
34427356		adds a selected schematic to the SWGSchematicManager. It verifies that there is a selected schematic, gets the Assignee object associated with the schematic assignment, and calls the addSales method to add the sales to the Alask
34427363		sends a new resource with a new value in a specified resource manager, and returns the response status.

This method stores a wrapper object to the properties file, calling the storageAndUpdate method on the wrapper object.
SUMM
34427396		creates a custom dialog box for the password functionality. If the user wants to save, it displays an abstract syntax check dialog for the password, prompting the user for confirmation before exiting the dialog. If the user attempting to save, the method ignores
34427404		creates the components required for the schematic-weight model to arrange them. It considers any associated schematic attributes, including normal attributes such as labels, borders, and dimensions. The method also sets the layout, ensuring it is at least the maximum number
34427413		This method displays the filters options for a profile. It filters the profiles by displaying priority, priority, and importance levels. It also displays a list of the filtering and expansion levels for each filter. If all filters are applied, it updates the GUI
34427418		removes an existing assignment from a school objective by updating the user interface and invoking other other methods to manipulate them.
SUMMARY
This method is used to remove an assignment from a school objective.


34427424		takes a MouseEvent as input and performs actions based on the input type: undoing, marking notes, reading, and modifying the schematic's notes.

This method asks for input for a string and performs the corresponding action.


34427440		updates the GUI components by iterating through a list of wrappers and updating the GUI elements with the results of calling updateEWAR() on each one.
SUMMARY
This method is used to update GUI elements with the results
34427443		updates the color and opacity attributes of a color object based on its input, including color, size, color mode, and transparency.

This method updates the colorAndClip.
This method identifies and handles mouse click events.

34427507		is a protected static that takes in a JTable, an Object val, and a row and column, and returns the string "<A href='javascript:next()' onclick='return show('Next')'>myValue</A>".
34427606		performs an assignment to weights and sums the results. It evaluates the sum, weighted sum, and mean sum calculations, checks if a valid sum is provided and throws an error if it is not. It then converts the result to an array of
34427649		returns the index of the first occurrence of a specified resource in the specified dataset.

This method returns an integer specifying the element at the specified index.

This method tests the null case, readFromStream method, null case,
34427686		reports the usage of a SWGResourceClass statistics by checking if they are valid and valid and either adding or re-distributes the stat to an array.
This method validates an input using a SWGResourceStats object, checking if
34427715		adds an SWGCategory to the list of categories and assigns it the id.

This method adds the given category to the list of categories associated with the call.

This method adds an item to the list of categories associated with
34427725		takes a SWGSchematic as an argument and displays various details of the school, including: course, description, begin date, end date, gender, age, and whether the school is draft.

This method displays thedraft details
34427729		checks if a condition is met by examining its type and values.

This method checks if a pattern of expressions contains the specified substring, and returns true if it does and false otherwise.

This method checks if a pattern of expressions
34427737		returns a subset of the resource set that matches the input argument.
This method overrides the compute method and checks if the set's list intersection with the results. If there are none, it returns a false or true result.
This
34427755		returns a copy of the SWGShell object, excluding any existing resources with a higher version than the specified one, in order to exclude any files within any subfolders.
SUMMARY
This method is used to filter resources
34427792		writes entries without checking for property definitions and handles exceptions by closing the ZText ZTextReader.
This method exports the given list of strings to storage using the writeExc method.
SUMMARY
This method is used to write
34427817		closes a dialog window with a specified color and sets it to invisible. It first ensures that only one dialog window for the selected color exists at a time. If the user confirms, it moves the dialog up one spot in a way. The
34427827		shows a modal dialog with a string color chooser, default text color, and full background color. It handles auto-coloring, creating a new panel, setting its layout, and adding various components, including labels, text fields, and
34427851		sends a SOAP message with a title, message and body. It logs debug information and throws an exception if an error occurs.

This method establishes a connection to the specified URL in a new thread. It attempts to establish a connection
34428343		returns a JMenu object with the text "File" and a single JMenuItem added to it, each representing a file action.

This method adds an About JMenuItem with the text "About Text".

This method
34428682		retrieves a JLabel component with specific characteristics such as a titled border and aligned background, font size, and color. It sets bounds, text, alignment, and alignment for the label.

This method calls the makeLabel() method
34428701		This method returns a singleton JPanel object with multiple components set as left-to-right layouts. The method is called to create a horizontal split pane and a right panel as its bottom-to-left. The method then calls two additional
3449527		sets the form to be an instance of ForwardMapping with the action parameter generated from the getUsername method and the form's form instance to be initialized with the role form.

This method populates the form from the form object and
3449549		sets form attributes for a specified user action form, including the username, email, username, company name, locale, preferred language, maximum language, and a list of principals. It sets the application scope based on the request's context map.

3449554		sets a form to be displayed after displaying report group data.

This method processes the form submission, stores the report group if form is validated, and sets up the action mapping.

This method processes the form submission. It creates record
3449627		sets the transport configuration form to an ActionForm if the field "transportConfigForm" is not null.

This method sets the form to be displayed in the "transport" method, otherwise it sets it to edit mode.

3449629		unactivates session information from the form, including removing session listeners and calling session handling to handle transport types associated with the form.

This method retrieves a list of all transport types associated with the session.

This method removes sessions
3449641		returns a list of years, each representing the year, with the first four existing years.

This method returns the year of the session.

This method returns the list of sessions.
SUMMARY
This method is
3449663		sets the staff advance for the specified staff member and adds them to the form.

This method populates the staff advance form with staff advance details and creates a staff advance object.

This method sets the staff advance for the specified staff
3449712		sets the activity time form for an actor session. It adds the actor window, key information, and all time slots to a form. It also sets the timestamp form for the form. Additionally, it sets the instances form for the actor form.
3449756		sets the session and presents a list of assignment assignments for a given instructor.

This method initializes the assignment form for a given instructor.

This method adds the assignment form to the employee form.

This method allows the user
3449950		checks if two objects are equal by comparing their class names. 

This method compares two objects for equality by comparing their properties. 

This method compares two objects for equality by comparing their values. 

This method compares two
34504928		handles events based on the mode set to OK, such as CMD, EX, or Hint. It handles different types of events, including STOP, EX_MAP_END, CLINE, ACTIVE, ATLEUATE,
34505074		matches a bracket in a document. If the matching was successful, it retrieves the editor ID and component ID. If the editor pane is available, it uses a command to match the editor ID.

This method adds the component ID
34518063		returns the HTTP server configuration associated with the poll job. If the configuration is not found, it tries to obtain the configuration settings. If the URL is not found, it gets the authorization URL and displays the author's information. If there is
3456415		is the unit test for the `testLogin` method. It creates a `SimpleSessionManager` object with a `SessionManager` and various properties, then calls the `login` method on the `SessionManager`. The method then checks how
3456455		tests the functionality of the getElementText() method in the XmlHashtableMappings class by setting a namespace, setting a document, and then asserting that the XML text for a test case and xml file contains the expected text.


3456678		evaluates a binary operator expression, substituting a specified substring with 2 for each of its non-negative signs, and handles invalid operators. It detects negative signs, valid signs, and optional negative signs against a series of term, term and
3456779		appends a source code representation of a mobile model to a StringBuffer based on the msql type.
This method appends a source code representation of a mobile model to a StringBuffer.
This method appends a source code representation of
3456950		takes parameters, attempts to make an activity in a service, and returns a resource usage if successful.

This method checks that the current user is logged in.
It then retrieves the reserve and set of reserved people.
It
3457090		opens a socket connection, logs the server process received, and starts processing for new server connections.

This method creates a new ServerSocket object.
SUMMARY
This method logs the server process received on a port and adds it
3457127		initializes the command with the specified code and arguments.
This method initializes a parameter for the command with the specified name.
This method sets the value of the parameter for the command with the specified name.
This method waits for the
3457130		adds parameters to a class by validating the name of the class and adding parameters, names of arguments, and values to the class using a Hashtable.

This method populates a class with the parameters provided in a method call using
3457154		extracts the text content of an XML element related to a component within a component reference. It iterates over a list of child elements and returns the first text node found.

This method retrieves the text content of an XML element
3457229		converts a list of members from a JGRP group, creates a View object with the list, and returns it.

This method converts a list of members from a JAD group, creates a View object with the list, and
34599421		sets the value of the sigmaX attribute to a new value provided as the parameter.
This method throws an exception if the dimension of the element is not 1.
This method sets the value of the sigmaX attribute to the new
34599424		sets the value of the system's sigmaY variable, but throws an exception if the provided value is not within the acceptable range. It checks if the value is within the acceptable range.

This method sets the value of the system's
34599426		sets the standardbugs value for use in the Z-Genauigkeit dimension, throwing exceptions if the input is invalid. It also checks for mismatches or missing values in the input.

This method sets the standardbugs value for
34599427		initializes the model by computing the B matrix from the system of equations defined by a given function, given a center point and a center point.

This method initializes the basis equations.

This method initializes the equations.

34599430		sets the X-Datumabfrage in the Rx dimension of aktuellen Summillerbelegung (Rx) for a specific X-Correlation automaton (rx).

This method sets the R
34599431		sets the sigma RT (top raster) for the PDB file without applying a gradient and throws an exception if the input is invalid.

This method sets the sigma RT of the PDB file.

This method checks
34599433		sets the value of the sigmaRz parameter to the specified double, but only if the value is within the range between 0 and 4.0.

This method, `setSigmaRz`, tests if the ParameterT
34604502		deletes a fax offer and its associated information from the database. If the confirm confirmation dialog is requested, it calls the Yes to terminate the program. After prompting, it calls the Cancel and Dont close the service and logging the cancellation.

34604973		deletes a service analysis algorithm from three databases, including sub-directories for Semantic Language aliases, searches for services from various LDAP drivers, deletes the service from four database tables, deletes any references to all entities other than this
34605059		saves a new pozaj do wev nie ma de tip aktualne weg wyby using binhe database queries, with the specified data, and if the post failed, it throws an exception.

This
34605079		takes a character array as input and replaces all occurrences of a lowercase letter with a hyphen, removing any hyphens.

This method capitalizes the string, trims it, and stores the modified string unchanged by removing punctuation
34605089		logs into a user with a login and password provided by the API endpoint. It verifies the credentials provided and if successful, authenticates the user, and returns a successful response. If there is an error logging in the user, it logs
34608966		is used to determine the order of analysis results based on the values they refer to in ascending or descending order specified in the argument array.

This method compares two objects and returns 1 if the first object is less than the second, 0 if
34608970		calculates a hash code for an object using the formula attribute of the SimpleVerbForm class.

This method handles setting values for various parameters according to the form's properties.

This method returns an object of type A based
34608986		sets the symbol to the provided string, throwing exceptions if the string is null or empty. It throws exceptions if the string is null or empty. It sets the message symbol to the provided symbol, a flag indicating that it is not null, and
34609006		returns the string representation of the object.

This method takes an object and returns a string representation of the object.

This method takes an array of objects and returns an array of strings containing the string representations of the object.

34609027		writes the symbol, names, descriptions, descriptions, and examples to a DataOutputStream.

This method writes a `DataOutputStream` to a given `DataInputStream`.

This method writes three strings to a data output
34609041		writes the ID, size, and list of the objects to an ObjectOutputStream.
SUMMARY
This method is used to write the ID, size, and list of objects to an ObjectOutputStream.


34609094		checks if a given set of grammatical properties has any of the specified set explicitly. If all grammatical properties or tags are present, it returns true. If not, it returns false.

This method returns a list of all the gram
34609120		retrieves a list of all stemmers specified by the given locale, but only if the locale is not null.

This method returns the stemmer for the specified language.

This method returns a default list of all stemmers
34609151		returns theMostAccurateStemmer object that is for the specified locale for the stemmer given as an argument.
This method returns the most accurate stemmer associated with a specified locale for the stemmer provided as an argument.

34609190		retrieves a list of all lemmizers given a specific locale from a dictionary.
This method returns a list of all lemmizers for the current language locale.
This method returns a list of all lemmizers for the current
34609211		retrieves the most accurate lemmatizer for the specified locale and throws a MorphologyException if it cannot be found.

This method returns the most accurate lemmatizer for the specified locale or throws a MorphologyException if
34609219		returns a `Lemmatizer` object that is the smallest lemmatizer for a specific locale.

This method suppresses unchecked warnings for GWT specific code.

This method retrieves the nearest `Lemmat
34609234		writes a string to an output stream using an XMLWriter object with the specified encoding and the tag set specified in the XMLConfig object's xmlConfigAttributes, even if the attribute isStreamable.

This method writes the specified XMLWriter
34609240		retrieves a list of all morphological analyzers associated with a given locale from the database.

This method executes a command using a remote service and returns a results object. It handles different scenarios based on the command parameter and processes a
34609290		is a test that asserts that the number of stemming words returned by the getStem method of Stemmer object with "TestStemmer" and "TestStemmer".

This method tests the getStem method of St
34609309		tests a JUnit test and checks that the getMark method correctly sets and retrieves the MarkString annotation.

This method prints "testGetMark" to the console and calls the getMark method on the GrammaticalPropertiesImpl instance
34609313		tests the `getForm` method in the `AnalysisResultImpl` class.
This method tests the `getForm` method in the `AnalysisResultImpl` class.
This method tests the `getForm` method

This method
34609324		takes a Locale object as input and returns a list of all generators for the specified locale. If the locale is null, it throws an exception.
SUMMARY
This method is used to retrieve all generators for the specified locale
34609342		returns an instance of the most accurate calculator for the given locale, or throws a GeneratorNotFoundException if the generator is not found.

This method returns the most accurate generator for the specified locale, ignoring the specified locale. If no
34609355		returns the fastest generator for the specified locale using the default generator. Otherwise, it throws an exception. 

This method retrieves a generatedWordFormGenerator from the fastestGenerators map, using the specified locale. If the
34609440		adds an object to the node, creating a new List object if the object does not already exist. It also adds or removes child nodes based on the type of the object. In case of an ArrayListException, it adds the object to
34609468		compacts the buffer to ensure it is at least the required number of bits.

This method increases the size of the buffer, then grows the specified number of elements if necessary to accommodate the new capacity.

This method resizes the
34609551		decodes a loop from a given CharBuffer and returns a CoderResult indicating whether the loop was finished successfully.

This method decodes a loop from a given CharBuffer and returns a CoderResult indicating whether the loop was finished successfully
34609554		encodes the character sequence into a ByteBuffer and returns the result.

This method filters out characters that are not in 'if', 'else' or 'if' special characters.

This method takes a CharBuffer and an Byte
34609612		copies a range of characters from a source buffer to a destination buffer, starting at the specified index, and resizing the buffer if necessary.
SUMMARY
This method is used to copy a range of characters from a source buffer
34609640		tests the `testNewEncoder()` method of `DynamicCharsetEncoder` by setting up a `CharsetEncoder`, registering a `CharsetEncoder` with its enabled and unactivated flags, creating
34609660		registers the charset and then uses the DynamicCharsetProvider to set the basic charset, clearing the quick check for the charset again, and then using the CharsetUtils to determine if the charset should be fast
34609666		unregisters the charset with the virtual machine.
This method initializes the charset based on the locale of the window if the Locale is not set to US.
SUMMARY
This method is used to uninstall the
34609812		reads an object from an input stream, normalizes its length and returns it as an array.

This method reads an object from an input stream, decompresses it, and returns an array of deserialized objects.

This method
34609827		checks if two objects are instances of MutableString, Strings, Strings, or CharSequence. It compares them based on their equality, data types, and strings.

This method checks if an object is equal to an instance
34610051		checks if a specified string starts with the given string, returning a boolean. If the prefix does not start with the given string, it returns false at the end. Otherwise, it iterates through the characters of the string and checks if there are
34610109		checks if the current string ends with the specified character suffix.
This method parses a byte array into an array of bytes.
This method returns a byte array representation of this object.
This method returns a byte array representation of this object
34610231		adds a string to a MutableString object, expanding the array if necessary.
This method inserts a character into the MutableString object.
This method handles the end of a list by adding items to the list and setting a flag
34610434		inserts a new string at the specified offset with a given byte, it checks if the length of the string array is greater than the specified limit and if so, inserts the string at the position where the specified byte can be inserted. If the
34835908		reads a character array, appends it to a string buffer, and then concatenates the values into a single string. If the string buffer ends with a newline, it appends it again.

This method reads characters into a
34835922		checks if two objects are equal based on their names and schemas before and after the comparison.
SUMMARY
This method is used to compare two objects for equality based on their name if one is not equal to the other.


34835933		ends the table by writing the necessary end XML tags and closing the table.

This method writes a table based on the method's name.

This method writes a table based on the method's name.

This method writes a
34835936		ends the export process by writing a closing XML file to the output stream and then flushing and closing the output stream.

This method writes the current directory to the file system. If the directory exists and is not a directory, it adds
34835992		returns a string containing the table structure with order by clauses for each column.

This method returns a string representation of the given `DbTable` object, including its schema, table name, primary key, table ID, and table string
34836052		retrieves the column name from a ResultSetMetaData object for the given column index. If the column label is empty or not set, it returns "" and removes it from the label. If the column label is not empty but not null
34836123		initializes a ColDesc object with the specified attributes from the Element object and adds it to the tableDesc object. The ColDesc and addColumn methods are used to create column columns for a given table descriptor. The method creates an EditableShape
34902879		reads an object from a stream and instantiates it using a default component using a preconfigured class.

This method creates an instance of a class using a factory, then returns the result of the instantiated object. 
This method
34967853		returns the element in the list starting at the specified index.
This method checks if the list is empty.
SUMMARY
This method is used to retrieve elements from the list starting at a specified index, ensuring it is not
34985241	  also invokes a loop that retrieves a tree selection from the tree viewer, stores a log file id for each selection, and attempts to select the corresponding path in the tree viewer. It handles events such as change in the order of the selections
34987704		checks if an ID exists in the PID file and logs on to the server if it doesn't.

This method starts a server on a specified port and a specified file path.

This method initializes a dispatcher on a specified port
35009603		retrieves a list of records from a file, optionally using a specified cache file and harvest option, and returns an iterator over these records in a RecordIterator object.

This method searches a file for similar records, returning an iterator over
3501107		is used to test various closed and open states of an input/output/fault connection. It checks if the connection is closed properly and closes the connection accordingly. It also checks for any exceptions thrown by them.
SUMMARY

3501441		logs a message indicating that a lock attempt with a given lock object fails.
This method checks if an object is found in the cache and calls the method in the object to aquire a lock if found.
This method updates the cache
3501450		logs that a method with a lock key has been acquired on a lock using the specified lock string.

This method provides the type of method for the program to call.

This method instantiates a thread context and starts it.
3501475		logs the release of a lock on a specified lock object, including its source class, method name, and lock object. It also sets the lock released flag to true if it was successful and logs a message indicating that the lock was released.
35033074		validates the data in a file by checking if it is of type PWS, validates thelength of the data, and throws an exception if the length is not within the valid range.

This method throws a DecryptionFailed
35059460		checks if a user can edit a puzzle filter, it checks if the current user is an administrator and user has the appropriate privileges.

This method returns a list of user information into a puzzle list filter object. If the user cannot be edited
35059622		adds a link to a group with the given name. It first checks if the group already exists, and if not, it adds the link. Otherwise, it attempts to create the link and adds it. If the group already exists, it
35059632		loads the current user's information by calling a service to refresh the user list and if successful, it updates the user info and notifies its observers.
SUMMARY
This method is used to load the current user's information only if
35059635		checks if a given rectangle is valid by verifying the overlap of existing and new areas.

This method removes a given IGeometry from a room, returning true if successful and throwing an exception if the room is not in the valid area.
35059642		loads the data from the database for a given puzzle information key and returns the first puzzle in the database or null if the key is not found.

This method loads the data from the database for a given puzzle information key and returns the first
35059643		modifies the "name" and "email" fields of a user, updates their information, and calls a callback function with the updated user information.

This method handles a request to modify the user information, validating request parameters, creating
35059663		creates a UserInfo object with a User object populated with user information such as the username, password, and other user information.

This method returns an instance of the UserInfo class.

This method checks if the user has any
35059666		loads history information for a session into the database.
This method returns the loaded history info for a session.
This method initiates the server with the specified hostname.
This method initiates the server with the specified pathname.

35059669		returns the room at the specified cell location after verifying if it's the closest presence to the entire room.
SUMMARY
This method is used to determine the room from a given cell location to a list of rooms.


35059739		selects a tab with the given title by clearing the existing selected tab, adding a "selected" style with the specified title to it, and updating the tab bar's selected status.

This method sets the height of the tab bar and
35059749		selects a row in the list by selecting the corresponding MailItem from the MailRow.

This method sets the selected row by setting its value to true and updating its style.
SUMMARY
This method is used to select
35059756		styles the selected row in a table and removes the row reference from the table.
SUMMARY
This method is used to turn off row annotations when modifying the table's table row.


35059757		deletes a puzzle from the puzzle list, confirms the deletion with the view if confirmed, and then deletes the puzzle at the specified index.

This method uses the 'deletePuzzle' method to prompt the user for confirmation before deleting
35060076		checks if the puzzle key is different from the current puzzle key and performs different actions accordingly, such as displaying details of the puzzle, preparing for the next puzzle, or refreshing the puzzle if necessary.
SUMMARY
This method is used
35060080		sets the tutorial puzzle key and refreshes the puzzle information.
SUMMARY
This method ensures the tutorial puzzle key is updated and sets the puzzle key if the value has changed.


35060082		reloads the puzzle information, sets the puzzle key, and refreshes the puzzle list accordingly, using the service to retrieve puzzle information.

This method sets the puzzle key and updates the puzzle info. It updates the puzzle and sends a success
35060253		creates a panel for displaying the current rating, including a label representing the current value, a value of zero with the maximum value, and a rating label with the current value.

This method creates a panel for displaying the current rating,
35060317		updates the history by checking the type of the argument and invoking `updateHistory` if the type is `HistoryMoveAddMove` and `moveCount`. If the argument is an instance of `HistoryMoveChangeTime`, it checks if the
35060345		connects to a bridge in the specified direction, checking for errors and registering it if necessary.

This method initializes a new bridge with the specified direction and mode.

This method connects to the specified bridge.

This method
35060368		attempts to add an island to the map and, if successfully created, a move is made to notify the island. If all valid tests pass, the method will become a valid location.

This method tests the move method. It
35060375		removes an Island object from the game, given its coordinates and an array of move lists.

This method updates the player's data and actions based on the changes in the player's position.

This method increments the player's
35060390		is used to load site information from the database using a connection lock provided by a ServiceCallback. It checks the result code and executes different actions based on the result code, such as saving, loading, or canceling an operation.

This
35060410		modifies the site information either within the request or not, and updates the callingParty and siteNode lists accordingly.
SUMMARY
This method is used to modify the site information in response to an asynchronous call to the SettingsService.
35060411		removes a bridge from the current position and updates the game display by ignoring case and undoing all affected units. It also repaints the bridge panel.

This method iterates through the moves of possible moves, testing the moves for both
35060421		sets up the puzzle view and update view accordingly, then sets the puzzle model to be the current puzzle state controller's puzzle model.

This method sets the puzzle controller to not be null.

This method sets the puzzle controller.

35060426		iterates through the islands and removes any bridge that was not too close from acontrolled island.
If the island is a container, it removes all locations where the other island is placed beyond that container's area. For the other island, it
35060474		creates a new SiteInfo object with appened information from site information fields. It checks if the apply is disabled and if so, asks the user to input a site name first. It then checks if an entry is valid and returns the site
35060528		sets the time, provided it is a non-negative integer.

This method sets the game state, provided it is a non-null value.

This method sets the time, provided it is a non-negative integer.

35060572		checks if a puzzle can be edited based on its last name and password, providing access rights or the visibility of permissions.

This method checks if a user'strial has permission to edit a puzzle.

This method validates the credentials
35060588		checks if a user can edit a tutorial by verifying the provided UserInfo and PuzzleInfo. If it's not authorized or the tutorial cannot be edited, it returns true. Otherwise, it returns false.

This method checks if a user's
35060620		parses the size string from the format following the formula: 
* String: 
* UnparseableX:  - Is the number parsed from the format. 
* UnparseableY:  - Is the number
35060665		adjusts the marker's location based on the given minimum and maximum values, adjusting the offset.

This method calculates the position of a marker within the given range and updates the marker's location.

This method calculates the offset of the
35060674		sets the value of a marker at a given X or negative value.

This method sets the value of an instrument for an instrument number, with the minimum and maximum values provided.
SUMMARY
This method is used to adjust
35060705		clears the states of the object, setting the gridSize to null if they are not null.
SUMMARY
This method is used to clear the coordinates and state arrays of the object.


35060838		creates a string widget within a given parent widget with an XML element name determined by the provided style string.

This method adds a widget to the parent widget or an existing one if none is provided.

This method creates a new
35060889		updates the highlight state based on the given axis and direction. It checks for updates to the cursor position, potentially removing highlighted cells and resetting highlighted coordinates to null. If the axes for the mouse cursor are up-to-down and opposite
35061399		leaves all active LocationInfo objects and handles an event that is rejected by the user. 
This method notifies the LocationInfo objects that this class is leaving or losing. 
This method checks if the LocationInfo objects were in any
35102281		returns the frame as a JContentPane.
This method initializes the frame by setting its size, layout, and border. It also sets the content pane to the JContentPane and adds the mouse listener to the mouse listener
35102286		returns the JPanel that contains the main content pane.

This method initializes the JPanel if it is null, by adding various components to it using the GridBagLayout.

This method returns the JPanel that contains
35102291		retrieves the JPanel object that contains all the other components of the window, including its main content.
SUMMARY
This method is used to retrieve the JButton object representing the "Clear Selection" menu item.


35102302		This method returns `jContentPane`.

This method creates and returns a `JPanel`.

This method creates and returns a `JScrollPane`.

This method creates and returns a `JTable`.

35102398		initializes a popup menu by setting its opacity to the opposite of its opacity and adding a listener to perform actions when a menu item is clicked or another listener is added to perform actions when a custom menu item is clicked.
SUMMARY
35102451		returns the JButton with the text "Suchen" and adds an action listener to it.
This method initializes and returns the JToolBar if it has been previously initialized.
This method initializes and returns a new J
35102490		closes the object by writing final boundary and closing the file if the file exists.

This method writes all the remaining data from the file to the output stream, followed by the boundary, and closes the stream when finished.

This
35102607		returns the JPanel named pAnzahlen if it has already been created, otherwise it creates a new JPanel with a FlowLayout and the add method, then adds two labels to the JPanel.
SUMMARY

35102703		returns the JTabbedPane object for the game page, creating it if it doesn't exist.
SUMMARY
This method is used to create a new JTabbedPane if it does not already exist.


35102710		This method prints the XML representation of a Java model to a file.
This method prints the XML representation of a Java model to a file.
SUMMARY
This method is used to print a model to a specified file.


35102761		returns the JPanel object that contains other components for displaying a message and information about the graphical user interface.

This method checks if the JPanel object "_bLAF" is null, catching any exceptions that may occur.


35102851		returns the JMenu object for the datei.
This method returns a new JMenu object called "Datei" if it does not exist.
This method adds various menu items to the file menu, including New, Open, Save
35102892		returns the JPanel that contains the main content of the application, including the toolbar and everything visible. It creates the main split pane if it's null and lays it out based on the height and width settings of its components. This method returns
35103154		returns a JPanel instance used in the application. If the panel does not already exist, it is created, initialized with a TitledBorder, a GridBagLayout, and specific layout constraints. The panel is then returned.
S
35103722		returns the JPanel object that contains details of the server.
This method creates and returns the JPanel object that contains thedetails of the server.
SUMMARY
This method is used to create and return the JPanel object
35103754		returns the PBildlisteBearbeitung and if it's null, it creates a new JPanel, sets its layout and titles, and adds the PBenutzer and BildlisteBearbeitung objects to it.
35103835		returns the JScrollPane object that contains objects for displaying details about a person's bank in the GUI.

This method initializes or retrieves the Bildlistener instance and returns it, if the instance is null, it
35153125		reads data from the specified stream and returns the status of the operation.

This method, `getErrorCode()`, retrieves an error code from the HTTP server response.

This method, `getResponse()`, retrieves a
35153146		takes a TreeNode as input and expands its path to expand all nodes in its parent or parent to represent a leaf node.

This method expands a TreeNode with the given name if the TreeNode is an instance of Contact
35153201		This method reads the header of a GIF file, skipping the GIF marker if the stack is corrupt or the width or height of the table is not correct.

This method reads the version of JPEG 1.4.0 and adds it to
35153218		reads a stack-style short integer, a 2-byte integer, gct flag flag, gct size, and bg index and reads the color table.
This method reads a block, a 2-byte integer, and an 2
35228335		parses an XML file using a reader, ID map, and SAXParser to create a SWRLModel data model. The method then creates and returns a model representing the SWRL model, using the initialized SwoopModelFactory and J
35228345		renders XML using a given reader and sets the root object to the expression tree.

This method initializes the app by reading the first body, the last body of the child list of the root object.

This method returns the
35228429		retrieves a valid setter method with the specified property name from a setter method object.
SUMMARY
This method is used to find a valid setter method with the specified property name.


35235931		checks if a given index is indexed in the XML format.
It checks if the XML contains six elements in the list: "Index" and "XML" and "Flex". If an element is an index and "Index", it
35239966		creates a backup of a module from a manifest file and sets up the progress monitor to track the progress of the deployment process. It retrieves the module ID and module name, creates a backup of the module using the module data, then attempts
35244949		removes all attributes from the current object.
This method sets attributes of the current object using data from the currently selected Element object.
This method sets the current object to the specified object.
This method disables the current object and removes
35244980		resizes the target image using an icon that is passed as an argument and dimensions.

This method componds the existing icons using add, resize, and remove icons. It then resizes the new icons using draw, synchronize, and
35245039		sets the employee sheet with an array of strings containing the employee's ID, name, phone number, and department, and assigns the sheet to the columnName.
This method throws an exception if a sheet type is incompatible with the sheet definition.
35245167		deletes a user from the database by executing an SQL query.
This method deletes a user, user group, and user information from the database.
This method deletes a user's information from the database, including the password.

35245225		retrieves the number of pages that should be displayed in the search window for a given search content.

This method, preProcess, reads request parameters into a Property object, including the Search content and password. It uses a Stateless
35245262		retrieves the number of results found for a given search content.

This method executes SQL queries to retrieve the number of results for a given search content and returns the result as an integer.

This method checks for errors in the
35245356		deletes a book from the database if it exists.
This method deletes a book from the database if it exists.
SUMMARY
This method is used to determine whether to delete a book based on its ISBN number, using
35245391		checks if the first two strings contain the same numbers.
SUMMARY
This method is used to determine if the first two strings contain the same numbers.


35245422		updates the "SelectedGroupBy" column of the data list with the given ID and sets the "OrderBy" field of the data list to the updated value. 

This method sets the "SelectedGroupBy" column
35245436		adds a book to the database if they have sufficient rights and the user is a system administrator. It also adds all the book details to the Database.

This method adds a book to the database if they have sufficient rights and the user
35245456		gets the total number of books in the database.
This method verifies that the database remains open and that a new connection is established.
This method loads data from a file, sets the database URI, saves the data, checks if the
35245486		deletes a copy book with the specified call number from the database. If the book does not exist, it does not exist.

This method deletes a copy book and its associated pages from the database.

This method removes a
35245500		takes the ISBN as a string, cleans it, and returns the number of pages in the book that the ISBN is in.

This method returns a copy of the number of pages in the book that the ISBN is in.
S
35245504		retrieves the number of copies to copy to books for the given ISBN. If no book is found, it returns 0.

This method returns the number of copies to copy to books for the given ISBN. It first checks if the
35245516		retrieves the number of copies of a particular book from a database.
This method establishes a connection to a database, then calls the `getNumberCopyBooks()` method on that connection.
This method verifies that the number of
35245518		deletes an employee from the database by calling their DbConnectStringAndDelete methods and returns a boolean value indicating whether the operation was successful.

This method uses stored procedures and inserts a new row into the table EmployeeMgmtV
35245521		returns the total number of copies in the book table for the current image. 
This method updates a copy book record in the database.
This method inserts a copy book record in the database.
This method copies a book record from
35245531		retrieves the number of pages from the Employee table given their name.

This method retrieves the employee ID from the Employee table.

This method retrieves employee's name from the Employee table.

This method retrieves
35245541		takes a search string and returns an integer representing the page number for the search.

This method retrieves the number of employees with a specific set of criteria from the database.

This method removes the data from the event based on
35245596		retrieves the number of search employees for a given search content.
For each search content, it creates a PersonSearchCriteriaBean for the search content, adds it to the criteria bean, and adds three more BeanUtil methods
35245628		retrieves the number of results from an employee search.

This method returns the number of search employer results of the specified search content.
SUMMARY
This method is used to retrieve the number of search employees results for the
35245662		checks whether a call has been successfully confirmed before asking this user's password. If confirmed, it requests a new book.

This method checks if a new call is initiated. If open, it calls its create method to execute the checkout.
35245769		retrieves the number of checked out records from the database query based on the provided query string. It handles potential exceptions that may occur during the query execution, such as database access errors or issues in the database query.

It checks if
35245782		calculates the LateFee for an order based on the order's due date and the completed field.

This method returns the fee rate between a provided date and a specified number of days.

This method returns the fee rate
35245880		deletes a report from the database given its report ID.

This method deletes the master report if it exists.

This method deletes the report with the given ID.

This method deletes the report with the given
35246132		removes a temporary password for a given user from the database and returns true if the password was successfully successfully removed, false otherwise.

This method sets an error.

It checks if the update password is valid and sets a boolean and
35272933		overrides the startup method and loads file objects with a JAR file. It then retrieves the files and their directories, creates GUI objects, displays the GUI, constructs menu configuration, adds event handling to a menu bar, creates a user
35542820		assigns values to index values in an array for various port numbers and data descriptions. 

This method sets various port numbers in a port table. 
The appropriate values for the ports are executed during the process. 
The
35542839		sets the alarm Piu port based on the slot info.
SUMMARY
This method is used to set the alarm Piu port based on the slot info.


35542879		sets the deact state of the port to ACT based on the unit ID of the receiver slot.
This method sets the position port of the receiver slot to the given port.
SUMMARY
This method is used to set the
35543005		finds the row index of a given table row with the specified row ID. If no row is found for the given row ID, it returns -1.

This method finds the row corresponding to the specified virtual ID in the given table
35543221		sets the ring type of the ONU button indicated by the user. If the ONU button is not visible, it sets the ONU button to a filled unselected type panel. If the ONU button is not visible, it sets the
35543964		sets the maxOccurs field to the integer value of maxOccurs, if the value is not available or zero, it returns 0. Otherwise, it returns 0.
SUMMARY
This method is used to obtain the integer value
35545310		returns the maximum number of occurrences allowed for an ontology element, or 0 if no limit is allowed.
SUMMARY
This method is used to parse and convert a long value to an integer.


35546453		handles command responses for various methods that trigger an action based on the value of the message parameter and the arguments passed to the class. It returns a list of responses.
This method logs the command execution status.
This method logs the command
35548622		This method sets the Port ID for a database device by setting the port ID text field with the device's port, which includes the port ID.
SUMMARY
This method is used to set the Port ID for a database device,
35548931		sets the port state of all cells to their default before assigning the port state in.

This method sets the state of all cells to the values returned by the getInstanceList() method. It makes sure the values arrays have changed, then
35548932		sets the response state of an RFD device by assigning a valid port to a port based on the request state array. Otherwise, it sets all ports to none except the one specified for one specified in the request state. It also sets the response
35550308		sets the ports of a port btn.
This method sets the values of portBtn to min, max, and a given array.
SUMMARY
This method is used to set the ports of a port btn.
35550325		returns a unique string of the selected port name in the operating system. The code is used to create a unique string based on the selected port's number within the UUID. The UUID is then used to log the entry.


35550425		displays a confirmation dialog asking the user if they are sure they want to delete a log record and adds a parameter to the SQL command.
This method opens a socket connection to the specified host and port.
This method opens a socket connection
35550463		retrieves the mask associated with a specific cell in the table. It formats the month into the correct number, representing the day of the month. If the mask is not found in the table, it displays an error message. Otherwise, it
35550464		sets the location of a shelf in the GUI, ensuring it does not overlap with any existing shelf.

This method sets the location of a circuit to the specified location, replacing the current location with the shelf's location if it is not null
35550493		initializes the class by populating the toolbar and the list of ontology buttons with the buttons available for the program execution.

This method initializes the class by creating a JToolBar and sets its font to MenuPrincipal.

35550687		creates a new mode selection dialog, adds the list to the main frame, and sets the selected item to different model elements. It then adds any remaining text field, view check, and selected combo box to the modelNE. Finally, it
35550796		returns a string containing the command associated with the provided checkbox and value.

This method checks if the checkbox values for CIF (Application Information Metadata), VLAN, MAC, QoS (QoS of Interest), FIL
35550806		enables or disables a port based on the value of a parameter, it updates the enable/disable status of the port buttons. The listeners require that all port controls have the command associated with each ID.

CONTEXT
This method
35551002		sets the state of a port that will be used to determine which agent triggered the event.

This method sets the state of a port and updates the GUI accordingly.

This method updates the GUI with the current window state, including the
35553108		refreshes the OSPF protocols in the table model and repaints the table, setting the result flag to the specified value.

This method enables or disables the OSPF protocols buttons based on either enabling or disabling the fields
35553243		retrieves an RadiusAttribute based on a provided type. If the type is invalid, it throws an exception. It attempts to retrieve the attribute from the RadiusBean if it is not null and throws an exception if a RadiusException is encountered
35553272		sets the hostname of the DNS server based on the provided string by parsing the string and creating an InetAddress object.

This method sets the domain name of the service to the provided hostname.

This method sets the password
35553275		raises a new alarm based on the severity, recovery severity, and reason.

This method handles changes in data, also updating old and new statuses and firing a change event.

This method fires a change event with a listener
35553380		sends a command based on the command received so far. It then executes a procedure called `rtrvSession`. It logs a trace message if the user is not providing required information, checks for a valid command in the command text, and
35553507		returns the previous field position in a text display.

This method checks for the end of a line and presses key if a keyword is provided.

This method checks if the previous field position is the same as the previous field position
35553511		refreshes the current tree panel by removing all existing components, setting up the tree model, and adding nodes representing the selected users to it.

This method refreshes the user tree by clearing the current user tree, and then adding new
35553791		creates a server chooser when the "deleteServer" button is pressed.
SUMMARY
This method is used to retrieve a file with the selected node ID, which is used for download the file.


35553811		Sets the client host field to the value entered in the hostAddress field, and checks the client cookie file state. If successful, it updates the host address and enables the password field, username field, and establishes a connection to the server.
35553968		refreshes the profile event if the user has made a profile and the user has not killed the task.
This method refreshes the user tree.
SUMMARY
This method is used to refresh the user list and deletion
35554062		sets the user's role based on the inputted string and stores the object in a variable, then sets user in the session manager based on user name. Depending on the input, it set the user object in the session manager by calling addUser
35554163		creates a package for the software environment.

This method adds a package to the desktop manager with the specified package name, file names, and display mode.

This method adds a package to the desktop manager with the specified package name
35554224		checks if any fields are filled out as text fields and applies them if they are not filled out.
SUMMARY
This method is used to check if any of the fields are filled out as text fields and apply them if they are
35554268		installs an action for the "apply" action, which when invoked, invokes the apply action and sets the state of the frame to its initial state.

This method adds open and exit buttons to the frame.

This method
35554371		performs a button continue operation, checking if the current log ID is not null and if the pageindex is greater than 1, then it assigns the current log ID to the next page, increments the page count, and sets the next page to
35554382		consumes an alarm action based on the source of the action event. If the source is "CR" or "MJ", it calls the appropriate method in the MainMenuBar object. If the source is "MN" or "INTERNAL
35554423		retrieves the node ID from the selected value in a JList.
This method retrieves the details of a node from a network mgr, using the name passed as argument to extract the node name.
This method retrieves the
35554719		creates a user from the database and populates the user list combo box with the names and values.

This method initializes the user list using the DBManager class.

This method initializes the user list combo box using the
35554743		toggles the visibility of the port view based on the given flag.
This method hides the port view based on the given flag.
SUMMARY
This method is used to toggle the visibility of the port view based on the given
35554794		retrieves resource information by creating an array of objects for RTRV_EMS table view and options. The method then creates an array of objects, copies the values from the resources table, and and sets the values in the RTRV
35554832		creates a default list model containing a list of shelf names for a given node ID. If the list is not empty, it populates it with the shelf names in the list.
SUMMARY
This method is used to populate
35555032		creates a frame for creating a new whiteboard account. It includes menus and other components for accessing resources for the user.

This method retrieves a reference to a password for a given menu item from memory directory. It then executes a
35555048		creates a DefaultComboBoxModel object with a Vector of alignments.

This method sets the selected Severity from the selectedProfile in the controller.
SUMMARY
This method is used to create a DefaultCom
35555183		retrieves alarm statistics based on the selected day and month, showing the results in a message panel.

This method initializes the SLD for the alarm schedule panel.

This method initializes the SLD panel from the model
35555359		tests if a given float is a decimal or a time minus divided by 10.10 seconds, returning true if it is and false otherwise.
SUMMARY
This method is used to check if a given float is a decimal or a
35555448		animates the alarm based on whether the alarm has been confirmed. If the alarm has not been confirmed, it sets the alarm to null, and if the change is valid and the alarm is not the one expected to be displayed, it gets the
35555609		sets the parameters for indexing, storing the cmdTag, viewId, userId, nodeId, shelfId, cmdCode, and data.
This method sets the parameters for result, storing the cmdTag, result, and data.
35555635		updates the button's state and responds to button navigation by executing a previous button action.
This method initializes variables and loads history, retrieves linked list, and sorts the current page. It also executes a previous button action and forces a
35555709		takes an array of strings as input and creates a valid dicom dictionary type. If the input is in the FMP format, the dictionary type is added to the valid dict map. Otherwise, the dictionary type is added as a child
35555737		updates the results of outgoing command operations associated with a specified node. It identifies the node and updates the corresponding instruction execution list, optionally requesting global execution.

This method updates the results of outgoing command operations associated with the specified node. If
35555766		updates the sync command result for a row in the schedule command table by iterating through the command ID and updating the result accordingly.
SUMMARY
This method is used to update the sync command result based on the existing sync flag
35555777		sets up passwords to prevent incorrect passwords by disabling the "root" button and saving the password in the "USER" table.

**setUpPassword**: It sets up a password generator with the provided database settings. It also attempts to
35555782		sets up a flush with the given database connection before executing a query to flush privileges.

This method creates a query to delete a domain and verifies that the number of rows affected is always zero.

This method creates a statement to
35555821		checks if the command tag is greater than 200 and throws an exception. It then removes the command tag from the out command table and inserts the command tag and command into the out command table if the ret value is 0. Otherwise, it creates an
35555833		updates the routing table for both nodes and shelf entries and checks for valid NFS entries. If no results are found, it removes all nodes from the route and links for the removed ones.

This method updates the routing table for nodes
35555892		contains a switch statement that searches for an element that contains mouse events. If the element is a network element, it searches for network element nodes. If the element is subnet element, it searches for subnet element nodes. If the element
35556043		sets the severity of a node in a network element by finding the node with the highest severity and updating the network element accordingly.
SUMMARY
This method is used to update the severity of a node in a network element by finding the
35556130		attempts to log out the current user by deleting them from the database and updating the user history.

This method attempts to log out the user by deleting them from the database and updating the user history. It also checks if the user
35556238		checks the type of the incoming event and calls the appropriate methods in the ResultHandler, such as login, login message, login interface, and search.

35556243		logs out a user by sending their username to the server to perform the checkout.

This method processes an action command by calling the logout method on the server receiver and returns the result.
SUMMARY
This method is
35556248		registers a client with the TRS, using the provided user ID, client interface, and network interface (TCP or regular).

This method registers a client with the TRS, using the provided user ID, client interface, and
35556349		processes SQLExceptions and closes connections in case of communication errors.
This method closes any open datastore connections and a database connection.
This method sets up the temporary connection data and handles exceptions.
SUMMARY

35556585		takes a substring and returns a string based on the substring, including the current timestamp, subsystem name, log database version, logger name, sub subsystem logger name, architecture name, Log configuration file, and log item.
SUM
35557840		initializes a HashMap of values and allows setting the value of a profile. It then adds two keys-value pairs to the map: "XA_DELETE_CONN_PROFILE_NODE_PROFILE_ID
35594791		initializes and sets up the layout, size, and components of the frame.
This method initializes the actions for the JPanelList and JMenuItem.
This method initializes the actions for the JPanelList and JMenuItem
35714195		sets the value of a text field with the specified name.
This method copies the value of one text field to another.
This method sets the value of a text field to the specified value.
SUMMARY
This method is
35714204		sets the user's password to the specified value. It first checks if the password is valid and sets the provided password to the corresponding text field. It then checks if all mandatory fields have the same name and password, and if so, sets the
35714220		starts a listener to receive events from an incoming object and runs the handler for each event type.

This method is the main loop for the connection thread. When the connection thread is finished, it signals that a connection has been established,
35799206		shows a number of numerical parameters based on its numeric type, with proper places and formulas for numerical parameters.

This method returns the real value of a numerical parameter without changing its type.

This method returns the imaginary value of a numerical
35829644		adds a new child to a given node with specified flags.

This method mutates a parent's cell by adding a self-ref reference cell or replacing itself with itself.
SUMMARY
This method is used to mut
35829648		searches for a specific character within a node's label.
This method verifies the presence of an XPath subnode and returns the node if found.
SUMMARY
This method is used to look up the next sub
35829649		recursively searches through a node and returns the index of the first brother that is a given character.

This method returns the index of the first brother of a given node or -1 if the first brother is not found.


35829676		returns the size of the VisualItems data for a given VisualItem, or 0 if it cannot to compute the size.
This method calculates the mean-square error of the VisualItems.
This method calculates the standard deviation of the Visual
35878741		creates an instance of the HTTP client for a specific HTTP request.
This method adds a parameter to the HTTP request.
This method creates a list of properties for a list of properties in the HTTP request.
This method creates a list
35878767		runs the process of copying files. It initializes a `Properties` object, then attempts to copy the files in a directory and, if successful, sets the `progressMonitor` on the file. If an exception occurs, it displays a
35878830		updates the client status and returns a string indicating successful or unsuccessful updates.
SUMMARY
This method is used to set the client as passive and control the server in case the client was not previously set.


35878859		returns the speed value of the second action, which can be 0, 1, or -1, given the transferType parameter.

This method calculates the value of the progress bar based on the maximum and minimum speed values.


35878867		is used to retrieve the progress of a task.

This method retrieves a monitor for a task. If a monitor is available, it retrieves the progress from the monitor. Otherwise, it assigns a minimum number of steps to calculate the
35882866		clears the screen and depth buffers and then renders a graphical canvas. Finally, it updates the camera and renderer of the canvas.
SUMMARY
This method is used to customize the graphics display for the 3D scene.


35914943		parses the response from the protocol and sets the last entry to the specified result when successful. It also adds user information to the results and saves the result to a file.
SUMMARY
This method is used to add an
35927616		sets the key word input filter for the text field.
This method sets the input filter for the scrollbar.
This method sets the input filter for the tabbed pane.
This method sets the input filter for the list.
This
35927630		creates an anonymous inner class that overrides the parent class's "this" method. It sets the commentInputFilter field to apply a specific style to the commentInputFilter parameter on the parent class hierarchy.
SUMMARY
This
35934681		This method checks if a player is in a certain state and returns a boolean value. If the player is in the end state, it removes the object from the stack and returns false. If the player is not in the current state, it executes
35934747		scans for the head, checks if it is not empty, and if so, it advances to the next turn and displays the next TurnResult.

This method takes a move, the size of the move, and the undo variable as
35935007		creates a card panel for data from a MagicObject and adds it to the ui object.

This method sets up a CardLayout layout with a titled border "Put On" and adds several subcomponents such as text fields,
35935082		compiles a file using a ZipBuilder and closes the ZipBuilder, sets the path to the "templates" folder, and attempts to compile it again. It catches any IOException that may occur during the compilation process and throws an exception with
35935905		reads lines from a Reader and updates a list of the lines in a GUI event with the data in the first new line.

This method parses a given string to ensure the correct syntax is used for data, element replacement, line deletion
35935935		executes a set of runnable configurators by logging their keys and executing them, catching and logging any exceptions.
SUMMARY
This method is used to execute runnable configurators with error handling.


35971754		visits a table definition, builds filter dependent data sources based on the definition's source definitions. It then iterates through the table definition, builds filter dependants for each definition and its dependencies, adding dependencies to the extracted data source definitions, and
35971786		takes a StringTokenizer object and returns a vector of relative path expressions. It iterates over the tokens in the string, removing any ')' characters.

This method takes three StringTokenizers, and an Object object, and converts
35973201		initializes the servlet by extracting configuration parameters and initializing the filter engine.

This method initializes the servlet by initializing parameters.
SUMMARY
This method is used to initialize the servlet and the logger.
35998902		parses HTML message content and parses it for various commands, such as creating, editing, updating chat messages, clearing, and removing message history.


This method fires a message event with the appropriate command, toggling event handlers
36031586		returns the select command, creating it if it does not exist.
This method creates a new select command if it does not already exist.
SUMMARY
This method is used to create a new select command if it does not
36031594		returns the Stop Player command, creating one if it does not already exist. The method first first checks if the command has not been initialized, and if not, it initializes the command and adds it to the command queue. The method then
36031598		returns the command to return the previous folder or creates it if it does not exist.
SUMMARY
This method is used to return the command to return the previous folder or create it if it does not exist.


36031694		returns the `BackCommand1` instance variable, if the instance variable is null, it creates a new one with the specified parameters and returns it.

This method returns the `Form` object of the `Form` object, if
36031701		returns a `Form` initialized to display a "CompletePair..." option in a `Question`. 
This method is called `getTerminalChoiceCommand`.
This method is called `getCompleteListSelector` if it is
36031717		returns the "Back" command.
If the back command is null, it will create the new command object and set the command listener to the current object.
Finally, it will return the back command.
SUMMARY

3608024		returns a string representation of all the Glossary objects in the document. It enumerates over the keys in the document and prints each key-value pair in the format "key=value"
3608025		takes a string as an argument and removes all spaces from it that are not present in the given string using the printGlossary method.

This method removes all spaces from the given string from the given string if the current index is
3608181		sets the activity of the object. It splits the activity into parts and checks if it is a comma-separated list of characters. If it is, it splits the parts by three elements to identify the end of the list. It then converts
3608329		sets the parent package: excluding the "no rows" property if the parent is not writable. It also determines the page number and sets the layout context. It then iterates over the parameter values, checking the appropriate comparator and invoking the
3608338		returns the result of checking if the getNoRows parameter is true, if true it returns EVAL_BODY_TAG, otherwise it returns SKIP_BODY. It also checks for existing rows in the package tag and returns
3608356		deletes a package by getting the value of the "action" attribute to ensure it is not empty, then executes the "remove" action in the parent package, returning EVAL_BODY_INCLUDE or SKIP_B
3608376		repeatedly iteratively writes out the body content of the JSP page to the output stream, handling exceptions and throwing runtime exceptions.

This method checks if the body content is the last row and writes it out to the output stream if
3608633		retrieves the current page of a feature collection and returns it, wrapping into separate pages for efficient fetching or retrieval.

This method stores the contents of a feature with the specified CIF table and encoding, and retrieves or creates
36174189		returns a string that includes the error message of a exception or the word "status:" if the exception has no body.

This method returns the message associated with the HTTP status code.

This method returns the exception associated with the
36174772		sets the target of a PDU and returns a ResponseEvent object.

This method checks if the sender is the target of the given packet and if so, sets the target to the sender and sets the PDU and target to the given
36174992		extracts the import include reference from a file's content into a string. It uses regular expressions to extract the file name and contents, then extracts file path and classname within the path. If the path is found, it reads the file
36221537		retrieves the hashtable for a specified handle, loading it from a RecordStore if it has not been created then, and throwing an exception if the hashtable is null.

This method returns the hashtable for a specified handle,
36221551		clears the database by closing the recording manager, deleting the database file, getting the LgLogger of the plugin and initializing the log, and clears the metrics.

This method finishes setting up the plugin by clearing the record manager
36356719		sets the endpoint address for the specified port name, and throws a ServiceException if the port name is unknown.

This method sets the port name and endpoint address for the specified port name, using the HTTP parameters specified by the parameters they were
36357122		checks if the server response is valid by verifying that the command ID is valid and that the response has no errors.

This method checks if the command ID is valid and returns a boolean.

This method checks if the response is valid
36375412		initializes the help options group by setting the name and description.

This method adds help options to the group by adding description and option names.
SUMMARY
This method is used to create a group of help options with a
36375446		runs a specified number of parallel threads. It iteratively iterates for the size of the queue, applying an operation to each one. For each entry of the queue, it checks if the action is an ActionExit, RunSafe, and Run
36375450		initializes the file input option with a short name, description, and value for the file input file.

This method configures an Options object with the givenOptions, argumentValues, and options. It then sets the fileInputFile options
36394226		returns a CreateTruncateTableStatement object to create a truncate table statement for a transaction message that is used to truncate the table.
This method creates a TruncateTableStatement object to truncate the existing table.

36394229		creates a string statement to drop a table from a transaction message.
This method creates a drop table statement for debugging purposes.
SUMMARY
This method is used to create a drop table statement for debugging purposes.


36398383		reverts the database by deleting all prepared statements that do not exist.
This method iterates through all the stored statements to see if they exist and delete them if they do.
This method removes all stored statements that do not exist.

36398392		returns the value of a 16-bit integer from byte buffer. It advances the position pointer and returns the integer value.
SUMMARY
This method is used to jump the position pointer to the next 16-bit integer in the
36398405		stores a 32-bit integer in a buffer, making room in the buffer for potential storage or blocking later.

- This method puts a 32-bit integer into a file and validates its storage. It also sets the file size for
36398409		puts an encoded string into this buffer.

This method decodes a string using the specified algorithm and length.

This method decodes a byte stream using the specified cipher buffer.

This method decrypts a file using the
36398417		writes the specified length of bytes from the given byte array to the output stream.

- This method writes the specified number of bytes from the given byte array to the output stream.

- This method writes the specified size of the
36398495		launches a list of servers on the specified port using the GnuIPRMFactory and a named list of IPRSelectorInitParameters. If the port is specified in the configuration, it reads it and sets the parameters. It also logs
36404895		resets the variables of the class to their initial values.
SUMMARY
This method is used to reset all of the fields of the class to their initial values.


36405135		applies formatting to the given style with a soft character formatting property.

This method applies a font to the given style with a soft character formatting property.

This method applies a font to the given style with a soft character formatting property
36405150		applies font effects to an inline style with the specified properties, including table, subscript, superscript, subscript header, inline styles, font size, and lines-before and text styling.
SUMMARY
This method is used to
36405216		applies a change case to a style with specified properties and adds it to a BeforeAfter object, ignoring all styles.
SUMMARY
This method is used to add the transform to a StyleWithProperties object.


36405249		handles the creation of a hyphenation label by extracting the reference name attribute of a given element and checking its validity against the ref name of the correct workflow being processed. It creates a new LaTeX file for the reference name, sets its
36405315		applies style and properties to a paragraph. It finds the different sections of the paragraph based on block and paragraph attributes, applies a series of attributes to these section, and applies line spaces and margins based on certain conditions.

This method applies
36405334		is used to handle the ending of a reference mark by verifying that there is no end of reference marker at all.
It sets up the dictionary, handles the start of the reference marker, and handle the reference to an input comment.
It
36405354		parses an XML representation of an equation, setting it to the parameter object, and then checks if it matches one of the IDs of the elements in the equation. 
It then parses the elements based on their type, creating a
36405409		appends the specified document portions to the given LaTeX document.

This method initializes the document by adding imports, footnotes, sections, and declarations. It checks if the document contains endnotes, and if not, it appends
36405422		handles note references in an XML document, checking for specific class and providing corresponding document representations.

This method checks if the current element is a paragraph tag, and if so, processes the paragraph by calling handlePara, handleLap
36405594		converts an image to another element, setting a position and spacing elements based on the input parameters, including the content of the image, an on-node of the image, or the HNode of the HNode.
SUMMARY
36405641		applies a default write direction to the master page's layout if the master page has a master page layout. Otherwise, it applies the default sort direction for the master page.

This method applies default writing direction for the master page if the
36405643		applies a style to a given style by iterating through the style name and plugin list and applying the style to the style.
This method throws a CSSException if there is an issue with the CSS and CSS file, and then applies the
36405658		applies properties to a style with the provided properties and then applies background, table-specific properties to the style.

This method applies CSS properties to the table-specific properties.

This method applies CSS start and end properties to the
36406032		copies the attributes from an original set to a new set with the same name, as the original set's attributes.
SUMMARY
This method is used to copy the attributes from an original set to a new set with the same
36406402		initializes the Java Modeling Framework (JEE) registry and loads settings from a specified filename.

This method throws a Java Exception if there is an issue initializing the registry.

This method attempts to initialize the registry property with
36406609		executes the specified API with the given parameters, including name file name, environment, environment environment, and B flag.

This method takes an environment as input and executes it, returning the result.

This method takes an environment as
36406617		clears the stream, starts a new thread to parse the contents of the input stream, which is then used to identify text in the input stream.

This method, `parseHeader` adds support for JHtml, then checks the
36406644		cancels the current thread running the filter and changes it to "breaking" by changing the thread to "stopped" when the filter is stopped.

This method cancels the execution of the current thread and waits until the thread has
3644827		reads input from a file reader and returns its contents as a string.
This method reads the contents of a file and returns it as a buffer.
SUMMARY
This method is used to read from a FileReader, then the
3644853		removes a worker from the workerMap using its ID. If the worker has no job available, it schedules one worker to be added later.

This method cancels a worker by asking the job bean to cancel its status, then removes
3644888		retrieves the image as a JPEG file. 
This method takes in an image ID, width, height, and an output stream to write to the output stream.
SUMMARY
This method is used to convert images to
3644916		submits ResultHandler objects to a SOAP context and then processes the results.

This method queries a HashMap of result sets by index, passing as an argument.
This method sends a message to an outgoing JSF server to verify
3644946		This synchronized method checks if there are any returned lines in the queue and returns true if there are. Otherwise, it returns false.
SUMMARY
This method is used to determine if there are any returned lines in the queue and if
3644947		returns the next element in a queue for use during a job process, invoking a synchronized iterator to ensure thread safety and returns an Integer that represents the next element, use in threads-safe retrieval from ThreadingPostscripting. If no elements
36513689		sets the visible columns in the jTable component in the GUI.
It updates the model and notifies listeners of the model that the table data has changed.
It updates the border and text displayed in the jTable.
The method updates
36514830		triggers the valueChanged event on all registered listeners when the specified value changes.

This method fires a ValueChangedEvent to all registered listeners when the value of the event changes.
SUMMARY
This method is used to
36514862		sets the classpath for the component to the given List of String values.

This method resets the report by checking if the classpath has already seen it, and if not, it creates a new list of strings, adds the given
36516080		handles the event when the "Exit" menu item is clicked, it retrieves the selected configuration from the application's UI.  When the item is selected, it deletes the configuration and displays a message to the user indicating the closure of
36634484		sets the help text on a button, initializes a variety of objects, and positions them within a rectangle. 

This method sets the help text when the help button is clicked on a square board.

This method sets the help
36634507		sets the image for the cut menu item based on the current cool index.

This method sets the load icon to apply to the loaded image.

This method loads the text image from the specified index in the cool palette.


36634518		sets the color of an object at a specified index, and adds the new color to the object's color collection.
This method sends an SMS message that a new station is being viewed by updating the local station object and providing a reason for its
36634536		updates the position when the player's current position changes, accounting for AI movement and keeping AI speed.
This method updates the position if the AI is not busy.
This method loops through time intervals by entering the loop until time intervals are
36634605		updates the position of a field. It applies forces to the geometry based on data from the graphics and the object.

This method updates the position adjusted by the specified factor.
SUMMARY
This method is used to update
36634755		changes the position of the item in the vertical or horizontal orientation if the given index is greater than 0 or less than the maxPos.

This method replaces the element at the given index with the given element in the vertical or horizontal orientation if
36634775		sets the cursor to fullscreen if the user has not entered a key.

This method sets the cursor to the default.

This method sets the cursor to the default.

This method sets the cursor to the default.

36634792		sets the image of a specific item at a given index in an array of images.

This method sets an image to the given imagePath if it is not -1.

This method updates the image of the ImageItem at the
36634793		moves a track either upwards or downwards based on a boolean value.

This method moves a track down one or all tracks individually.

This method allows only one track to go straight up.

This method allows one track
36634796		initiates the game cycle by replacing the current game window with a new game window, setting the current display mode to FULL_WIDTH/FULL_HEIGHT, and starting the application.
SUMMARY
This
36634800		obtains the names of the key names as a set of strings. It then iterates through the names, comparing each name to that key. If a match is found, it returns true. Otherwise, it returns false.

This method
36634804		moves the selected item up in a list of items.
SUMMARY
This method is used to select the item that corresponds to the index of the item that contains the specified content point relative to an existing list item in the main
36634855		stops all playback and OggClip and OggPlayer.
This method closes the volume of the audio player if it is open.
This method closes the audio player and the volume 2 object.
This method closes the volume 2
36634862		searches for and plays music, audio, and text based on the file type specified. If the file type is MUSIC, it calls the playMusic method. If the file type is MUSIC_TEXT, it calls the
36634895		swaps the character value at the specified index in the current item after the given change.

This method notifies listeners that any new characters have been added to the menu.
SUMMARY
This method is used to swap the
36634911		adds an XML tag to the data object with a tag name and value.
This method overrides the toString method and generates a string representation of the XML tag with the provided tag name and a comment.
This method checks if the
36634915		adds XML tags to tags from the given contents, either with or without attributes.

This method adds XML tags to the tagChain for each key in the given contents.
SUMMARY
This method is used to add XML
36634924		scrolls the menu scroll when the mouse is moved in the specified direction or the menu is greater than the menu is over the y-axis count, the y-axis height is reset to 0, the maximum item index is reset in the y
36634933		generates a menu by setting the vertical positions, opacity, and menu item placement for a menu item based on the provided change.

This method generates a menu by iterating through a list of items and calling the generateMenu method of the
36634937		initializes the JSlix window by setting its size, and adding a window listener to listen for resize events.

This method prompts the user to confirm whether to override the original image, resize the window, and perform the necessary transformations for
36635010		returns a File object corresponding to the given filename. If the filename is the first letter of the file, it skips all other characters and attempts to convert the filename to a temporary file. If the temporary file cannot be created, it returns
36635013		creates a BufferedImage for a given screen size and size and initial value that specifies the size for the image.

This method adjusts the size of the screen by the difference between the current value and the new size between the old size
36635015		takes a filename and returns a File object with the resource found by the checkValidateScriptFile method.

This method returns a File object with the resource found by calling the printReportClass method of the fileResolver object.

36635020		clears the grid by first cleaning scratch coefficients and then resetting the values of the model.

This method initializes 3D coordinates on the grid by calling four other methods to draw particles, atoms, and parts within the grid, and
36635028		deletes a file specified by its path and filename.
If the file is valid and the path of the file is invalid, it logs that the deletion was successful, otherwise displays an error message.
SUMMARY
This method is
36635044		flips the horizontal axis of a grid by swapping the border of all rows corresponding to the removed and removed cells in the grid.

This method flips the horizontal axis of a grid by swapping all cells within the edit grid, padding the new
36635045		creates a directory with the specified path and attempts to create it. If there is an AccessControlException, it will draw an error message and log the error.
This method is the main entry point for the program, it is the entry
36635055		flips the grid based on the grid dimensions. It flips the vertical grid axes.
SUMMARY
This method is used to flips the vertical grid axis.


36635073		sets a short value at a specified index in a buffer.
SUMMARY
This method is used to add a short value to a buffer at a specified index, but if the index is outside the end of the buffer, it limits
36635083		adds text to a grid and updates the opacity setting, grid text color and background color based on the image and grid validity.

This method draws a text label to a grid at a specified location on the grid. It checks if the
36635086		takes in two integer parameters and decodes the single bit. If the decoded value is between 0 and 3, it returns the bit as a byte. Otherwise, it creates a new byte array and decodes the shift register to be the
36635110		checks if all the key information can be updated, and if so, it updates the locations in the data structure. If the data is not stored in the temporary key, it invokes the doUpdate method and returns the updated locations. If the
36635122		takes a string as input and attempts to parse it into a float value. If successful, it reads the value using a reader and returns it.
This method removes a reference from a reference list.
This method retrieves a reference from
36635136		gets the first line of text of a file. It checks for exceptions and checks if the end of file marker is not reached before returning the line. It then iterates through each line and iterating over all characters to check for certain keywords.
36635138		adds a new layout item to the scene. If the data item is a regular node, it adds that node to the layer list. If the data item is a line vertex, it adds that line vertex to the layer list. When the
36635139		checks if a file exists based on the selected directory and adds it to the list of key store locations if it does not exist.

This method adds all key stores from the storage location location directory to the list of locations.

This
36635150		adds data at the specified index to an array of data. If the index is within the valid range, it adds a data to the array and either clears the array from the maximum or minimum indices.

This method returns the data at
36635168		checks if a given integer is a code.
This method checks if the given integer is a code.
This method checks if the given integer is equal to the current number.
This method returns a boolean value.
SUMMARY
36635197		initializes the security configuration and initializes the class shutter. It then sets the event handler so the event is triggered when the super method invocation is done.

This method initializes the class shutter and initializes the event handler so the event
36635232		draws color perm Pixel (RGB) of an edit grid at a given locx and locy coordinates with the specified colorInRGB value.
SUMMARY
This method is used to set the color of perm Pixel in editGrid
36635250		sorts list data in ascending or descending order based on specified fields such as item count, size, data type, and base and type.

This method sorts list data in ascending or descending order based on specified fields such as item count,
36635277		determines the speed of data based on the specified index, compares base and value, and uses the sound pattern to determine the speed of the data.
SUMMARY
This method is used to calculate the speed of data for data
36635344		counts the total number of elements in the data array for a given index.

This method computes the name of a node in the data model.

This method computes the length of the data array for a given index.
36635511		initializes the ArrayList variables used to set the points of a path based on the information stored in the system, including the number of points in the path.
SUMMARY
This method is used to initialize the ArrayList variables used
36645770		generates a random number and stores it in the variable '_numGeneratedSequence' stored in the variable 'm_sequences'
3667155		sets the font for the label, fetches the old font, sets the JPanel font, and redraws if the font has changed.
SUMMARY
This method is used to update the font for the label when the font
3667165		sets whether the antialiasing method is anti-aliased.

This method initializes an ANSI rendering user interface such as the JFC color composite according to a specified color and font.

This method initializes an AR
3667193		paints the components within the owner component. If the gradient value is true, the method calls the superclass paintComponent method and calls the paintHorizontalZeroLine method, if the gradient value is false, calls the superclass paintComponent method
3667212		returns a Rectangle2D with the specified dimensions. It checks if the range values are valid and if the parameter values are valid. If the variables are not valid, the method delegates the retrieval to the superclass. The method then creates
3667213		sets the text is displayed on the text field, which allows the user to interact with the text field component. It adjusts the width of the component to each length of its preferred size and adjusts the height to make the text appear consistent with the component
3667237		sets the value of an object to a given double value, centering it within certain bounds, and considering if it is constrained or constrained.

This method formats two strings with a specified character in decimal format and returns the formatted string as a
3667240		sets the extent of a linear model for a given value, minimum, maximum, and adjust extent. It ensures the minimum and maximum extent values are within a valid range. Additionally, it checks the validity of the extent values and ensures they are within
3667243		sets the minimum value of a data source's range. It checks if the minimum is negative or equal to 0, updates the maximum value to the maximum, and recalculates the minimum and maximum values based on the provided parameters. The method then
3667259		sets the maximum value for the slider.
This method returns the vertical slider component.
This method sends an event to the listener.
This method sets the vertical slider to the given value in the slider.
This method sets the range for
3667267		sets the leading track position for the element and updates its subcomponents if necessary.

This method sets the leading track position for the element and updates its subcomponents if necessary.

This method verifies that the leading track position
3667298		This method updates the x increment of the x-axis based on the tick increment of the bar and the current scale bar.

This method updates the x increment of the x-axis and its scrollbars correctly within the channel panel.

3667310		calculates the dimension of the JPanel minus two.

This method returns the length of the component.

This method returns the length of the component.

This method calculates the size of this component.

This method
3667312		sets and handles the leading flag for the tick position, changing them to allow for multiple property changes. The method sends a boolean and a property change event to listeners, and then sets the float value of its current border to the specified value.

3667317		checks if a strip chart model exists in the model.
SUMMARY
This method is used to determine if a strip chart model exists in the model.


3667342		tests the constructor of the MarkerModel class with a double and boolean data type, ensuring the correct values are assigned and accessed.

This method tests the constructors of the MarkerModel class, specifically testing the constructor with a double and
3667344		tests the constructor of the MarkerModel class by creating two instances with a different time and then asserting that the correct time is displayed.

SUMMARY
This method is used to create arrays of Long objects with an initial value of
3667347		tests the constructor of the MarkerModel class by creating a new instance, setting, and verifying that the values can be set and retrieved correctly based on its visibility status.
SUMMARY
This method is used to set the text and
3667363		tests the setValueIsAdjusting() method of DefaultLinearRangeModel by asserting that setting a value to its initial value is true, setting a value to its initial value false, and asserting that the value is now correctly adjusted.


3667366		adds items to a LinearRangeModel, sets updates to 50, and asserts that the value returned by that method is 2 after updating the values and then removing items. It also checks that the value returned by calling getValueIsAdjusting()
3667412		calculates and returns the size of the component. The component is scaled in the unit of the component to account for the component orientation, and the component size is known.

This method calculates the component size based on the image size and
3667416		updates the scale based on the current orientation of the component.

This method updates the scale of the component using the previous orientation.

This method sets the minimum and maximum values of the component based on the value of the m_
36748528		prints a list of the scores for the current game.
This method initializes the record store structure and fills it with data from the log records. It then prints out all the records that are associated with the current game and its scores as a
36748530		prints a score record from a record store with the given player's name.

This method prints an updated game score sorted by a given date, using a comparator to sort the new values and the game name.

This method prints
36748561		This method checks if the case already exists, and if it doesn't do it creates a new case, sets the title of the case (if it exists), and updates the parent if necessary, then saves the changes made.

This method
3675937		skips a specified number of bytes in the input stream. If the number of bytes skipped exceeds the maximum allowed, the method returns false. Otherwise, it compresses the input stream into multiple chunks and sorts the chunks forward. It then reads a
36760047		compares two list nodes and returns true if the values of the nodes are equal, and false otherwise.
This method compares two list nodes and returns true if the values of the nodes are equal, and false otherwise.
SUMMARY
36760054		takes an array of names and returns a random field ID. It first retrieves the variable with the highest value as the variable name. If the variable does not exist, it throws an exception. If the variable is not "name," it
36760082		returns a string representation of the object by concatenating the string representation of the fields in a list separated by spaces and enclosed within brackets.

This method verifies that only the fields in a list are represented as strings and that each
36760087		checks if two objects are equal by comparing their types, sizes, and addresses.
SUMMARY
This method is used to compare the types and sizes of two TupleDesc objects.


36760091		checks if the current object is equal to another object by comparing their pageno and tableid properties. 
This method finds and returns the absolute region of the provided cell.  It checks for overflow, valid cell boundaries, and the preferred
36760162		This method tests the "getType" function of the "TupleDescFactory" class by passing the "tupleDescFactory" parameter and asserting that the returned type is of type int.
SUMMARY
This method is used
36760523		removes self transactions by iterating through all the statements in the data dictionary associated with the current object and removing each statement from the relation.
SUMMARY
This method is used to remove self transactions from the data dictionary associated with the
36760565		checks if there is an instance of the thread waiting to acquire a lock for a while and if a waiting thread is provided by any of the threads in the thread waiting to acquire. If all the threads are waiting return this lock; that lock is
36760577		loads stored relations by reading the file line by line and parsing each line using DataDictionaryParser.

This method is used to read the data dictionary file and parse and extract data lines. It then iterates over the lines in the file
36765166		returns a date timestamp in the format specified by the string parameter "year". It matches various date patterns against the ISO_DATE scheme and converts the result to a Date object. If any errors occur, it returns null.

This
36772225		creates or clears the givenTag, adds Metadata Method Attributes (ELLEM), and checks for empty meta items (ELLEM and empty parameters) in an IF expression. It then retrieves the appropriate MethodRule for iterating over
36772940		converts an array to a list.
This method parses a given string and returns the list as a list.
This method tests if an IndexOutOfBoundsException is thrown when adding an item to the list.
This method
36772943		returns the bean associated with the current and service name, which are BeanWrapper objects for the return type.

This method fetches the bean associated with the current and service name, and returns the bean.

This method returns
36780441		This method calculates the maximum value of a job on a given node, considering whether it's a leaf and whether it has a specified level.  This method verifies if the node is a set, and returns the cost of the job by first
36780451		retrieves the value of a node, taking into account any child nodes before and after access. 
This method returns the value of the node, considering cases where the node may or may not start with a slash or a slash.

36780474		retrieves the submission time for a given job, based on its specified job submission time.
SUMMARY
This method is used to retrieve the submission time for a given job, based on its specified job submission time.


36780480		returns the wait time for a job based on the provided submittime and a utility time.

This method calculates the wait time based on the queue wait, substmittime, and a specific utility ratio within the utility time.

36780506		converts a date string into a custom minutes format in minutes.
This method converts a date string into minutes, using a specified format string.
SUMMARY
This method is used to convert a date string as a custom minutes format
36780985		stores the account to a file if it's not present, otherwise it removes the comments from the comments list.
SUMMARY
This method is used to store the account to a file if it's not present.


36795895		takes in a file and a register file and returns a MemoryInstruction for use with a specified instruction type. It gets the LSA memory address for the file and registers the array to store the registers.
SUMMARY
This
36796027		checks if the address is the same as the object passed as parameter.
If the address is different from the size of the object, it then calls evict on the line associated with the address and removing the oldest line.
If the address
36806176		is an "run" method that is an override of the doPost() method that sets the title, content type, and body of the HTTP GET request.
This method overrides the "run" method and is called when the onClient
36806180		inserts an annotation into the database for insertion, with an optional request file.
This method allows setting unique information for these annotations.
This method sets unique information for all annotations.
This method inserts an annotation into the database.
This
36806246		prints XML to a file using file output streams.
This method overrides the default print method, writes a DOM tree to a file using the file name with a time offset.
This method sends a tree to a PrintWriter, handling file
36806627		finds the next available contact item in a provided list of contact items by iterating over a collection of contact items. If a contact item is found, it returns the next item from the collection.

This method iterates over a collection
36865636		converts an object and writes it to a JSON output stream. It sets the header of the JSON response, adds logging for the entity type, and writes the object to the stream. It also writes the HTTP language, date, and entity to
36869313		handles updates based on what should happen, such as checking the presence and setting a checked state.
This method handles a click event that changes the status of a checkbox and updates the visibility accordingly.
This method handles a click event that
36869316		initializes a LWJGL context and a vertex buffer using OpenGL. It sets up the GL10 toolkit and uses our configuration. It then sets up the vertex buffer's texture configuration. It then enables vertex bind function, textures, color array
36869411		draws a vertical boxured quad (MRI) on the horizontal hand of a 3D screen, where the lines are specified as parameters on the screen.

This method draws a 3D box, a 3RAD display, a
370589		returns the absolute Jar location of the workspace root. If the workspace root is not absolute, it just prefers the workspace location to the resource.

This method returns the resource corresponding to the provided URL and path. It uses the resource
370667		closes the input stream associated with the file object and closes the file.
SUMMARY
This method is used to close the input stream associated with the file object.


370751		creates a new composite with three sub-compositors: specify name, manifest, dependent Sibilities, and seal groups.

This method creates an intermediate group with a name and manifest folder, adds information about sub-compositors
370805		displays an about dialog for a given workspace update.
This method closes the workbench, creates a new current workspace, and updates the tree elements.
This method opens the most recently opened workspace in a given workspace update.
This method
370820		creates a new tree viewer by initializing its content and label providers. It checks for changes in the checked state of elements, including no input, document insert, and grammar rewrite parameters. Finally, it sets up listeners for tree viewer settings.
370831		creates a list viewer with a specified parent composite and site and adds a list viewer widget as its content provider.

This method creates a button widget that opens a dialog window.

This method creates a text widget that displays the available
370844		determines the white-checked status for the tree element and sets it as white checked.

This method first calls a method in the superclass that retrieves all nodes, adds the tree element to the model, and iterates over
370873		updates the hierarchy of a tree element by checking if the element is already gray, if it is, it changes the gray status, adds the element to the checked state store, and calls the grayCheckHierarchy method with the parent element
370876		initializes the jar package by filling the UI with dialog settings, setting the dialog title, and retrieving the project settings.

This method initializes the jar package by setting the project settings and creating the UMLDiagramStore.


370890		populates the list viewer with the checked conditions, marking each check as a valid or uncheckable item.

This method activates all the associated checkable items and checks if any have been canceled.

It also activates each checked item
370895		handles selection changes in the table viewer and updates the input accordingly.
This method updates the input and populates the list viewer, using the current selection as the first element.
SUMMARY
This method is used to update the
370962		checks if any problems get build on a resource's static reference is present in the resource's problems. If so, it returns a CompilationProblem object which is then checked that the resource can contain only problems with problems with an error severity level set
370968		initializes the plugin by calling its superclass's init method, setting initializeFromJarPackage to true, setting jarPackage to the new structured selection, setting windowTitle to "Fat Jar Package" and using JarPackageUtil, and setting default
370981		creates a new option group of options, inside a nested group within a given parent composite, and adds arguments to the group.

This method creates the output options group, including a file selection option, options group, and arguments groups.
371015		returns a collection of packages from a given JarPackageData object.
SUMMARY
This method is used to obtain the parent of all elements of an enumeration in a given ManifestData object.


371023		reads a new project from the local repository, creates a project to store the process description, loads it, creates a process description, loads it, and returns a project.

This method reads and compares the data after the project loaded from the
371122		converts a list of strings into a vector of ManifestLine objects. It adds the manifestLine objects as sections in the vector, which is then sorted based on the length of the string. It then iterates over the iterator to extract each line
371167		initializes the default values for a set of preference stores. It sets the JAR name to the default value or the program name if the preference is not set.
SUMMARY
This method is used to initialize stores default preferences that
37120015		throws a SAXException with a message of either "I" or additional information, depending on whether the locator is not null or not null. It also includes additional information for the line and column numbers and a stack of error messages.
37120169		adds an ID to a collection of IDs. If the ID is null or empty, it adds a new ID with a non-null and non-empty ID, and if the IDs does not already contain the ID it adds the ID.
37120418		accepts a list of args and checks each argument, then looks up the command-line property in the command-line package and calls its apply method with the given arguments.

This method looks up the command-line property in the command
37120594		stops the network protocol and raises a connection failure error when notifying that the connection is already closing.

This method iterates over a set of PeerPeer objects, dispatches addresses to a list of peers, and sends an error
37120800		checks if a given resource is satisfied based on its name and version. If it is not satisfied, it returns a RESTRICTED_WARNING. If it is satisfied, it returns a PROPAGATED_INFO.

This method
37121022		processes incoming event roles and action data. It checks if the event object is an instance of EventRole and adjusts its focus status accordingly. Does this by calling the superclass method for processing the role and data.
SUMMARY

37121042		scrolls the text window to the specified coordinates and moves the cursor to the next location.

This method checks if the mouse cursor is within the window bounds and returns a boolean indicating if the event was handled.

This method sets the
37121131		cycles frames in the list and sets the visible index as the last index in the list. It then checks if there are more visible frames to cycle and the current index is the last index. If so, it determines if the current index is the
37121248		sets the fill hint of a child widget in the layout, expanding or hiding it based on the provided boolean parameter.

This method expands or collapses the child widget.
SUMMARY
This method is used to expand or expand a
37121258		sets the text of the component to the given string and notifies listeners of the change if the length of the text is changed.

This method throws an exception if the given string is null.

This method calls the superclass class
37121337		initializes the context, initializes the service configuration, logs the entrance point if logging is in a debug level, and ensures the service is running before initializing the context thread-safety. If not running, it initializes the context thread,
37121348		initializes the socket factory, creates a servlet factory, and initializes the executor. It parses command line arguments and parses HTTP request headers if provided. If a parser is available, it converts the HTTP request URI to available HTTP
37121386		sets the value at the specified index in the list.
This method removes all items from the list. If the list is empty, it removes all items from the model as it does not contain any items.
This method sets the "name
37121606		sends an ASCII-formatted string followed by a space to a socket. 
This method sends a byte array over a socket to a multicast address. 
This method sends a byte array over a socket over a multicast address
37121613		creates and returns a service instance using a service factory. If no singleton services are created, the singleton factory is created and then removed before returning the service instance.

This method initializes a service factory, tests deployment, and
37121637		gets service context and checks if a logging service exists. If it does, it logs a message entry with the context in a log. Otherwise, it gets a service context and checks if a service context exists. If it does, it gets it
37121669		sets the name of an item, throwing an exception if the name is null or empty, or sets the text of the text area to the provided item name.

This method tests the removeItem() method of the SimpleTextBox class.
371454		returns the next sibling empty string as a string tree.

This method returns a string tree.
SUMMARY
This method is used to iterate through the sibling nodes of the given method with the child node from its parent
371562		retrieves the main main class attribute of the launch configuration. If the attribute is set to "plain," this method retrieves the main type. If the attribute is not set to "plain," this method retrieves the main class.

371573		retrieves the arguments as a string. If the arguments are null, it returns an empty string. Otherwise, it returns the arguments as a string.

This method returns a string representation of the Java program. If the Java program is
371585		returns the text of the VM arguments from the launch configuration if it is not null, otherwise it returns an empty string.

This method returns the value at the given row and column index from the specified element.

This method checks
372177		creates a Manifest object for a given JarPackageData object, setting various attributes and adding attributes to it based on configuration in the jarPackage. It validates the manifest type and a non-null status code, creates a manifest object with appropriate
3725051		initializes job output listeners and server's streams if they are null. If they are not null, it registers the output and output streams and returns no value.
This method initializes jobs, adds them to a map, and registers standard output
3725054		updates the status of a GramJob and notifies waiting threads when the job's status changes.

This method removes the current job from its job output, if the job output is not null. If the job output is null, it
3725081		submits a job to a list of jobs. If the job is a job definition, it is created and the job is submitted with the provided JobDefinition. Otherwise, if the job is an instance of JobDefinition, it is created and the
3725313		retrieves queue configuration parameters by invoking a remote service.

This method attempts to get a queue configuration using a remote service object. If a remote exception is thrown, it logs the error and throws a reference exception. If the method fails
37397031		searches for an object in a collection based on a key.

This method checks if a hashtable contains a vector by searching for an object in the hashtable.

This method searches for an object in a map by name
37397108		initializes a map of field entries with the given object as keys and initializes the entry map with the return value.

This method creates a static field using the given class and field names, and returns the field's field instance.

37397456		This public method tests the doEnd method by setting up a mock message tag, adding a component to the page context, adding a bean with two property values, and then asserting that the tag does not end in the body of the message. 
37397465		tests the doEnd() method of the PropertyTag class by setting the basename property to "test.org.chwf.taglib.ji18n.ResourceTagTest.test.org.chwf.taglib.
37397474		is an action that tests the functionality of a method by setting the method name, the class, and the servlet's attributes. It calculates the execution time and logs the method's execution time. The method also calls the doEnd method and then
37398233		This method scans a directory for files with the specified extension and checks if the number of files scanned matches the expected number.
This method determines the name of a specific file based on the file extension being scanned.
This method validates that the
37398235		searches for and returns the value of an attribute with the specified name or session attribute. If the attribute is not found, the method delegates to the JSP section if necessary.
SUMMARY
This method is used to identify
37398268		tests that there is no circular invocation in configuration parameters and the correct exception message is thrown when trying to access the property 'foo' that does not affect delegation.

This method tests that a Config instance named 'foo' has not yet been
37398281		tests getting the raw configuration from the RawConfig class using a custom tag name and asserts that the configuration contains "correct" values.

This method asserts that the ConfigUtil class stores raw raw properties by retrieving it.

This method
37398396		encodes an iterator.  It then iterates over a list of keys, storing the key as a single key.
This method also encodes the next iterator in order and appends it to a string buffer.
This method then enc
37398454		adds invalid parameters to a given map, including any with unsupported names.

This method adds invalid parameters to a given map, including CorruptRequest and CorruptResponse.

This method adds parameters to a given map, skipping any
37398504		initializes the matchAllPatterns field to an empty array with a length equal to one.
This method initializes the matchingPatterns array to an empty array.
This method initializes the matchAllPatterns array to an empty array
37398593		prints an HTML <label> with appropriate attributes.
This method writes HTML to the output writer.
This method closes the output writer.
SUMMARY
This method is used to print an HTML <label> with appropriate attributes.
37398648		gets the original source, checks if there was an exception, stores the default object for the exception, initializes the JspWriter, creates a new JspTemplate instance to capture the output in HTML and starts the JspWriter.


37398649		sets the object property of the JSPTagException to the value of the specified property name, if the property exists and is not a valid type, it throws an exception with a message "property not found" and returns false.

This
37398655		generates the function URL based on the ID and HTTP request parameters that include the following attributes: the name or ID of the page.

This method generates a function URL using the given ID and HTTP request parameters, redirecting target if an
37398700		returns a map of options for the tag, or throws an exception if there are no options.

This method returns a map of options for the tag, throwing an exception if there are already multiple options defined during the filtering process.

37398714		checks if the object is of the expected class and if not, throws an exception. Then, it tries to get the result of the object using the getObjectResult method. If successful, it returns the internal value of the result, otherwise,
37398723		retrieves the property result of the specified type.
This method validates the specified property of the object.
SUMMARY
This method is used to validate the type of a property.


37398751		retrieves the value from the specified JSP tag, either by evaluating it as a collection or by directly fetching it in the page context.

This method evaluates the value of the specified tag, either by using the provided expression,
37398788		retrieves a localized string with the specified key.

This method imports a path context into the program context.

This method imports a number context into the program context.

This method imports a time context into the program context
37398789		prints the JSP label for the specified name using the specified tag. If the label is not found, it throws an exception.

This method, testExcludeLabelIncludeDeclaration, creates a new JspWriter object, writes
37398792		handles the end of an XML element, adding it to the stack if necessary, and marking the element as invalid.

If there is no current element, it sets the element name to "context-factory". Then it checks for
37398799		returns a map of factories that will be used to create an XML file from resources. 
This method filters a list of resource classes, applies the filters to the resource classes, and returns a single map of factory classes. 
This
37398801		retrieves the value of a factory property based on the provided resource class and name.

This method returns a map of factory properties.
SUMMARY
This method is used to retrieve the value of a factory property based on
37398821		retrieves an integer value from a configuration file by parsing the input string with the specified delimiter.

This method returns the integer value associated with a given key.
SUMMARY
This method is used to get an integer
37398864		receives a key and returns a double value for the key, or throws a ConfigurationException if the key is of an invalid type.
This method overrides the toString method and returns a string representation of the object.
SUM
37398889		logs a message at the debug level, optionally optionally using the given logging service.

This method attempts to convert the given string into an object and returns a boolean indicating whether the conversion was successful. If the conversion was successful, it logs
37398925		returns a map of ordered resource values retrieved from the parent configuration (if it exists) or from the locale if it does not exist.
SUMMARY
This method is used to retrieve a map of ordered resource values associated with a
37398927		retrieves a localized attribute by name and locale.
This method retrieves an object by name.
This method retrieves an array by name.
This method saves the object by name.
SUMMARY
This method is
37398955		retrieves the value associated with a key or, if it's not present, retries to fetch an existing value. If the retrieved value is null, it fetches the value from the parent locale using the key key and returns it.
37398967		prints the element with the given name, type, and value.

This method prints the textarea tag, which has a name, type, and a false value.

This method prints the textarea tag, which has a name
37399038		adds an item to the order, but first checks if any line items have been saved. If they have, the ability to throw an exception. If the line items are not in the saved order, the bid must be increased or the order
37403681		performs an action based on the event type passed in, which can be MOD, START_READ and START_SEND. It calculates the state of the packet, removes the PWR, and calculates the state by reading the packet data.
37403696		initializes and starts a new thread for each incoming HTTP/IP connection: that connects to each NetworkServerListener on a given host.
A method gets the next client port.
Ex.
The method creates an instance of a User.
37403716		plays a sound file specified by the parameter "file" which can be a file with the file name "sound.raw", a volume of 100, a pan of 100, and a sample rate.
This method sets the player's volume at
37560632		checks if a given point is within the grip bounds of the component or the component orientation.

This method checks if a point is within the grip and updates the grip accordingly.

This method checks if a given point is within the grip
37561877		converts a flavor type, its data type, and its data to a string, removing the trailing `\n` or `\r`.
This method converts the data to a Java object, using either a TextTransferData or nativeTo
37561997		loads a tree node from a data transfer. If the data transfer contains a string, it is converted to a string using the getStringFromTransferData method. If the transfer is a string that it is converted to UTF-8. If the
37562175		 deselects the specified control and updates the selection based on the new list of items.
If an item is selected from the list, the selected item is deselected.
If no item is selected from the list, the focus is set
37562186		gets the background color of the widget and returns it as a Color object.
This method returns the background color of the widget.
This method returns the background color of the widget if the widget's background is null.
This method returns the
37562189		returns the string at the specified index in the widget.

This method checks if the widget is initialized or not.
If it is initialization, the method then gets the widget, then gets the text from the widget.
It then
37562212		returns the height of the selected text in this widget, or -1 if there is no selection.
This method returns the maximum size of the text based on the maximum and minimum elements of the widget.
This method returns the minimum size
37562232		retrieves the foreground color of the widget associated with the given handle.

This method checks if the widget has any items, finds the foreground color of the parent widget using a custom font matcher to construct the foreground shell, and then
37562267		removes selected items from a combo widget. It first checks that the widget is valid, then removes items that are not removed from the combo based on the specified conditions.

This method removes selected items from a combo widget.
It first
37562275		removes the specified value from the table. It iterates through the rows of the table, starting from the first and ending with the specified value and extending the combo box. For rows, it iterates through the columns, modifying the combo box
37562306		returns the index of the TreeItem in the list of TreeItems.
SUMMARY
This method is used to find the index of a TreeItem in a list.


37562312		is used to highlight a focused widget below another widget and updates the UI accordingly.

This method ensures the text cursor has positioned within the widget and selects the previously focused widget.

This method adds a text control to the text display,
37562335		sets the checked state of the toolbar and its children to the specified boolean value, marking each child as a checked state. It also checks its parent's tree validity and adjusts the parent's node's state accordingly to mark any child as a selected state
37562341		expands or collapses a node in a tree based on the provided boolean value.

This method handles key down events and checks if there are more input listeners. If there is only one, it handles selection keys and the actual user selection.
37562345		sets the text of the label widget to the specified string, ensuring that the displayed text is valid.

This method updates the text of the spinner widget to the specified string.

This method inserts the specified string into the widget.
37562348		sets the font of an item and updates the font contents accordingly.
This method adds a child widget to a list and sets the font of the child widget.
This method adds a view change listener to a view component.
This method processes
37562363		sets the foreground color of the top widget. If the widget is not disposed, it checks if the widget can move down, if so, it adjusts the size of the background image, clears the background image, and sets the foreground color. It
37562374		sets the values of the widget.
SUMMARY
This method is used to set the widget's values.


37562376		sets the grayed state of the widget and fires a TreeNodeChanged event when the widget is removed.

This method updates the grayed state of the tree by updating the grayed state, checking if the widget is selected, and updating
37562496		This method deselects an item in a list and updates the selection model.
This method deselects all items in a list and also deselects the selection model.
This method removes an item from a list and also removes it
37562520		sets full screen mode for a shell with a progress bar and maximized property. If a shell is specified and maximized, the maximized property is set to true. Otherwise, the visible property of a splash dialog is set to true if the
37562546		retrieves the TableColumn at the specified index.

This method checks and sends a request for new cell contents if the cell is editable and the column count is valid.
SUMMARY
This method is used to determine
37562566		sets the background mode of all children controls and updates their visual appearance.

This method toggles the background mode of the control and updates its appearance if the new mode is different from the current mode.
SUMMARY
This method
37562648		sets the image for the handle of the abstract button and redraws the parent content after setting the image if not null.

This method handles the icon update event when the ImageModel changes. It updates the handle if a new image is
37562725		This method retrieves the text of a widget, or returns an empty string if the widget is disposed or if the widget is null. It retrieves the key from the widget and checks if the key is SWT.TEXT_UNDEFIN
37562742		sets the checked state of the widget and notifies any listeners that the table row has changed.
This method handles mouse drag events for the widget if the drag event is not null.
This method handles mouse down events for the widget if the
37562743		returns the root tree item of the parent tree row.
This method returns the root tree item of the parent tree row.
This method detaches the current tree item from its parent tree index.
This method deserializes the object
37562812		returns the number of rows in the table.
This method returns the number of rows in the table.
SUMMARY
This method is used to return the number of rows in the table.


37562841		sets the insert mark for a given TreeItem widget and object.
This method tests the validity of the insert mark in a TreeItem widget.
This method sets the insert mark for a widget to a boolean value.
This method validates
37562850		removes an object at the given `index` from the table by first checking if the object was there, then iterating through the list to remove the object from the table, and finally removing the object from the handle.
This method delet
37562854		finds the index of a given CoolItem in a list of components. If the item is not null and is an instance of Combo, it returns the index of the handle of the item. Otherwise, it checks if the handle of the associated
37562868		sets an array of indices for the trim selection and updates the redraw state based on whether the trim selection is collapsed or not.
SUMMARY
This method is used to set the indices for the trim selection.


37562996		sets the control control for all widgets.

This method sets the active object to the specified object from the list of active elements.

This method sets the active element to the specified element, checking if the element and control are valid.
37563003		sets the dimensions of the widget, removes its previous handle, removes the preferred size of the handle if it exists, sets its position X and Y, and resizes the handle according to preferences, adjusting width and height if necessary.
SUM
37563022		sets the minimum dimensions of various components on the widget (JComponent, JLabel, or JTextArea).

This method allows the user to adjust the size of a given widget in a window.

This method sets the minimum size
37563026		sets the top index of a tree item within a table model at the specified row.

This method initializes components if needed, selects and collapses and moves the cursor, sets the cursor position in the model, and expands the model if necessary
37563059		shows an item in a new position, updating the caret and expanding rows.
This method shows an item in a new position, updating the selection and deselecting the previously selected item.
This method removes the old items and hides all
37563081		returns the cursor location on the screen as a Point object.

This method retrieves the button (JButton) with the identifier "Capture" and returns it.
If the control button with the identifier "Capture" is not found
37563082		calculates the maximum width of a widget's border based on the bounds of its children and any child controls.
This method will first calculate the total width of multiple widgets and then will add the maximum width to each of the widgets.

37563083		returns the width of the widget.
SUMMARY
This method is used to retrieve the width of the widget.


37563101		sets the hot image for a control, checking widget and tool events and updating controls accordingly, including setting tool icons and images for buttons and images from the control's style and size.

This method sets a tool item based on the selected kind
37563236		inserts the provided string at the current caret position in the text component. It checks if the object is active and if so, provides valid input. If not, it checks if the object is active and if so, provides valid input.
37563328		constructs a text area with the specified text as its content.

This method sets the top bottom of the document structure to the specified position.

This method sets the left top of the document structure to the specified position.


37563332		adds a shape with specified dimensions to the canvas. If the current drawing area is null or if the current layout is null, a new object is created, the shape has been added to the canvas, the color is set to null, the
37563344		maps a point from one to another by converting the coordinates from one point to another, then mapping the point using the provided mapper. If the mapper is not null, make a path in the device to get the path information, and returns
37563349		calculates the bounds of a graphical edit part.

This method represents the bounds of a rectangle of a specified rectangle.

This method returns a new instance of the MultiEditWidget class.

This method creates a new control
37563361		calculates the graphics space between given addresses by intersecting them with the graphics area of the widget. It checks if the space has not been garbage collected before or if the handle is disposed. If so, it returns. Otherwise, it calculates
37563374		creates a new Transform object with the specified m11, m22, dx, dy, and x, y, and z coordinates.

This method converts a float vector to an AffineTransform object.

This method converts a
37563394		subtracts a position from the shape given x and y coordinates and width, height, and width. Depending on the values of the width and height, it handles them specific to the current shape, including zoom, translation, rotation, and
37563421		appends a string to the current document with the specified font and location.

This method converts an SWT figure to a string.

This method draws a string in the SWT document.

This method iterates over the
37563862		draws an oval shape on the graphics context of the current handle and renders it all at the specified coordinates, except the end.
SUMMARY
This method is used to draw an oval shape on the graphics context of the current handle
37563973		repaints the widget, and if the widget is not visible, it repaints the UI. If the widget is visible, it handles the redraw of the widget, and is invoked with a different integer argument.
SUMMARY

37564219		disposes of the graphics object, draws a rectangular or narrow square around the specified location and size, and prints the dimensions of the graphics object.
SUMMARY
This method is used to draw a rectangle around a graphical object.


37564794		sets the value of a boolean variable that determines whether or not to capture the events by setting the capture variable to the current object and updating the capture variable accordingly.

This method is a method that processes the response from event updates. It checks
37564877		fills a rectangle on the graphics context, using the specified rectangle data to the point on the fill row and column of the rectangle, and setting the color or font to the default text string.
This method performs the default paint function for each
37565154		retrieves the antialiasing setting for the graphics device or default value.  

This method retrieves the font rendering information for this object.
SUMMARY
This method is used to retrieve the anti-ali
37565245		retrieves the background color of the widget.

This method clones the palette and background colors of the palette.

This method draws a selection at the grid and state to the mouse cursor.
This method draws a string at the
37565852		converts a Point to a Control.
This method sets alignment of the widget to one of the specified values.
This method sets the position of the widget to the x and y coordinates.
This method initializes the widget with the specified
37566024		returns the cap style of the line used for drawing.

This method determines if there is at least one row in the buffer.

This method determines if there is at least one column in the buffer.

This method determines
37566059		This method returns the border line pattern for a given handle, which includes the line thickness, rounded corners, and vertical lines to be included in the outline paint.

This method returns the border stroke for a given handle, which includes the stroke
37566215		returns the antialiasing hint for text focus. Finally, if the text antialias hint is not set, it returns SWT.DEFAULT and falls back to AWT.ON if the text antialias hint is not
37569400		sets the line width of the specified point for the specifiedline.
This method initializes the graphics context with the given width, line width, color, filling, and border paint.
This method handles events such as keyboard actions or line wrapping
37569567		sets the XOR mode of the graphics context and updates the handle to paint the new drawing.
This method sets the XOR mode of the graphics context to the specified value if the verify XOR mode is enabled.
This method sets the
37723362		checks if a Method object's qualified name starts with "set", by matching a list of fields with the "is" method. If a match is found, it checks if the 'get' method returns true and, if so, returns its
37723409		recursively loops through a file system and directories and creates files in subfolders.
This method extracts the compressed bytes to a file.
This method checks if a given path is already in the parent directory of the current file.

37760449		extracts a Dependency object from a ProjectPom file. It creates a new Dependency object, using the extracted POM file's information and the provided Dependency object. The method then reads the extracted POM file to extract the
37760975		writes a byte array to a file, extracting necessary header extensions, unextracting data, and compression and processing blocks. It also ensures that the data is stored afterward.

This method writes a byte array to an image file,
37762054		adds a range of style attributes to a presentation with the given offset, length, and attribute sets.
This method adds a range of style attributes to a presentation with the given offset, length, and attribute sets.
SUMMARY
37762493		moves an element up one index one position in the list. If the move fails, it stops traversing or returns if the element is the first element in the list. If the move fails, the method sets the maximum index item to the
37824048		paints a splash image and a rectangle.
This method calls the super class's paint method, then draws a rectangle.
This method calls the super class's paint method and then paints an icon.
This method calls the super class's
37824188		notifies DatabaseListeners after calling the databaseChanged method of each listener.
SUMMARY
This method is used to notify listeners after the database state has changed.


37824193		updates the database state, logs the status, and notifies listeners if the server status has changed.

This method establishes a connection to the database and updates the database state if the state has changed.
SUMMARY
This
37824224		iterates through a list of ProgressListeners and notifies each one.

This method sets the up indicator to a progress indicator, loops through an ArrayList of ChangeEvent, and notifies each listener of a specified progress.


37824248		tests quick start and query functionality by sending a query and verifying its status.
SUMMARY
This method is used to test the function of the quick start method by message sending of a database.


37824251		tests the quick shutdown of the database, to ensure that the database is closed after the first event is logged.
This method calls quickStop first to notify listeners that the connection has been closed, then calls makeTmp and m_dataSources
37824254		starts the database, ensuring it is open, starts a database listener, and asserts that the database is open after starting it.

Finally, it asserts that the logger is initially low and uses an assertion to verify that the event details can
37824256		tests the shutdownDatabase method of the DbListener object by shutting it down and checking the database state after its closing.

This method tests the exception and error messages of the DB object methods.
SUMMARY
This method is
37824382		performs a JAR file operation where its name, version, and date of service can be specified.  If an IllegalArgumentException is thrown, this method deletes the service.

This method deletes an audit log entry.
37824394		creates a service with a given server configuration URL and command.

This method either adds a database, connecting to a database, or adds a new database, connecting to a database.

This method logs the call to LOG method.
37824405		is responsible for writing a 32-bit ENDCENLOC byte for the central directory location to the Zip64 output stream. The method calculates the central directory identifier (ID) and writes the byte, the number of disk with the start of the
37849990		gets the piece at a given coordinate, returning a piece if the coordinates are not known and then calling the searchPiece method for a piece.


This method checks if a connectionable cell is available. It uses the column object's get
37849994		handles clicks on a grid, performing actions such as clearing the selection, scrolling up, or outside the grid, and selecting a game in the grid to display a list of games.

This method handles changes in a grid cell, updates
37850079		places Vacoso pieces on the board and stores them in a hashtable.

This method throws an illegal argument exception when trying to place Vacoso pieces.

This method clears the board and writes a valid line to the output, while
38184386		This method adds a list of aircraft information to a list of aircrafts.

This method tests the initialization of a aircraft with a list of specifications.

This method tests the initialization of a aircraft with a list of aircraft specifications that contains
38184409		restores the settings by logging the restore event, restoring the DB configuration from preferences, and logging the result in the text area.

This method logs the restore event, and then calls the superclass's restore method.
SUMM
38184451		handles events generated by buttons on the jwpListPanel, triggering either a click or action based on the button or source.

This method handles button click events, including button action, action command, and action command for left and right
38184461		parses a string containing a string up to five times representing wind amounts and sets the wind's range, direction, and velocity accordingly.
This method populates a wind object with wind values retrieved from the SAX parser.
This method
38184555		displays a dialog for user preferences and logs the action, and then calls the wndPreferences() method to display the user's preferences.
SUMMARY
This method is used to display the user's preferences.


38184596		adds a new segment at the specified index, creates a new RouteSegment at the destination index, inserts the segment at the destination index, and updates the route.
This method manages segmentations within the route if the source index is adjusting
38184599		removes a specified ` RouteSegment` from the route at the given index.
SUMMARY
This method is used to remove a segment from the route at the given index.


38184604		returns a string representation of the object by concatenating the name, elevation of the elevation object, unit of measurement of the measurement object, and a comment.
SUMMARY
This method is used to convert the name, elevation
38184633		returns a string representation of the current object's time in the format "HH:mm:ss".

This method returns a string representation of the time string table.
SUMMARY
This method is used to return a string
38188650		throws an error with an error message based on an error code.

This method logs a warning message.

This method logs a non-specific error message, allowing the user to see different types of error messages.
SUM
38220868		handles user actions, including an "About" button, "ModuleProperties", or "ActionPanel" message. It checks the command associated with the event and executes different actions based on the command name.

This method handles window closing
38220934		This method initializes the GUI components for the entity, including setting the panel, initializing labels, and setting the panels.

This method initializes the GUI components for the object, including setting the panel, label, and scroll pane.
38220941		loads an HTML document specified by a URL into a text field and populates it with data from the URL.

This method loads the help content from the URL if the helpUrl is not null or empty.

This method loads the
38220943		initializes the application by setting the window mode to work contents, initializing the app, setting the frame location and size, and configuring the components.

This method initializes the application with a `JComponent` initialized by invoking the
38220944		displays a save file dialog, saves the file if the user confirms the selection, saves the text in the text pane with the extension ".txt". If the user chooses to save changes, it writes the file to the file chooser.

38221008		retrieves an array of a list of available modules and all modules from various groups. It then loads those modules using the modulesLoaded method.

This method appends a title and description to a form, indicating that all modules have
38221061		adds a panel to the tabbed pane with the specified caption and component.

This method accepts an ActionEvent e and sets the value of the button based on the event's source and the text of the button.

This method
38221096		returns a string value associated with a given key, with the option to fallback if the key does not exist. 

This method creates a new instance of the UserDefinedType by getting the string value from the specified bean and
38221216		handles changes in a tree selection, gets the selected item, and based on that, calls a different method to display a module or a main form accordingly.
SUMMARY
This method is used to recursively get a selected
38221257		searches for an internal frame (CFrame) associated with a given module and returns it if found, or null if not found.
SUMMARY
This method is used to find an internal frame (CFrame) associated with
38221276		creates a print tool bar and adds it to the toolbar if it is null.
This method creates a print button, sets its properties, and adds an action listener that creates a tab element.
This method creates a print tab component,
38221286		removes a control from the environment and notifies any listeners about the change.

This method removes a control from the environment and sets its context.

This method removes a control from the environment.

This method removes a control
38221329		creates an HTML help tabbed pane with three tabs: "Help Contents", "Help", "Home", "Password", "Preferences", and another tab with "Help" and "Preferences". The method returns the first pane containing the
38221331		retrieves the mnemonic for the given key from a string resource and returns it if it exists. Otherwise, it returns the default value for the key from the context's main form.
SUMMARY
This method is used
38221365		activates the module on the form by setting its parent desktop and activating the module.
This method activates the module on the form and delegates the activation to the internal frame activated method as an InternalFrameEvent.
This method releases the desktop associated
38221370		overrides the internalFrameActivated method from its superclass and sets the main form's frame to null. It then calls the internalFrameDeactivated method on the parent desktop. It also deactivates the module and fires an event to
38221375		loads a Java Plugin configuration by reading an XML file, extracting common elements like width, height, buttons, and action classes. It creates the panels and toolbars and loads attributes from the XML file. It also loads toolbar parameters from XML file and
38221404		This method reads an XML config file and parses an XML node representing the service provider. It then populates the state with configuration information for the service, including name, company name, address, status, priority, and location.

This
38221420		calculates the cross-tracted radius around a point specified by a reference point.

This method calculates the center point of a given point.

This method calculates the radius of a given point.

This method calculates the
38221424		removes a service definition with the specified type from the map of service definitions. It returns whether the removal was successful. If the definition was found, it removes the definition from the registry. If the removal was unsuccessful, it unregisters the
38221435		draws theSecArrow element with a dark gray line at the center point of the circle at the given radius.

This method takes a Graphics2D object and an angle value as arguments and returns the angle value.

If
38221452		is an event handler that gets the source of an event and checks if the event source is a JButton. If it is, it calls the sweepBar method with the index of the current button.
This method handles actions related to automatic recording
38221459		is called `paintIcon` and it paints a value of `invalid` on a given column. If the value is null, it does nothing. It then draws the value of `invalid` on the given column as separate lines
38221479		searches for a text field with the given name in a list of items and returns the index of its associated button if found.
This method invokes the cancel action in response to an event, which will display a message dialog and cancel
38221480		sets the preferred size of each JButton in a given Container to a given width.

This method ensures that the preferred width of all components in a given Container is initialized with the current width before setting this width.
SUMMARY
38221485		continuously reads input from the server and prints it to the console, while also starting a receive loop until the stop flag is set to true.
This method continuously reads input from the server and prints it to the console, while also starting a
38221496		takes in a calendar and checks if it is nullable or visible. If it is not, it returns the index of the first day of the week.
SUMMARY
This method is used to determine the day of the week
38221497		sets the height of the buttons in a panel based on the preferred size of the buttons.

This method sets the height of all buttons in the panels to the specified height. It also sets the preferred size of any JButtons in the
38221499		returns an iterator over the children of a given CModule except for the one with the same parent.

This method returns an iterator over the modules of the given parent.

This method returns an iterator over the modules of the parent
38221505		returns a component based on the name of the component. If the name is equal to "COutlookBarItem", it returns the component of the given CContainerItem. If the name is equal to "COutlookItem", it
38221512		returns an iterator that iterates over the elements of the current module list, including all modules.

This method returns an iterator that iterates over the elements of the given module list.
SUMMARY
This method is used
38221513		adds an ActionListener to a set of buttons associated with a container.

This method adds a key listener to all the components of a container.

This method takes a panel as a parameter and adds an ActionListener to all the
38221526		puts a module into a Swing application with a module later in the application with the parameters set in a map.
This method checks the data associated with a module and its dependencies before overriding some of the internal properties.
This method retrieves
38221537		adds a digit to a string if the value is not empty and different from "0" or "1", otherwise they are set to the same value.

This method executes an action, returning the result of the corresponding string command.
38221572		sets the look and feel of the plugin and updates the menubar, creates the root menu and checkboxes table, and sets the title and message.

This method sets the system look and feel for the plugin if the current look and
38221618		handles the unhandled text edits, adding the edited text to the undo list, setting the caret character to the end of the edited text, resetting the caret position, and undoing any remaining text that is not empty.

38221686		takes an index and a length as inputs, and formats the score at the specified index using the formatsString() method from the players array, returning the formatted score as a string.

This method takes an array of integers and returns a
38221698		takes a string of text and a position, and determines if the text contains an unclosed comment. If it does, it replaces it with the previous comment at that position. If it does not, it replaces all non-comment lines without
38221711		handles mouse movements, based on the source of the event. If the source is the component, it checks for mouse movement and adds it to the handle. If the source is a label, it displays the label. Otherwise, if the event
38221715		updates the left table of an object if it exists.
This method updates the left table of the object and sets its class property without specifying it.
SUMMARY
This method is used to set the table of an object about
38221731		sets the leftTable to the specified CTableBox, removes the current leftTable from the rightTable if it is not connected, removes the rightTable from the leftTable if it is not connected, adds the current rightTable to the leftTable
38221761		navigates the scanner to the next token while checking for end of file tokens without encountering comments.

This method returns the next token from the scanner.

This method advances the scanner to the next token until a non-whites
38221768		inserts the input string at the specified position, handling variousInsertions and handling delimiters, numbers, and values.

This method inserts the expression value at the specified position, ignoring any invalid input.
SUMMARY

38221772		fills a text component in a table row with a function text, inserting the function into the first row of the text.
SUMMARY
This method is used to insert a function into a single row at a specific position in a
38221797		updates the location of the mouse when the mouse is dragged.
This method checks if the mouse is a link with an editor and if so, it updates the target references for a link object.
This method checks if the mouse is a
38221828		wraps `\'s left slashes with '` and '%\' symbols, and if there are more than one character in the input string, it adds a closing quote to each single quotes one by one and one otherwise.
SUM
38221829		updates the shapes and the links in the diagram model by iterating through them and updating all of them in order to update the diagram labels and table item model.
This method is used to update the diagrams by notifying them that diagrams contain
38221835		converts a point to a parent location, adjusting based on its location and its size and owners.

This method takes a y coordinate and a line height value as inputs and returns the bounding box of the owner.
SUMM
38221860		draws the background and axes using the graphics object passed to it.

This method adds a default column number, sets the size of the image, initializes the `add` button panel, and adds various components to it.


38221862		extracts the next token from the input text, marking the end of the input. If the output doesn't contain a token, it runs a block of code. If the output contains an unknown token, it may handle all unknown tokens.
38221864		performs Iif function on the given series of three operand expressions and returns the result as a CVariant object.

This method takes a Stack object as input and returns a CVariant object. It first uses the getValue
38221883		initializes a map and iterates over the coordinates of the outer cells, moving each cell one row by one.
SUMMARY
This method is used to load a map into account by checking if any cells have the default background color
38221891		initializes a lexeme and its attributes based on input from a list of sequences, and then repeats the process until the end line is reached.

This method, `outerProcLineComment`, writes a comment to the lexeme including
38221933		returns the element at the specified index, or null if the index is out of range.
This method returns a vector of elements that are present in the collection.
This method returns the element at the specified index, which is either the
38221935		sets the expression string and searches for the next non-whitespace character or semicolon, and throws a runtime error if not found. It sets the value to null and advances scanning position. If the token is a keyword, it throws
38221963		takes a stack, evaluates the stack by retrieving the result type and value from the stack, calling the functionOnDeg() method on the corresponding object represented by the value.

This method calls the functionDeg() method on the
38221972		takes an array of arguments, parses them to extract a function. If the function name is "MATH", it returns an array of CVariant named "meth" which represents the star of a function. If the function name
38222007		analyzes a C++ expression by checking whether there are more tokens and then checks if the current token is NOT.
This method processes a C++ token, then checks if the current token is NOT and performs different actions based on that state,
38222032		analyzes a given expression by checking command syntax and tokenizing it until a valid command is found, then continues to the next token.
This method is the main method of the Java program. It handles various actions, including expression parsing, expression
38222049		swaps the values of a stack. It throws an error if the stack is empty, then swaps the values of the first and second stacks. If neither of these stacks an error is raised.

This method tests the swapValues method by
38222110		prints the stack trace of the specified exception to the specified print stream.

This method prints a message using the default print writer provider and calls the parent's print stack trace method.

This method prints an exception message using the default print
38222111		prints the stack trace of an exception, along with the stack trace of its nested cause, to the given PrintWriter. If the root cause of the exception is null, the method prints the stack trace of its nested cause to the given PrintWriter
38222121		returns the value of a property as an integer. If the property is a custom integer number with four integers, it returns 1, 0, or the integer value of the value. If the property is a string, it returns the string representation
38222122		converts a string value to a double. If the string value is empty, it returns 0. If the string value is not a number, it returns the double value. Otherwise, it returns the string value as a double.
SUM
38222153		sets the array of calling CVariant (if they exist) operation type to this CType.ARRAY value, otherwise it sets this CType to null.
SUMMARY
This method is used to set the array of calling
38222160		closes the module, iterates over all modules in the module container, closing the current context and all of its modules to unset their context queries, ensuring that all modules are successfully removed.

This method checks if the list of modules
38222170		returns a collection of ClassNode objects representing the children of the current node.

This method returns a list of child module nodes that reference a given module.

This method returns recursively iterating through the children of the current
38222171		closes the application, disposes of the application instance and closes the script node and module container.

This method initializes the application, defines the action menu, menus, and various other settings for saving applications, as well as the build
38222179		takes a collection of module nodes, recursively gathers child nodes, wraps each node in an unmodifiable collection, and returns the modified collection.

This method retrieves an iterator of module nodes that do not have modules from a
38222188		sets the type of an object array to the specified value.
This method sets the value of an object array to only include objects that are present in the given value.
This method sets the current object to the specified value.
This method
38222242		explains through damaged information in a collection and prints it to the console.
This method expands all the directives in the collection and prints information about each directive before removing it.
This method creates a new clean clean object based on the provided manager
38222243		returns a collection of all close fleets that pass a fleet to its fleet.
This method iterates over the fleets collection and returns an iterator over the fleets array.
The iterator is synchronized and the fleet value contains the fleet that passes the
38222285		checks if an object is in a collection.
This method returns the total number of elements in the collection.
This method returns the value of a field.
This method returns whether or not a list contains a non-null object.

38222292		asynchronously ExplorerDamages are stored as collections ofSHIPs from the host manager.


38222302		returns the ModuleExecutable of the current module definition's executable or null if it doesn't exist.
SUMMARY
This method is used to obtain the current module executable or return null if it doesn't exist.


38222310		sets the moduleNodes variable to null and also sets the map.
This method first creates a new moduleNode which is a container representing the main module node. The main moduleNode is a root node, and the moduleNodes variable is
38222313		clears all fleetoots, retrieves ships to repair, and releases the ships to restore values from previous calls.

This method calls the repair method of the ship object to remove all ships from the fleet roots.

This method removes
38222319		checks whether any ships have been destroyed by checking the presence of destroyed suspended ships and their total counts.

This method returns a boolean value indicating whether any ships have been destroyed or not.
SUMMARY
This method is used to
38222328		resolves the entity and its parameters to obtain the public and system identifiers, resolves any system identifiers in the environment to get the DTD (Quick and Advanced Dtd) file, and resolves the DTD to the new file.

This
38222333		assigns an absolute identifier to a module node, skipping module nodes and assigning nodes and children.
SUMMARY
This method is used to reassign modules with child modules or using their absolute IDs.


38222337		releases all ship modules by restoring their module references to free resources, restoring its ships to free resources, and releasing them over or over the parent module reference.
SUMMARY
This method is used to release ships from their parent modules
38222484		prints and prints messages related to errors encountered during XML parsing, without throwing SAX exceptions. 
This method prints a warning message to the debugger and includes the location of the warning.

This method is used to print out warning messages
38222487		loads an object from a stream using a SAX parser. It declares SAX4J2 with the SAX stream or just throws an exception if an error occurs while parsing the stream. Then, it creates a SAXEvent object and adds
38222490		opens a resource file in the specified location if the file is not null and fails.
This method attempts to open a resource file using the specified filename if it is not null.
If the file exists, it opens the file using a File
38222492		checks if the file name of the input file is a URL by attempting to open the file using a URL object and catching any exceptions that may occur. If an Exception occurs, it returns false.
SUMMARY
This method is used
38222499		takes a word as a parameter and returns the first character of that word of the phoneme file. If the word starts with a phoneme, it looks up the word associated with that word by using its start character.

This method
38269511		creates a Word object based on provided arguments. It creates relationships between words and performing various helper operations. This method also initializes synset and senseCount based on the passed parameters. </p>

This method initializes words and sense
38269749		tests the indexing of speech word and verb word classes to ensure they have been correctly indexed.
SUMMARY
This method is used to test and verify the compatibility of an index word with a list of letters.


38435051		runs the installation wizard, displaying a busy indicator while using the SWT screen, allowing the installation of the wizard.

This method locks the progress monitor process while an error is returned and logs the error message, tries to download the location,
3845550		finds a table in a schema that matches a given table name. If the schema does not exist, it returns the schema name specified by the user.

This method creates a table in a second table of a second schema in a second
3845552		finds a schema by its name and returns it if found, otherwise, it returns null.
SUMMARY
This method is used to retrieve the schema associated with a given schema name from the database.


3845644		determines if the table is a primary key by checking that the table's primary key is not null and there is an existing entity in the table.

The method then checks if the primary key is a simple primary key by first checking
38469584		trims whitespace from the first character of a string.

This method takes a string and extracts characters from it.

This method takes a string and converts it to a specified character.
SUMMARY
This method is
38515848		installs deferred breakpoints based on the current state of the ParserLaunchConstants.PARSER_DEBUG_MODEL_ID.

This method checks if the ParserLaunchConstants.PARSER_DEBUG_MODEL_
38515913		updates the content of the selection provider with a new input.

This method sets the input of the selection provider.
SUMMARY
This method is used to update the content of the selection provider.


38524842		calculates the hash code for an immutable pair object by combining the hash codes of its first and second fields, with 37 modifiers for non-implemented fields.

This method calculates the hash code of an array by combining the hash
38531236		initializes the servlet context with the database from the service context.
This method tests the init method of the javax.xml.rpc.ServiceException class, ensuring it throws a ServiceException with a message indicating that an invalid
38531298		tests the getConformanceLevel method of the database service by verifying that it returns the correct value for the "conformanceLevel" property.
SUMMARY
This method is used to assert that the getConformanceLevel method returns the
38531316		is a test method that asserts that the getName() method of the databaseService does not store the first database item in its names array when the first database object is set to 0.

This method is a test method that asserts that the
38531328		tests that closing a collection after the DB service is released is returned false.

This method tests that closing a collection at runtime fails but has various exception types.
SUMMARY
This method is used to check that all the operations
38531329		This method tests the "clear" method of the "resourceSet" object by attempting to clear any empty resources and asserting that the size of the set becomes zero, in which case it will still be clear.
SUMMARY
This
38531334		tests that the request object knows the resource type of the file.
This method creates a file upload request and a file upload handler for uploading content. It asserts that the input "files" contains the expected file. The number of files uploaded and
38531342		tests the getResource() method of the resourceSet class by asserting that the resource returned by getResource(0) is not null and has no resources to check.

This method adds a description to the collection of reports by creating and adding
38531345		closes all collections by iterating through the stored objects and calling the closeCollection method on each collection.
SUMMARY
This method is used to close all collections in the database that are stored.


38531346		tests if the resourceSet has reached its maximum size and inserts two large results into the instance.
This method calls the testGetSize method to test the size of the result set.
This method calls the testGetSize method with a large
38531361		is a test method called "testGetVersion" that tests the getVersion() method of the "Service" class.

This method is a test method called "testIterateValues" that tests the iterateValues() method of the
38531429		performs a test on the getXPathQueryService method by executing various assertions. 
This method tests the getXPathQueryService method by calling several other methods, such as getXPathQueryService, copy, getXQueryManager
38531455		sets the endpoint address for the specified port name. If the port name is "nmmrdb", it sets the endpoint address using the "http://localhost/RDB/RDBPort" service. If it is "dbsql
38531514		clears the namespaces from the remote services.

This method checks if the service has any namespaces.

This method clears the namespaces of the remote services.

This method clears the namespace of the service by deleting it
38531516		returns the namespace of the given prefix prefix mocks up to the given test.
This method is used to determine the namespace associated with the given ID and ID name.
This method updates the URI and base uri (URI) and
38531519		removes a specific namespace from the database, throwing an exception if the namespace was not found in the database or if there is an error accessing the RMI it sends that namespace.

This method unwraps the specified namespace from the standard
38531521		sets the namespace for a given service and prefix, with an optional URI.
This method clones a name and URITemplateQName using a SimpleNamespaceResolver, then sets the new one.
This method clones a name and
38531533		retrieves the document ID from the remote service and handles RemoteExceptions, returning void.

This method obtains the content view of the activity and parses the XML response. It retrieves data from the XML cursor, and processes
38531542		is used to close the current connection after calling the `close` method on its `stub` object, passing `this.collectionTransport` argument.
This method also closes the `stub` object itself, and if an error
38531543		determines whether a given user agent is present in the database. If the URI is not found in the database, the method attempts to ask the database to check the validity of the user agent and return true if it is found. If none
38531545		retrieves the conformance level of the calling object.

This method returns a string representation of the object.

This method returns a string representation of the object, it does this by calling the getConformanceLevel() method of
38531549		retrieves the next available ID from the database. If no available ID is available, it creates one using the createId method and sets a flag to true.
SUMMARY
This method is used to create an ID using the
38531551		returns the name of the resource, which is the resource associated with that name or the original name if there is a problem with the remote server
38531557		clears the underlying resource set and then calls the setStatus method on the current service in handle the call.
SUMMARY
This method is used to ensure that the underlying resource set is updated with and cleared in handle the call.
38531558		returns the stored size of a resource. It first checks if the remote service reference exists locally, if it does not, it creates a new one using the xmldbStub, calls the getSize() method on the result,
38531560		returns the number of child collections of the current node.

This method throws an exception if the stub attempts to get the count of the current node.
SUMMARY
This method is used to get the number of child collections
38531562		removes a resource at the specified index from the XML database.
This method removes a resource from the XML database.
SUMMARY
This method is used to remove a resource from the XML database.


38531583		throws a XMLDBException and returns a string representing the property of the call object.

This method is called perform.  this method will have been implemented asynchronously.

This method logs a message and performs actions based on
38531597		retrieves the resource count from the collection transport.
This method returns a collection of the resources that can be updated.
This method returns an integer value.
SUMMARY
This method is used to retrieve the resource count from
38531598		This method tests the getId() method of the ResourcePack class and prints the IDs of the created Resources object to the console.

This method creates a defaultResource class with the specified package name and class to be tested.

This
38531616		checks if the current instance is open by attempting to call the isOpen method on the stub named instance of the collection transport and returning a boolean value.
This method asserts that the current instance is not null and closes the Xmldb object
38531636		tests that the getContentAsSAX method of the Resource class accepts a null parameter.
SUMMARY
This method is used to test that the getContentAsSAX method of the Resource class accepts a null parameter.


38531650		tests setting a resource as a node, expecting an exception to be thrown with the message "No Resource node available" and a placeholder for additional information.
SUMMARY
This method is used to test when attempting to set a null Resource
38531652		This method tests the ability to read/write documents of an output source, including a source at the start of the DOM parsing and the validity of the root element.

This method tests the ability to store a document tree in a binary object
38531653		This method creates a new XML file with a "testfiles/testCaseInjectorTest.xml" file and includes a test for bean injection.
This method creates a new XML file with a "testfiles/testCaseInject
38531656		is a test case that calls the testGetUrl method of the handler and prints the return value.

This method tests if the getUrl method is working properly.

This method tests the callback method of the handler.

This
38531663		This method prints a test message and then retrieves and then prints a URL string from a handler. It then asserts that the URL string contains a specific value in both streams.

- This method prints a test message and then retrieves and
38531670		This method is the entry point for the Java application and provides comments on how to use the Java API methods 'testSetUrlString', 'testGetUrl', with the following test methods:
- usePostConstruct method.
- useFirst
38531674		This method tests the method "getMillisBetweenChecks" of the "TimeChanger" class by calling it and verifying that the returned handler time is 0.
SUMMARY
This method is used to verify that the handler
38531679		sets the milliseconds between checks to 5 and prints the test name using the System.out.println method.
This method also sets the milliseconds between checks to 5 and asserts that the expected number of millis in all checks list is correct.

38531798		returns the service with the specified name and version as a service descriptor. If the service does not exist, it returns null.

This method loads a resource from a binary resource based on a package name and a name. This method loads
3860496		checks if two objects are equal by comparing their "id" properties.

This method compares the current object to another object. If they are the same, it compares their "id" properties, and returns a negative integer, zero, or
3860512		tests user credentials by authenticating two sets of provided credentials using the userService, and then checks that the retrieved information is correct for specific key combinations using the USECredentialInformationProviderTest.getClass method.
SUMMARY

3860540		tests the 'authenticate' function of the 'Am PUBLIC' UserAuthenticator class. It validates that the user's credentials are valid for a login.

This method tests the 'authenticate' function of the 'Am PUBLIC'
3860543		tests the authentication of a user with an empty username by asserting that the user is not authenticated and has an empty username.

This method tests the null username and verifies that an IllegalArgumentException is thrown.

This method tests
3860554		tests the login functionality by creating a LoginContext with a bad password and catching a LoginException if the login fails.

This method is a test method that tests the login context with an invalid password and expects a LoginException to be thrown.
38735825		encrypts a string using UTF8 or encrypts it using the provided cipher, verifying the provided password and URL, and returns the encrypted string.

This method checks if the password is null, and if so, returns null.

38735827		takes a string, decrypts it using a Cipher object, decryptates the string using a DHPublicKey, and decodes the decrypted string using the DHPrivateKey. If the decrypted string is too long, it
38736046		signs out a user by removing their associated users from the client's list of connected clients, assigning their status to a "signed out" state, and updating the user's status in the client's group list.
SUMMARY

38736684		creates a new user and persists it to a database. If the login token is invalid, it expects an exception. It also checks the authentication token for valid user object and checks for invalid credentials. If valid credentials are found, it creates a
38737384		sets the security mode of a security layer, with an optional operation.

This method sets encryption mode for a security layer, allowing or rejecting users with different modes.

This method sets the security mode for encryption, allowing users with different
38755680		returns a string representation of the target vertex's type, either "neighbours" if the source vertex and the target vertex is a vertex and the edge type is edge, "contains" if the source vertex and the target vertex
38755877		checks if a term is in the system with a given mapping.
SUMMARY
This method is used to check if a term is in the system's scope or an top-level term with a given mapping.


38755898		performs partial combat attack for a vertex considering a list of graph edges. It creates a new set of edges to allow for the attack of the vertices and edges with a maximum number of copies of the deleted edges and uses a thread to execute
38755918		creates an edge in a graph structure based on the target vertex, type, and iterations specified. If the type is not determined, it creates a new empty node and adds it to the root vertex, along with updating all its predecessors and connections
38755926		removes a specified edge from the graph graph and propagates the removal of the edge.
This method removes the edge from the graph.
This method removes the cell directly from the graph.
This method removes the cell from the graph.
38756046		returns a comma-separated string of the current action logs for each attack action in the current log
38756063		navigates the current command queue to that slot and then invokes the firstAction method, if the current command queue is not empty.
If the current command is not invalid, it enters a switch case here.
If the current command
38756064		retrieves the previous action from the list and moves it to the previous one, then reverts backToPreviousStates() and notifies observers of the last action.
This method checks if the elements in the list match the specified collection,
38756065		clears the state of the class, resets the damages array to null, and creates a new HashMap that holds the given ArrayList of ActionCreatures. It then clears the clears field and adds the original action to the this HashMap
38756081		adds a vertex to the graph model, identified by its name, and returns a null value to indicate that the vertex was not added.

This method takes the vertices in the given graph model and sets the empty edge weight.

38756090		creates a policy using a specified type, identifier, location, credentials, identity, and deployment cost. It also updates the policy's lifecycle and saves the new policy if it exists.
SUMMARY
This method is used to
38756178		creates a panel with three tabs, each representing a different policy.

This method updates the UI elements and displays the panel.
SUMMARY
This method is used to display the panel.


38817248		runs continuously, updating the current position and velocity of the object, ensuring that it stays within the display's bounds, does so, and performs actions based on the current state of the object (run, move, or resize,).

This
38817324		deletes a BaseDataObject from the base table if it exists.
This method deletes a BaseDataObject from the base table.
This method tests the delete method.
This method tests a delete operation in the source metadata definition.
38817390		sorts the values in the showValues ArrayList for ascending natural ordering in a sorting algorithm. If the showValues list is empty, it adds a new String object to it. If the showValues list is not empty, it moves the order
38817445		creates a menu item within a specified menu and adds it to a menu with a specified name, action.enumeration, mnemonic.value, option flag, and item label.

This method creates menus for items within a
38846744		adds a command to a PDF page by providing an affine transformation copy to a desired transform.

This method adds the page command to the list of outstanding commands.
SUMMARY
This method is used to add command commands
38847026		overrides the superclass copyObject method to create a copy of the object.
This method creates a new instance of the PDFData class, then clones the fields of the new instance to the old instance.
This method creates a new
38884612		compares two 3D transform objects using the epsilon value for equality.

This method compares two 3D transform objects for equality, returning true if they are equal, and false otherwise.
SUMMARY
This method is
38891720		reads a specified number of bytes from the input stream into the specified byte array. If the end of the stream has been reached, the method returns -1. Otherwise, it calls another method to read the number of bytes.
SUMM
38892315		takes various parameters and initiates a dialog for adding a new user to the system. It enables/disables menu options based on user inputs, sets text panels based on the user's preferences, sets tab size, and disables editing operations
38892362		adds an array of DNPElements to a Vector based on a DCLKElement's addIdV, addTag, addDnPElement, and addIdTag.
This method fills in a Vector with DTLObject's
38892386		returns the index value of the group that contains the byte to which the group contains.

This method returns the index value of the group that contains the byte to which the group contains.
SUMMARY
This method is used
38892394		sets the binary inputs to invalid and resets the counters to their default values if they are not null.

This method overrides the `setElementsToInvalid` method and handles only `BinaryStringInput` or `Binary
38892564		increments the offset position by a specified amount, while ensuring integrity and debugging the offset.

This method prints a warning string during some operations, particularly when adding new values to the buffer at specified entries.

This method prints a warning
38892569		decrements the size of the buffer and adjusts the position of the next position in the buffer to accommodate the new size.
This method increments or decrements the size of the buffer based on the provided offset in the buffer and increments or decre
38892570		decrements the marker position in the buffer. Adjusts the buffer, throwing an exception if the number of characters has greater than the maximum character.
SUMMARY
This method is used to adjust the marker position in the buffer.
38892619		ensures that the capacity of an array increases the size of that array by one.

This method converts a list of integers into an array of integers.

This method sets the elements of an array to the specified elements using the elements
38892622		resizes the object to the specified size.

This method sets the size of the element to the specified value. If the specified size is greater than the current size, this method does nothing.
SUMMARY
This method is
38892640		opens the modem if it is open, otherwise it opens the connection, initializes data and parses the input stream using a parser callback, passing these data up to the callback.

**open** method opens the modem.
SUM
38892665		closes the modem connection, writing the modem connection to a byte array and sending a MIDI message.
SUMMARY
This method is used to close the modem connection, writing the modem connection to a byte array and sending a MIDI message
38892689		removes the element at the specified index from the list.

This method returns the last element in the list.

This method returns the next element in the list.

This method removes the element at the specified index.

38892694		inserts an object at a specified index in an array of objects.

This method inserts an element at a specific index in an array of strings.
SUMMARY
This method is used to insert an element at a specified index
38892719		returns either the existing RecordStore instance or creates a new one if it does not exist.

This method opens a RecordStore instance. If it cannot be opened, it attempts to open one. If the instance cannot be opened, it
38892986		registers a listener for objects that are in the active databases. If the system is running in a non-mac application, it registers the listener for all instances of DigitalInput. When a specific Mac (Mac) command is received, it registers
38893091		stops all threads running by calling the tearDown method on its superclass and then it closes the poll service and event service class.

This method closes the poll service, shuts down the event service, releases any waiting threads, waits for
38893197		initiates the modem event and hides the loop when simulating an active modem (MODEM) occurs.

This method is used to stop active modem when done.

This method is used to log the stop event for the MID
38893321		initializes a series of fields to null or blank arrays to hold the server IP and port.

This method sets the server name and domain for each client in the client list.

This method sets the listening port for each client in
38893338		reads a specified number of bytes from an input stream into a byte array. If the byte array can not be read, a byte array is created and copied into it. If the byte array is too small to hold all its bytes, the method
38893360		dumps the data contained in the packet into the output array.

This method prints the received number of bytes received. If there is more data, it prints an error message for the maximum number of bytes allowed. Otherwise, it prints the
38893372		logs a Rcv event with the supplied event number or if DEBUG is true, it transmits the event to the ppp server.
SUMMARY
This method is used to transmit a Rcv event to the ppp server
38893411		skips a line that follows a specified character in the data stream, where the data stream contains a sequence of bytes, a chunk.
SUMMARY
This method is used to skip a line and skip bytes until a framing character is
38893463		sends a chunk of a specified size and offset with a specified length.

This method sends a chunk of data to the output stream.

This method sends a chunk of data to the output stream with the specified chunk size.

38893498		writes a single byte to the buffer, resizing the buffer if necessary, and flushing any remaining bytes before doing so.
This method reads one byte at a time and writes an acknowledgement.
This method reads a single byte at a
38894123		runs the program, which loads a data set into the chart of the application, and writes it to a specified file using the KFM library. It performs continuous processing on the data sets and calculates the time taken to process the data. If there
38894295		scans a character array for an identifier.
SUMMARY
This method is used to scan a range of characters from an input array.


38894407		creates and returns an object from a KXMLElement node, which contains the output protocols.

This method extracts the variables part of an object document from the input element.
SUMMARY
This method is used to extract
38894424		This method converts an input IPData into a 4-XML representation of an IPData object, including a protocol, a sequence number, and a loop bit and a retry check. It includes data type, block, error condition
39120256		overrides the default toString method and returns a string representation of this message. It includes an error message if the message is invalid.

**getMessage**: This method returns a string representation of an object. It converts the object
39120306		replaces all occurrences of a given string with another string and returns a list of the resulting strings.

This method replaces a given string with another string, returning a new vector containing all the replacements.
SUMMARY
This method
39120328		returns a string representation of a regex pattern. It includes the pattern, region, and last match of the pattern.

This method returns a string representation of the object, by appending various fields to a string buffer using a different field
39120374		takes a string input and a list of strings and returns an array of strings with the first two characters separated by spaces and the remaining characters in the string.

This method takes a normalizer name and converts it to a string.

39121012		returns the next node in a sequence, OR the sequence node.

This method checks if a previous node is null. It then checks if the sequence is null or not empty. If either of these conditions is true, it checks if
39121476		returns the next node in the parsing sequence.
This method skips over any tags that start with the given character, reads tags and sub tags, increments or decrements the last position, removes the tag, and reads the tag and character
39121916		returns the next unread character in the input stream. If the encoding is binary, it reads an ASCII character and converts it to a digit. It then re-reads the CITIES character and returns the result. If the encoding is double
39122011		reads the next 4 digits of a Unicode escape sequence and extracts the values to return.
This method reads the next 4 digits of a hexadecimal escape sequence and calculates the value of u.
This method reads the next two digits of
39122102		creates a node in a graph by creating multiple nodes instead of generating intermediate nodes based on Unicode cases and optionally converting them.

This method transforms input string into a single character string.

This method transforms input string into a single character
39215677		checks if the player's owner is near a defender of a target in their current move.

This method checks if the player is still moving within a certain threshold, if so, the player's position is calculated based on the game's new
39233176		sets the baud rate for the device, ensuring that both required values are non-negative.

This method throws an exception if invalid baud rate values are detected.
SUMMARY
This method is used to set the b
39233183		sets the flow control for the given device or off-screen device. If the device can't be recognized, an exception is thrown.

This method sets the flow control value for the given device.
SUMMARY
This method
39233246		returns the JToolBar component. If the component is null, it initializes it and adds its components to it. Otherwise, it returns the component.
SUMMARY
This method is used to initialize a JToolBar component
39233258		returns the JSplitPane, creating it if it does not exist. It sets the divider location of the JSplitPane to 10.
SUMMARY
This method is used to create a split pane that contains the
39233260		This method returns the panel that is created at the bottom of the Tabbed pane. If the panel has not been created yet, it is created and configured with two tabs, one for the device name and one for the EEPROM device descriptor
39233866		tests the `invoke` method of the `TravelModel` class by invoking it with a dummy XML object as an argument and asserting the result's contents and type.

This method tests the `invoke` method of the "TravelCar"
39233879		tests that calling the invoke method of the ServerCallController will throw an Exception when it tries to invoke another method containing invalid number and the other throw an exception.

SUMMARY
This method is used to handle that it attempts to
39233994		tests the setProperty method, by setting a property and asserting that the correct value is returned. 
This method retrieves existing properties and asserts that the number of elements in the collection has increased by one. 
This method tests the set
39234000		tests the process synchronization by creating a synchronous BPEL process and checking the result.

This method retrieves the value of the `__PROCESS_TYPE` constant from the `valueVariable` attribute of the `ProcessUtils
39234003		tests the dispatch asynchronous by creating a complete BPEL process, handling asynchronous dispatch and dispatcher asynchronously, and finally failing the test.

This method tests the dispatchAsynchronous().

This method tests the dispatching of a
39234072		creates an object from attributes in an XML element. It first reads the partner link, port type, operation, variable, and fault name attributes. It then creates and returns a Reply object containing these attributes.

This method creates an object
39234088		takes an XML element, extracts the partner links from it, and creates a new object using the extracted information provided by extractElement() method.

This method allows an object to be serialized and created using serialization methods for each link
39234090		creates an object from the provided set of XML attributes. It also checks for special names and ensures multi-character characters are encountered. It skips characters that are not listed in the XML attribute until it finds the appropriate type of value to be
39234098		parses an object from an XML element, including attributes such as partnerLink, portType, operation, and variable.

This method creates an object using the specified attributes, partnerLink, portType, operation, variable, create
39234142		creates a correlation with a set name and initiate flag set to true or false.
This method tests the createCorrelation method by creating instances with different configurable properties and asserting the relative values of the values returned by the method.
This
39234524		retrieves the BPEL process for a message, using a DAO before retrieving it from a local EQL cache if applicable.

This method attempts to retrieve a BPEL process by using the BEXeeMessage parameter. It returns
39254457		This method prints the location of the program for saving files or data to the specified location.
SUMMARY
This method is used to save data to a specified location in three contexts: the program program and database.


39254578		checks if the edited field is valid, and if not, it asks the user for input and performs some additional actions if the input is valid.
This method checks if a date exists, and if so, places it into multiple lists, allowing
39254631		returns a sparse panel containing a JTable of JRadioButtons configured to be used as a button in the panel.

This method returns a non-empty panel with a BoxLayout in the specified orientation and contains all the buttons it
39254662		tries to create a thread to run the AggregateTimeSeries constructor, and if successful, returns an integer value. If an exception occurs, it prints the stack trace and adds an assertion error to the errors list.
SUMMARY
39254678		performs aggregation tests if a connection is available, prints the number of iterations, and then attempts to sleep until the stopAction is set to true. If the stopAction is set to true, the loop continues until the stopAction is set to
39254940		creates a GUI for the clustering algorithm. It adds the necessary panels and their settings to the interface, including a button and separator panels, and a split pane for determining the number of iterations. It also initializes the labels for each
39254959		checks if a list of peaks contains at least one element and adds the given area to the peak at which the position in this list is greater than or equal to the given position or the last element of this list is greater than the given position if
39255031		divides the collection by a factor of two input values, and if the input value is 1, it calls the innerDecide method to perform the inner division operation.
This method handles user interactions with the application. It checks if a dataset
39255072		updates the current subcategories of a collection based on the specified coordinates and returns whether the subcategories were moved successfully or not.

This method sets the current subcategories of a collection based on specified coordinates and returns whether the
39255123		sets the pre-clustered flag to true and updates the list of hits. It adds them to the results, sets the main leaf and sub-leaf lists to the list of sub leaf and sub-leaf lists, and adds them to
39255133		compares the contents of two CFNodes by comparing their values.
SUMMARY
This method is used to determine if two CFNodes are the same, which requires contributions to the same value between their elements.


39255274		assigns leaf nodes into each node in the CF model by recursively checking for merge blocks and assigning leaf nodes if necessary.
This method assigns leaf nodes into the model by assigning leaf node pointers to leaf nodes.
SUMM
39255314		sets up the test environment by rebuilding the database, ensuring it exists, building the table, and storing data, including row count, time elapsed, table name, and maximum memory usage. It also creates the test file, adds a function to the
39255326		loads a data set and a table into the JFrame by creating a ProgressBarWrapper, a new progress bar, a JTable, and a JLabel. It then calls the importTableData method on the progress bar to import the data
39255328		returns the name of the SQL file format used for the processing instruction, it creates the SQL file with spaces indentation or underscores if there is no file extension.
This method overrides a method that takes an instruction, and if it's
39255335		recursively prints leaf nodes and the leaves of a CFNode to the console.
SUMMARY
This method is used to print the leaves of a CFNode.


39255412		processes a file, continuously attempting to read the file and create a new collection. If the process is complete, it creates a new particle and adds it to the list of particles.

This method is responsible for importing a given filename into
39255457		recursively checks the path in the tree and updates the `memory` variable accordingly, storing the result in the `lastSearch` variable.

This method transforms the nodes into a string representation, combining them using a specified character or a
39255487		sets up synchronization, ensures synchronization, and if null, retrieves or fills them for the workspace.
This method creates the right window if it does not exist or adds them to the main split pane of the workspace.
SUMMARY
39255516		prints an error message indicating that a program should not be killed in the current running state.
SUMMARY
This method is used to print an error message to the error message displayed in the error output panel.


39255540		creates a grid bag layout without changing the grid rules. It then adds labels to the grid using an array of labels and sets the grid rules for each sample in the vector. Finally, it creates an axis to span the sample as having the
39255579		sets the minimum and maximum x and y values of the axis.
This method parses the name, range and axis bounds from the file and updates the position and axis bounds accordingly.
This method updates the x and y values of the axis
39255745		calculates and returns the bounds of the area for the plot based on the plot's data and various axis settings. It calculates the minimum and maximum values for the x and y axis labels and returns them in a rectangle.

This method
39255758		paints the graphical user interface component by creating a GradientPaint instance from a shape, setting the clip of the paints to a predefined data area and then creating a Graphics2D instance, adding painting functions and painting data.


39255783		calculates the y-coordinates for the legend by using the minimum and maximum values for the X and Y axes.

This method gets the axis title point using the given x and y coordinates.
SUMMARY
This
39255899		increases the value of the list at the specified index by 1.
This method increments the value of the list at the specified index by 1.
This method clears the list at the specified index, ensuring that it remains at the maximum size
39258105		creates an index on a dynamic table with the specified data type and field specifications. Each indexed column is represented using unique constraints to create the index for each table.

This method stores a sparse collection of entities to the table in the database
39258327		retrieves the collection name associated with a given collection ID.
This method retrieves the collection ID associated with a given collection ID.
This method compares the names of two collections.
SUMMARY
This method is used to
39259702		renames a collection's name to a new name, if the new name is different from the current name, it returns true and logs the action, otherwise returns false.

This method checks if the collection name is not empty and if the
39260293		adds a center atom to a specified list of atoms with a given ID and collection ID. It returns true if successful.
SUMMARY
This method is used to allow adding a center atom to a list of atoms with a given
39261900		retrieves the comment associated with a specified collection ID.

This method retrieves the collection ID for a collection ID by combining multiple collections and a set of items. It iterates over collections starting with multiple IDs, returning the first if
39262248		takes an integer argument and returns a string containing the datatype of the collection with that ID.
This method retrieves the datatype of the collection with that ID.
SUMMARY
This method is used to retrieve
39263674		adds a backup file to the database. If the file already exists in the database, it renames the file to the given path.

This method returns a backup file. The path name is the current backup path.

This
39263756		removes a backup file, optionally deleting the temporary directory file.
SUMMARY
This method is used to remove a backup file.


39264053		returns the names of the data type daive in a dynamic table, where datatype can be "dataSetInfo", "dataAtomInfoDense", "dataAtomInfoSparse", "dataAtomInfo", "
39264284		retrieves the next available atom ID among all atom membership members (Atoms). It uses a DatabaseConnection object to prevent locking resources on that connection. If the maximum atom ID is exceeded, it restores the old ID. If the maximum atom
39268883		initializes the database with a randomly generated integer seed and then seeds the database.
This method tries to create a new thread that will run the seeds randomly, setting up a new thread to run the seeds and catching any SQL exceptions that may occur
39268940		prints the number value of the table. It retrieves the double value from the database and prints it to the console.

This method returns the number value of the table. It also calculates the standard deviation if the table is not fixed.
39269336		deletes or creates a temporary aggregate basis for the time bins table in the application. It does so by deleting all rows from the tables in the time bins table that are linked with the specified aggregate basis name. If an error occurs, it prompts
39269793		retrieves the filename of the specified atom from a database table named MatoleATOFMSAtomInfoDense. If the filename is not found in the database, it attempts to retrieve the filename from a database column named "Atom
39270431		retrieves the representative cluster associated with a given atom ID from the database that corresponds to that atom.
SUMMARY
This method is used to retrieve the representation cluster associated with a given atom ID from the database that corresponds to that
39271791		sets the list of variables, if provided, to the specified value, and marks the variable as reserved if the value has been fixed.
This method checks if the provided list of variables is null or empty.
This method checks if the provided
39271832		parses a string and adds it to a vector. If the string cannot be parsed or blank, an error message is added to a null vector. It ensures that the argument is of size `vArgsSize` and the string starts with
39272680		sets the logging event class and validates it, printing an error if no class is given.

This method sets the name of the object, validates it, and then generates an error if it is not.

This method sets
39297883		draws outlines on a given graphics context, which are related to a module indicating its movement and does not draw any graphical elements yet. 

This method is a utility method that paints the component and then draws the message and any out messages
39298129		returns the value of a property based on the provided id, including the ID, the property value.

This method returns the property value for a given id, which can be either a string, a point, a point-b delegate
39298136		sets the source and target positions as the new position on a delegate and connects it to the points delegate.
This method sets the source position as the new position on the object, disconnects any existing delegate, and sets the source position directly.
39298320		returns thecharge location group. If chargeLocationGroup is null, the charge location group is set to the current object. Otherwise, the charge location group is retrieved from the manager, creates a new charge location group if the chargeLocationGroup is
39298324		This method creates a new LocationSubGroupTreeEditPart for the group, setting its type if it is not already present. The method then sets the label to the appropriate type and adds it to the GUI window. Finally, it adds the panel
39298332		returns the storage location group for the location of storage location subgroup tree edit parts, creating a new one if it does not exist.

This method creates the storage location subgroup tree edit part and adds it to the container tree edit
39298661		This method prints a message to the console, calls the superclass's initializeGraphicalViewer method, sets the contents of the viewer with the environment delegate to the delegate, and adds the transfer drop target listener to the viewer.


39298760		overrides the `notifyChanged` method and updates the connection bounds and fires a `Moved` event.
SUMMARY
This method overrides the `notifyChanged` method and updates the connection bounds and fires an
39298784		sets the connection router to display the current connection.
This method overrides the showPreferredRenderer flag in the superclass to set the default renderer for the component.
SUMMARY
This method is used to set
39298952		applies a law to an activity, checking if the law is applicable and not an estimate.
This method takes a force and an environment and a collection of activities as input, and returns an Activity object.
This method applies a force to
39298970		recursively visits a node and checks if its ancestors are applicable to another node.
This method returns a collection of applicable law objects.
It iterates over a list ofWAYSs and returns a list of all their ancestors, adding them
39298976		returns the number of applicableaws for a given influence in an Iterator.
This method returns the number of applicableaws in a given influence.
SUMMARY
This method is used to determine the number of applicableaws for a
39298982		sets the time interval and throws an exception if the time interval is null or not an opening time interval.

This method sets the time interval of the simulation log.

This method sets the time interval of the live control mode.

39299032		checks if the current TimeInterval is before the specified Interval.

This method checks if this TimeInterval is before the specified Interval, and if so, throws an exception. If this is not, it evaluates the preceding sub
39299270		turns an angle towards a specified angle goal, or towards it if it is below the goal, ignoring the 180 degrees clockwise rotation if the goal is greater than 180 degrees clockwise, turning it on, or turning it off if it is
39299287		checks if two objects are instances of org.xith3d.quadrant.objCollideable.MovableObject.Position2D.

This method returns the x coordinate of the quadrant passed as an argument.


39299300		checks if a Timepoint is contained within the TimeIntervalRange given two TimePoint objects, and an Environment object with the specified environment.

This method checks if the given TimePoint contains the environment as a Interval, returning true if
39299305		returns the current coordinate of the curve after applying the transformation to the coordinate center.
This method creates a new Line2D shape with the specified parameters and returns it as a Line2D object.
This method returns the coordinate of the
39299322		checks if two rectangles intersect by checking their adjacent lines.
This method creates a rectangle which represents the intersection between the current rectangle and another rectangle.
This method checks if a point intersects with another rectangle.
This method checks if a
39299326		checks for the intersection between the current Line and another Line object, returning true if there is a mismatch.

This method checks for the intersection between the current Line and another Line, returning true if there is a mismatch.

This method
39299415		checks whether a given Position is contained within a rectangular area of interest (Rasterizer rsb and rsqrt).

This method checks if the given Position is within the rectangle of interest; if it is, it checks if it contains
39299425		returns the coordinate of the specified coordinate as a segment.

This method returns a list of all paths in the given coordinate.

This method returns the segment associated with the given feature.

This method returns a file name for
39299426		checks if a rectangle intersects with another rectangle.
This method calculates the intersection point of two points.
This method determines if either point is inside a polygon.
This method determines if a point intersects with another point.
This
39299435		charges a value to a specified energy unit if it is present on this charge location.
SUMMARY
This method is used to charge a value to a specified energy unit if it is present on the given agv.


39299459		checks if two size values are valid within a specified unit.

This method normalizes the x and y coordinate values using a unit value, sets some output values, and checks if the width and height are valid.

This method normal
39299547		sets the entity for a communication node and adds event listeners to it, checks for events of a given type and name, and updates the event if only the one is specified.

This method creates a new node using an IDObject created from
39299611		This method sets the maximum energy level for the ship, checking that the value is within the valid range before proceeding.
SUMMARY
This method is used to check if the maximum energy level is less than 0 and set the maximum energy
39300100		performs a step of the strategy based on the current situation, checking for starting results, setting the time to initial, and catching exceptions for none specified, until the strategy can be performed.
SUMMARY
This method is used to
39300379		applies a law to the environment state by converting the influence to an enviroment object and applying the law to the environment state.

This method creates an activity for the about item of an environment state. It adds the agent's
39300381		takes an inf object, an environment state, and a collection of activities as parameters and performs different actions based on the type of the inf. It then performs different actions based on the type of inf. It returns an instance of Activity that can
39300396		applies a law to an activity's perception by creating an instance of SenseStationActivity, assigning it various properties, and then converting the result to a SenseStationActivity.

This method applies a law to a sense station after getting its parameters
39300415		appliesaws to a sense and a collection of activities, creating an agent to connect to and accept its perception, and then applies it to a guard activity.
SUMMARY
This method is used to create an agent that connects to
39300431		takes an Infrastructure, EnvironmentState, a collection of activities as parameters, and changes the perception result of an arc based on the provided view and environment state.
SUMMARY
This method is used to apply a law effect on the
39300482		applies a effect to the current state and forwards the action to the appropriate action. If the current action is not an environment and has a null target, it applies the effect using the given environment and context. Otherwise, it applies the effect.
39300572		is a boolean equality test for two ChargeBatteryActivity objects based on their charge bounds, time intervals, and activity subject.

This method compares the calling object to another object and returns true if they are equal, false otherwise.

This
39300760		creates and returns a CircleSegmentPart object with a given position, center, direction, and access.
SUMMARY
This method is used to create a CircleSegmentPart object with given bounds and optionally the type of the
39300789		builds an AGVRobot object by calling the buildAGVRob() method of the BuilderManager, which builds a GVSRole object with the necessary attributes for its properties.
SUMMARY
This method is used to
39323934		gets the current window state from the CPU, memory map, number of bits per pixel, word count, word width, and scan mode.

This method handles event requests. It first removes the window state listener from the environment, calls the
39323950		opens a file, stores the string in the memory map, and stores a new word in the memory map, then closes the file.
This method takes an in a file as an argument and stores the string in the memory map using the handle
39323986		sets the extent of the memory window.
This method sets the extent of the memory map.
This method sets the extent of the CPU memory map.
This method sets the extent of the memory map to the given environment.
This method
39324044		retrieves an argument at a given offset's address, handling various cases based on the address type and throwing an error if the address type is not recognized.

This method, static, overridden, takes in a variable number of registers
39324211		deletes a selected icon from the icon list of the specified window block, marking it as deleted if a block image is present, or removing it if the block is not in the active list.
SUMMARY
This method is used
39324393		sets the environment variables and writes the image.

This method writes the environment variables.
SUMMARY
This method is used to set the environment variables using the DCissi Dissi library.


39324453		finds a dynamic area within a specified area by iterating through the areas in the current dynamic area and comparing the area number to the specified area number.
SUMMARY
This method is used to find the dynamic area within a specified
3932674		sets the folder for a file explorer, loads the documents of the folder, and handles any exceptions that may occur.
SUMMARY
This method is used to load the documents of a specific directory from the filesystem and update the root of
3932684		sets the foreground color of four components, which are a bean sheet bean, bean sheet bean, bean sheet bean sheet bean, product panel, cancel button, and button. It also updates the progressBar and productPanel's background color based on the
3932693		initializes a splash screen and displays a system message if the DEBUG flag is false.
This method starts an initialized splash screen and shows it.
SUMMARY
This method is used to start a splash screen and display it.


3932920		handles the action triggered event of an event, tries to format the editor, and if successful, prints an error message based on the success or failure of the format operation.
This method handles the action performed event of an event, attempts to
3932962		adds a string to a list of search strings, ensuring it does not exceed a maximum length and removing if necessary.

This method removes the last item from a list model.

This method adds a default search string to an existing
3933033		validates the XML document by reading the XML document from the editor text.

This method validates the XML document with the specified validation options.

This method validates the XML document with the specified validation options.

This method
3933125		updates the caret position in the editor to display the location of the bracket the cursor in the document.

This method updates the text for the position label based on the length of the bracket in the text.

This method sets
3933266		adds a Service object to the services list, checking if the new object is already in use and not already present.

This method validates if the current service is already present, otherwise it creates a new one.

This method
3933269		adds an action to the container if it is currently alive, and prints a message if the action already exists.

This method generates the response from the service and adds the manager to it.
SUMMARY
This method is
3933270		adds a marker to the service context, and if the marker is already present, it inserts it before the existing marker. If the marker is already present, it adds it immediately before a new one.
SUMMARY
This method
3933468		returns a SquiggleInputHandler object for the specified ParsedURL in the associated class.
This method removes the callingceeding handler from the buffer that forwards the specified point.
This method returns the initial path iterator of the superclass
3934822		handles completion of loading an SVG document, printing the status of the document loading operation, parsing an SVG document, inputting hover information, and updating the SVG document.

This method sets the SVG document and then processes the SVG document
3935491		handles the completion of the rendering process of the graphics VVT by printing debug information and updating the toolbar.

This method updates the layout and graphics components when the graphics tree renderer events occur.

This method updates the toolbar and
3935606		listens for LinkActivationEvents and if so, gets the referenced URI from the event and checks if it's the same file. If it's the same file, it inserts a "#" at the end of the string. If it's
39363011		establishes a connection to the database using the HSQLDB JDBC driver and a log file, attempts to create a statement object, and prints a success or failure message.
SUMMARY
This method is used to establish a
39363017		initiates a program to initialize the servlet by creating and initializing necessary tables after starting the "Connection", "DropTable", "Connection", and "Out" pages.

This method creates tables and inserts data.

This
39363028		performs actions based on the action command received from a user's input. It executes different actions accordingly, such as adding a recipient, modifying an existing recipient, or deleting an email address.

This method processes incoming messages to assign to users
39363037		creates a table named "news_table" with columns for news_id, title, and content. It does not return any value.
This method attempts to execute an SQL query to create a table named "news_table" from
39363069		sets the start index of the file by invalidating and recomparing the start value to zero, or truncating it to the maximum length if the setStartIndex or length function functions fail, respectively. It also adjusts the start and length values if
3937987		triggers fire gun event for a ship and logs its message.

This method updates the ship in a game by sending messages to the game, starting turn marks, and firing gun notifications.

This method sends a message to a
39430642		checks if a component adapter class is supported by the component by checking if there should be at least one adapter in the provided container and if the collection type and value type match the expected type.
This method checks if the provided component adapter class is
39431978		reads a single byte and throws an IOException if the read operation is canceled.

This method reads the data from the underlying input stream and returns it.
SUMMARY
This method is used to read a single byte and return
39432326		creates directories for both the Java source files and a configuration file located at the provided path.
This method checks if the given path is an absolute path, and if it is, it displays an error dialog.
The method processes the file
39434669		creates a View object from an IME element, which is then used to create an I18N text view component.

This method returns an I18N text view component based on the type of IME.

This method
39441235		handles mouse button clicks by retrieving the name of the pressed component and the name of the left mouse button. If the right mouse button is detected, it calls the jGetFlickr method. Otherwise, it runs a loop to execute a statement.
39441279		retrieves and calculates the average JPEG image as a ColorPixel object. It initializes the ColorPixel object, calling another method to read image data, and finally printing the image's median and average values.

This method takes an image
39441402		retrieves the file name of the selected directory. If the file name is not null and not empty, it searches for and loads theclip directory. If the directory is not a valid directory, a new clip is created, sets the new
39441436		opens a file chooser with a text field for the name of the source image, allows the user to select one, and then enables the "Save as" button.

This method prompts the user to select an image file. If a
39454171		returns the index of the retention time if it is within the epsilon tolerance or in power of 1 to 1.

This method returns the index of the intensity if i is greater than zero and the retention time if i is greater
39454240		loads 2D structures from a specified URL, checks for errors, and displays a message if any are found. It disables a button, loads a second input panel containing the twoD structures, and sets the panel as the split pane, ensuring
39454538		retrieves a specific row from a table that corresponds to the coordinates of a given point (x, y) by iterating through a list of rows. For each row, it checks if the coordinates of the current row correspond to the x
39454551		creates a JButton with the text "Done", an image of the "Done" image, and adds an action listener to it.

This method returns the panel containing the buttons for the session properties.

This method returns the
39454552		searches for a ScalarMap object with a given display real type in a display, returning null if the maps are not found.
This method uses a SelectionListener interface to display a specific node in the visualization viewer.
This method
39454572		sets the maximum value of the intensity range on the display.
to preventIntegrative errors if the value is less than 2, or if the value is not less than 1.0.
If the value is less than 1, it will
39455143		adds fragment information and notifies the GUI of a change in the project to update the analysis details.

This method adds a fragment row to the given PeakListRow, updating the fragment identity and notifying the GUI about the change in
39455191		returns the error as a double value by summing up the counts of translation and matrix lines and whether there are any nonpositive transcript lines.

This method calculates the new error of a sub-matrices by summing up the counts
39455567		calculates the real number equivalent to the product of two mathematical expressions using the cosine and exponential functions. It returns a double value.

This method is a JUnit test method that tests cwtMEXHATreal with a
39455740		returns the closing text of an element by removing all spaces and ensuring that all non-whitespace characters are in their place.

This method replaces all instances of the input string with the actual input text, merging them and removing whites
39455913		retrieves a URL object from a corresponding ID, if it exists, and returns it. If the ID is null, it returns null.

This method finds the corresponding local URL in a nested system by searching for the URL in a
39456176		adds a parameter to a hashtable, initializes the hashtable with the parameter values, and resets the table.

This method initializes the names and values of a hashtable with the parameter names.
SUMMARY
39456336		checks if a given PeakListRow corresponds to a Peak with a selected unit, taking into account the range of the peak and any specified peak member.

This method iterates through the rows in a table and checks if the given name of
39456423		attempts to close a dialog on exit, either OK or Cancel based on the exit code or the original exit code provided. If any of these fail, an error message is displayed.
SUMMARY
This method is used to
39456699		initializes the module by setting its size, title, and adding components to it, including panels, buttons, and event handling.

This method initializes the task queue, task controller thread, and task progress window.

This method
39570453		processes a BIR block by splitting the input line into lines, removing any curly braces, and then processing the lines as segments.

This method checks for the end of a line and cleans any unbalanced braces.

This method
39570714		takes in a Node and an Object, checks if the Node is null, creates a new Container if necessary, and returns the Container.

This method checks if the Node is not null.

This method gets the Containter
39840471		tests the condition of a GreaterThanTag object using a GreaterThanCondition object. It adds specific headers to the request, then asserts that the comparison of a less than condition with values "GREATER_VAL" to "LESSER_
39840474		tests the condition of the GreaterThanTag class, ensuring it correctly evaluates the header value "less then" and asserts that it should not equal "less then" (if the header value "greater then" will be equal to "less
39840475		tests whether a parameter value is greater than a value for an expression whose comparison results in the expected value.
SUMMARY
This method is used to test whether a parameter value is greater than a value for an expression whose comparison results in
39840526		tests if the parameter valueless than a compare-to property is equal to a compare-to value.

This method tests if the parameter valueless equals a compare-to property and returns an exception if they are not.

This
39840551		tests if the value of a Lesser object is greater than or equal to another value, evaluates the condition, and asserts that the resulting value is true.

This method tests if a GreaterEqualTag object is equal to a value.
39840555		sets a header with a value greater than or equal to a specified value.
This method sets a header with a value equal to a specified value.
This method sets a header with a value greater than or equal to less than a specified value
39840558		tests the functionality of the LessEqualTag class. It sets a parameter by the servlet and then checks that the parameter value is greater than or equal to the value specified in the parameter. It then asserts the value of the parameter is greater
39840570		sets up a LessEqualTag object with a parameter and a value, and then tests that the condition of the lessEqualTag throws a ValueNotSetException when both parameters are null.

This method tests the parameters and values of
39841679		tests the behavior of the `testGetIndexedArguments` method when given three integer arguments, it expects a `IndexOutOfBoundsException` to be thrown.
This method tests the behavior of the `testsetIntArray`
39841733		tests the ability to retrieve a simple boolean value from a form by its name.
SUMMARY
This method is used to assert that a boolean property is true after retrieving a void boolean value from a form.


39841782		tests the functionality of the `testGetSimpleInt` method by asserting that a value of 0 is returned when a property is set to 0.

This method tests the functionality of the `testSetSimpleInt` method by creating two test
39841795		This method tests the functionality of the getSimpleLong method for a DynaForm object by setting various properties such as longProperty, shortProperty, and intProperty and retrieving the value, and then performing various assertions to verify the correctness of the returned
39841808		tests the getSimpleShort method of the dynaForm class by setting and getting different types of short values.

This method tests the getSimpleShort method of the dynaForm class by initializing an instance of DynaNumber of 35
39841857		tests retrieving indexed arguments from an indexed argument list, expecting an IndexOutOfBoundsException to be thrown in response. 
This method tests setting and retrieving indexed arguments in a mapping from a list, and expects an IndexOutOfBounds
39842002		tests the functionality of setting and getting the string property of a dynamic form object and ensuring that the correct value is set.
This method tests the functionality of setting and retrieving the property of a dynamic form object.
This method tests setting and getting
39842032		tests that the DynaProperty descriptor's type is correct by retrieving the correct type and checking that it is not null.

This method tests the getDescriptorBase method and ensures that it returns the correct type if it is not null
39842049		processes the end element of a custom tag, and writes a message to an output writer for footers if a footer message is provided. It also flushes the output writer and continues processing the page.

This method sets the value
39842101		prepares for processing Hyperlink display by starting and ending the page, preparing the content, and evaluating the remainder of this page.

This method prints the contents of this page by iterating through a list of help text attributes: "name
39842355		returns the locale of the current user, or the user's default locale if no locale is specified in the request.
SUMMARY
This method is used to store a new locale in the current session if requested.


39842722		prepares text events for CSS errors and custom error messages, including language, style, class, method, and onunload event handling.

This method constructs a CSS class with both text and inline markup, which generates the text value.
39842919		resets the reference to the current value of the current object and updates the reference to the name of the nested node's parent.

This method sets the name of the nested node, and then delegates the processing to the parent class.

39843030		processes a nested tag by checking if the tag's role is valid and not "PROPERTY" and can be extracted. If not, it uses a role-specific put attribute.

This method puts a nested tag into a parent
39843063		This method adds attributes to a JSP context using a list tag, checking for a request or group role. If needed, it checks for parameters or a user, and populates the context's input attributes accordingly. It checks for parameters or a
39843184		inlines a given page.
If the page is cached, the method sets the page status to cached.

This method passes all filters defined for the action.
It also logs resources included in the URI to the web.xml file
39843198		checks if the user has the specified role and returns EVAL_BODY_INCLUDE if they do not. The method first checks if the current page is the login page. 
This method checks if the current page is the
39843667		adds an ActionMessage to the request MessageContext.
This method tests the testGet and testAdd methods of the `ActionMessage1` class.
This method tests the testGetAndSetValue methods of the `ActionMessage` class
39844119		initializes the internal instance by retrieving a list of delegate messages from resource names and values. If the map is not empty, it initializes the internal map based on the delegate message name.

This method checks if the message resources are read
39844156		adds a registration to a map of registrations, ensuring it does not already exist in the map.

This method returns a string containing the class name, URL, username, and password.

This method handles the registration request by extracting
39844379		overrides the properties of a UIComponent component, checking if the component's name is null or if the component's page is null. If not, it sets the name and page attributes of the component.
SUMMARY
39844455		is used to obtain the value of an item's body content, modifying it by the method setValue, and assigning the returned value to the instance variable with a converted value of the input parameter.

This method sets the value of a UI
39844536		returns the action URL for a given UIComponent based on the treeId of the FacesContext and the current tree.

This method encodes the starting node and ends the method.

This method returns the external context path
39844941		evaluates expressions for JavaScript options, invoking various getters to determine if certain variables are true or false, and evaluating those expressions using the original object's evaluation.
SUMMARY
This method is used to evaluate expressions for JavaScript options,
39844980		logs a message with an optional throwable if the log writer is not null. It prints the stack trace of the throwable to the log writer if it exists. If the throwable is not null, it throws the type declaration "org
39846251		simulates a condition, checking if the expression value is not null and if the desired value is present in the evaluation.

This method checks if the desired value is not null and takes one of two boolean inputs: the desired value
and
39860439		returns a null object for a given key. If the key is null, it returns null until a null return object is found. If both the key and the key are not null, it creates a new return object with the specified object and
3986263		takes an InputStream as input and reads the lines of the file, first converting them to an array of strings. It then trims the first two lines and extracts both the first two lines. It then attempts to create a HashTable,
3986264		creates an array of strings by reading the contents of an input file and appending any data from the file as strings in a single string.

This method reads data from an input stream and calls another method to create and store the results
3986266		applies lexicographical rule grammars to a given text representation and creates a node.
This method checks if the given AST formula is not a constant, and if not, returns.
This method creates a new node with an optional
3986269		calculates the distance between two fingerPrint categories by summing the distances between the fingerPrint categories and the total number of times specified in the frequency property.
SUMMARY
This method is used to calculate the distance between two finger
3986270		loads a finger print from an input stream into a TreeSet, using a specified comparator.

This method takes in an input stream and returns an integer value.

This method takes in an iterator and iterates over the elements in
3986273		searches for a record in a data structure by key name and returns the position of the entry if found. 

This method searches for a record in the datastore by reading a tuple for the key and reading an integer for
3986275		saves the current image to a file. It first creates the file if it does not exist. It then creates the file in the classpath with a .lm extension. If the file already exists, it returns an error message. If
3989328		returns a string containing the error message from any errors encountered during the method's execution.

This method returns a string containing the error text from any errors encountered during the method's execution.
SUMMARY
This method is used
3989345		creates an exception, logs it, and logs it, then checks if the exception is a custom procedure exception. If it is, it logs it, logs it again, and stores it in the exception variable.

This method takes a
3989397		reserves a connection from the adapter by creating a new connection from the provided connection pool, and then trying to reserve the connection from the pool. If an exception occurs, it will be logged and rethrown as an AdapterException.
S
3989442		adds a built-in procedure to the specified procedure list,, throwing an exception if the procedure already exists.
This method takes a procedure and adds it to the list of wrapped procedures.
SUMMARY
This method is used
3989453		stores procedures in a data store using a data object and returns the stored procedure.

This method, storeProcedure, is used to store procedures in a data store using a data object.

This method, storeLoadProced
3989483		takes a DataHolder as an argument and returns a LinkedHashSet with the names in the DataHolder.
If the parent is null, it creates a new LinkedHashSet called set by calling `hashSet` on
3989493		checks if a class type is a primitive wrapper.
This method checks if a class type is an instance of a given instance type and returns true if it is.
This method checks if a class type is a primitive wrapper or an instance of
3989508		finds a binding in the data with the given name. If found, it returns its Data object. If not found, it throws a ProcedureException.

This method takes a string and returns the Data object. If the Data object cannot
3989511		finds the maximum non-null value mapped to the given string name in a Data object.

This method takes an order integer, locale locale, and locale and returns an offset of integer offset from a given scope string.
SUM
3989515		This method determines if two objects are equal by comparing their values.

This method compares two objects by checking their sort values.

This method compares two objects by checking their sort values.

This method performs a comparison between two Compar
3989719		converts the environment data object to an object, initializing it with values from the environment field.

This method returns a ByteBuffer object that contains the environment constant.

This method writes an environment field to a DataOutput object and
3989724		checks the response header of the message and updates its internal data accordingly. If the header is not present, it sets its expiration date or updates its expiration time accordingly.
SUMMARY
This method is used to determine if the message should
3989743		removes an element at the specified index from the list and throws an UnsupportedOperationException if the operation is not supported.

This method removes the character at the specified index from the list associated with this object.

This method removes
3989773		retrieves data from a specified data type and ID, reading from either the default store or the default data store based on the specified type and ID.
SUMMARY
This method is used to retrieve data from the default store of
3989803		activates the SQL query and catches any exceptions while doing so, ensuring that only one thread can access a connection try. If the connection is closed, it attempts to get a password; otherwise, it attempts to get the connection and if that fails
3989830		searches for a local context, ensuring that it is not the thread itself or the global thread. It finds the context by name and thread ID, and returns the corresponding CallContext object.

This method returns an uninitialized state object
3989869		checks if a given flag exists within the given flags string and returns a boolean value accordingly.

This method checks whether a given flag exists within the given flags string and returns a boolean value accordingly, with a default value if that flag is not
3989880		converts an object to a string, handling various cases such as null object types, string literals, number classes, URI class literals, datatype literals, and null double literals. Additionally, it checks for string literals
3989894		converts a list of data types into a string representation.

This method returns a string representation of the object, including the Java type `Data` and any `Literals` entries in the list.

This method converts `java
39913333		inserts a string into the current text and adjusts the selection to make room for the inserted string.

This method updates the starting index of the text area and the contents of the current text viewer to reflect the changes made to the contents.
39924474		ends an animation by setting the glass pane, making the container layer invisible and invoking the animationLayer's end method. Finally, it sets the transitionTarget to null and invokes the transitionComplete method.
SUMMARY
This method is
39936499		initializes and populates several EInstances, including abstractBasicModelEClass, abstrScenarioElement1EClass, cimTestElement1EClass, abstrCIMClass, destroyInstanceEClass, and accessLogE
39936511		adds a scheduler property descriptor to the object.

This method calls the superclass's `getPropertyDescriptors` method and then adds four additional property descriptors to the list, each of which affects the content pane, but
39936516		adds a property descriptor for the "id" attribute to the list of property descriptors for the given object. If the property descriptor has not been defined, it calls the superclass's method to get the property descriptors, then adds additional
39936520		adds a value property descriptor to the list of property descriptors for the specified object.

This method calls the superclass's getPropertyDescriptors method and adds additional property descriptors for the object's id, name, template,
39936522		adds a property descriptor for the period field.

This method overrides the super's getPropertyDescriptors() method.

This method adds three additional property descriptors to the list of property descriptors for the given object.
39936526		This method overrides the superclass method `getPropertyDescriptors` and adds a deadline property descriptor to the list of property descriptors if it is null.
 This method adds a deadline property descriptor to the list of property descriptors.
39936602		adds a property descriptor for the "PU" feature of the "TechnicRMLL73" class. It checks if the property descriptors have already been added by calling the superclass method and then adds the property descriptor for the "P
39936603		adds a property descriptor for the boundLL73 property to the list of property descriptors.

This method returns the list of property descriptors for the object.
SUMMARY
This method is used to add a property descriptor
39936605		adds a property descriptor for the schedulable feature of the Rubric.
This method adds a property descriptor for the guard and identifier, to the list.
This method adds a property descriptor for the number of points in the Rubric
39936753		adds a property descriptor for the wcrt feature of a task result to an item property descriptor list.

This method initializes the itemPropertyDescriptors list by first calling the superclass's `getPropertyDescriptors`
39936755		adds a property descriptor called "scheduling" to the list of property descriptors for the given object.

This method adds a property descriptor called "to_timestamp" to the list of property descriptors for the given object
39936967		adds a property descriptor for the upIodValue property to the property list of the item. This method also adds the upIodLabel property to the property list of the item.
SUMMARY
This method is used to
39937110		adds a property descriptor for the value of a bound condition.

This method creates a list of property descriptors for a given object.

This method returns the list of property descriptors for the given object.

This method
39937113		adds a property descriptor for the 'nb_Tasks' feature to the list of property descriptors for the given object.

This method overrides the 'getPropertyDescriptors' method in the superclass and initializes '
39937674		adds a property descriptor for the previous feature of a ComputeBox object.
This method calls the superclass method to add a property descriptor for the previous property and adds additional parameters to a list.
SUMMARY
This method
39937677		adds a property descriptor for the "next" feature of the "ComputeBox" class.
This method adds a property descriptor for the "isCritical" feature of the "ComputeBox" class.
This method adds a property
39937680		adds the root property descriptor to the list of property descriptors.

This method calls the superclass's `getPropertyDescriptors` method and then adds the `addRootPropertyDescriptor` method to the list of property
39937943		adds a property descriptor for the datas feature of a sub-task to the item property descriptor list.

This method returns a list of property descriptors for the superclass, list of descriptors for the class, and list of descript
39937945		adds a cpu property descriptor to an object's list of property descriptors.

This method returns a list of property descriptors for the given object.

This method sets the CPU property of the given object.

This method
39937947		adds a property descriptor for the 'subId' feature of a SubTask object. It checks if the property descriptors have already been added, and if so, it returns the property descriptors of the superclass. It then adds property
39937951		creates a list of property descriptors for the specified object, including optional priority and base priority properties.

This method adds the id, name, source, source URL, name font, number of columns, level, priority, priority port
39937954		adds a property descriptor for the atomic feature of a sub-task object.

This method overrides the default implementation of the method to add custom property descriptors for the subclass.

This method adds a property descriptor for the subclass
39937990		adds a property descriptor for the release time feature of a task to an event list.
This method adds a property descriptor for the release time of a task to an event list.
SUMMARY
This method is used to add
39938145		returns a list of property descriptors for the input object, including descriptors for node1, children, name, min, max, step, and unique instance id.

This method lazily initializes the itemPropertyDescriptors
39938601		returns a list of property descriptors for the specified object, including additional property descriptors for various attributes.
This method first checks if the list of item property descriptors is null, and if so, it calls the superclass's method
39939571		adds a property descriptor for the result to the list of property descriptors for the given object.

This method adds a property descriptor for the name property to the list of property descriptors for the given object.

This method adds
39971178		returns the `JTextFieldNoire` component. If the component does not exist, it creates a new one with default values, sets bounds, text, and focusLost property. It then returns the newly created component.
SUM
39971207		returns a JPanel which is used as the content pane of a dialog window that can be made with a grid layout. It contains several radio buttons for selecting a touristique and other options, such as "Select Tours" and "
39971211		creates and returns the JPanel for the JFreeChart UI, including labels, radio buttons, and buttons for different color options.

This method constructs the JPanel for selecting a touristique, including radioButtons for various color
39971220		returns a JPanel instance that contains two radio buttons, "non" and "ouverte", labeled with the text "non".
SUMMARY
This method is used to create and initialize a JRadioButton for holding
39984871		This method reloads the tasks in the project list. It selects the specified project and reloads the tasks if the project is not currently filtered.
SUMMARY
This method is used to reload the tasks in the project list and switch
40018864		sets the target velocity for a particle in the game. It iteratively calls the `setTargetVelocity` method on the particle at the specified index, passing the `pos` and `i` as arguments.

This method saves the
40018888		will improve the graph by repeatedly swapping the "avoid" status of the current particle and its children's child particles.

This method will improve the graph by shuffling the child particles and increasing their number of times.

This method will
40091711		injects dependencies into the bean if auto-wiring is enabled, and sets the version of the bean.
SUMMARY
This method is used to inject dependencies into the bean if auto-wiring is enabled.


40091773		asserts that two strings are equal, handling `Collections.equals` correctly.

This method tests that an error message is not thrown when a null list is passed.

This method tests that an error message is thrown when
40091843		starts a summary table with summary start style, adds labels for different class types, and sets the content type to "text/html" and clears the table content.

This method generates HTML content for a given type. It checks if
40091923		runs a suite in different threads, allowing the test to set the maximum stack size and add a test thread to each thread.

This method executes a SwingWorker twice, which in turn runs in parallel mode by first creating a list of
40091943		pushes a qualified tag name and attributes to the XML document and increments the current indent level.

This method creates a new XMLBuilder object with the specified tag name, schema, and attributes, and then calls the push method on the X
40092001		creates a new reporter instance that delegates to the specified string class, based on the provided reporter class name.

This method returns the class name of the receiver to be used, if any, otherwise it uses the default class name.
40092046		compares two objects based on their test class name and method name.

This method maps objects in a collection by their key and value.

This method overrides the compare method and compares two objects based on their test class name and
40092062		ensures that a directory exists within a given file path. If the directory doesn't exist, this method throws a failure with a message indicating that the directory doesn't exists. If the directory does exist, the method returns. If the file is
40092175		simulates the creation of a JUnit test suite for a test suite given a regular test case and adds all test cases to the TestCase object. It then initiates the suite execution of all JUnit tests and returns the TestResult object.
40092192		initializes the given XmlTest object by setting its meta groups, including the meta data.
This method initializes the meta groups in the given XmlTest object by retrieving the node names and setting them in meta groups.
SUM
40092264		sets the status of a node based on the provided status code.

This method sets the status of the current status to the specified status code.

This method sets the status of the current status to the specified status code, marking the
40092441		checks if the given configuration annotation is optional and the field is allowed for always running.

This method checks if the current annotated feature is dependent on.

This method calculates the number of tests to run in the current class.

40092612		logs a message indicating that a task is shutting down and calls the shutdown method of the service.
This method logs an exception message and destroys the service and throws it.
SUMMARY
This method is used to shut down the
40092613		compares two sets and returns true if they are equal and false if they are not. It also checks if the first set is equal to the second set, not from the first set, and if the size of the two sets is equal.
40092627		logs an error entry during comparison and asserts that two maps are not equal.

This method begins the test case where two maps are considered equal, it first compares the actual map and asserts that the map is equal to a non-null
40092927		checks if message matches the regular expression pattern after the message regular expression. If either of the exceptions is not an error, it returns true. Otherwise, it returns false.

This method overrides the default messageRegex method to check if
40093092		saves a test suite's contents as XML to a file.

This method takes a File object and a StringBuffer object as parameters, and uses the XMLStringBuffer object to write the content of this test suite to the file.

40093181		selects method or test methods in a test suite based on the inputs provided in the "id" parameter. It sets the "start" flag to true and the "attributes" array to match the test method names to the "id"
40093185		sets a class name for an XML selector based on the start parameter of a set of attributes.
- This method parses a class name and creates instances of XMLSelectorImplFactory with the specified name, properties, and attributes.
-
40099556		This method removes a block and its selection from a form. It checks for validation errors and clears the form if any are found. It also removes the block's focus description and option widget.  
This method removes a block reference as a
40099910		compares the priorities of two IMessage objects and returns a negative integer if the first is greater than the second, a positive integer if the first is less than the second, a negative integer if the first is greater than the second, or 0
40100071		returns the number of unread messages in a POP3 folder, throwing afeldbc@jameshutway.org of type JavaMailException if the folder is closed.

This method throws a MessagingException if the folder
40100126		returns the abstract of the mail mail content. If the content has already been set, it is assumed the content cannot be changed. Otherwise, it sets the content to the next available text.

This method is used to return a text
40100139		returns the body of an email message as a String, which is the content of the message. If the content is encrypted, it encodes the text content as plain text.

This method opens a connection to the SMS Messenger Protocol and
40100635		appends XML response to the client.
This method processes common queries for a given request object.
This method processes navigation notifications for a given object.
This method returns the current page of the HTTP response.
This method shows queries from
40101161		appends a special XML tag to a StringBuffer object that appends a "success" tag to the specified StringBuffer.

This method appends the closing XML tag to the beginning of a StringBuffer object.
It handles the execution
40101172		responds to a user's selection from a JComboBox.

This method executes an action-level action within the JComboBox.

This method performs an action-level action within the JComboBox.

40101478		returns the date formatted in the specified format, or null if no format is provided.
SUMMARY
This method is used to obtain the date in the specified format for trackback dates.


40101481		retrieves the authorized user login by checking if the username matches the pre-authentication domain represented by the blog owner email string stored in the _authorization object. If a mismatch occurs, it uses the default authorized user email. Otherwise,
40101516		This method formats the comment date if it has not been configured previously.
This method returns the date in the format specified by the format parameter, or null if the parameters are null.
This method returns the date in the format specified by the
40101591		initializes the system by setting configuration parameters, retrieving values from resource properties, logging debug messages indicating the start and end of debug mode, and verifying if the fetcher is enabled.

This method is declared as private and cannot be executed.
40101739		increments the cached entry count, calls the flushEntry method, and then returns.
SUMMARY
This method is used to update the cache entry associated with an entry that has been cached.


40101955		retrieves the value of a given tag from a node.

This method is responsible for parsing an XML document from an input stream and uses an XmlElement object to retrieve information about the parsed XML.

This method extracts the
40102085		sends feedback email to a blog with a specified author and trackback for a given set of arguments.
SUMMARY
This method is used to send feedback email to a blog with a trackback for a given set of arguments.
40102128		reads the permissions for a blog and returns them as a sorted map. If the permissions are not full or only full permissions, an error message is added and the method returns null. Otherwise, it returns the vector of permissions.
SUMM
40102142		checks if a given username and permission combination is allowed for a blog. If so, it returns a success message. Otherwise, it checks for the authorization provider and throws an exception if none exists.
SUMMARY
This method is used
40102236		sends a comment confirming the author of a blog post. If the user is not authorized, it returns without performing any actions. It also sends the comment to the provided email address. If a blog post redirect occurs, it logs the redirect in
4012465		creates a new user with the given name, home phone, work phone, cell phone, and email for a work state, and returns null if this operation is an instance of UserDatabaseManagement.

This method creates a new user from
4012725		adds handicap history data using the updateHandicapHistory method of the BLMSServices class.

This method updates handicap history data using the updateHandicapHistory method of the serviceManager class and returns true if the update
4012733		changes the attribute of a player to the specified value and updates their ID in the league.
This method creates a new league and adds it to the list of players.
This method creates a list of all expected attributes for a league, including
4012751		sets the handicap of a player given an ID and league ID, throwing exceptions if the player or league is missing or invalid. It then creates a new valid league instance and sets its handicap attribute to a value of the new handicap.
4012756		increments the handicap of a player in a league by a specified amount, updating the player's player's handicap and marking the old handicap as stale or new.
SUMMARY
This method is used to update the handic
4012779		defines the handicap expression for a league and validates its syntax to ensure it contains the expected handicap expression.

This method validates and throws various exceptions if the provided expression is invalid.

This method validates and
4012785		validates a table header and uses that to validate that the first handicap attribute is empty. It then performs various tasks on the table header based on the validation attributes: checking if the handicap attribute is valid, the vertical alignment attribute is valid
4012792		generates a random league ID for a given league to login and then loads a league object with the unique ID, returning the league's ID.
SUMMARY
This method is used to generate a unique ID for a league instance or
4012795		changes the attribute of the user based on the given id, provided the user cannot have multiple mails configured.

This method removes the user from the form.

This method sets the user's attribute to the given value, after ensuring
4012805		returns the date corresponding to a match identified by the specified identifier by formats a Date object using the blmsMatch's defined date, taking into account the start and end dates and the start and end dates of the matched objects.

This
4012808		retrieves the winner of a match by performing a service call to retrieve the match and parsing the ID of the winner. It first validates that it is not null, then parses the ID of the winner and validates that it matches
4012811		validates the attributes of a BLMSMatch object and returns null if the length of the given match is invalid or the length exceeds a predefined maximum length.

This method finds the optimal match for a given match ID or returns the best
4012814		returns the score of the match associated with the specified ID.

This method returns the match score, ensuring that it is greater than zero.

This method calculates the match score.

This method returns the correct match score as
4012828		retrieves the player standing for a given league, ID from a league, league ID, or defaulting to 0.

This method gets the players available for a given league, including the number of wins, losses, and margin.
4012831		retrieves the number of wins associated with a specific user in a league.
SUMMARY
This method is used to retrieve the number of wins for a specific user in a league.


4012833		retrieves the number of loss squares for a league with a given user and league. It validates the user and league IDs, and returns the value as a string.

This method selects an object from the database table based on an
4012847		sets attributes in the HttpServletRequest object to the attributes of the BLMSAdminBean instance.
This method initializes the blmsUsers and allLeagues lists with the names, values, and roles assigned from other methods.
4012888		adds an MatchResult to league results with specified league ID, date, winner, loser, and number of matches.

This method tries to add an EditLeagueDialog to the result dialog and returns true if successful, or false if it
4012940		returns a match by date from a match element.

This method returns a date after a match element.

This method finds the date in a league that matches a given start date range and end date.

This method returns
4013026		changes the handicap of the currently selected players.
This method calls the `changeHandicap` method of the playersManager object.
This method returns the `Handicap` with the specified operatorId, userId, and league
4013181		adds an element to the list at the specified index, updates the discs list with the new element, and adds the new element to the disc queue.
This method adds a position to the disc queue.
This method removes the specified
40166765		builds a graph from a model. It checks if the model URL is null, if it is, it throws exceptions. It then builds the graph from the model URL, adds input and output files to the graph, and builds the graph from
40166796		takes an element and loads a new list graph from the element's child elements by iterating through its child elements and adding each edge to the list graph.
SUMMARY
This method is used to load a new list graph from
40166853		initializes a pool of linked nodes, ensures that specific connections are connected, creates ports, and ensures that nodes and ports are connected with the respective source and target connections.

This method creates a runtime part by adding inputs, variables, targets
40166939		updates the graphical user interface with the content of a visual model.

This method validates and repaints the GUI components of a specified container.

This method redoes all actions on the model.

This method redoes
40166946		creates a menu with the specified text and size. it takes a Point parameter representing the menu. It also creates an "Contribution" object and sets its visibility to true. It also creates a "Add" action. Depending on the context
40314135		logs information about an HTML element and its attributes, its children, with a specified indentation level.
- This method outputs the HTML table definition as a single table with a specified title and attribute, including the table contents, and there should
40314148		This method checks if metadata is included from JAR files, if not set it creates groups, adds metadata, and adds date stamp for metadata creation.

This method adds metadata to an element.

This method adds dates to an element
40314263		resolves a string representing a web model and writes the HTML to a file. It checks for URL references and if necessary, converts them to URIs. It optionally splits the string by space and resolves them for hyperlinks and formats them both as
40318208		creates a string field for a given object. It sets the field's value to the object created as a string and padding it with the specified length. It handles cases where the field exceeds the size of a string, displaying several lines of output
40384567		adds a component with a given id to the layout, creating a temporary record for the inserted component if needed and creating a new records for the inserted component if needed.

This method removes all components from the layout, and sets the layout
40384607		transfers focus to the next component in the container.
This method transfers focus to the previous component in the container.
This method transfers focus back to the content component in the container.
This method transfers focus to the next component in
40384608		renders the user interface to the screen using a custom rendering mechanism, including the custom UI, renderUI, screenX and screenY parameters, and the time elapsed.
SUMMARY
This method is used to render the user interface
40384609		transfers focus from the components that appear in the container to the caret.
This method transfers focus from the caret to the child components of the specified component.
This method transfers focus from the caret to the children of the
40384615		checks if the given object intersects with the current rectangle defined by the current rectangle within the component.

This method returns true if the target coordinate is within the component.

This method checks if the given object intersects with the current
40384767		sets a checkbox and sends it to the IOR, disabling the button if the checkbox has a different icon than the other.

This method sets the icon of an I/O button. If the icon size has changed, it
40385522		updates the camera's movement by moving it from the center to null and incrementing its position if the mouse is holding down the world and the vehicle is not engaged.

This method updates the position of each particle at the end if the
40385570		corrects the wind by updating the velocity and speed system of the object.
- This method checks for collisions between velocity and the fixed position and updates various properties such as speed, velocity, acceleration, and velocity vectors.
SUMMARY
40385822		retrieves a texture from a map, and if the texture is not already present. If the texture is already present, it adds it to the top of the map and scales it with the specified parameters.

This method retrieves a
40385836		loads an image from a file containing reference information.


This method loads the dimensions of the image and returns the image as an array of those dimensions.
SUMMARY
This method is used to load a texture image and return it
40385866		creates a new texture from a BufferedImage if it is null, or gets the existing texture if it does not already exist.
This method gets the texture associated with a texture name and returns it.
This method creates a new Text
40443968		returns the count of pattern instances associated with a given P (opening or closing) statement. 
This method adds an occurrence to the specified pattern instance.
This method returns a relation between two lists of occurrences.
This method returns a
40463264		calculates the average position of two points in time. It returns a vector with the values set. If the time is not zero, it subtracts one from the calculated average.

This method returns a value from the last list.
40467552		adds an event handler to the object with the specified role and method name, and catches any exceptions thrown during the process.

This method creates an event handler for the specified action handler class, and adds it to the handler registry.

40467553		sets the font of the text and adjusts the width of lines accordingly, depending on the specified font size, and adjusts the height and position of the lines accordingly.

This method adjusts the text accordingly by adjusting the font size and height based on
40467557		is a void method that checks if the event handler is an instance of EventHandler and fires the event accordingly.

This method fires the event to all listeners in the list by invoking the fireEvent method on the event handler object.
S
40467563		determines whether a given point (ax, ay) is hovering over a video track.

This method checks if a given point (ax, ay) is within the clip bounds of a video track.

This method returns true
40467566		sets the font name and font size for the component. If the font size is different than the new font size, the font will be overwritten, and if it has changed.

This method updates the text component's properties to reflect the
40467567		initializes the thumbnail color by setting the first and last colormap colors for each thumbnail index. It then multiplies them by 16, and computes the average colorized value at each index. It also calculates the average colorized in hue
40467585		sets limits for the image or page using floating-point values extracted from a file, it sets default values and updates the initial value range and default minimum and maximum values.

This method sets limits for the image or page using floating-point
40467600		sets the value of a tick number to a given integer input. If the controller does not contain the input, it uses the toggleTicks method. It then converts the input to a tick number and uses that number to set the value of the
40467607		retrieves the angle location from a point input and sets it as the current angle.

This method takes an input point and returns an array of doubles for the number of degrees it represents.

This method takes an input point and
40467653		cuts the selected text up as an action, deleting the character preceding the previous character or invoking the next character method.

This method returns true if the substring function is not null and, if so, performs the cut action on the start
40467663		deletes the current character from the current text if the characters need to be selected.
- This method checks if the cursor position is within the specified range.
- If the cursor position is beyond the end of the text, it deletes
40467691		copies the portion of the specified range of text to the clipboard to the selected text in the specified range. It ensures that the copied text is in the correct length and can then be copied to the clipboard using the GClip class.

40467706		returns a converted angle represented as a pixel value to an Axis-aligned coordinate. If the axis value is too small or overlapped, it converts it to a grid-aligned coordinate number. The format is determined by the conditions of its axis
40467712		adds a component to the container if it does not already exist, sets its z position, adds it to the local color, registers the draw, updates the children list, and sets its color.

This method sets the `z`
40467719		sets audio parameters for the animation based on the provided command. It also sets the text if the command is "show", or "hide".

This method sets images for the images and calculates the maximum button image width.

This method
40467750		sets the text of a window. If text is empty, it returns. It adjusts for horizontal and vertical gaps based on the current state of the UI and updates the appropriate font and alignment, and draws the string on the window. If text is
40467761		sets the font and positioning of the text, adjusts the size and position, and sets the font accordingly.

This method sets the width of the text within the visible bounds of the component.

This method sets the text color of the
40467765		resets the image alignment based on the current image alignment and updates the foreground image.

This method calculates the vertical bar of pixels by subtracting the extra padding from the left and right space.

This method updates the focus position and
40467772		calculates the starting position of a variable box by adding a string with the alignment, image alignment, background text alignment, and total amount of text if using images.

This method sets the alignment from the text alignment.
SUM
40467782		checks if there is a system clipboard access to the clipboard. If there is, it gets the current working copy and copies all of the nonce objects to the clipboard. Otherwise, it creates a new system clipboard overlay with an empty name enclosed in
40467789		creates a new event handler instance based on the specified object and method name. If the object is an instance of EventHandler, it assigns it to the eventHandlerName variable. If the object is not an instance of EventHandler, it prints
40467808		sets the font of the text to the specified font name and size.

This method sets the text of the text component to the specified string. If the text width is less than the current one or greater than the text height, the height
40467844		creates and configures a vertical slider component.

This method configures the app window with a label and a slider to let the window handle events.

This method configures the window with a slider component and a gap between the
40467847		initializes the `GOptionGroup` which contains optional text commands and the option for displaying them. It also sets the text mode to the default mode if `maxRowsToShow` is not zero. Additionally, the `GOptionGroup
40467851		creates and returns options for a user interface container, including a heading, a close button, and a warning label.

This method checks the text entered by the user and validates it. If validation is successful, a GOption object
40467879		sets the baseline alignment of the text based on an integer value representing the alignment.

This method sets the text alignment of the text and calculates the coordinates based on the baseline alignment, and then calculates the center alignment and rotation of the text based
40467896		sets the action to either window close or select if non-empty and non-empty actions are enabled.
SUMMARY
This method is used to adjust the actions to destroy the window when an action is set or when an action is
40467907		draws the app and highlights shapes if visible.
This method updates the color of the highlights if they are visible.
This method draws the legend lines, adds a border, and removes the border.
SUMMARY
This method
40467937		adds a draw handler to the object and sets the object's DrawHandler method, paramValues, and paramValues properties. It configures key and value properties of the handler, and adds the handler to handle invalid input. If a mouse click
40490409		receives data for a socket event, including a subtype of DataEvent, and processes the data by splitting the subtype into an array of strings.

CONTEXT
This method handles a socket connection, reads data from it,
40490646		executes the command provided by the commandInterface.

This method disables the commandInterface when an action event is triggered. 

This method sets the CTracker and sets the speed based on the status of the CTrack.

40490691		starts a blinking loop that stops the blinking variable and starts a new thread.

This method starts a blink loop that is every 2 milliseconds until it stops.

This method starts a blink loop that is every 2 milliseconds until it starts
40490726		calibrates the velocity to zero by dividing the current velocity by the previous velocity and updating the existing velocity.
This method updates the view by recalculating it.
This method updates the view up by recalculating it.
S
40490733		calculates the force acting on the robot's velocity based on the velocity of the robot being passed, using the vref modifier, rate 110, and a voltage calculation and the desired acceleration.
This method, after which it calculates the absolute
40490736		calculates the angle of the tank based on its velocity and elapsed time. It stores the velocity of the tank and its bearing
40491588		sets the value of the variable 'state' to the ASCII character value at the specified index 'key'.

This method clears the data from the keyboard to the server.
SUMMARY
This method is used to set the value
40491645		simulates a scenario where the game allows an object to be considered as a "end of world" and should continue and end-of-game.
SUMMARY
This method is used to check if an object is more than 5
40491682		drives the current direction of the terrain at a specified coordinate in the terrain grid using a relative difference for the y and x positions.

This method prints a log message indicating the length of those messages in the message and then calculates the distance
40491690		moves the velocity disk's based on the position and right from the top and bottom limits.

This method moves the velocity disk's horizontally given by the velocity input.

This method moves the velocity disk's vertically given by the velocity
40491755		initializes the thread, starts sensors, and starts the AnalogPort with the specified configuration.    
This method saves the sensor lists in the root sensor list.
This method shuts down the component controllers.
This method prints the
40504402		returns a File object representing the default settings file, either in a temporary directory or by finding the file from the properties file.
SUMMARY
This method is used to obtain the directories used in the server properties file to retrieve default
40504655		creates tables, initializing variables, and checking if the database has a specific name. If it does not exist, it creates one. The method then sets the modified flag to mark the table as modified. 

This method adds a
40511991		searches for a row at a given position within a cache and returns the row if found.
This method executes the delegate action by first checking if the delegate has an event component, then it checks if a connection handler is not null,
40515332		sets the ranges of the parameters for a range marker and adds them to the list of range markers. It also sets the start and end boundaries and adds bounds if necessary.

This method initializes the chart with a plot as it contains the
40628242		saves the container bean to the database by setting the update interval and saving the settings.

**save()** method, sets the update interval in the database, and checks if the component is in locked mode until the save is complete.
40653205		removes an object from the list of content if it is valid.
This method sets a bit in the boolean field of a GATED value with a value of 1.0.
This method sets the tag of a GATED field to
40653220		adds all elements of a collection at the specified index in the array if the array is not synchronized by this thread.

This method removes a collection of elements from the array at the specified index while maintaining the capacity of the array if necessary
40653260		returns the Entry at the specified index in the header.
This method returns a string representation of the Entry object.
This method returns a string representation of the Entry object.
This method throws an InvalidParameterException if the parameter index is
40674001		looks up the configuration file and returns it as an InputStream.

This method looks up the welcome file and returns it as a Properties object.
SUMMARY
This method is used to mark static resources as being accessed or
40686588		calls the "extract" method on the Core object passed in as a parameter, sets the "testGetAppObject" property in the CoreExtractorAST object to "extractTree," and asserts that "expected" is reported with
40686658		reads a string from the input buffer and returns it, or a default string if the buffer is empty or empty.
This method reads data from the input source and returns a string, or a default string if the buffer is empty or empty.
40686665		initializes the implementation of the class by creating an HTML tag with the applet name and adding it to the RootPanel.

It then loads the main page XML for page navigation.

It then adds the Java program to the root
40686671		closes the input stream and output stream, and sets the data for the ConnectionUtils object.
It then closes the connection and sets the data for the ConnectionUtils object.
Finally, it exits the "Exit" method.

40686704		executes the onData method of each SocketListener and notifies the onData field of the list that a client has downloaded from a remote source for the specified number of bytes as long as either a delay or not.

This method not
40686706		sends a security error message to all registered listeners with a specified cause.

This method sends a security error message to all registered listeners with the current execution timeout, causing both the asynchronous and asynchronous threads to close.

This method sends
40686708		adds a callback to the system and fires the `onIOError` event on each registered listener.
This method simulates a socket connection and sends the appropriate response.
This method sends a given string to the device and notifies all
40686811		initializes the socket.
This method establishes the communication channel.
This method registers the client.
This method initializes the socket and waits for the client to connect.
This method handles exceptions that may occur during the Socket handle and disconnect
40710704		scans the next token from the input stream if the current character is invalid, capturing the token if it is not a eof character and dispatching if it's found. It then returns the token from the input stream.

This method
4074417		creates five pilot objects each of them and can follow different types of pilot files. It handles world rotation, car, mode of perspective, cameraseek, cameramove, camerarotate, camerarotate and speed.

 This method removes a
40776207		processes a work broker message and handles the message based on its type. If the message type is NOTIFICATION_MESSAGE, the method returns without doing anything. Otherwise, it calls the process method of the service manager.

40776466		adds a JDL job to the JDM platform with the given job ID and file handle.

This method adds a VM job to the JDM platform with the given handle to track the start of execution.

This method adds
40776610		displays a confirmation dialog and exits the system. If the user clicks "Yes," it cancels the job. Otherwise, it calls the necessary functions to cancel the job.
SUMMARY
This method is used to cancel a job
40776651		writes worker inputs by checking if a job specification binding exists and, if so, selects a controller for inserting events. It then generates a string string representing the variables of worker description. 
This method updates or inserts a job description object with
40776669		This method formats a map as a human-readable string. This method gets all the key-value pairs of all keys. If there is no key-value pair, it formats them as blocks and returns the converted to strings.
SUM
40777106		returns a string representation of the object indicating the start of a new transaction. It includes information about the handle, the local file name, and the ID of the transaction.

This method instantiates a new session and starts a worker thread
40777611		returns the job ID for the currently currently selected item in the tree. If no selected item is selected, it returns -1.
SUMMARY
This method is used to retrieve the ID of the currently selected node in the tree
40777631		removes a peer from the group by calling the removeUser method to remove the user from their group.

This method retrieves the associated peer service client.

This method sends a public notification to the system.
SUMM
40777743		returns the priority of the peer-to-peer network reply from the specified reply-to, if the reply-to is the minimum trust community for the current network's network and if the reply-to is not the minimum community with all
40777843		stops peer retrieval and updates the GUI components accordingly.

This method sets to clean end of the preparation in future.

This method calls the peerStopped method of the peerActionEvent class.
SUMMARY
This
40777973		saves the fields in its fields.
This method saves all input fields.
This method saves specific configuration panels and settings.
This method saves all properties for the given component.
This method saves default input fields.
This method saves
40778768		configures the rankings and balances for a single accounting file, creates a scheduling action to send the file to, processes the action, increments the number of responses, and adds the action to the responses list.

CONTEXT
This method attempts
40778973		distributes a delivered worker to a specific worker Acceptance State (IDLE). If the worker is accepted, it queues information about it on the allocation queue and reduces it to idle workers to a subsequent worker. It notifies the threads waiting for
40779196		processes an email message by first creating a remote executee handle, setting the sender's public key, and setting the execution client deploymented flag. If the client deployment is active, it processes the email message, otherwise it processes the server
40781408		inserts a record into the "Attr" attribute and checks for any syntax errors as errors.

This method creates a new object instance of the class specified by the "className" parameter and inserts it into the "arrayInput"
40781450		returns an ExecutorResult based on the execution result provided in the process. It handles the execution and manages the process output, throwing an exception if the process is not accessible.

This method retrieves the result of a process that contains
40781459		parses a primitive value from a string value, converting it to the appropriate type, such as `int` or `double`. If the value is not 0, the `int`. Must be true as input. Any other input value will
40781540		allocates workers to the replica accounting for a specified worker entry, or creates one if not already in the local container and blocks the process if the worker was not started.
This method allocates workers to a specified working group, and blocks
40783112		changes the allocation status for a remote peer based on the worker's status.

This method changes the status of a peer to idle for a remote worker.
SUMMARY
This method is used to change the allocation status of a
40783146		logs into an XMPP account using the specified authentication type, user, and broker key. It allows them to access the XMPP account object.

This method returns the LoginResult object that contains the login status and a list
40783157		sets the workers for a WorkerComponent using the given SDF file path and module context.

This method compiles a SDF file and sets the workers for a PeerComponent using the file path and service context.

This method sets
40788163		creates a new XMPPConnection with the specified connection configuration and sets it as non-blocking mode.

This method checks if three strings start with "close," "flush," and "canvi," are found in the className
40788446		adds the payload type and its associated audio information to the existing payload list.
This method reads and parses record information from a file, adding the parsed data to the attributes of the plugin.
This method adds payload information to the attributes
40788680		checks if the media is fully established by receiving the SIP status code and checking if it is fully or fully established.

This method receives a SIP request body, either immediately or via the appropriate method based on the received method code.
40788770		returns the preferred candidate for the current set of activities, or null if there are no candidates.

This method optimizes a given set of activities by comparing their state in the set for equality and adding any activities with unended states to
40788778		initializes and waits until a transport resolver is started. If the resolver is successfully initialized, it iterates through an array of resolvers, checking if each one is up to date, verifying the current association definition, setting state to
40788826		adds validremote candidates to the list by iterating through the list of valid remote candidates and adding each candidate to the list.

This method initializes a list of valid remote candidates by iterating through the list of valid remote candidates,
40788939		creates an accept message for incoming audio data. Creating a new Jingle object if one does not already exist, and then adding it to a list of jingle transfers with the best common audio p-strategy.

This method is
40788945		returns the best candidate for sending binary data over Bluetooth packets.

This method adds remote bytes to the message.

This method extracts a message from a Bluetooth connection.

This method extracts a remote candidate for sending binary data over
40788986		parses an XML element and creates a PayloadType object using the parsed attributes within it. If the parser is not properly parserable, it attempts to parse the attribute value or set it directly if outside the current element.

This
40789178		creates a Jingle session with an incoming Jingle request to represent the incoming Jingle session, and adds it to the session manager if the response message is not null. It returns the created session.

CONTEXT
This method checks
40789667		triggers a session redirect event by iterating through the list of listeners and invoking the `sessionRedirected` method on each listener with the same argument.

This method suppresses unchecked warnings and iterates through the listeners, which
40789708		terminates the session by sending a QUIT packet to the server.
This method terminates the session.
This method terminates the session with an IMCONSOLE_CONFIRMATION_CHALLENGE_CANCEL
40838756		clears all user metadata by removing a property change listener from each key in the user metadata, resets the property updates count, and notifies listeners that property values have been updated.

This method deletes user metadata, clearing the user
40844755		This method tests the findAndUpdate methods for the Trie class, ensuring that inserting values that match and updating to the first value returns true or throws an exception.

This method tests the add/remove methods for the Trie class,
40864436		returns the form `form4` and if it's `null`, it initializes it and defines the contents of the form. It then adds two commands to the form with the label "Listar Planos" and two commands to the
40864441		returns the TextField component named "textField4," creating it if it does not already exist.
This method is used to get the array of text fields.
This method is used to get the table item.
SUMM
40864447		returns the `TextField` named `textField5`, creating it if it doesn't exist already.

This method returns the `TextField` named `textField5` that will be used to enter the URL where to connect
40864452		returns the textField6 variable, if the variable is null, it creates a new TextField object and adds two commands to it, addCommand1 and addCommand2, before returning the TextField object.
SUMMARY

40864458		returns the form with a text field named "Descuento KD No REF" that is created to configure validation options.
SUMMARY
This method is used to create a text field named "Descuento KD No RE
40864470		This method returns the "C\u00Dreqnte Befehl" form if it is not null, otherwise it creates a new one and adds several TextField objects, including two commands, "AB_Eintr\
40864476		returns the `TextField` named `textField10` if it exists, otherwise it creates a new `TextField` with the label "Bono 2: 1" and adds an `TextField` with the label "Bono
40864485		returns an Form object with the name "Bono 3, 17-8" and a null TextField. It then adds three TextFields (1 and 2) to the Form and sets the CommandListener to the current instance.

40864490		returns a TextField object named `textField12` if it exists, otherwise it creates a new TextField with the specified label and initializes its value.

This method returns the variable `itemDetalle` if it exists,
40864506		returns the okCommand1 object. If the okCommand1 object is null, it creates a new Command object with the label "Ok", the type T, and the value 0.
This method returns the okCommand1 object. If
40864539		returns the "Back" command, which is used to control the behavior of the form that includes a back and resume command.

This method returns the "Resume" command, which is used to resume playback when the user is trying
40864558		returns the `okCommand2` object. If the object is null, it initializes it with the title "OK" and the text "Salir" and the type Command.OK. The type Command sets the commandListener to the
40864779		returns a Command object named "formSwitch" that allows the user to switch between screen and search. It initializes the Command object if it is null.

This method returns a Form object named "quests" with a Form object
40865150		returns the Exit command of the Midlet.\ if it does not exist, it creates a new one with the label "Exit", a type of Command.EXIT and the priority of 0, and adds the MIDlet's exitCommand
40865190		This method gets or creates the previous command.
If the previous command exists, it returns it.
It if it doesn't exist create it and returns it.
It sets the command listener to the current object.
SUMMARY
40865212		returns the backCommand2 object, creating it if it does not already exist.
This method, called getBackCommand2(), retrieves the backCommand2 object.
SUMMARY
This method is used to retrieve the back
40865239		returns a new instance of the Command class called backCommand3, which is initialized if it does not already exist.

This method initializes the List object if it has not been initialized.

This method initializes the EditModel
40865265		returns the "Back" command, creating it if it does not already exist.
This method returns the "OK" command, creating it if it does not already exist.
This method returns the "Cancela" command, creating
40865280		returns the form object "Mantendo" with the label "Back" and two Item objects.
This method returns the Command object "OKCommand5" from the "BackCommand5" object, and if it's not found,
40865294		returns the item "Back" and initializes it if it is null.
This method returns the list "listaEsperaComm" and initializes it if it is null.
This method returns the removeCommand4 command for
40865306		returns the ' BACK' command.
This method generates a new 'Command' with the label "welcome 1".
This method initializes 'backCommand7' with the label "main menu".
This method returns the 'OK
40865319		returns the Command object for `backCommand8`. If `backCommand8` is null, it creates a new Command with the string "OK", the type BACK_CMD and the priority 0. It then returns `backCommand8
40865333		getting and initializing a command object for displaying the password. If the command object has not been previously created, it will create a new instance, set its label and command listener, and add it to a list of commands.

This method
40865347		returns the `getBackFileLocal` form, creating it if it does not exist.
This method gets the backCommand01 form, initializing it if necessary.
This method gets the backCommand10 form, initializing it if
40865360		returns a list of form commands for the program, creating it if it does not exist.
SUMMARY
This method is used to initialize the backCommand11 command.


40865383		returns a form with the title "Back" and four commands, each with a command listener.
This method returns a form with the title "Back" and four commands, each with a command listener.
This method returns a form with
40865455		This method retrieves the text field7, which is a Form object with a title of "Log in", adding three commands: "OK", "Cancel", and "Back".
This method returns the backCommand13 object.
S
40865490		returns the backCommand14 instance of the class, or creates a new one if it does not exist.
This method returns the switchCommand14 instance of the class, or creates a new one if it does not exist.
This method
40865517		returns the S-GBM page named "Alerta de Programação: \n" if it is null, otherwise it returns the value of the "Forward" variable.
SUMMARY
This method is used to
40865563		returns the `Back` command field, which is initialized with two strings and three commands, added to the field. If `Back` command is not already initialized, the field is shown. Finally, the field is resized and printed to
4086559		sets the value of the "Funcion" feature of the facet object.
SUMMARY
This method is used to set the value of the "_Funcion" feature of the facet object.


40865681		returns the value of the OkOkForm, which is the value for the NewLicenseKey variable.
SUMMARY
This method is used to get the OK command for the OkConfirmationForm.


40865789		This method returns the menu item named "Datos de servición" and initializes it if it has not been created yet.

This method returns the form items form6 form7 form8 formCrear itemCommand.


40865930		returns the OkCommand4 object, creating it if it doesn't exist.
SUMMARY
This method is used to retrieve the OkCommand4 object, initializing it if it is null.


40866051		returns the OkForm form, if the OkCommand5 field is null, it creates a new Form with the title "����1" and a string item.
This method returns the OkCommand5 field, if the OkCommand5 field
40866137		returns the okCommand6 object, which is a Form object with the label "Attenzione", the command OK, and a priority of 0.
This instance of the `Form` class is used to change the text of the `
40866195		returns the value of the optionsButon variable, which includes the OK command and the priority of the `Command` object in the `optionsT` field. It ensures the object has the necessary preconditions and initializes the object accordingly
40866359		returns the `Item` form with the title "Sobre�as": it, sets its `StringItem` and `CommandListener` to null. It adds the `itemCommand1` and `getItemCommandFuerir
40866402		returns a "getTicker_FormattedTextoX()" instance of the class, if the instance doesn't exist, it creates a new instance of the class and sets its ticker to the formatted text of "Este
40866481		This method initializes the exitCommand3 variable. If it is null, it creates a new Command object with the label "Exit", the command type Command.EXIT, and a priority of 0. It then sets the command listener to this
40866588		returns an instance of the Form for adding a new item, fetches the Form Test Form with the specified title, adds the entered text to the Form, and returns the Form.

This method returns the Form for editing an item.
40866647		returns the next font in the list or a string of all fonts if no more fonts are available.
This method returns the previous font in the list or a string of all fonts if there are none.
This method returns the current font
40866748		returns an edit form (new form1) with six items (okCommand1, okCommand2, okCommand3, okCommand4, okCommand5).
SUMMARY
This method is used to create an exit command
40867016		returns a TextField object named "textField19" and creates it if it does not already exist. It sets the title of the TextField and adds several TextField objects.

This method gets the "textField19" object
40867133		retrieves or creates a TextField object named "textField21" and adds it to the form.
This method returns the TextField object.
This method returns the TextField object.
SUMMARY
This method is
40867275		returns the "Ok" command, if it is null it creates a new "Ok" command with the label "Ok", the type "OK" and the enabled state of the command.
This method returns the "Conectar"
40867405		returns the Form object "ksi1" if it is not `null`. If it is `null`, it creates a new Form object with the given title and items, adds command and item listeners, and sets the command listener to the
40867601		returns the menuPrincipal object, if it is null. It initializes it with a string, a command, and an action listener.

This method retrieves and returns the item1 string, if it is null it initialises
40867726		This method returns the spacer object, if the spacer is null, it creates a new spacer with width 80 and sets an image at the left, then sets this spacer as the image for the spacer. 
This method
40867805		returns a Form object named "mPlante10" if it is not null, otherwise it initializes the Form and adds several sub-constructions to it including textField1, textField2, textField3, textField4
40867839		returns a TextField object named "T7EDETES" if it is not already created, otherwise it returns the existing TextField object.
This method returns a TextField object named "T7A7" if it is not
40867891		returns the `TextField` for the `Bono`.
This method creates a new `TextField` if it is null, sets the `Display` to a `TextField` with the name "Bono 1:".

40867921		returns the "TextField23" TextField object, creating it if it is null.
This method initializes the Panel Description field with the specified title and initial keyCode.
This method initializes the Panel Name field with the specified
40867940		retrieves or initializes a TextField object. If the object is null, it creates a new TextField object with specific label, value, maxlength, focusability, and minimum and maximum length. It then returns the TextField object
40867966		returns the Form object textField25, which contains the textField26's text and is initialized if it's null.
This method initializes the textField25 with the specified text and extra commands.
This method initializes the text
40867987		retrieves a command object that is either created or already exists in the list. If the command does not exist, it is returned.
This method returns the confirmation alert object.
SUMMARY
This method is used to create
40868037		returns the text field if it is not null, otherwise it creates a new text field with the label "Descuento Cr\u00E9dito que Solicita:" and adds two multiple string parameters.
This method returns
40868077		returns a Command object with the label "Exit", type Command.EXIT, and priority 0, creating a new one if it does not exist yet.
This method returns a TextBox object with the label "Phone", type TextBox
40868126		returns the form `resultado` if it has been initialized, or creates an Form with the title "Resultados" and two Items, the string item1 and the stringItem1, and two commands. It then adds the ItemCommand
40868391		obtains or initializes the `command1` field that will be used as an "Exit" command. If the option does not exist, it is created. Then, it adds four commands to the command1 field and sets the command listener
40868483		returns the "Back" command if it is not null, otherwise it creates a new Command object and adds the Command.BACK command type to it and returns the new Command object.
SUMMARY
This method is used to get
40868850		returns the screen command if it has already been created, and if it has not, it creates a new command with the specified name and type. It then returns the new command.
This method returns the back command if it has already been
40868958		returns the "Ok" command with the OK type and priority 0.
This method initializes the "Ok" command if it is null, adds an OK command that will be executed, and sets the command listener to the current object.
40868990		This getScreenCommand5() returns the _ScreenForm command associated with the Frame object.
SUMMARY
This method is used to create the command associated with the Frame object representing the _ScreenForm.


40869047		returns an Alert object with the message "SALIR", type EXIT and a priority of 0. It then sets the command listener to the current object.
This method returns the exit command.
SUMMARY
This method
40869081		returns the Command object that has been created and initialized if necessary. 

This method returns the Command object that has been created and initialized if necessary. 

This method returns the Command object that has been created and initialized if necessary
40869554		returns the "Back" command, if it is not already created, it creates a new one with the "Back" command type and "Exit" label.

This method returns the "OK" button with the name "OK"
40869580		returns the main form for the back command, initializing it if necessary.

This method returns the back command for a mobile device.

This method returns the empty string for the previous command.

This method returns the back
40869590		This method retrieves the "Back" command, which is the "Back" command and is initialized if it is null. This method retrieves the string "More Info" from the "About" menu. This option is used to populate the
40869595		This method returns the command for setting a URL. If the command is null, it creates a new command with the label "URL", the command type 2 and the command identifier 0, and then returns the command.
SUMMARY

40871952		returns the cmdCargar form if it is not null, and if it is null, it creates a new Form object with the text "CCargar". It then adds two commands to the form and sets the command listener to the
40872111		returns the "Exit" command. If "Exit" is null, it is created with the specified label and type. It then is then added to the "exitCommand8" object with the specified command and priority.
SUMM
40872511		This method returns the app. Form object of the city form that is used for entering data. If the form is not yet created, it is initialized with a title, two items, and a command type.

This method returns the app
40872748		returns the ExitCommand9 form, creating it if necessary.
This method returns the Alert object on exit, creating it if necessary.
This method returns the Alert object on exit, creating it if necessary.
This method returns the Alert
40873055		returns the okCommand16 text field, initializing it if it is null and setting its type to the entered type.

This method returns the resultField1 text field, initializing it if it is null.

This method
40873672		returns a Form object called "BackCommand23", which is a form with the name "CmdExitCM", containing a string item called "Send: [" + this.lastCommand + "," + this.getStringItem() + "
40873791		returns the attribute "backCommand24" which is used to begin a new activity on the main interface. If the instance variable backCommand24 is null, it is created with the specified command type, name, priority, menu type, and
40873940		returns the Command object createOk1. It is created if it is not already present. The method adds four OK and a Cancel commands to the Command object that will be used when the OK button is clicked.
SUMMARY

40874697		returns the "Ok" command with the label "Ok" and type Command.OK if it is not already created, otherwise it returns the existing "Ok" command.
SUMMARY
This method is used to create a new
40875321		returns the Form object "DICTAMEN" with the name "DIC" and a T field of type "DICTAMENT".
SUMMARY
This method is used to return the Command object "DICTAM
40875567		returns the "Back" Command, which is created if it does not exist.
This method initializes the "Back" Command with a label of "Go", a type of 0 for the Command interface, and an item action listener for
40875601		returns the "Back" command, which is created if it doesn't already exist.

This method returns the "Back" command, which is created if it doesn't already exist.
SUMMARY
This method is used
40876100		returns the Form class named 'resultadoNegocioBDR1' if it is not null. It creates a new Form object with the text "Descuento", an empty string for width and a zero-length string for height
40876164		returns the "Numero de\u00e1ologo" text form, which is an initialized variable with a version of 1.0 in the first few characters. If the "Numero de\u00e1ologo
40876261		creates and returns the "Descuento KD REF" text field if it hasn't been initialized yet.

This method initialises the form with a text field and adds it to the user interface.

This method returns the
40876302		returns a form with the specified name and data. The form may have several items, an additional item, or text field. The form also has three commands. The form has the specified name and associated an action listener.
SUMM
40876460		returns the textField43 text field, creating it if necessary.
This method adds a command to the textField43 and returns the textField43 text field.
SUMMARY
This method is used to create or retrieve a
40876568		returns the textField44 Form, if it is null, it creates a new Form with the specified title and items. It then adds two commands to the Form and sets the CommandListener to the current object.
This Method sets the command
40876746		returns the textField45 option, creating it if it does not exist.
This method returns the textField35 option, creating it if it does not exist.
This method returns the textField45 option, creating it if it does
40876911		returns the jbtNuevaMembacion object. If jbtNuevaMembacion is null, it creates a new TextField object, sets its background color to black, adds the TextField object(s) to
40877023		returns the exit command, if it is null, it initializes it with the names "Exit", the command type, and the integer value 0. Finally, it returns the exit command.
SUMMARY
This method is used
40877376		returns the "Back" command, if it has not been set, it adds the command "OK" to the "Back" command and sets the command listener to be the current object.
SUMMARY
This method is used
40877685		returns the `Back` Command named `backCommand28` of the form. If `backCommand28` is null, it creates a new `Form` with the title "Back" and adds several `Item` objects to it.
4087778		sets the "word" feature of a Freeling2 instance. If the feature is null and the value is not the same as the old value, it is either a string of the value or null. If the feature is not null, the
40877798		retrieves the back command and initializes it if it's null.
It then returns the back command.
SUMMARY
This method is used to initialize a command with the label "Nueva Piza", BACK and
40878084		returns the "Back" command from the form, if the "Back" command is null, it creates one and adds the commands "OK" and "Back" to the form. It then returns the "Back" command.
S
40878203		returns the "Back" command, creating it if it doesn't already exist.

This method creates a new Form if it doesn't already exist, setting its title to "Help >>", three items (OK and Back), and a
40878341		returns the BackCommand32 object, creating it if necessary.
This method sets a command listener to the BackCommand32 object.
This method returns the TextField111 object.
This method sets a command listener to the TextField111
40878705		returns the 'BackCommand33' form, initializing it if it is null.
This method returns the 'OkCommand33' form, initializing it if it is null.
This method returns the 'RecordButton33' form
40878931		returns a Command object named backCommand34, initializing it if necessary.
This method adds a Command object named backCommand34 to the current object.
This method returns the Command object named backCommand34.
SUMMARY
40879350		returns the okCommand18 object, creating a new one if it is null and adding the OKCommand18_string command to it.
This method returns the valueOf valueOf field of okCommand18.
This method returns the number
40879522		returns the command for exiting the application. If the command is null, it creates a new command with the label "Salir", the type Command.EXIT and the priority 0 and adds an exit command to it.
SUMM
40910773		returns the external Javadoc expression of the current page using the class display and package.

This method builds the web path from the JSP page and the class display name.

This method handles exceptions and displays the stack trace
40910951		prints the HTML code for a tab with a link to the tab title and navigation options based on the value of the boolean parameter.

This method initializes a new tab with various widths and tabs.

This method creates a new
40911830		takes a single AST node representing an array or a parameter named "class" and uses a visitor to create a string representation of the array.

This method takes an AST node and creates a new string buffer by using a visitor provided for
40936549		calculates the elapsed time required to reach a move forward.
This method tests the getAlphaE() method by comparing the result of getX() to the expected value.
This method tests the return value of the alpha variable being in
40936756		selects bracketing time values in a calendar's time stamp. If the specified date is null or its millisecond equals 0, it selects all brackets in the date. If the specified date is not null and has a balance greater than 0 and
40936762		returns a KOCorrection object that represents the correspondingCorrection of aATIVE corrected pixel in a given AbsoluteDate. It first retrieves theATIVE corrected pixel from the eopHistory and checks if it exists. If it does, it returns it,
40937183		calculates the third-hourly KP for a given abstract time period instance. It finds the lowest priority to the bottom of the chain and first finds the next higher priority for the remaining time period. It randomly selects the maximum price from
41068176		replaces instances of variables in a given string with their corresponding values for n occurrences.
This method replaces a single instance of the current class with the value found in the bundle context with the updated value.
This method replaces a variable in the
41069179		establishes a connect to a specific VM using the provided IP address and port. It throws a custom exception if the installation fails.

This method connects to a specified host and port, but only if the installation succeeds. It throws an
41069185		connects to a remote server using open and close mode, allowing the process to accept a pipe with a given name.

This method connects to a remote server using open and close mode, allowing the process to accept a pipe with a positive
41069190		tries to get a remote context from a service and returns it as an XComponentContext. If the context is no longer available, it will throw an exception. If the service's connection is established, it will not return anything after it has
41103163		returns the RMI registry line from the given service name using the local host.
This method returns an initialized Writable object.
This method is similar to the previous one, except that it is similar to the previous one and uses a
41103167		This method gets the RMI registry line for a given ISocketAddress and ServiceReference.
This method gets a new reference line for a service in the remote server.
This method gets the RMI registry line for a given ServiceReference.
41103180		checks if the RMI registry is running by attempting to look up the RMI registry line in the current instance. If successful, it returns true, otherwise it returns false.
SUMMARY
This method is used to check if the
41103222		starts the application server process by starting a module and releasing it after module initialization.

This method triggers when a server is started, notifying and invalidating any registered modules. It handles exceptions and logging the error.

This method
41103244		checks if a module exists with a given name, and if so, releases it and returns true. If the name is empty, it throws a RegistryException. Otherwise, it returns false.

This method tests the checkModuleName method.
4110525		returns an instance of the StringItem class, which displays a toast string that includes an empty string and an icon, and adds an action listener to the item. If the instance has not been created yet, it initializes it with a new
4110539		returns an instance of the `Command` class with the name "Ok" and the type `SCREEN_CONTROL`. If the `Command` class is not `null`, it initializes and returns the `okCommand1
4110547		returns the StringItem2 object, which is used to help get the application's icon, which is used to display the information about the application.
SUMMARY
This method is used to initialize the StringItem2 object, which
4110607		returns the value of the _okCommand3 variable, which is a new instance of the Command class. If _okCommand3 is null, it is initialized with the label "Ok", the type, the size and priority of the command
4113566		monitors Jetty plugins and registers a handler for interruptions. It starts a new thread to monitor Jetty.

This method sets the server for the running list. If the server has already been started, it will run the server and
4113841		retrieves the email list. If the email list is not defined, it throws an exception. It then checks if the description is null, and if it is, it returns an empty string. If the description is different from the current description
4114383		adds a given calendar to this list if it does not already exist and updates the list of dates.

This method creates a new calendar object, sets its properties, and adds it to the list.

This method updates an existing
4114401		adds a specified number of weeks to the current month for a given year and month.

This method tests the addDays method of the Day class by adding elements to a list, asserting that the dayCounter field of the Day class returns
4121895		initializes the servlet by loading configuration parameters, including base directory, configuration file, and additional configuration parameters.

This method gets a reference to the servlet context and creates a new instance of the class.

This method gets a
41246317		writes the cross reference information to the file in a raw byte buffer and prints the xrefs.
SUMMARY
This method is used to write cross reference information for real objects when written to the file.


41252553		returns a label, which is the value of a property that can be labeled. 
This method returns a list of properties that can be labeled. 
This method checks if a property's name is defined already.
This method returns
41253437		creates a classATUREadjectiveAggregate that represents an object of a specified class, providing attributes for a class type, the class OWL class, the Semantic Relation (ESR) expression, semantic relation, and the list
41253480		This method creates a ProperNounAggregate object for each sense and adds it to the map of senses.

This method creates a copy of the ProperNounAggregate object: by assigning a duplicate of all copies of the original.
41253506		adds lexical entries to a lexicon, and if the lexicon has subcategorization frames, words, or contexts, it also sets a subcategorization frame and predicate.

This method adds lexical entries to a
41253511		removes the current Lexicon object from the lexicon.  This method removes itself from the semantic predicate if it exists, its semantic predicate if not, and its lexical entry if any, and sets the status to RDF-not
41253592		takes a list of Aggregate objects as arguments and lexicalizes a lexical string using the templates provided in the arguments.

This method initializes the factory by clearing data and index entries, using the rules with their values from the
41253961		This method calculates the probability distribution value with a maximum value between 0 and a maximum number of occurrences.
This method computes the overall uniform distribution value.
This method computes the probability distribution value with a minimum value between 0 and a minimum
41253985		initializes the POSTagger by getting the POS tagger and model file path, creating a POSManager, and throwing an exception if the tagger encounters an error during initialization. The method then sets the postagger to the POS manager and initializes
41253997		retrieves the first word from the English or partitions of the Word Counts. It tries to get the corresponding word from the index of the Word Counts and if it fails, an exception is thrown. If the word is obtained, the
41254025		checks if a HashSet contains only stop words by iterating through an array of objects and determining if any objects in the set contain only stop words. If found, it returns true, indicating that only stops have been processed.

This method
41286960		removes a local pin from the grid if it is connected, removes the connection from the network, and removes any stored rows.
This method checks if a local pin is available for connection, and if not, removes it.
If the
41286972		returns the number of connections that are not connected to a destination.
This method adds a cell to the layout and returns the number of connections found.
This method returns the number of connections that are connected to the cell through its connections.
41286988		draws a list of grid objects on a graphics context, scaling them so they can be printed along the way.

This method draws a grid onto the graphics context, scaling them so they can be printed along the way.

This
41287216		returns a copy of the object if it exists, otherwise it creates a new copy of the object using the superclass method copy.

This method returns a copy of the object specified by the String field as a command. If the field
41287366		rotates a Rectangle src based on the rotation angle.

This method rotates the origin.

This method rotates the origin itself as the shape is translated.
.
SUMMARY
This method is used to
41287398		sets the properties of the object and adds or removes an attributes listener based on the properties set. If a logical component is given, the corresponding listener will be invoked at the result of setting properties.

This method sets the properties of the object
41287491		sets the simulator speed and checks if it is running, and if not, stops the timer and sets it to running and sets it to indicating that the speed has changed.
SUMMARY
This method is used to notify all state listeners
41287521		creates and returns a new OutputPin object using the specified name, which includes the provided name. If an ITypeNameProvider is specified, this method adds an entry to all the OutputPins in the Lookup object that the name of
41287526		initializes all output and input pins of the class based on the inputs received.
This method increments the connection count and attempts to start the stream thread for the current bounds.
This method retrieves the connection name and sets the appropriate state and
41287529		begins the simulation and initializes simItem, simItem, and simState variables.
SUMMARY
This method is used to start the simulation.


41287624		saves the current component state to a file with a given filename, updating the filename of the component and the GUI title.

This method saves the current component state to a file with a given filename and a boolean value.

This
41288449		checks if a component is contained in a list of components.

This method takes an element and checks if it is a logical component.

This method initializes objects.

This method loads the component state from the state manager
41323165		initializes the main canvas with a given LANG comment, sets the background color, sets the border, and creates a drop manager with the given comment.
SUMMARY
This method is used to initialize the main canvas with a consistent
41323175		resets the main canvas by removing all layers, and then based on the properties of the specified object, such as the active project.

This method:
- Imports 2 objects, creates a two-dimensional array and iterates over
41323206		handles the event when the selection in a tree changes, it checks whether the event source is the its tree selection path and if so, updates the selected attribute in the model with the node's attribute, and then resets and updates the attribute
41323208		resets the preview canvas for all layers and localizes the views.

This method resets the preview canvas to its default state.
SUMMARY
This method is used to reset the preview canvas's local state to its default
41323230		sets the value of a LOM attribute and ends drag event if the lom value is not null or an empty string.

CONTEXT
This method appends a text string to the document, setting the text to the value of the
41323263		sets the value of the LOM attribute in the Look and Feel Manager and ends a drag event during the drag and drop operation. If the LOM value is not set, it sets it to "Identity " and assigns it as the UI
41323359		sets the shape on a rectangle to be used for text painting and updates the shape's appearance and color accordingly.

This method checks if the rectangle shape is visible and sets the path to a rounded rectangle shape.
If the rectangle shape is
41323456		initializes stroke objects for varying scales and colors, including initial values, shapes, shapes, strokes, textures, and lines. It includes the main stroke block, camera matrix, shadow image, background, stroke color, shadow image offset, and outlines
41323464		initializes the activity state by creating a horizontal box with a progress bar, and adding it to the activity state panel.

This method calls the superclass's initializeActivityState method.
SUMMARY
This method is used to
41323522		navigates the upper layer of the application.
This method goes the upper layer of the application if it exists or chooses the first container layer if it exists.
SUMMARY
This method is used to navigate an active layer up
41323537		sets the archive path for the current OSJ to the given value and updates the UI object to reflect the change.

This method is used to set the archive path for the current OSJ to the given value and updates the UI object to
41323632		modifies material properties by updating its LOM and parent relation, and then modifies it.

This method modifies a material property and updates its parent relation.

This method creates an enumeration of child elements for Material, and
41323715		calculates the union of the bounds of all child nodes, excluding the containing node labeled "Title Node".

This method calculates the bounds of the rectangle used to identify the child nodes of a piece of furniture.
SUMMARY
41323773		calculates a set of LOMs that match the given lom.

**parse** is used to identify instances of a given KEGG ontology.

**updateRestrictionFor** is used to update the restriction
41323900		checks if an object is a Literal Abstract Object
	SUMMARY
This method is used to determine if an object has any restrictions in the LOM.


41323931		removes the selection from a tree node, displaying any children and destroying the selection handler.

SUMMARY
This method is used to disrank out any SelectionableNodes.


41324004		exports a temporary file of LOM to disk, it enters a loop to copy the contents of the temporary file into the clipboard and add the copied data as children of each child in the copied file. It also initializes relations and checks for
41324091		checks whether the given LOMValue object contains a specific value in the given LOM.

This method, forLoop, loops through a collection of LOMValue objects and checks if the values in each LOM are contained within a given
41324133		takes a UIManager, an LOMValue and an Int value as parameters and returns an Element object that represents an XML Element in the UI. If the CompositeLOMLanguage object is null, it creates a new CompositeLOM
41324146		checks if a node is visible in a PCamera layer.
This method iterates over the selectableParents collection, checks if a specific parent has any children, and if the current camera layer is also any of the descendants of the parent.
41324900		calculates and returns the scores for a given object by parsing its rank and updating maps of object and rank scores.

This method returns a double value at a given index, where the value can be a Collection or an integer.

41324941		unnormalizes a score value and returns the normalized value.

This method returns the unnormalized value of the score.
SUMMARY
This method is used to normalize a score value and return the normalized value.


41388155		creates and returns aock an Object called "sessions" if the 'num` parameter is not 0. It then it checks if the 'user' parameter is not equal to "user", and if so, returns a new Date object
4150280		checks if all values in a two-dimensional array, `theCategory` equal to the `theCategory` array, are not empty.
SUMMARY
This method is used to determine if any values are empty in a two-
41566093		creates a LWJGL canvas with specified size and layout, and adds a light, black cursor, and a dark gray light to the canvas.

This method creates a LWJGL canvas and sets its properties, then creates a Can
41597700		This method returns the ticker item for the form. If the ticker item is null, it creates a new ticker item with string `T` and adds a listener.

This method returns the item for the ticker item.
41597701		retrieves or initializes the "Ok" button used to terminate the application. If the "Ok" button is already created, it simply returns the existing button. If the button does not exist, it creates a new one and adds commands
41709095		This method checks if the algorithm needs to besetup, creates a path find helper, sets up the path finding process, and checks if the path is found. If found, it returns true. Otherwise, it returns false.

This method
41709139		formats the image as a hexadecimal string. It takes into account the presence of the size of the color, number of slices, number of columns, and number of pixels and padding. The method then iterates over the image,
41709456		deletes a range of text from a text object, shifting the start to the end range of each character with a shift operation if necessary.

This method removes all lines from a text object, with a leading carriage return to be inserted before
41711908		adds a new instruction panel to the main interface, setting its step size and adding it to the "preferencesPanel" if it is not already one.

This private method adds the "new" JLabel to the main interface
41728455		logs and logs the clientItfName, then calls the super class's bindFc method. It then calls the bindFc method.

This method logs and logs the serverItfName and then calls the invoke method.
41728472		unbserves a simple object with an interface and log it, then calls the unbindFc method.
This method unbinds the simple object with the interface and then calls the unbindFc method of the superclass passing
41760965		checks if a given token matches a given expected type, returning true if a match is found and false otherwise.

This method scans tokens and returns a token based on the type of token encountered.

This method checks if there is a
41761014		creates a new node in the syntax tree, either incrementally or latest version, and adds it to a tree structure. It also checks for duplicate tokens and inserts them into a tree structure. It validates the root and child nodes before replacing
41761072		parses a list of expressions and returns the root of the tree.

This method parses the expression list, returning the root of the tree if the list has no size and a certain mask is provided.

This method pars
41761107		parses a simple expression and pushes the resulting list of tokens into a stack before returning it.

This method recursively parses a simple expression, ensuring that it follows one or two parentheses.

This method scans an expression
41761114		parses a factor in a tree and returns the term.

This method parses a factor in a tree and returns the factor.

This method parses a query from a tree and returns the query.

This method
41761118		parses a mathematical expression with parentheses, where the brackets are preceded by the operator and the right-hand side of the expression.

This method creates a TreeNode representing a mathematical function.

This method creates a TreeNode representing
41761120		parses a Basic Number using a visitor and returns an expression. If the expression is null, it raises an error. It then tries to convert the token to a Generic Number type if necessary. If successful, it returns a generic number expression
41779193		returns a Command object called cmdConfirm, and if cmdConfirm is null, it initializes the object with the name "confirm", the type OK, and adds the text "Configuração criar Exibica
41779215		returns a Form object that contains seven items to the app in a new Form object.
This method returns the TextBox object used for entering the content of the form.
This method returns the Command object used to display the form.

41779397		returns the ChoiceGroup "lstCanale", which contains three new options for "Amagar", "Cancella", "Pagui", and "Canale." If the ChoiceGroup has not been initialized, it is initialized with
41779427		returns a Form object called "about" containing two commands. If "about" is null, it creates a new Form with two items: "OK", "Cancel", and "1" respectively. The Form also adds it to the
41779496		returns the Alerta_Notificacao_Novo alert, creating it if it does not already exist and setting its command listener.
SUMMARY
This method is used to create the command object for the Alerta_
41779519		returns the form "Ripeti" with a name "Inserimenti" and two canel command buttons.

This method returns a copy command with the name "copy".

This method returns a copy command with
41779534		retrieves the exit command for the game loop.
This method, `EXIT`, checks if the exit command is null, and if it is, logs the error and returns. It then gets the title of the error and sets it
41779670		returns a Command object named "ModProced", if it is null, it creates a new Command object with the label "ModFuncionalita" with the specified string and Command.SCREEN type and a priority of 1.
41779718		returns a form for holding the numbers from the internet. It initializes the form with the data, and adds a command to the form.
This method initializes the form with the data, and adds a command to the form.

41779742		returns the RMS data form. If the form has not been created, it is created with a title of "Radio button", a list type of 0, a command of OK, and the size of form.

The method then
41779827		returns a Command object called "Retrieve," creates one if it's not specified, a label "Registra", an ID_MENSSH, and a Size_Max.


41779840		returns the `Form` named `cmdLogin`, which is initialized if it is not already set.
This method is one of the three components: `OK`, `View` and `Cancel`.
This method is a `Form
41779847		returns the `backCommand` if it is not null, otherwise it creates a new one and adds an `Command` to it.
This method creates a new `Command` called `append2` which is used to append the specified
41779884		returns the screenSelect command and if it is null, it creates a new command with the text "Screen" and the type ICommand.
This method returns the enabled commands for the Select command.
This method returns the Delete one command
41782470		adds the specified command to the displayable and then enters the command.

This method sets the current locale for the current form to the selected locale.

This method displays a toast display with a list of commands.
SUM
41782527		schedules a room for a given meeting date range, title, and status. It displays a message indicating the range, start date, and end date of the selected meeting.

This method displays a meeting schedule for either the user or
41782568		returns a subset of a TimeInterval object with all values combined into another time interval.

This method sorts the Interval objects by values in descending order.

This method closes all subunits in the list by iterating over
41798938		stops a service by closing its service from the service manager and invoking the stopService method of a service manager to accept the stopping of the service.

This method invokes the stopService method on an object that implements the STOP_SER
41798941		inverts the boolean value 'false' to 'true' and calls the 'notifyIncomingMessage' method, then logs the change of 'pending' and increments the 'smsHandling' variable.

CONTEXT

41798946		checks if an I/O operation has exceeded the maximum allowed time and then restarts the CTPService.

This method completes the processing of an I/O operations, checking for errors based on their elapsed time, and triggering notifications
41799005		initializes a log file by opening a TCP connection to a server and setting the log file to either system-memory or binary.

This method initializes the socket connection.

This method initializes a stream from the remote address and
41799030		returns the next string in the buffer.
This method gets the next value in the buffer.
This method evaluates the given option condition.
This method escapes the value specified in the input byte array using the output byte array.
This
41799033		deletes a Log File by deleting its associated RecordStore. If the RecordStore exists, it calls deleteLogFile() and prints a message indicating that the file is deleted. Otherwise, it prints an error message.

This method calls an
41799064		takes in a Date object, recomputes the number of days since the end of the date, and returns the result as an int.
SUMMARY
This method is used to obtain the number of days since the end of a
41799095		checks if a record with the given name already exists in the data store. If it does, it returns true. If it doesn't, it checks if a new record exists at the given name. If it does not exist, it creates one
41799114		This method tests the functionality of a thread pool by starting threads for three instances of thread classes and verifying that the pool is returned to all the objects.

This method tests the functionality of a thread pool by starting threads for three instances of thread
41799122		returns the number of records in the object store or -1 if there are no records

This method logs the size of the object store with the given stack trace if it exists.

This method returns the number of records in the
41799140		takes a Serializable object, serializes its contents to a byte array, and stores the serialized object in a record store. It returns the ret value used to store the response such as the number of records generated.
SUMM
41799146		tests the writing log before rotation by searching for log entries and then saving and reading the log record store it to check if the number of records is correct.

This method opens a log record store and iterates through records, executing specific commands
41799149		This method tests the parseRfc2822Date() method in MailDateFormatter by parsing a formatted Rfc2822 string and comparing the resulting Date object to an expected Date object.

This method tests the parseRfc2822
41799151		tests the MailDateFormatter class's ability to parse and convert an UTC date into its equivalent UCT date format.

This method runs a test to ensure that the expected result is obtained by comparing the parseUTCDate method to the
41799177		is a test method that steps through a series of test methods using a single test number. It allows for exceptions or mismatches based on the number of test methods used.

This method is used to run the test suite to run a loop
41799204		initializes the program, checks for errors based on user inputs, and records data if necessary. It then initializes the class, sets up the listener, handles login and logout requests, and displays it.
SUMMARY
This
41799236		writes an object to a database store and closes the store, if any.
This method writes a set of objects to a record store.
This test writes serialized objects to a record store.
This test adds an object to a
41799278		serializes a HashMap of KeyFileIdPair objects to an ObjectOutputStream.
This method calls the serialize method of object serializer on the object.
This method serializes a given SerializedProxy object into a Serialized
41799288		closes the connection to the system by closing any open data streams, the connection to the server, and the client connection.

This method closes all connection streams for the client.
SUMMARY
This method is used to close
41799291		deserializes a data input stream and clears the object map. It then reads key-value pairs and serializes them using a SerializationReader to deserialize the data.
This method deserializes a data input stream and clears the
41799564		converts an array of bytes into a Word book String.
This method converts an array of bytes to a string using a StringBuffer.
This method converts an array of bytes into a Word book String.
This method converts an array of
41813630		returns a non-empty ImageIcon from either the menuItem or tab, which is used for tree menu items.
SUMMARY
This method is used to create an ImageIcon from a file path, given a drop event and
41813631		handles value changes in a tree selection, and updates the displayed URL accordingly.
This method sets the currently selected node in a tree.
This method handles mouse clicks on a tree, and calculates a new page, sets the starting position and
41830764		creates a dialog that allows the user to specify a URI. If the URI does not match any known choices, it returns the default URI.

This method overrides the parent class method "onAbout" and handles the "About"
41830810		inserts a new user into the database, with the specified host, username, and password. It first initializes the SQLiteDB, creates a database query to insert the current user's credentials, and then queries the database to verify the database
41830982		adds a GeoRSS feed to the database by reading its url, description text, and description metadata, and then attempts to add the feed. If the feed is successfully added, the method registers the GeoRSS feed for registration and refres
41831019		checks if a specified entry in a PostgreSQL database contains a more gathered data collection.
SUMMARY
This method is used to determine if a geo-random space can be read for various entries within a PostgreSQL database.


41831032		retrieves the layer data for a given layer ID from the database by querying a database for layer IDs
41831036		returns the number of unread entries in the ENTRIES table for a given geo ID.

This method returns the number of items in the ENTRIES table for a given geo ID.

This method returns the number of
41831038		retrieves the default SRSE rectangle for the visible layers for a specified web service layer ID. It first queries for the SVG layer with the given ID and returns the rectangle if one exists. Then, it selects all of the SVG layers and
41831052		retrieves Google Map Data (WMS) data from the database for a given WMS ID by querying the database for its name and returning the first result.

This method retrieves the WMS ID of a WMS as
41831163		returns the count of containing layers in a specified layer.
SUMMARY
This method is used to get the count of containing layers in a specified layer.


41831406		deletes a SOS from the database based on the provided SSOSID. It opens a database cursor to retrieve the SSOS ID and ensures that the cursor starts after deleting again. It then deletes the SOS and closes the cursor.
41831420		retrieves an integer value of the specified SOSID from the database. It returns -1 if the value is not present.

This method reverts a color to the normal scale value and sets the final red, green, blue
41831430		retrieves a feature from the database by its ID.

This method sends an AddFeatureEvent to the phone device.

This method sends an EditFeatureEvent to the phone device.

This method sends an AddTrackEvent
41831547		retrieves the name of an offering from the database for a given offering ID.

This method fetches updates to the database for a registration history of a specific offering.

This method gets the registration history for a registration for a
41831554		retrieves a property value from the database by retrieving it from the database using the provided ID.

This method returns a string representation of the property by concatenating the values of its fields into a single string.

This method
41831584		takes in strings and finds the ID of the selected offering in the database.
If no offering ID is given, it calls the get selected offering method.
It then attempts to retrieve the offering information from the database and returns the result as
41831692		retrieves the highest timestamp from the specified measurement for the given measurement ID, using the cursor to search and then selecting the smallest timestamp from the measurement table.

**getYoungestMeasurementTime** method retrieves the oldest measurements for
41831754		retrieves the oldest measurement value for a given measurement ID from the database.
This method retrieves the oldest measurement value for a given measurement ID from the database.
SUMMARY
This method is used to retrieve the latest measured
41831762		checks if the specified `sosID` is visible in the database and returns true if it is.
SUMMARY
This method is used to determine if aSenseID is visible in the database by querying a database.


41832074		retrieves the measurement ID of a specific feature from the database. It first checks if the ID is already used and returns it if not. It then retrieves the measure's property, feature, and feature ID from the database and returns it
41856129		creates an SVNFile repos, tridy a directory created from a path, and closes the SVNWriter edit record. If the write session is successful, it commits the write session and notifies the editor that the file has been
41954265		This method tests the `bind` method of the `Binder` interface by asserting it to true when the argument is null and then asserting that its assertions indicate that the Binder implementations do NOT specify a specific method when the argument is an argument
41954284		retrieves a Field object by its name, throwing a PersistenceJDBCException if the object or field name is null or blank.
SUMMARY
This method is used to retrieve a Field object by name from a class.
41954301		adds a JDBC connection to the database broker, initializing the connection pool if necessary or allowing other methods to be called, and reading-only access to the connection pool.

This method checks the connection context for proper security and throws
41954312		configures Hibernate by starting it and configuring it if necessary.
This method tests the initial setup of properties and relationships.
This method tests the initialization of entities not in the database.
This method tests the initialization of foreign
41954318		retrieves a Hibernate session from a transaction resource. If the transaction context contains an Hibernate transaction resource, it returns it, otherwise, it throws a PersistenceHibernateException.
SUMMARY
41954330		commits the transaction for the Hibernate service, including any exceptions encountered.

- This method copies binary data.

- This method updates characters in the database.

- This method handles commits or rolls back in the
41954336		rolls back the current transaction, commits the updates, and logs the outcome in the event.

This method rolls back any open Hibernate session, logs and prints the action path, calls the superclass's rollback method,
41954367		retrieves an EntityManagerFactory from the managed data storage, creating a new one if necessary.
This method retrieves an EntityManagerFactory from the data storage.
This method retrieves an EntityManagerFactory from the framework framework.

41954392		inserts an A object into the database using the given ID and throws an exception if the object already exists.

This method executes a command and returns a result object, which is either null or a non-null result, or the next
41957102		returns a set of options for the command-line interface.
This method creates the getOptions method of the CommandLine class.
This method adds a delete option to the set of options passed as an argument.
This method adds the
41985621		prints the current position to the console.
This method sets the font size and size of the current position of the graphics object.
This method prints the current position to the console.
This method sets the font size and position of the current
41985781		takes an ArrayList of sensor names and returns a String containing the data of each sensor. Each sensor's name is separated by the "sensors" string and the corresponding sensor's ID.

This method deserializes an object
41985801		returns the distance of the ship given its island.

This method calculates the distance between the ship and its island based on their coordinates.

This method calculates the distance between the ship and its island based on their coordinates.


41985817		retrieves the current angle as an integer and displays it in a text, padding it with zeros.

This method sends the current angle in four or more byte manipulation digits to the robot and returns the result.
SUMM
41985945		prints the distance matrix for each element in the interestingpoints list.

This method takes a distance matrix and prints it, along with its dimensions and elements.

This method takes a distance matrix and prints it, along with its internal data
42017793		checks if all scores in the given score are all zero and logs an error message if any are missing. It then iterates through the scores, verifying that each hole exists and is not already contained in the score. It then increments the hole for
42048340		updates the game state by firing a command, resets game values, and firing a timer.

This method calculates the angle of the counter, fires a bullet if needed, and pauses if not over.

This method decreases the
42048354		renders or draws an image using OpenGL, multiplying double values as necessary to accommodate the transform operations.

This method draws a background thread's topology, handles its redrawing, centers the background thread, and renders the background thread.
42048609		sets the location of the border black and the location of the cell black, row and column to the bottom of the grid, and sets the border size to half of size of the same height.

This method sets the location of the cell
42048968		prints a message indicating a city-consultation attempt, displays a wait cursor to the user, and prompts the user to find a code. If no code is found, it checks if the input string contains an unused space and displays an error
42049218		plays a background music playing the MIDI file.
This method constructs the GUI elements for the music player window.
This method runs until the playButton is clicked.
This method starts playing music.
SUMMARY
This method is
42113362		renders text on the display using a font, renders it using a renderer, and then checks if any text items have renderable formatting. If so, the rendered text contains no rendering elements before.
SUMMARY
This method
42113457		sends aphrase to a vehicle.
This method fires a bullet message to the person.
This method fires a bullet message to the person.
This method fires a bullet message to the person which is following the action taken to fire.
42113601		creates a HUD quad with the specified name and texture, sets its render queue mode to orthogonal, sets its texture and cull combine mode, and adds its spatial to root node. 

This method creates a HUD quad with the
42114050		redraws the game's display by setting the background color and updating the statistics display.
SUMMARY
This method is used to redraw the game's graphics by setting the background color and updating the statistics display.


42114076		returns the camera's position, taking into account its controllers' movement and camera location.
This method checks if the motion event is coming to a bullet, and if so, notifies the manager and kills the bullet.
SUMM
42114080		refills the ammo and sets the active state line to the next state, if the player is not null and the next state is not an AIplayerInterface.
SUMMARY
This method is used to refresh the ammo and set the
42114084		increases the health of the object and plays a sound to play the HP. The method then updates the health text for the object and returns true if the health was increased.
SUMMARY
This method is used to provide an audio
42114096		sets the opponent's score, adds the opponent's name to a text field, and sends a chat message with the opponent's name.

This method sets the opponent's name to "gameState" and updates the text field to reflect the
42114099		updates the health text and plays a sound when the player dies (hit count damage) or over 100 characters.

This method scales the weapon by a given distance, and then rolls damage if the distance exceeds 25.

This method
42114159		updates the health of a person and destroys their opponent when they hit, causing damage.

This method checks if the player is killed when they hit, causing damage to either go by their owner if they are alive or off by their owner
42114261		updates the icon for a game attack player and sends an information packet to set the character's target's weapon model if the character is not null.

This method sets up the HUD, including the UI elements for eachplayer character, including
42114334		updates the score and disconnects server replies if the game is in Server mode.

This method updates score if the game is in Server mode, and gets the GameEngine object from the server and notifies that the server reply is sent
42160553		stops audio playback and closes the audio audio player, optionally flushing to a buffer or using a buffer.

This method calls the super stop method and closes the play log, player, and instance variables, ensuring that all logger levels and
42163778		synchronously fires a label provider changed event to the UI thread to see if the label provider has changed. 
This method runs the label provider's run method, fires a label provider changed event, and fires a label provider changed event.
42163855		returns the image data associated with the specified key, if available, from the UI. Otherwise, it returns null.

This method returns a string representation of the HTML node. If the node has children, it iterates over the children
42164047		computes a list of error messages depending on its properties and stores them for later retrieval.
This method checks for read-only resources and returns an error message if any are found.
This method returns the most likely status of resources to do
42164275		retrieves an error status message or returns an existing status if the message is not of the expected format.

This method creates a status object with an error status if the message is null it returns a null status.

This method
42164286		returns a warning status based on an input message and code, or the original exception's message and code.

**getWarningStatus ()**: This method returns the warning status associated with the given message and code. It first retrieves
42165103		iterates through semanticHosts and enables or disables semanticHosts that match the given enable.

It also enforces refresh of the CanonicalEditPolicy any need for it

Otherwise, it does nothing.
S
42166216		checks if a component provides a hint for a given operation.
This method checks if a component provides a hint for a given operation. Additionally, it checks if a component provides a hint for a specific operation.
This method checks if a component
42166334		retrieves the semantic EClass for the given object. If the EObject is null, it returns null. If the object is an instance of EObject, it returns the EClass associated with the EObject's EStructuralFeature.
42166343		returns the semantic element associated with the given element if it exists in the list of semantic values of the specified editing domain, or null otherwise, if the element is the root of the list it returns the semantic element.

This method retrie
42167481		adds a collection of messages to the text editor's message list.
This method sets the list viewer's input to a list of messages.
This method sets the list viewer's input to the messages.
SUMMARY
This
42168017		sets the session for a list field if the session is not already set and the new session is different from the old one. It closes the current session if the session and the new one are both different and closes the current session if the values are
42168936		prints the tree structure of the root node.
SUMMARY
This method is used to print the entire tree structure of the root node.


42168999		clears the results by disposing of listeners, first checking if the tab folder is disposed, then clearing the results list of the tabs in the tab folder.
This method resets the total number of entries and clears the results.
This
42169591		creates various EClasses (SubClasses, ObjectProperties) objects, including classes that can provide information about the input.
SUMMARY
This method is used to create a new EClass for a package.


42170888		adds a description property descriptor to an object.

This method checks if the list of item property descriptors is null, and if so, calls the superclass's method to get the list of item property descriptors. It then adds
42170895		adds a value property descriptor to the list of property descriptors for a given object.

This method sets the value of an item property descriptor in the list of property descriptors.

This method adds an value property descriptor to the
42170905		adds a property descriptor for the skip milliseconds feature of theFLAGSED_PROPERTY element.

This method is used to add a property descriptor for the skip weeks property of theFLAGSED_PROPERTY object.

42170906		adds a property descriptor for the "days" feature for a weekly occurrence model.

This method populates an item property descriptor list for the object.

This method adds a property descriptor for the "id" property for the object
42170907		adds a start date property descriptor to the list of property descriptors.
This method adds a end date property descriptor to the list of property descriptors.
SUMMARY
This method is used to add a start date property descriptor
42170911		adds a property descriptor for the skip days property.

This method, protected void addSkipDays, overrides the default implementation and returns a list of property descriptors for the specified object.
SUMMARY
This method is
42170923		adds a property descriptor for the mode property to the list of property descriptors.
SUMMARY
This method is used to add a property descriptor for the mode property to the list of property descriptors.


42170937		adds a property descriptor for the "by index" feature to the list of property descriptors.
This method returns a list of property descriptors for the given object.
SUMMARY
This method is used to add a property
42170939		adds a skipMonthsPropertyDescriptor to the list of itemPropertyDescriptors.

This method gets the list of itemPropertyDescriptors for the object.

This method checks if the itemPropertyDescriptors
42170941		adds a property descriptor for the "dayIndex" type of a MonthlyOccursModel object.

This method adds a property descriptor for the "numberOfDays" property of a MonthlyOccursModel object.
SUMMARY
42170943		adds a property descriptor for the day occurrence feature of the MonthlyOccursModel class.

This method returns a collection of IItemPropertyDescriptors for the specified object.
SUMMARY
This method is used to add
42170946		adds a property descriptor for the day feature of a MonthlyOccursModel object.

This method overrides the default behavior of the superclass, returning a Class variable that returns the superclass's implementation of the method if applicable.

42170965		registers a name property descriptor for a given object's name.

This method overrides the superclass's `getPropertyDescriptors` method and adds the new name property descriptor to the list of property descriptors for the given object
42170967		adds a start range property descriptor to an object's item property descriptors, including attributes such as start and end range, duration, change occurs, and range ID.

This method adds a start range ID property descriptor to an object's
42170968		adds a property descriptor for the end range of a Timebase to an object.

This method adds a property descriptor for the position of a Timebase to an object.

This method adds a property descriptor for the position to an
42171383		adds a property descriptor for the platform ID of the PlatformDisposition class.

This method populates the property descriptors of the class by calling the superclass version, adds platform ID and platform name property descriptors, and returns the
42171386		adds a platform dependent property descriptor to a list of property descriptors for a given object.

This method overrides the superclass's versioned and adds platform dependent and triggers property descriptors for certain classes.

This method adds
42171387		This method overrides the default implementation of getPropertyDescriptors(), calls super and addPropertyDescriptors(), and then returns the list of property descriptors.
SUMMARY
This method is used to add a property descriptor for
42171418		adds a property descriptor for the shared Saflet script in the Saflet script environment object.

This method adds a property descriptor for the shared Saflet script in the Saflet script environment object.
SUMMARY
This method
42171422		adds a shared script scope property descriptor to the list of property descriptors associated with the given object.

This method adds a share script scope property descriptor to the list of property descriptors associated with the given object.

This method
42171425		adds a property descriptor to the list of property descriptors for the specified object. If the list of property descriptors is null, it first calls the superclass's method to obtain the default property descriptors or adds the specific property to the
42171427		adds a property descriptor to the object.

This method adds a script scope factory property descriptor to the object.

This method adds a script scope name property descriptor to the object.

This method adds a script context property descriptor
42171431		adds a property descriptor for the script text to the list of property descriptors.
This method calls the superclass method to add property descriptors for the object.
This method adds a property descriptor for the object's class name.

42171453		This method adds a property descriptor for the rhinoScript feature of the ScriptingPackage.RhinoSafletScript to the list of item property descriptors.

This method adds a property descriptor for the rhinoScript instance variable of
42171463		adds a property descriptor for the scope object of the script scope class.

This method adds a property descriptor for the name of the object.

This method adds a property descriptor for the scope object of the script scope class.

42171472		This method adds a property descriptor for the Saflet script name feature.

This method adds a property descriptor for the Saflet script processor class name.

This method adds a property descriptor for the Saflet script pool class name.

42171480		adds a property descriptor for the scriptScope feature to the list of property descriptors.

This method overrides the default implementation of the getPropertyDescriptors() method.

This method initializes the list of property descriptors
42171481		adds a global script scope property descriptor to the provided list of property descriptors.
This method gets the property descriptors and adds one to the list of property descriptors.
This method returns the list of item property descriptors.

42171493		adds a connection property descriptor to the list of property descriptors for the specified object.

This method unwraps the calling object and returns the list of property descriptors.

This method returns the list of property descriptors for
42171497		adds a property descriptor for the query feature of the RunQuery class.
This method returns a list of property descriptors that describe the given object.
SUMMARY
This method is used to add a property descriptor for the query
42171499		adds a property descriptor for the resultSetName feature to a list of property descriptors.

This method checks if a list of property descriptors has been initialized, if not it calls the superclass's method to get the default property
42171501		adds a property descriptor for the "scrollable" feature of the RunQuery class.
This method overrides the superclass method to add a property descriptor for the scheduled = true.
This method overrides the superclass method
42171504		adds an "Inputs" property descriptor to an item property descriptor list.
This method adds an "Un inputs" property descriptor to an item property descriptor list.
This method adds an "Constant" property descriptor to an item property
42171507		This method overrides the method and adds four new property descriptors to the list of property descriptors for the specified object. It checks if the list of property descriptors has already been initialized, and if not, it calls the superclass method
42171508		adds a property descriptor for the readOnly attribute of an object. If the property descriptor has not been initialized, it initializes it and then adds it to a list of property descriptors.

This method overrides the default behavior of
42171512		adds a result property descriptor to the list of property descriptors for the given object.

This method overrides the default implementation of the getPropertyDescriptors and adds a result set property descriptor to the list of property descriptors.
42171518		adds a property descriptor for the 'rowsUpdatedVar' feature to the list of property descriptors for the given object.

This method returns a list of property descriptors for the given object.
SUMMARY
This method
42171523		adds a property descriptor for the `sql` feature to the list of property descriptors.

This method returns the list of property descriptors.
SUMMARY
This method is used to add a string property descriptor to a
42171540		adds a label text PropertyDescriptor to the itemPropertyDescriptors list. It first invokes the superclass to get the property descriptors, then adds additional label text property descriptors if they are null. Finally, it returns
42171551		This method overrides the superclass's `getPropertyDescriptors` method and adds a property descriptor for the "rowNum" feature of the SingleRowDataResult class.

This method calls the superclass's `addItem`
42171557		adds a property descriptor for the specified object to the list of property descriptors.
This method adds a property descriptor for the specified object to the list of property descriptors.
This method adds an id field property descriptor to the list of
42171559		adds an index property descriptor to the given object.

This method creates a list of property descriptors for the given list of object property descriptors. If the list is null, it calls the super method to get the default property descript
42171572		adds a property descriptor for the output type of an output object.
This method adds a property descriptor for the output type of an output object.
SUMMARY
This method is used to add a property descriptor for the output type
42171603		adds a property descriptor for the JDBC connection to the list of property descriptors for a given object.

This method, if the property descriptors have not been initialized, it calls the superclass method to get the initial list of
42171605		adds a property descriptor to a list for a given object, checking if the property descriptor is already present in the list before adding it.

This method returns a list of property descriptors for a given object. If the list is null
42171607		adds a new property descriptor for the setAsDatatype feature of a specified object. If the property descriptor already exists, it adds the existing property descriptor to the list of property descriptors. The method returns the list of property descriptors
42171612		adds a text property descriptor to the list of property descriptors for the specified object. If the property descriptors have not yet been created, it first calls the superclass's method to get the property descriptors. It then adds additional descript
42171620		adds a property descriptor for the object's type to the list of property descriptors. It first checks if the property descriptor has already already been added. If it has, it simply adds it to the list. Finally, it returns the list
42171692		adds a property descriptor for the message feature to the list of property descriptors for the given object.

This method adds a property descriptor for the message ID feature to the list of property descriptors for the given object.

This
42171694		adds a property descriptor for the debug level to the item property descriptors. It checks if the item property descriptors have been initialized, and if not, it initializes them by calling the superclass method to get the initial list, then
42171714		adds a property descriptor for the boolean expression of an If-Then condition group.

This method overrides the default behavior of the super class's property descriptors, calling this to add additional descriptors for the condition name, to create
42171729		adds a parameter name property descriptor to the list of property change descriptors for an object.

This method adds a parameter name property descriptor of an object to the list of property change descriptors for an object.
SUMMARY
42171732		adds a property descriptor for the "required" property to the object.

This method checks if the item property descriptors have already been added, and if not, it adds the property descriptor for the required property to the item property descriptor
42171766		adds a property descriptor for the jdbcStatement feature to the itemPropertyDescriptors list.

This method, called `addStatementDetails`, adds a JdbcStatement property descriptor to the itemPropertyDescriptors list.
42171782		adds a property descriptor for the variable name to the specified object.
This method adds an integer of property descriptors to the specified object.
This method adds the unique property descriptor to the specified object.
This method adds the column name
42171784		adds a getAsDatatypePropertyDescriptor property descriptor to the list of item property descriptors.

This method adds readOnly property descriptor to the list of item property descriptors.

This method adds hasDeleted
42171814		adds a parameter property descriptor to the list of item property descriptors for the given object.
SUMMARY
This method is used to add a parameter property descriptor to the list of item property descriptors for the given object.


42171815		adds a property descriptor for the paramDatatype of a SetQueryParam object.

This method returns a list of property descriptors for the specified object. If the property descriptors list is null, the method creates it by calling
42171835		This method overrides the 'getPropertyDescriptors' method of the 'Object' class and adds three additional property descriptors to the list.

This method overrides the 'getPropertyDescriptors' method of the 'Object
42171846		adds a property descriptor for the scrollMode feature of the OpenQueries object to the list of property descriptors.

This method adds a property descriptor for the name feature of the OpenQueries object to the list of property descriptors
42171851		adds a property descriptor for the holdability mode of the collection objects.

This method returns a list of property descriptors for the given object.

This method returns a list of property descriptors for the given object.


42171874		adds a property descriptor to an object, adding a query parameter property descriptor if one exists.

This method, getPropertyDescriptors, obtains the list of property descriptors for the given object, if the list is null,
42171894		adds a list of exception property descriptors to the provided object, including reference and exception handling if they are null.

This method associates the List object and the current list to the provided object.

This method adds Exception property descript
42171899		adds a property descriptor for the parent Saflet in a SafletContext. If there are no parent Saflets, it calls the superclass's method to get the property descriptors. It then adds a parent Saflet property descriptor for the
42171903		returns the property descriptors for object, such as all of the property descriptors for the object's own, whether it needs to be refreshed, and whether it has any session variables.

This method adds a session variables property descriptor to
42171958		adds a new property descriptor for the "newCall1" property of an object.

This method overrides the parent class's getPropertyDescriptors method and adds three new property descriptors to the list: "removeTarg
42171960		adds a property descriptor for the target Saflet path to the object.

This method overrides the parent class's implementation and adds additional resource locators to the object.
SUMMARY
This method is used to add a
42171961		adds a call name property descriptor to the list of property descriptors for an incoming call object.
This method is used to add a Call Name property to the list of property descriptors for an incoming call object.
SUMMARY
42171968		adds a property descriptor for the job name prefix property of the specified object.

This method returns a list of property descriptors for the specified object.

This method adds a property descriptor for the scheduled job name prefix property of the
42171974		does the following of the first method:
- Gets the property descriptors for an object which includes a name of property descriptor
- Adds the name property descriptor to an object
- Closes the property descriptors, it calls the superclass
42171982		adds a property descriptor for the start date time of an object.

This method overrides the getPropertyDescriptors method and adds additional property descriptors specific to the object being created. It also calls the superclass's getProperty
42171991		adds a property descriptor for the "end date time" property of the ScheduleSaflet class.

This method creates a list of property descriptors for the given object.

This method adds a property descriptor for the "id
42172000		adds a property descriptor for the calendar name feature of the object.

This method returns a list of property descriptors for the object.
If there are no descriptors, it calls the superclass's method to get the default descript
42172003		returns a list of property descriptors for the given object, adding a property descriptor for the job name to it if it does not already exist.

This method overrides the superclass method and adds various properties to the property descriptors
42172327		returns a command for reorienting the reference relationship.
This method reorients the reference relationship.
This method returns a command for reorienting the reference relationship.
SUMMARY
This method is used to get a
42172539		returns the location of a border item relative to its parent.
This method returns the location of a border item relative to its parent.
SUMMARY
This method is used to determine the location of a border item relative to its
42172543		adds a property descriptor for the "last modified" feature of the server resource object.

This method overrides the default behavior of the superclass, adding custom property descriptors for the given object.
SUMMARY
This
42172546		adds the last updated property descriptor to the list of property descriptors for a given object.
This method returns the list of property descriptors for the given object.  
This method initializes the list of property descriptors if it
42172551		adds a property descriptor for the created by property of the ServerResource class.

This method returns a list of property descriptors for the passed object.

This method adds a property descriptor for the client name property of the passed object
42172555		adds a new property descriptor for the modified by attribute to the list of property descriptors for the specified object.

This method overrides the `getPropertyDescriptors` method of the superclass and initializes the `itemProperty
42172564		adds a property descriptor for the "enabled" feature to the list of item property descriptors for the given object.

This method checks if the itemPropertyDescriptors list is null, and if so, calls the superclass method
42172586		adds a property descriptor for the bind IP feature of an object.

This method returns a list of property descriptors for the object.
SUMMARY
This method is used to add a property descriptor for the bind IP feature
42172591		This method adds a property descriptor for the subsystem ID of the Saflet to the list of property descriptors.

This method returns the list of property descriptors for the object.
SUMMARY
This method is used to add
42172592		adds the "Management:" property descriptor to the itemPropertyDescriptors list.

This method overrides the parent class's method to create a property descriptor for the `Management` class.
SUMMARY
This method is
42172598		adds a property descriptor for the "running" attribute of a SafiServer object to the list of property descriptors.

This method adds a property descriptor for the Name attribute of the SafiServer object to the list of property descript
42172601		adds a property descriptor for the hostname attribute of a specified object.

This method overrides the getPropertyDescriptors method in the superclass to add custom property descriptors for the object.

This method returns the list
42172603		adds a debug property descriptor to the list of property descriptors for the given object.

This method computes property descriptors for the given object using the superclass implementation to compute the list of property descriptors. If property descriptors
42172609		adds a property descriptor for the port to the list of property descriptors.
This method initializes the itemPropertyDescriptors field if it is null.
SUMMARY
This method is used to add a property descriptor for
42172610		adds a property descriptor for the query type to the list of property descriptors.

This method overrides the default behavior of the superclass, and it checks if the itemPropertyDescriptors field is null, if so, it
42172611		adds a property descriptor for the query SQL.
This method adds an item property descriptor to the list of property descriptors for the given object.
This method adds a property descriptor for the query name property.
This method adds a property
42172615		adds a property descriptor to a list for a given object. It first checks if the property descriptors have been previously set. If not, it adds them to the list based on specific criteria, ensuring that the property is unique.
S
42172619		adds a property descriptor for the "private" feature in the telephony subsystem type.

This method lazily retrieves the property descriptors associated with the given object.

This method returns the descriptions associated with the given object.
42172625		adds a property descriptor to an object.
This method add a visibleafi server IP property descriptor to an object.
This method add a phone property descriptor to an object.
SUMMARY
This method is used to add a
42172637		This method is used to add a property descriptor for the managerName property of the TelephonySubsystem class.

This method is used to add a property descriptor for the description property of the TelephonySubsystem class.

This method
42172643		adds a property descriptor for the driver name of a database driver object.

This method encodes the driver class name field in a new form of a string array by iterating through the identifiers and adding the class and name of each field
42172644		adds a property descriptor for the default value of the variable to the list of property descriptors.

This method adds a property descriptor for the default value of the variable to the list of property descriptors.
SUMMARY

42172646		adds a property descriptor for the manager password property of the telephony subsystem object.

This method checks if the itemPropertyDescriptors list is null, in which case it calls the superclass's method, then adds a new property
42172651		adds a property descriptor for the pooling feature of the DBDriver object.

This method overrides the default implementation of the superclass to add additional property descriptors to the list for the object.

This method adds a property
42172656		This method overrides the `getPropertyDescriptors` method from the superclass and adds additional property descriptors to the list of property descriptors for an object. It first invokes the superclass's method to get the additional property descript
42172657		adds a property descriptor for the exampleUrl feature to the list of property descriptors for the given object.

This method calls the superclass's getParent method and returns the itemPropertyDescriptors list.
SUMMARY
42172662		adds a property descriptor for the jars feature to the list of property descriptors for the specified object.

This method overrides the base property overrides to provide a list of property descriptors for the object.

This method adds
42172663		adds a property descriptor for the version ID of the telephony subsystem.

This method returns a list of property descriptors for the provided object.
SUMMARY
This method is used to return a list of property descriptors
42172667		adds a property descriptor for the default DB Driver.

This method overrides the default implementation of getPropertyDescriptors, first checking if property descriptors have been initialized. If not, it calls the superclass's implementation of get
42172668		adds a property descriptor for the prompt directory to the object.

This method returns a list of property descriptors for the given object, including its resource locator and the file location property descriptor.
SUMMARY
This method
42172671		adds a property descriptor for the "guideUrl" feature of the DBDriver class to the itemPropertyDescriptors object.

This method overrides the superclass's getPropertyDescriptors method and adds additional property descriptors for
42172678		adds a property descriptor for the website URL of a database driver object to the list of item property descriptors for the given object.

This method adds a property descriptor for the driver class of a database driver object to the list of item
42172682		adds a property descriptor for the default port to the list of property descriptors for the given object.

This method overrides the parent class's method and adds default port and name property descriptors to the given object.

This
42172687		adds a property descriptor for the urlRegexPattern feature of the DBDriver class.

This method calls the superclass's `getPropertyDescriptors` method and adds URL regex pattern property descriptors to the list.
S
42172689		adds a property descriptor for the data type of a query parameter to the item property descriptors list.

This method overrides the parent method to add additional data type and add code to a property descriptor.
SUMMARY

42172713		adds a property descriptor for the url feature to the list of property descriptors.

This method retrieves the list of property descriptors associated with the specified object. If the list is empty, it retrieves the superclass method to
42172719		adds a property descriptor for the user feature of a database connection object to the list of property descriptors for the specified object.

This method adds a property descriptor for the username feature of a database connection object to the list of property descript
42172724		adds a property descriptor to the list of property descriptors for a given object.

This method retrieves property descriptors for the given object, including additional descriptors for name, port, database name, and login timeout properties.

42172725		adds a property descriptor for the properties feature of a DBConnection object to the item property descriptors list.

This method overrides the default behavior of adding a property descriptor for the properties attribute to this list.
S
42172731		adds a property descriptor for the transaction mode to the list of property descriptors.

This method, getPropertyDescriptors, overrides the getPropertyDescriptors method to get a list of property descriptors.
SUM
42172735		adds a property descriptor for the min pool size to the object and returns the item property descriptor list.
SUMMARY
This method is used to set the min pool size property of a DBConnection object.


42172736		adds a property descriptor for the maximum database connection pool size feature of the DBConnection class.

This method overrides the default behavior of getting property descriptors for the object. It first calls the superclass's implementation to
42172737		adds the "acquireIncrement" property descriptor to the list of property descriptors for the `object`.
This method is used to add a property descriptor for the program ID to the list of property descriptors for the `object
42172743		adds a property descriptor for the max idle time feature to the list of property descriptors for the specified object.

This method is protected, and adds a property descriptor that defines the name, value, and connection properties of the database connection
42176473		creates annotations for the meta property by extracting the meta property name, variable name, update count variable, and rows updated variable from the assignment and initializing a new instance of the meta property with specific data.

This method creates meta property
42178755		returns the command for a provided policy delegate request, which represents the dragging of the component.

This method returns a command from a request.

This method sets the input edit part for a edit part, if the edit part is
4218894		destroys OpenGL data, destroys objects, and destroys textures. It checks for errors in frame rate and destroys color tables, coordinates, and namespaces. It also destroys resources.

CONTEXT
- This method destroys various resources including OpenGL
42292201		removes a vertex from the collection and all its associated edges if the vertex is contained anywhere in the collection.

This method checks if the current object is equal to another object. If it is not, it returns false. Otherwise, it
42292223		removes a vertex from a graph if it exists, removing its connections if necessary.
SUMMARY
This method is used to remove a vertex from all connected vertices that are one or the other currently connected by both vertices.
42332844		creates a new thread named "run" that continuously gets and sends network messages in a loop. If an exception is thrown because the network connection task was already cancelled, its close method is called to block until the "process" task is completed
42332903		updates the analog clock feed if the interval is between 0 and the maximum interval allowed.

This method sets the analog clock feed to null if the value is 0, otherwise it increments the value and updates the analog clock feed to the new
42332959		stops the client by disconnecting and killing its input and output streams associated with it.

This method is used to reconnect the socket to the remote host.

This method is called when a client is disconnected.

This method
42413184		manages the order of packages by identifying the Java or NFS (Nested Diagnostic Context) files within thejuic file and adding them to a list of messages.

This method generates an Ant project and prints the project's information
42491188		removes an event handler from the world and cancels all forces associated with it.

This method removes an entity from the world and notifies the thread or its parent container of the event.
SUMMARY
This method is
42515004		converts a list ofplayer restrictions into a comma-separated string representation. It iterates over the list, applying a rounding transformation to each one. The transformation is then applied to another list of rounds.
SUMMARY
This
42515147		removes a range of elements from this list starting from a specified index.

This method removes a range of elements from this list starting from a specified index to another specified index.
SUMMARY
This method is used to remove
42515205		changes the font of all JComponents within a given Container
42517390		populates a menu with a list of plugins based on a service setter and a list of plugins. It then iterates over the plugins in the service setter and checks if each plugin with the correct name exists in the given menu. Depending
42585783		creates a new room with a given type, room, maximum occupancy, description, and enabled status. It initializes or updates the room's description, room type, and maximum occupancy.

This method creates a room with a given name
4262730		draws the game board for the game state, including the background, game flag, key enter flag, whether the mouse is being pressed, whether the level is right-to-left, the menu screen, handling game state events, reporting user
4263083		initializes the spring lengths for each particle in a particle list.
SUMMARY
This method is used to initialize the spring lengths for each particle in a particle list.


42697879		initializes the menu bar by setting the title, waiting for it to finish loading, and disabling antialiasing.

This method is triggered when the user clicks a button and is initially in the GUI mode, the user can login using
42697881		returns a JLabel object that displays the message "lade..." and calculates the left and right corners of the frame. It also adds a JLabel, a JProgressBar, and another JButton to the frame.

This method
42757406		converts an array of StackTraceElements to a string. It starts by creating a string a new string with an initial characters, then, it iterates over each element in the array, converting it to a string. The string is
42757424		gets the ID of the MBean server for the specified object.

This method returns the agent ID associated with the specified mBean server name.
SUMMARY
This method is used to obtain the agent ID associated with
42757677		constructs an interpreter using the provided input string, including pre-processing defined methods and variables that would result in potentially too long or too long execution.

This method resolves the current environment and adds it to executable map. It also checks for
42757848		sets the value of the property name value map. If the value is null, it sets the property name value map to null. If the new value is not null, it sets the property name value map to the new value.
SUM
42757931		adds a child node to a node, ensuring that it is not being added as a child node.

This method sets the current node to the specified child node and to the specified parent node, ensuring that the new current child node is
42758077		compares two LockInformation objects for equality based on their lock order numbers, but only if the calling object is identical with the other object being compared.

This method performs a deep equality check on the LockInformation objects returned by getLockUser
42759620		removes component factories from a list of component factories and ensures that the object's names are unique.

It iterates over the array of component factories and removes any matching factories.
If the factories are not empty, the method returns true
42759786		returns a ScalarModel representing the property model for a given property memento. If the property model does not exist, it creates a new one and adds it to the map of property models.

This method checks if the current
42760486		reads an HTML document into a document object. It then reads the title from the document and the label from the document. If the title is not empty, it appends it to a StringBuilder. If the label is not empty, it app
4278756		checks if a type is autoadarchable by checking if the type is unique, null name, and auto unregistered. If autoad is non-zero, the method registers the type for auto loads. If autoad is non-zero
4279171		takes a collection of paths and a boolean value to only confirm that the paths are marked as only related to conflicts. If the paths are marked as only related, it returns a formatted path. The method then synchronizes on the paths and app
4279678		is a static method that invokes a method on an object with the given name and parameters.

This method checks if the stack of the stack is empty and returns if it is.

This method executes an action with the given name
4279681		invokes a method on an object with two parameters, an object, and an array of parameters. It catches any exceptions that may occur during invocation and prints them.

This method sets the value of the HTTP session attribute after loading a global
4279695		constructs a new object of the specified class using the constructor provided by the constructorArgument. If the constructor no longer has the required arguments, an exception is thrown. Otherwise, the object's properties are set with the constructor's name, class
4279755		copies the streams from a given URL to a specified file. It checks for validity and file existence, and attempts to create a temporary file if it doesn't exist or the overwriteFiles flag is set. If the file exists but is the same
4279814		converts a byte array of various values into a hexadecimal string (converted back to a BigInteger object) and returns it.
SUMMARY
This method is used to convert all the bits in a byte array to
4279890		determines whether the current object is equal to another object by checking for specific conditions, including repository groups, string values, object references, and references to fields. If any of these conditions are met, it calls another method to perform the equality
4279948		checks if two repositories match based on their group, name, type, and version. It sorts the repositories by their group, name, and version.

This method returns true if the input RepoArtifactId has a non-null
4279956		validates if the given meta type is a default feature type or not.

This method adds to the conflicting types list if the new type is not a default.

This method adds to the original types list if the new type is
4280026		This method checks whether a string contains the '\\' character and returns boolean accordingly.

This method checks whether the given string contains the '\n' or '\r' character by breaking it into separate lines and adding 4 newline
4280061		returns the short string representation of an object. If the object is null, it returns "null" instead.
This method overrides the superclass method to create a short string representation of a message.
This method creates a string representation
4280064		creates an XML representation of an object and returns it as a string.

This method converts an object to an XML file using a provided writer.

This method converts a date to an XML file using a provided writer and optionally including
4280397		This method sets the value of a field from the specified Java class attribute array of the specified target MBean type.
This method sets the value of a field from the specified Java class attribute array of the specified target MBean type.
4280405		returns a list of files in a given file set for a given project.

This method returns a list of all files in a given directory that is a directory of the files in the directory specified by the file pattern provided.
S
4280443		initializes the project name, the resources path, and creates the project properties.
This method sets up project properties based on the provided project name.
This method initializes the java class with the specified arguments.
This method initializes the
42843931		checks if a product is contained in a container and if it is, adds the place item to the container at the given item's index. If the product is not contained in a container, it handles exceptions accordingly.
SUMMARY

42843933		adds a condition to the content and counts the number of times the condition occurs.
This method adds a field content to the list, returning the previous element if the condition is met.
This method removes the given condition if the condition is
42843959		adds an item to the container if it is not in the inventory and the container is not stackable.

This method plays an item if the player can interact with it.

This method prepares an inventory for the player.

42843960		returns the possible field for an item. 
It checks if the item has any fields of the item initially, and if not, it returns the field that it is currently in the field list. 
Otherwise, it returns the field
42855167		finds and returns a Data Transfer Object (DTO) corresponding to the given `domainClass` value.

This method returns a list of `Devices` objects which have foreign key metadata about the specified `DomainClass`.
S
42855973		returns the mapping object for the specified className by iterating over the mapping list to find the mapping with the specified className.

This method iterates over a list ofappings and returns the mapping object for the specified className.
42855976		retrieves the definition object associated with the specified name from the registered definitions.

This method takes an OID and a schema string, and returns an OID corresponding to the schema. If the schema is a reference to a POJO
42954555		deletes a village at a given position. It first checks if the position is valid and then tries to remove it from the field and the village map. If the ID of the city of the field is not zero, the method deletes all
42954570		returns a village object at a specified position, either from the same position or from a specified owner object.

This method returns the village located at the specified position.

This method returns an attempt to unblock the current mission for
42954578		returns the field at the given position in the current game environment, if they are not connected, or null otherwise.

This method iterates through a range of positions within the current game environment and returns the Field object at that position.
42956622		initializes the game interface by setting its background color, adding a file button, and adding an exit button to the interface.
SUMMARY
This method is used to add play, pause, exit, and exit buttons to the game
42956626		updates the game board with a move by calling the update method of all non-null blocks in the board to update the game time and ball.
SUMMARY
This method is used to update the game board with a move by
42956658		rotates the graphics object by the specified angle based on the current rotation position and updates the transformation matrix.

This method rotates the graphics object by the specified angle in degrees.

This method rotates the graphics object at a specified
42956676		sets the relative mouse mode for the input.
SUMMARY
This method is used to update the robot accordingly based on the current mode.


42956683		sets the paused state of the play and pause buttons. It creates a button at the label "Play" and adds it to the toolbar as a pause button. If playing is enabled and the paused state is not currently paused, it disables it
42959481		resets the password to a non-zero value, stores it in the database, and returns a success forward mapping.

This method initializes the errors for the cambios request and forwards the request to an error mapping.
S
42965947		adds an item to the inventory and updates inventory and equipment information according to the item's equipment.

This method adds an item to the inventory and updates equipment, equipment, and equipment effects based on the item's equipment information.


42973964		sets the headers for the connection to the specified value.

This method sets the default headers for the connection to the specified value.

This method sets the SIP headers for the connection to the specified value.
SUMMARY
42974051		parses a string by enclosing it with curly braces.
SUMMARY
This method is used to replace variables in a string with their values in uppercase encoding.


42974052		saves the contents of an input stream to a file specified by the input string (fileName).
SUMMARY
This method is used to save the contents of an input stream to a file specified by the input string.


42974066		generates a new business day in the current month for the given day, taking into account any invalid start dates.

This method generates a new business offset for the given year, start and end date and a null flag.
SUM
42974101		destroys a Twitter status by sending a POST request to the specified REST API endpoint and passing the API endpoint information to the onDestroy method. It starts either all services or locally and waits for the REST API to inform.
SUMM
42974118		updates the Twitter status and status code for all Twitter users and displays a success message.

This method updates the Twitter status for the specified list and user ID.
SUMMARY
This method is used to update the status code
42984784		initializes the user interface by creating a splash screen, setting the title and loading a list of contacts, attaching a listener to the contact list, and adding a new tab to the RootPanel.

This method creates a new tabpanel with
42985072		sets up the column properties, including the client area for the table columns, and initializes the table viewer, adds a content provider, a label provider, and sorts the table columns. Finally, it calls the superclass's onResume method
43014026		receives a UUID and queries the UUID and calls the analyzePathLength method with the first integer in the PIDS sequence. It then returns.

This method manages the speed of messages by adding a random message to the network
43014705		fills the hitbox combo box with hitboxes defined by the data in the current hit box's hitboxes value.
This method fills the JComboBox containing the horizontal and vertical scrollbars to the specified values.
This method
43022440		initializes the context of the test object by calling the parent class's init method. If the test object is not null, it calls the parent class's init method, after calling the local reference variable. If any exception occurs, it prints the
43022445		counts the values in the result set, using a logger.log category.
This method tests the countRow method that counts the row.
This method tests the countRow method that counts the row.
SUMMARY
This
43039623		displays a modal window containing a JToggleButton.

This method adds a component to a JFrame and also marks a mouse listener for deletion if necessary.

This method adds a component to a content pane and also also
43039657		creates a panel that contains an action panel and a button panel.

This method adds a button panel to the panel.

This method returns the add action for the button panel.
SUMMARY
This method is used
43039663		is used to add a text field to the status grid layout, using GridBagConstraints to represent the label attribute.

This method adds a label and text field to the status grid layout using GridBagConstraints to
43039703		adds a data listener to the specified class type.
This method will have a listener that will receive the data and copy the listener to the listener manager.
SUMMARY
This method is used to add a data listener to the
43039713		defines a package by checking the package name against reserved characters and attempting to load it as a class.

This method checks if the global constant definition of a class is already defined for default.
This method ensures that the package name is
43039745		registers a child status to the bean status.
SUMMARY
This method is used to register a child status to the bean status.


43039749		sets up listeners for changes made to the bean object's status, calling methods to handle exceptions.

This method attempts to set up listeners for changes made to the bean's status to enable updating.

This method attempts to set up listeners
43039756		updates the value of the property if the new value is different from the old value, and fires a property state change event.

This method initializes the observer with an anonymous inner class: 
- Class-Name-Type:
43039910		asserts that the BeanStatusFlag model of a BeanStatus object is the same as the BeanStatusFlag model of the expected value.
This method tests whether a BeanStatusFlag object's status flags match the expected value, indicating the owner,
43039983		shows a popup menu at the specified mouse event. If the event should not be a popup trigger, it displays the popup menu at the selected rows of the table.
SUMMARY
This method is used to display a popup menu at
43039993		adds a combo box column to a parent class instance, using a map of settings, setting its alignment, width, and position. 
This method adds a combo box column to a parent class instance, using a specified label, path,
43040028		sets the model of the model bean, unbinds the current model if it, and then binds or rebinds actions.

This method creates a new BeanStatusInfo object for the given model bean based on the model type.
43040050		adds a binding to the selection bindings map with the given name.
This method adds bindings to the selection bindings map if it doesn't already exist, calling the superclass selection method to add bindings and binding if the window is not maximized
43040065		sets the model for the object. It unregisters old model if it is not null and then registers the model.

This method sets the model for the object. It unregisters old model if it is not null and then sets
43040077		refreshes the data in the list using the provided data manager with the specified mode, sub type, settings, and forced load flag. It then sets the sorted list to a new selection model and updates the parent content handler.

This
43040089		unbuffers all bindings by unbinding all Boolean and IClean objects in the binds collection.
SUMMARY
This method is used to unbind all bindings by unbinding all Boolean and IClean objects in the binds collection
43040107		validates all the properties of all bindings in the binding infos list by iterating through each binding and call its validateAllProperties method.
SUMMARY
This method is used to iterate through the bindings in the binding inf
43040133		removes a column binding at a specific column index if the table is bound, otherwise it throws an exception.

This method sets the current column to 1 and calls `removeColumnBinding` to remove the binding from the model.

43040139		removes a local action from the given selection and returns true if the action was successfully removed, otherwise it returns false.

This method takes a SelectionEvent object as an argument and returns true if the selected element(s) in the UI
43040165		returns a list of menu paths which represent their group within a menu segment, but can be altered.

This method imports a sample menu into a menu structure. It first checks if the menu structure has already been preprocessed and throws
43040168		adds a character to the buffer if the current character is not a newline character it checks if the menu is empty, has the key pressed, or can enter them. It also checks for a newline character and calls the appropriate method for
43040177		returns the first entry extension of a given menu path, where the first entry is a group of menu segments.
This method returns the first entry group of a given path, where the first entry is the group name if the group name is
43040191		adds a key-value pair, class type, selector type, and accessor to the map.
This method adds accessor mapping for a given field with the given key expression.
SUMMARY
This method is used to
43040209		adds errors to a map by mapping the specified string with the actual error and the error description of the parameter.

This method initializes a class implementation by compiling the context and retrieving the resolved class.

This method verifies that
43040224		adds a value validation to the depth validator set by searching for a similar property in a value accessor object and adding a deep validation message to the parent validation set if successful.

This method adds a deep validator to the
43040234		validates that the abstract, abstract, required, readable, property, and version requestors accept the simple properties. It determines if the checkProperty method returns true, which is considered valid if parsing complex instances (complexOne), with comments inside
43040247		generates a resulting path for a given element by appending it to the current path, and then generating the path from the element to the current path.

This method generates a path from a root element relative reference, the element name,
43040266		appends parent validations if the parent validator is a child of the current instance.
This method creates a validation object based on the superclass of the type parameter and model.
This method appends parent validations if the model is
43040271		retrieves the value of a property from a bean object. If the value is null, no getter method is used. It throws an exception if an error occurs.
SUMMARY
This method is used to retrieve the value
43040281		performs a deep copy of an Annotation object using an AnnotationConfiguration object, and adds the resulting AnnotationConfiguration to the Configuration object's destination parameter map. It also calls the copy method of the AnnotationImpl object.
SUM
43040311		configures the table by iterating through the table's column bindings and configuring each column with the binding information.

This method iterates through the table's column bindings and configures each column based on the column binding information provided in the
43040353		converts a collection of objects to an array of objects, either by directly casting the collection if it's not an array or by ensuring that the array is a subcollection of the object array's length if it's not, throwing an exception if
43040371		inspects annotations and validators for a given type. If the declaration and validation are not empty, it invokes the inspectMappingValidation method on the declared type and adds the validated class and annotation to the declared class validator map.
43040383		adds mappings for inherited properties to a class. It checks if the map has been mapped before, and if not, it creates an MappingHolder and adds it to the class's descriptor. The map has been added itself as the
43040396		looks up an entry with the specified name and returns whether it was found or not.
This method looks up a key in the map given a key.
SUMMARY
This method is used to search for an entry in a
43040433		returns the class name by appending the prop name and capitalizing the first letter, then appending "Keys".

This method returns a string that includes the class name and its first letter.
SUMMARY
This method
43040436		initializes a compilation unit with the given package, name, and class name. It then retrieves the package to generate the build ID for the compilation unit and initializes the compilation unit with the class path. Once the compilation is complete, it
43040449		inspects the validation of a property by inspecting its annotated element and adds path and mapping if a simple mapping is found.
SUMMARY
This method is used to inspect mapping validation for a property and annotated element if a simple
43040471		adds a property to a MethodInfo object based on the provided annotation.

This method overrides the addPropertyMethod method and adds the property for the method to the MethodInfo object.
SUMMARY
This method is used
43040476		adds simple mapping between two properties and their values.

This method takes two PropertiesHolder objects, srcProperty and simple, and then adds a SimpleMapping using the src property and its value to the inheritMappingValidation.
43040493		adds a path mapping to the noDefaultMappingValidation list if the mapping supports the last type of the last path type. Otherwise, it does nothing.
This method adds a path mapping to the noDefaultMappingValidation list
43040517		creates a field declaration using the provided type, name, initializer, and modifiers.

This method creates an expression for a field, name, or void type.

This method creates a new field, name, or void type
43040990		adds a mapping between a source type, property, src, value, readOnly, and profile, both source and target types, and null path.
This method adds a path mapping to the BeanMapperConfigurator with the specified
43061450		changes the size of a JLabel and sets up a BufferedImage of size at a specified location.

This method sets the bounds of Jlabel to the specified x and y coordinates.

This method calls the sizeChange method with
43061525		returns the MusicNote object at the specified index, or null if the index is greater than or less than the size of the list or the MusicNote object cannot be retrieved.


This method gets the music note at the specified index
43061534		returns a string representation of the object or null if there is no object associated with it.
This method creates a string representation of the superclass, along with a list of MIDI notes associated with each note in the collection.
This method
43061703		plays a note at a specific channel using MIDI or music trackers, start the play, and add the MIDI note to play from a specified sequence.
SUMMARY
This method is used to play an MIDI note at a given channel
43061883		moves the camera by a specified amount in the y-direction, taking into account the x and y-direction coordinates.

This method moves the camera by a specified amount in the x-direction, taking into account the x-direction
43061890		moves an array of points by a specified number of points, increasing or decreasing their x and y coordinates by a specified angle.

This method receives an object and checks its proper coordinates to determine if it can be moved to the left or
43061896		moves a vertex by a specified amount in a polygon. If the same vertex exists, it does not move further.

This method moves the vertex to the right of the specified new segment. If the new segment is on the right
43063597		redirects the output to the specified SyslogOutput.

This method redirects the standard error stream to the specified SyslogOutput.
SUMMARY
This method is used to redirect the system log to "Output
43063724		activates the active frame on either the desktop or the primary frame depending on that active.

This method stops the focus.
This method reacts to user input and opens a file that matches the pattern text used in the file list.

4307419		searches for hits and retrieves scores associated with the specified query. It returns a boolean indicating whether the query is alive or not. It iterates through the results, checks if the database type is TextDBMSODb. If it
4307504		opens a file if it exists, and throws an exception if it doesn't. It sets the handle to an empty file, checks if the handle is null, and assigns it to null.

This method opens a file and sets the file
4307533		creates a thread pool containing the number of available processors and indexes for the shards. If there are already threads created, it returns an OK status code. If the number of available processors, it counts the number of threads created and instantiates it
43103087		checks if all properties from one project are successfully renamed by comparing their types and levels.

This method iterates through the list of projects and checks if any of them have any properties that are not marked as renamed.
SUMMARY
4311377		retrieves a Method instance for a given method name from a list of invokee methods, either from a cache if available or from the HTTP POST proxy information with a limit parameter. If the method is private, it returns a private instance from
4311378		retrieves the default method instance for a given event class, specified by the method name, from an object and returns it.
SUMMARY
This method is used to create an instance of the return property of the service method.
4311395		retrieves the value of an attribute with a given tag from an XML element at a specified index, with an optional parameter to separate the attributes.
SUMMARY
This method is used to retrieve the value of an attribute with a
43135903		sets the position of the object and creates a new object if it doesn't exist.
SUMMARY
This method is used to expand the width of the parent object's GUI.


43136064		checks that a given move is valid in the game by comparing it to an expected move list.

This method is the main loop of the game loop, where it takes input strings a move, checks for illegal moves, and iterates until
43137003		returns the string representation of the given array of numbers as such as numbers and strings.

This method creates a new HashSet for the argument values of the given instance.
If the types do not contain numbers and at least one numeric
43137024		returns a string representation of the object, combining the comment, nags, and array information about these attributes.

This method invokes the method on the object.

This method returns a string representation of the object.


43261145		runs the Antdeposetup setup, retrieving the framework node name, calling the setup method on the framework, and catching any Setup exceptions.

This method attempts to redirect using the "Redirect" and "ManualRedirect" plugins
43261997		performs an action, updates deployments files, creates a task with a base action result, executes the task, and sets the task as successful.

This method tests the build method by creating a base action result subgraph, adding a project
43262318		creates a key string by concatenating the LDAP settings from the file.

This method returns a unique key for the DN if it's not there.
SUMMARY
This method is used to set a key string
43262395		returns a HashMap containing the values of the Attributes moduleName as keys and the values of the Attributes moduleType as values. This is done by cloning the toMap() method of the Object class.

This method returns a nested map
43262545		checks if the object is the local peer node by comparing their host names.

This method checks for the presence of the "hostname" attribute in the object's metadata, and throws an exception if it is not found.

This
43262575		returns the child resource for the given name, or "not found" if the child resource cannot be loaded.
SUMMARY
This method is used to retrieve the child resource for a given name, or the parent resource if the
43262610		creates a NodeDescList from an array of strings representing node names.

This method first sets the new framework to the object and then creates ObjectNode from a NodeDesc. If the new framework is not null, it loops through the
43262615		loads properties from a file specified by the File parameter and returns them as a Properties object.

This method loads properties from a file specified by the File parameter.
SUMMARY
This method is used to load properties from a file
43300031		tests the getApplicationNames() method of the testScraper object by simulating a "go command" command from the "sample" file and getting the application names for "most_active," "most_downloaded," and "most_
43300032		tests if a given string is in the history of an HTML file and prints it in both cases.

This method tests the functionality of the printScrapes method of the Scrapes class by printing the scrapes in chunks of
43300759		delays the robot to a random amount of time depending on the current event mode.

This method stops the robot if the robot's event mode is EM_ROBOT.

This method cancels the event processing.


43302305		determines if an input is available for the component, taking into account whether it is a window and whether it's already showing it.

This method checks if an input is available for the component, checking if it is a window and
43303607		minimizes all internal frames by activating them and calling their state.

This method prints a stack trace of the specified Throwable and calls the iconify method on the frame.

This method invokes the iconify method of the
43309439		is used to handle mouse entering events. It checks if the event was a mouse entering a GComponent, and if it was not, invokes the handle method with the event's mouse coordinates and the location of the event. If the GUI is
43309454		is used to handle the event when the mouse enters a component and calls an unhook method for a mouse exited hook.
This method handles the event when the mouse exits a component and calls an unhook method for a mouse exited hook.

43310565		returns the WOComponentDefinition for the specified string, and checks for an empty string for this shouldreturn default, if not error, or if there is an error it returns the default.

This method checks the default value of
43373007		This method tests if there is a filter object in a pool to see if "c" allows it.
This method filters an element in a pool.
This method filters an element in a pool.
SUMMARY
This method
43373011		filters out records whose names start and end are within the given range relative to the current date, considering all dates in the period.

This method tests if the filterOut method returns true if the prefixMatch() and filterOut methods return
43373075		calculates the calculated weights, weighted error estimate, and fraction (if the score is less than 24% of the high and higher than 16% of the low).

This method returns a string that displays the score, given the sum
43373093		updates the base count and scores. It iterates through the sequence, counts the base that is not undefined, and updates the base index. If a length is greater than 1, it increments the index. If a length is less than or
43373121		returns a string representation of the object, including its content and various attributes.
SUMMARY
This method is used to obtain a string representation of the chromosome, index, ref, and count.


43373152		returns the most base index for the given index in the data set.

This method iterates over all the data sets in the data set, returning the index where the data set is located.

This method returns the index where
43373166		takes a character as an argument and returns the forward base number for that character as this parameter is an array of four numbers, one of which is an individual numbers.

This method takes a character parameter and returns the base number for that
43373168		takes a character as input and returns the reverse base number for that character. If the character is a backslash, it sets the reverse base number to the least prefix with the prefix count corresponding to the c in the baseCount array.
43377335		adds an Ant parameter to the list of parameters.
This method sets the isPROCParam flag to true.
This method sets the parent of the parameter to the component passed in.
SUMMARY
This method is used
43377600		adds a block to the canvas, adds the block to the blocks map and draws the blocks if the block is valid.
This method draws a block on the canvas, adds it to the canvas, and adds the block to the blocks map
43378084		creates a deep clone of a DynaBean object, including its features and prototypes.

This method sets the properties of a DynaBean associated with a given bean name, taking into account any parameters that are provided to the
43378099		retrieves a rdfBean object for a given resource using a type mapper and a schema. If the resource exists and is of the correct type, it is retrieved from the provided data source. If the resource doesn't exist or
43378127		This method attempts to delete a resource from the store, first creating a new one if it does not exist and checking if the metadata variable `metadataRetrieval` is `false`. If the metadata variable `resolves` is `false`,
43378150		retrieves a graph from an RDF bean based on its type or RDF type and the state mapper. It saves the graph, retrieves the graph type, RDF type, and schema or logs if errors occur.


43378157		adds data to the data by translating a subject node to a predicate node and adding it to the data.

This method adds data to the data by checking if a triple is found in the data.
This method adds data to the
43418004		sets the simulation cycle start timestamp to a specified value and ensures that the cycle time vector is at the maximum size.

This method marks the simulation cycle as active.

This method sets the simulation cycle start timestamp.

This method
43418006		calculates the average cycle time for a collection of time buffers. It calculates the sum of the cycling times in the collection and the length of the array. If the total size of the collection is less than the mean time plus 2 times per
43418020		outputs CPU information by setting the vendor, model, Mhz, and total cores to the values returned by getCpuInfo()
43418037		returns a JProgressBar object with specific properties.
This method sets the orientation, location, size, and text of the JProgressBar object, and returns it.
This method is a getter for the JProgressBar object.
43418040		returns a JPanel that displays the settings panel for the system.
This method constructs a JLabel for displaying the label "Start-Load" and sets its background color.
This method returns a JLabel for displaying the label "C
43418044		returns the JPanel that contains the GUI components for different Java resources, such as display menu, check, main menu, garbage collection, and progress bar.


43418142		adds a container agent to the agent container specified by its name and sets the AID_Container associated with the container if it exists.

This method checks if the AgentControlPlatform does not already contain the agent specified by the Container.
43418289		updates the countings and lists the values of various elements.
SUMMARY
This method is used to update the countings and lists the values, and determine the total number of machines.


43418293		notifies all registered sensors to change their sensor data by executing a runnable on each sensor in the services array and storing it in the vector, synchronizing it each time.

This method executes the commandsIn array and then notifies
43418309		starts the current agent list by iterating through the current agent list and starting the agent each one with the specified arguments.
SUMMARY
This method is used to start the agents contained in the current agent list.


43418325		populates the migration list with Sensors from the 'migrationStore' and the 'migrationListInMovement' lists.

This method loads the saved values and stores them in the 'sensors' attibute list
43418390		sends a reply to a specified agent action with the specified content view.

This method sends a list of actions to the specified agent.

This method sends a list of actions to the specified agent with the specified content view.

43418461		retrieves a Pointer to a specific instance of the specified class by traversing the available objects and finding its corresponding instances stored in the system.

This method checks if the specified pointer is found in the provided PhysicalWrapper, it
43418465		initiates a step to the positioning of the model. It iterates over the positions, checking if any have occurred for a specific relationship and calling the `fordwardToVisualization` method on it. It then checks if an existing
43418481		checks and activates environment changes, updates information about environment change times, and catches exceptions if the environment model is not the current environment instance.
SUMMARY
This method is used to check and update environment change times andActivate environment changes
43418654		generates a header line for the measurement.

This method returns a formatted string containing the measurement.
SUMMARY
This method is used to build a header line for the measurement using a delimiter and the list of header lines
43418755		destroys the visualization GUI by setting the netModel variable to null, disposing of the the netModel variable, and clearing the panel.
SUMMARY
This method is used to destroy the visualization GUI by setting the netModel
43418757		returns a copy of a GraphNode object, with some of its properties set to the values retrieved from the object itself.

This method clones the parameters of the original GraphNode object.

This method returns the "id" property
43418770		retrieves the EnvironmentModel object from the simulation service.
If the Domain is a Space, it deserializes it to a Space object.
The Space represents an AStar and is then added to the environment model.
The Sim
43418807		retrieves the number of components in the network for a given GraphNode in a grid model.

This method checks if the graph contains the specified node.
SUMMARY
This method is used to check if a graph contains
43418825		returns the next available network component ID by randomly selecting the same network ID and incrementing it by one.

This method returns the next available network component ID by randomly selecting the same network ID and incrementing it by one.
S
43418956		This method handles mouse drag events, updating the position of nodes in a graph using a helper method, and notifying listeners of the dragged source and path.
SUMMARY
This method is used to update the positions of nodes in a
43418993		refreshes the network model, repaints it, rebuilds the component table, and clears the picked objects.

This method updates the GUI components and draws the graph if a non-negative value is provided, repainting the component
43419013		returns the JPanelSearch object, creating it if it does not already exist, with a set layout, preferred size, and adding a search text field.

This method is a getter method that is added to the "Results"
43419026		returns the JButton named jButtonOK, a JButton with the text "OK" and a specific size. If jButtonOK is null, it creates a new JButton with the text "OK" and the preferred size of 80
43419042		returns the JPanel jContentPane, if it is null, it initializes it with a FlowLayout with preferred, bold text, and a grid painted by an ActionListener. Then it adds theancel and save buttons to the J
43419063		returns a JButton with a mnemonic that performs the zoom in action when clicked, creating it if necessary.
SUMMARY
This method is used to return a JButton with the label "Zoom in" and a
43419067		returns a JToolBarTextWrapper button with the text "Out" for Zooming. It sets the bounds, adds an image icon, tooltip text, font, and image button, and adds an ActionListener to the button.

43419071		retrieves a JPanel that displays the "Reset" image for zooming in or out. If the JPanel does not exist, it is created and initialized with specific layout and components.

This method initializes i_j
43419090		returns the main panel of the panel. If the main panel is not yet created, it first creates it, sets its layout, preferred size, and adds it to the display. The method then clears the field and adds another panel to the
43419106		This method initializes and returns the `JPanel` jPanelControlls, which contains three split panes for controlling the display in the user interface.

This method returns the `JPanel` jPanelControlls
43419111		returns a JPanel with buttons labeled "Play," "Restart," and an icon.

This method initializes or deletes the jButtonPlay, setting its text and icon. It also modifies it based on the current play
43419133		rebuilds the tree by rebuilding it by checking if the environment model is present and then retrieving the root and initializing the tree for playback if necessary.
SUMMARY
This method is used to build the tree by checking if the
43419157		returns the JTabbedPane object that contains the settings for the applet.
SUMMARY
This method is used to create the "Settings" tab, which contains the environment and object settings panels if they do not already
43419233		removes all known objects and updates the list for the update process.
This method, named rebuildLists, rebuilds the lists.
SUMMARY
This method is used to rebuild the lists when the objectSysById map becomes
43419240		adds a physical to the environment, stores its object, and creates a new Environment object for the object.

This method adds a physical to the environment, stores its id, and initializes it if it has not been created previously.
43419244		sets a new Physical2DEnvironment and initializes the current state accordingly.

This method initializes the environment, removing all existing geometries and returning.
SUMMARY
This method is used to initialize the environment for a
43419342		prints the list of all versions of a file, including command line arguments.

This method synchronizes the virtual machine based on the provided command line arguments.

This method checks if the command line arguments are a supported set of commands and
43419350		returns a clone of the SVG document, which is the Cloneable Document created by other methods in the class.
SUMMARY
This method is used to get or create a cloned copy of an SVG Document that is either a
43419367		sets the default comment for the configuration file based on the global and version information and the file permissions.

This method sets the default comment for the configuration file based on the version information.

This method maps the global and cache version to
43419370		saves the current object to a config file.

This method saves the configuration files without storing the header.
SUMMARY
This method is used to save the configuration files without storing the header.


43419484		encodes a SchemeEnvironmentModel object into a String and returns the resulting EnvModel.
SUMMARY
This method is used to encode a SchemeEnvironmentModel object into a String that is of base64 encoding with character ctrl-
43419496		creates a new PlatformLoad object and sets its load CPU, LoadMemorySystem, LoadMemoryJVM, LoadNoThreads, and LoadExceeded properties by calling the `measureLoad()` method of the `LoaderMeasureThread
43419611		saves a RemoteClientHello object to a file, followed by a new object of the RemoteClientHello's description string with a carriage return and a header.

This method reads the remote file into a string.

This method saves
43419905		returns the JTextField object for the Reference list, which is used to enter the associated name of the class.
SUMMARY
This method is used to set the properties of a JTextField for the reference list.


43419950		returns the JTabbedPane component, creating it if necessary. The component is initialized if necessary and has a specific preferred size, font, and location. This method also initializes the component if it is currently null.

This
43420106		This method creates and returns the jSplitPaneLeft component for the project view. It sets its left and right components; one touch expandability and divider location. It sets the divider location and preferred size.

This method sets
43420215		checks if a given port is free of a port by creating a ServerSocket and specifying the bind address to get it. It then attempts to use a DatagramSocket to ensure the socket is closed twice and that the socket removes it. Finally,
43420247		returns an instance of the OntologyInstanceViewer class, initializing it first if it's null. 
It then sets the mainFrame to visible, adds it to its center, and returns it. 
This method returns the
43420272		returns a JButton named jButtonOK with the label "OK" and a preferred size of 120x26, text "OK" and a font of bold. 

This method creates a new JButton named jButtonOK with
43420281		creates and returns a label with the text "Next" and adds it to the button panel.

This method creates and returns a JPanel with a titled border, containing the text "Next".

This method creates and returns a
43420284		adds a ChangeListener to a JTabbedPane if it is not already added.

This method calls `addChangeListener` on the provided JTabbedPane, retrieves it. If it failed, it creates an
43420308		removes a project from the project by removing it from its parent, recursively removing it from all children, and then removing it from the project tree model.

This method removes an action from a project by removing it from its parent
43420487		stops the search process if the stop parameter is not set to true by stopping the search using the search of the existing agent or ontology.
SUMMARY
This method is used to stop the search by stopping the corresponding agent,
43420558		sets the numbering of each agent to the specified numbering value in the SimpleAgentAddress4SimEnd object. 
This method updates the number of agents start place by the specified number of times.  
This method re-enables the
43420572		returns a list of environments by a given key from a list of environments. If no such environment exists, it returns null.

This method queries an AdminConsole environment, searching for the environment type in various types and returns it in a
43420748		removes lines between old and new lines in a document while maintaining a maximum number of lines.

This method causes the start of the document to be removed until it hits the end of the document and to count the new lines in it,
43420752		removes lines prior to moving a line between a specified element and its separator.
SUMMARY
This method is used to remove a line between two elements in a specified element.


43420847		This method adds a folder to a zip archive file. It checks if the source folder is contained in the folder, extracts the folder name and path, performs an operation on the file and the extracted folder, and copies the files to the destination folder
43450096		sets the endpoint address for the given port name and address.

This method sets the endpoint address for the given port name and address.
SUMMARY
This method is used to set the endpoint address for the given port name and
43450680		adds a timer to a map with a message ID, timeout, and service reference.

This method schedules a task to run and sets a to run flag.

This method sets the message ID for a timeout.

This
43450768		sets the property with the given name to the given value.

This method sets the property with the given name to the given value, without specifying a namespace.

This method sets the property with the given name to the given value,
43450854		prepares an invocation, generates a new message id for the next call, and sets the flags to false. If the call succeeds to prevent exceptions, it sets the message id to the result of the SOAP request to false, and asserts that
43450960		initializes the app, registers its pre-processing and post-processing services, and starts HTTPServer.
This method creates a new menu with the text "About", adds a submenu called "Help", iterates over a list of
4353183		stores the day details by getting the current date from the event object, setting the days of the week in the model with the date and the current day, and storing the details in a HashMap for each day.

This method, named
43550950		creates a new revenue source and stores it in the cache.
This method adds a new purchase source to the database.
This method updates the new revenue source and stores it in the database.
This method creates a new purchase source and
43550953		creates a new instance of the MembershipBO class, assigns it an ID, and stores the instance in the cache.
SUMMARY
This method is used to create a new MembershipBO instance and store it in the cache with the
43551033		retrieves an EmployeeBO object by its ID, using the EmployeeDAO to retrieve the object.

This method creates a new EmployeeBO object with the group ID, name, description, telephone, and email address of the current user
43551157		creates a new BusinessObject instance and stores it in the cache if it doesn't already exist. It returns the created Builder object.

This method stores the PhotoSet bean for testing purposes in a new BusinessObject instance. It creates a
43551258		calculates the sub-total for a transaction based on the transaction lines and balance.
SUMMARY
This method is used to calculate the subtotal of all transactions.


43551327		creates a new backup record using the id generated from the GUID. It sets the id, creation date, and backup specification ID of the backup record if it exists. It then stores the backup record in the Cache object and returns the backup
43551480		creates a new purchase order by generating a unique identifier for the order and then retrieves the associated RevenueSourceDAO associated with that identifier. If there is a problem, it sets the transaction and throws an exception. The method then saves the
43551573		calculates the difference between two dates based on the months of the first day of the month.
SUMMARY
This method is used to calculate the differences between two dates for the first day of the month from differentmonths
43551575		calculates the difference in days between the start and end date of a given date.

This method compares two dates and returns an integer value based on the comparison.

This method calculates the difference in days between the start date and
43551585		creates a new PhotoSet with a specified number of pictures, sets its description to a specified string, and saves the PhotoSet to the database.

This method takes an Enumeration of PhotoSet objects as input and creates a Photo
43551590		edits the color of a set of photos within a collection, using a given description, and a specified number.

This method is used to edit a photo set with a given description and set number in the database.

This method
43551607		returns a string representation of the date in the format "MM/DD/YYYY" by combining the month, day, and year together using a hyphenated form.

This method is synchronized, and if the object is not
43551617		disjoint two dates, represented by the year, month, and day parameters. It first checks if it is too large. If it is, it checks if the first date is less than the second date. If it is not, it
43555691		takes an input string, checks if it contains non-numeric characters, and runs the parser to the input. If the input is formatted properly, it returns the word.

This method checks if the input string contains numbers that the
43556123		returns the last consonant of a given letter in an array of vowels.

This method returns the last vowel in an array of vowels, or throws an exception if a wildcard is not found.

This method takes
43556299		creates a deep copy of an SuffixFormSet object, including all successors, by iterating through labels and adding them to the copy.

This method generates a suffix form set by combining sets of suffix form IDs collected from a
43564612		pushes a submission for the current session. This method pushes the current submission into a stack, checking that the stack is not empty and then updating the submission field. Finally, it sets the last submission of the stack and pushes
43565345		returns the security object associated with the user ID. If the security object is null, it assigns it the default authenticated user. If it is an instance of the UserSecurity class, it assigns it to the session field. Otherwise, it sets
43565656		tests the ability of the persistence object to retrieve country objects with expected values.
This method overrides the `testGetAllCountries` method and checks if the total size of the list is greater than 0.
This method verifies if
43565769		creates a new problem with the specified id and various type, including type ID, author, checker, report type, source, and title. It then adds the problem to the problem object.

here, it sets the distribution type
43565777		creates a new contest with this number, description, limit, list of languages, and no limit. It sets the forum ID, date, and time of the new contest and returns the new contest.
SUMMARY
This method
43565819		checks if one language should be specified.
This method adds two languages to a document, one of which is needed as a third language.
This method adds one language to another.
This method adds two languages to a document, one of
43565931		This method inserts and updates data from an Forum object into the database, returning the ID of the insertion made.

This method checks if the inserted data in a Category object is valid by comparing the values of the Category fields.

This
43565935		tests that the provided objects are equal. It then splits the strings array and checks if the values match with the values in the thread objects. If they do not match, it checks the message streams. Finally, it checks if the text message streams
43565940		compares two Post objects by comparing their properties and data from StrataObjects. It also ensures that the properties of the two objects have equal IDs and thread IDs, and if they have equal content, also ensures that the properties of the two
43565953		This method iterates through a list of posts and checks if each post has been posted correctly.
SUMMARY
This method is used to check whether each post has been posted correctly.


43654238		loads rules from the specified file path into a buffer.

This method parses an XML document against a rule file using a rule parser panel.

This method creates a file parser for parsing rules.

This method creates a rule
43654263		retrieves the namespace URI associated with a given prefix from a list of namespaces.

This method returns the prefix associated with a given prefix.

This method appends a namespace declaration to a string buffer.

This method
43654326		tests the evaluation of an XPath expression on an XObject and asserts that the result matches the expected structure and element list.

This method asserts that an XPath expression returns the correct element list.

This method attempts to evaluate an
43654328		tests the transformation of a style from one XML file to another using XSL transformations.

This method tests the validation of a style by transforming it to XML and checking that the result is not null.

This method tests the validity of
43654890		generates a random word between a specified maximum length
43820431		updates the login status and address for a given user by first finding the UserInfo object for the provided userid, and if it exists, updating its information with the provided IP address and username. If the UserInfo object is not found,
43845892		generates a string representation of a `ByteCodeHelper` object at the specified `pos` position. It considers an array start position, length, and destination array type. It then checks the type of the parameter and, depending on the type
43845994		tests the lastInsertId() method of the ZDatabase class by comparing expected and actual results.

This method is used to test the `lastInsertId()` method for large objects.

This method is used to test the `
4388912		retrieves a job from an Amazon web service and returns a response.

This method checks if the user is authorized to perform a specific operation.
This method attempts to retrieve the job response from an Amazon request. 
This method
4388913		returns the status of a job, given its id.

This method calls the getJobStatus method to retrieve the status of a job.

This method refreshes the status of the shared library task, checking for errors in the
4388921		validates the input data and returns true if all input is valid, otherwise it returns false.
This method checks if the `inputData` parameter is null or not `null`. If it is, it calls `validateInput`. Otherwise
4388944		retrieves the version of the current object.
SUMMARY
This method is used to retrieve the version from a client ID.


4388952		retrieves a job from a Psiscore server ID and job ID.
This method returns a list of job IDs.
This method creates a new PsiscoreJob object.
This method takes a PsiscoreJob object as
4388961		generates an ID for a random string and caches it for future methods. It checks for duplicate strings and duplicates, and returns the generated ID if it exists.

SUMMARY
This method is used to generate a unique identifier
4388989		retrieves an entry set associated with an entry from a given collection of input data. If no collection is available, it attempts to read the XML input using MARC file. If successful, the entry set is retrieved from the MARC file
4389025		initializes the thread pool by shutting down all existing threads and initializing them with new thread pools. If the thread pool has not been initialized, it initializes the thread pools and the initialization of ThreadPool and Futures. It then creates
4389096		compares two Confidence objects for equality, ensuring that the confidence values are the same compared to them. It compares one of the two confidence values as confidence values, including the confidence value as xml, that the confidence values are confidence xml.

43942202		closes a node, cancels all running tasks, and removes it from the model after notifying that it has been closed.
SUMMARY
This method is used to cancel all running tasks, cancel their respective tasks, and remove
43942203		closes all open tasks.
This method sets the state of the frame to true, to false, and closes any open tasks.
SUMMARY
This method is used to cancel all open tasks before setting the frame state to true
43942586		returns the number of items in the directory of the zip file.
This method retrieves the number of items in the zip file by first checking if the file is a file, and if it's a zip file, it appends the
44002128		retrieves the LoginServlet object associated with the HttpServletRequest object's UserSession's Session.

This method checks if the user session is not null, and if it is, it returns the getUserSession method.
44002180		opens a tag in an XML buffer, logs a message indicating the tag's level, and marks the tag as valid.

This method parses characters from an XML stream by taking into account delimiters, and recursively parses
44002185		adds an attribute with a specified name and value to an XML element, ensuring that all attributes are set before writing the element.

This method adds an attribute with a specified name and value to an XML element, creating the element if necessary
44002197		adds CDATA sections to a StringBuilder and returns the StringBuilder itself.

This method appends a CDATA section to the StringBuilder to indicate that multiple occurrences of a template should be done, taking into account the presence of the
44002211		beautifies code that include spaces or line breaks and indentation. It appends the string representation of a character at the beginning of the string, containing indentation and leading and trailing spaces.

This method is called to beautify a character
44118675		returns the nearest snap point to a given point in the x and y directions, considering the snap action and margins.

This method finds the closest snapped point to a given point in the x and y directions, considering the snap action
44118809		removes the current element from the list by removing it from all its parent elements.
This method removes all elements from the list and then returns the removed element, ensuring that the list is not modified in the parent's iteration.
This method
44118880		is used to render the component by drawing a rectangle representing the bounds of the component.

This method paints the points of a triangle by calling the paintPointVertex method if the vertex is not null.
This method paints the edges of
44119108		sets the main and background fill of the map and refreshes shapes, and adjusts the bounding rectangles based on the main object's shape.

This method sets the main object to the specified space filler if there is at least one bound
44122375		returns a Map object that maps editor objects, which are one with id, name, value, and boat, as shortName or name-, using the EditorMap.
This method adds children to the parent editor for the given string,
44123440		sets the registration of the regatta and saves any changes made to it.

This method handles events triggered by checkboxes, setting the regatta or regatta value based on the selected checkbox and triggers appropriate events.
SUMM
44124116		sets all items in a list model to be the specified one, fires an empty event, and updates the model object with the new list model.

This method clears the current list items and sets the current list item to null.


44124170		returns the layered pane of the current object, searching the top-level container to see if one is an instance of RootPaneContainer.
This method returns the layered pane of the current object, searching the top-level container to see
4417878		positions the image for text that will be drawn on the current board.
If the `startX` and `endX` are instances of `Rectangle` class, it calculates their coordinates and retrieves the text color using the `
4419597		deletes a peer-to-peer message from the list of private messages at which it takes to reply to to the message.

This method deletes a peer-to-peer message from the list of private messages at which it takes
4420235		This method returns the anchor section for a given request. It iterates through the anchors list, appends section names and values, and adds anchor points to the XML format before appending theanchor points. A closing closing tag is enclosed in
4420270		takes an Iterator of HierarchicalSemanticTag objects and returns a String representation of the HTML table. Each tag's HTML template includes its name, image links, navigation links, form links, and name, as well as nested elements
4420401		creates a TCPStreamStub object used for establishing a TCP connection on a specified port.

This method connects to a SSH channel on the specified port.

This method sets the HTTP/1.1 protocol for the SSL handler
4420611		persists an entity database to a file by instantiating a kb object, checking if the kb is already on the server, and if not, storing it. If the kb is already on the server, it displays an error message. If it
4420920		sends a message to the connection. It throws an IOException if an error occurs.

This method sends messages of varying lengths and verifies that the messages are not lost, and then clears them. It also sends an acknowledgement of time
4420922		is responsible for closing the input and output streams. It checks if the connection is null, and if not, closes it. It then removes all elements from the connected roomsList, sets the connectedRoomsList to null, and repaints the
4421050		calculates the size of the header by summing the hex value of each bit in the model.

This method checks if the checksum of the data starts with the "if" header and adds the type of the data to a
4421061		takes an integer ID as input and returns its corresponding String representation of that ID.

This method pads a string with specified leading and trailing spaces to account for indentation.

This method paints a title label in an XStyle object
4421116		refreshes the interest by merging variables and updating the list of anchors, either clearing the original addresses or adding a new address.
This method clears the list of anchors from the output of the model.
If there are anchors to display in
4421236		checks if the user has the necessary parameters to proceed with the analysis. If not, it raises the exception.

This method checks if the user has the necessary parameters to proceed with the analysis. If not, it raises the exception.

4421273		checks if a vector contains a semantic tag attribute by comparing the relationship with specific tags.
SUMMARY
This method is used to check if a Vector is contained within the semantic tags of an object.


4421337		adds a peer to the semantic tag with the given name and sets the incoming property for the peer. It also creates a name for the incoming attribute and adds it to the associated tag.
SUMMARY
This method is used to
4421338		finds the way between twostrokes in a simple routing sentence diagram by iterating through the associated semantic tags of these tags and searching for the start of the other tag.
This method handles the logic for adding links between street segments (rel
4421381		adds its semantic tags to the class by creating a new PeerSemanticTag object and copying it to a copy property hierarchy.

This method adds a peer hierarchical semantic tag to the class with the given name and addresses.


4421469		creates and returns an instance of the InMemoPeerAssociatedSemanticTag class, setting its relationship toAnyPeer and anyPeer tag.
SUMMARY
This method is used to create an instance of InMem
4421537		removes a predicate specified by its type from an associated semantic tag.

This method replaces an existing predicate with a new one specified by a specified expression.

This method replaces an existing predicate and expression from in-memory a topic.
4421661		serializes the context space of a given type, or throws an exception if the format is not supported by the context.
SUMMARY
This method is used to serialize the context space of a given type, using an XMLSerial
4421739		searches for a way between two contexts by first finding a way using the given two values and then using the associated semantic tags, associated contexts, and optional fragment parameters. It returns an internal relation set object that contains the result of the search
4421866		connects the local source with the remote source, merges the timestamps into a list of updated target timestamps, and moves the source to the target position. If the target timestamps are not subset, it sets their
4421962		This synchronized Java method matches a given msg, checks if it matches a specific host, if it registers a listener, and if it not registers a listener. If the msg corresponds to a local host, it registers the client, passes it to the
4422101		takes a ContextCoordinates object and serializes it into a string.  It then makes it serialized and deserialized using an external class loader.
This method adds a serialized location to the table of STSet entities.
4431408		performs a null check before performing the operations, it creates an instance of the target class and validates it before performing the validation and then finalizing it.
This method validates a target object before performing it.
This method validates
4431410		processes a request, validates the parameters, and initiates an `ModelValidation` and redoes the context. It also validates the parameter if it has an `ActionModel` parameter. If an `ProcessModel` parameter is
44336272		performs a population of individuals by their child individuals, calculates their fitness and number of crossover, assigns them to the twoNEW individuals, assigns it to the new individuals, and updates the generation by making the updated generation again.
SUMM
44336292		paints the background of an image, resizes and repaints the graphics, and scales the graphics before panning the image.
SUMMARY
This method is used to paint the background of an image if a background image exists in
44407808		calculates the position to move in a FieldPoint object through amobile object, given a mobile object.

This method returns the speed of a mobile object at a specified location.

This method returns the move speed for a mobile
44519945		returns a string representation of a PDB object, including its ID, name, parent, parent itself, and any sub-domains defined in the object.

This method returns a string representation of a SubChain object, including its
44519954		transfers hulling points from a two-dimensional array to two coordinates retrieved from the calling method object.

This method handles different shape (bktrac) of a house or house plane, saving the coordinates and taking the coordinates
44519984		returns the center of a shape as a 2D array of vertices in this shape.
This method returns the center of a shape as a 2D array of vertices in this shape.
SUMMARY
This method is
44520007		takes a DomainDefinition as input and returns a new Domain with the domainId of the input DomainDefinition using this method to retrieve the subdomain definitions and corresponding their residues.

This method returns a Domain object from the results of executing a
44520015		sets domain properties for an AtomList, including its atoms, chains, and hair condition. It also counts the number of chains in the atom.

This method retrieves the chain ID of the atom and stores it in the chain variable.
44520016		retrieves the SCADomain of a given DomainDefinition object.

This method retrieves the CMLDomain object associated with the given domainDefinition.

This method retrieves the CollectionOfAtom objects associated with the given
44520037		retrieves the description of an object from the database. If the description is not available, it is retrieved from the database using the provided superfamily identifier. If the description is available, the method returns the description. If there is a database
44520039		returns the second SCC (Region, subclass of specification) ID of the given Superfamily object.

This method retrieves the scopes from the "des" table based on the provided subfamily IDs.

This method retrie
44520042		recursively retrieves the ID of a subfamily's subfamily.
This method retrieves the IDs of all subfamilies that have no functional roles, using a provided parent and related properties.
This method tests the getID method
44520043		calculates the convex hull pair for a given domain and returns true if the pair meets either the minimum or maximum constraint requirement, and false otherwise.

This method prints a list of possible convex hull pairs associated with a given domain
44520044		retrieves a list of unique IDs from a cache table based on the given gene name.

This method iterates over rows in the cache table and for each row, if the row is not empty, it calls the getID method
44520046		checks if any atom in the intersection of two domains will be selected from a set of avaions. It returns true if at least one of the avaions is among three avaions.

This method creates an interaction from a
44520047		retrieves the name of a family from the database. It first executes a query to retrieve information about the family, including name, name length, address, phone number, address type, city, state, and country. If the query does
44520051		checks the correctness of a cache by updating its gene name in the database and returning true if the update is successful.
SUMMARY
This method is used to add a gene name to the cache and add it as a cell in the
44520074		This method prints the data in the 'pdbName' file, which contains the pdbInfo, atomID, and atomLabel properties. It then creates a new data array, sets the names of the data array, and sets the values
44520110		updates the list of proposed contacts by removing all old contacts and adding new ones for a given distance.

This method assigns the current object as the label for the current object if it is an instance of AtomContact, sets its name
44520112		calculates the strength of the atom contacts, which includes the maximum value of the atom's strength if the contact is interacting with other contacts and is pure. It adjusts the atom count and calculates the defense and defensive value. For each contact with
44520117		takes two lists: s1 and s2 and returns an empty list. It then makes a new copy of the list to all its neighbors. If the new list is null, it means that s1 and s2 are all equal but
44520119		takes a Polygon face, a vertex, and the number of polygons visited. It iterates through the polygons, computes the triangle values from each face, and stores them in the CCW order when it reaches the maximum number
44520120		checks if a given residue intersects with any of its incoming edges. If a bond is found, it adds it to the side chain of the residue if it does not already contain it. If it does not contain it, the bond to include
44520128		updates the boolean value of e depending on the visibility of edges it currently being shown in.

This method trims and updates edges in the given range and path.

This method updates the visible edges of the given edge.

44520142		returns a list of all the vertices from a collection of faces, using nested loops to traverse the collections of faces.

This method returns a list of all the vertices in a collection of faces.

This method returns the
44520198		takes an integer as an argument and copies the task combo into it. It calculates the size of the task and the total computation size, and then sets the construction size in the task combo. The task combo is then populated with data from the
44520281		calculates a string representation of an atom. If the atom is null, it returns an empty string. Otherwise, it returns a string representation of the atom.

This method sets the value of the value at the specified row and column
44520401		updates the distribution object with the residues made, given their domain area and cross-references. It iterates through the domain area to calculate the number of residues and range of residues for each domain area. If any residue has been interacting with
44520749		shifts all nodes by the provided coordinates (x and y).
SUMMARY
This method is used to shift all nodes by the given coordinates (x and y).


44520835		sets the single selected value for the specified node.
This method sets the single selected value for the specified node and sets it to either the specified value, the default value, or no value.
SUMMARY
This method is used
44520840		adds an edge between two nodes by searching for nodes with the same label.

This method adds the given suffix to the edge with the given color.

This method sorts the given edge list.

This method adds the given
44520949		adds a new Modifier to the condition by adding it to the existing list if the reason is not null. It then updates a flag with the reason and adds the Modifier to the condition with the specified modifier.

This method adds
44520951		initializes a coordinate system with two points and initializes the maximum x and maximum y coordinates. It randomly compares the maximum x and y coordinates until a different threshold, then updates the maximum x and y coordinates with the generated values between 1 and 100
44520954		This method sets an object associated with the specified key and value and prints the value to the console. 
This method translates the value of a given property in a DOM object to a special form or model object. It updates the object's properties
44520980		removes an item from a list. If the item is in the same list as the calling item, it increments the count and adds it again to the list. If the item is not in the same list as the calling item, it decre
44521073		calculates the distances between a node and all other nodes and stores the information in an array. If the distance is less than one, it returns a negative number and a specific answer. It iterates over the nodes, checking if any of
44521080		performs the BFS-distance test on nodes for congruences between edges in a given direction. It adds nodes to a vector using the BFS algorithm, then calculates the distances between them. Additionally, it updates the number of intersections and
44521150		checks if a point is blank by checking if the coordinates are within the grid and if any tile in the grid are not empty. It then determines which tiles are empty and returns true if any tile is not empty.
SUMMARY

44521198		counts the number of tiles in the specified location on the grid that correspond to a given cell location.

This method returns the number of tiles in the specified location on the grid.

This method returns the number of tiles in the
44521209		fills a rectangular area on the current surface using setTile() and fillArea() methods, ensuring that there is no efficient filling operation in the future.

This method fills a rectangular area on the grid using setTile() and fillArea
44521319		This method checks if the given property matches the expected value for a mapping property.
SUMMARY
This method is used to verify that the property value is not null and its level is within valid range.


44521375		takes in a list of pieces, two integers representing x1 and y1, and an integer representing the color of the first piece placed. It checks if the coordinates are within the bounds of the piece's width and height, then checks if
44521494		searches for an object in the space by its name and returns its corresponding Thing, if found, otherwise returns null.
This method finds an object with the input name, a 3D coordinate, y1, and y2. It
44521514		This method returns the Java type of an object, either a String, Integer, Modifier, or Script or null.
This method returns the Java type of an object, either an array of values, an array of primitives, or an
44521826		checks if a thing has been caught by a Thing. If a thing has failed or unparsed, it returns false. If the thing returns true, only it is pointed by a Thing that has won by its item, is now 0.
44521854		retrieves a Thing object from a list of objects based on its x and y coordinates and a string name.
This method, isValid() is used to verify if the mouse click is within a valid location on the screen.
This
44521874		counts the number of objects that areFLAGIC or FLAG but not FLAGG and contains a bit of a given value (r).

This method counts the number of objects surrounding the given string the given flag (r). 
44521921		This method sorts an object by a specified distance, either by their Z positions or by their positions of its parenthesized object.

This method sorts an object by a specified distance, either by their Z positions or by their positions of its
4452454		This method adds a listener to the status of the property change.
This method adds a listener to the property change.
This method sets the status of the property change and notifies the property change manager.
SUMMARY
This
4452461		first asserts that no other SwingWorkers are currently active and that no other SwingWorkers are not asynchronous operation exceptions was thrown. If so, it checks if there are more than one active concurrently and if so, throws an exception indicating that no
4452478		updates the send status and progress display in the UI.

This method updates the progress display with the current progress and the total.
SUMMARY
This method is used to perform other actions in response to updates to send data
4452559		shuts down all active tasks in the queue and stops running tasks.
This method shuts down all scripts in the shutdown list.
This method shuts down all beans in the destroyData bean process list.
This method shuts down all jnd
4452562		executes their actions based on the value of myTask.setValue(), it sets up the signal controller and initialises the sign algorithm for the task.

This method checks if the input is equal to the given value by testing string comparisons
4452573		This method removes stopped tasks from a list and refreshes the task list accordingly. It begins by finding the lowest priority tasks, removes those that are not shutting down, and then removes them from the task list to mark them as stopped. It then
4453280		is a property change listener that performs specific actions when an event occurs, such as adding, removing, or changing the state of the object.

This method, when called, sets the property name and the property value of the object, as
4453291		is used to handle the end of an event, which includes invoking the exit method with the event object argument.

This method is the main method of the program, which defines the exit command and then performs the necessary operations, such as exiting
4453376		sets the frame for a frame and throws an exception if the frame is null.

This method sets the JFrame object and ensures that only one thread can access the frame at a time. If the thread does not access the frame, it
4453379		sets the foreground task for the component, removes any existing task listeners, and updates the foreground task. If the task is a foreground task, updates the foreground task's attributes and fires a task change event if the task's foreground task changes.

4453447		saves the root and location of the component to a file with the specified file name. If the pathName parameter is empty, it throws an exception. If the name is null, it creates a new component with the specified file name and saves
4453454		restores the saved state of a component from a file by loading the component's root component and its children. It then restores the state from the saved state map.

This method removes the selected value from a list. It disables the
4454132		parses an XML document using a container and sets various elements within the document and container accordingly. It handles errors and exceptions, performing code within the embedded code structure.

This method parses a document using a container and returns an Object
4454150		support Mac OS if it is supported and the system is supported. 

This method sends authentication to the Java application and sends it in X.509mac.

This method sends a secret message to the GUI for authentication.


4459721		takes a path as an argument and it reads the command syntax to determine the appropriate action to take based on the token's current state. 
This method loads a file by casting a given path to usable filesystem directory, and if not usable
44729721		handles clicks on a label in a view, and based on the label's source or tooltip, it selects an element or sets the tool's current element to be null.

This method executes an action based on the selected action map (
44729786		recursively builds folders and subprojects from a root file and its child files.

This method takes a root file and builds a parent directory of the root.

This method is a run() method that handles processing events before creating
44729842		loads comments from a specified file, if a comment file exists. It returns true if the file exists, or false if it does not.
SUMMARY
This method is used to load comments from a specified file.


44730203		destroys the interface for JWicRdesktop and initiates termination for service and window listeners, while setting the object to null and calling the associated destroy method.

This method recursively destroys the implementation associated with the application interface
44730265		pops the top control from the stack and sets it as the current control. If the stack is empty, it sets the current control to the top control and sets the client's top controls as the current control.
SUMMARY

44730329		creates a new session container with a client ID and application ID, and a unique or uninitialized one in the map.

This method returns an instance of the SessionContainer class, using the SessionContainerManager to get a session with the
44730334		retrieves a session container by its application ID from a cookie and a client ID. It checks if the cookie exists and if so, it sends a "update" message to the application via the SessionHelper class. It then checks if the
44730401		creates a context for a Control with iLabel and iToolTip options using the JWicTools library. The control itself will be a Control with a label, tooltip, and scrollable. The method then adds labels and options to the
44730415		takes a string as input and returns the HTML form of the string.
SUMMARY
This method is used to format the HTML form string by replacing special characters with their corresponding XML entities (&quot;, &lt;
44730583		handles the authentication process for a session by retrieving authentication information from the HTTP request and validating the credentials using a authenticator.

This method handles authentication and redirects the user to the login page if the user is the authenticated user.
44730684		sends a notification message to create or update a job using JavaScript and a JWicClazz resource. It also checks for validity of the job request and adds the job as a URL if it is not the first request.
SUM
44730786		sets the `monitor` field to the specified `IProgressMonitor` instance, sets the monitor field to the value of the `monitor` instance's getValueToValidateState() method, and ensures that the `monitor` field is red
44730795		sets the number of columns in a table and clones the number of columns and invalid values if necessary. It validates and ensures the number of columns is valid, and then validates the value of the number of columns. Finally, it sets the
44730799		retrieves the percentage of a label. If the label is empty or the monitor is in small range, this method will print the total and value. Then it will move the label down.

This method prints the new values in a
44730818		sets layout data for a given control. For non-container controls, it sets the layout data for both this and all other controls. For container layouts, it sets the layout data for it and also restores any previously stored cell.
SUM
44731062		generates a unique URL for an input image based on the specified parameters and returns it as a string.

This method generates an image file from an input image stream.
SUMMARY
This method is used to generate an image
44731256		loads the child nodes of a file into an ArrayList.
SUMMARY
This method is used to load a file and its subdirectories into the ArrayList.


44731399		loads the list of sub-folders from a given file. It checks for specific keywords and values within the file, adding new or finding folders based on the keyword type. It also gets a list of sub-folders using findByName
44731541		tests the creation, retrieval, creation, reading and removal of read data.

This method calls the testCreateRead method and creates a new instance of the SessionContainer to check for equality. It then asserts that the ID of the saved session
44731552		tests the action invoked when an IllegalArgumentException is thrown when an IllegalArgumentException is not thrown by the actionInvoke method.

This method tests the invocation of an action.
SUMMARY
This method is used
44731607		tests the add() method of the actionBar by adding buttons to a new action bar and confirming that the buttons have the expected action to be available.
SUMMARY
This method is used to test if adding buttons to an action bar
44731610		tests the ability of the actionBar object to add and remove buttons to it. It logs the number of elements added correctly, fires a property change event with the events of the first and second buttons, sets the first button to empty, and updates
44731657		expands all the parents of a given node. It then iterates through each child node, identifying which child node is closest to a given ID. For each visited child node, it adds the child to the tree and makes a recursive call to
44731695		adds a new column to the table and to invalidate the tableviewer column resize to trigger the reindexcolumns function of TableColumnCounts.


SUMMARY
This method is used to throw an exception if a
44731811		triggers the selected element event and notifies all selection listeners that the document has been loaded.
This method iterates over the list of elements, fires the selection event, and checks if the element has enabled tag attributes. If a tag
44732250		updates the order of columns in a TableModel object using the values from the OrderPagingPanel.
SUMMARY
This method is used to order the columns in a TableModel object using the Order PagingPanel.


44732487		performs a setTime() operation by formatting the input based on the timestamp and updating the time value. It then validates that the input is in the expected format and does not contain any time values. Finally, it hides the time picker
44769645		removes a plugin by deleting its component listeners, removing delegates that execute specific actions, sleeping for 1 second, and confirming removal via the caller. It also removes the plugin's plugin configuration from the component service.

This method removes a component
44769647		adds an association between a component and a target listener.
SUMMARY
This method is used to add associations between components, all specified components, and only adding a target listener.


44769655		checks if an association exists between a component and target node. If the component is present or target is not available in the component list, it checks if the target node is a component in the component list and the component is a component in the factory
4479137		This method sets up, creates MockPawn objects and tests the getX() method of the Rook. It then asserts that the getX() method in the Rook successfully sets the initial X. On successful hash returns value for "p
4479139		This method declares classes for game-based game aspects, including testing various game sections, characters, puzzle relationships, game components, and movement managers.

This method declares classes for game-based game aspects, including testing various game sections, characters
4479146		tests the functionality of setting a type, including setting the value of TYPE to "Green," and then iterating through a list of pawns representing a red pawn operator. It creates a pawn object for the red and black and asserts that its value
4479152		tests the change position functionality of a pawn named "x" when a position is changed to a different value, asserting that the move and that the pawn is not empty after changing the position.

This method tests the action to move the piece
4479155		sets up the test environment by creating nodes, scans a king, adds pieces to a pawn, and then calls the super method for setup.
This method sets up a test environment by creating nodes, scans a king, adds pieces to a pawn
4479158		tests inserting and searching for points in a board. It adds a position of 2, then asserts that the x-coordinate of the neighboring cell remains 5. Inside the row of the cell, it asserts that the x-coordinate of the
4479160		This method asserts that four knight's position and height are set to 0, then sets one of the knight's variables to 0, and each knight's coordinates to a value equal 2 and the again's coordinates to a value of 4. The method
4479164		tests whether two knight pieces have the same names as king.
SUMMARY
This method is used to test if a knight king is equal to a knight and should not be equal to another knight.


4479165		tests that the getType method of the Bishop class returns the expected string value for five different enum properties.

This method tests that the getType method of the EightPawnMoves class returns the correct value for four different enum properties.
4479167		This static method tests if the "MakePiece" class can properly set and retrieve the "ChessPiece" side of the game board. It verifies that the next possible piece is correctly identified as the king, which is not a
4479169		tests a Rook game by creating two rolls (2 for 8 and 5 for 9) and checking if one is able to move to that position. It then checks if it is possible to move to another position without passing the game.


4479175		This method tests a remote move by creating a bishop entity and an entity, then creating valid moves, getting the updated positions on the board, and then performing the move in a series of directions such as creating a queen, splitting an entity, and
44800050		checks if the authorization manager is active.
This method verifies the authorization and ends the application.
This method sends a response to the client and updates the state of the application to terminated.
This method validates the data out of the
44800092		is a test method that calls the testAssignOsidContext method of the AIController class, passing an OsidException object as an argument.
This method is a test method that calls the testAssignOsidContext method
44800098		tests the assignDeviceProfile and assignDbProfile methods by attempting to create a new DeviceProfile using an existing DeviceProfile and assigning a one-to-one configuration. If any exception occurs during the process, it is caught and printed to the standard
44800176		This is a test method that checks if an authorization exception is allowed before the maintenance method is called. This method asserts that the authorization exception is an exception that is expected to be thrown when the method is called. 
This method asserts that
44800184		tests whether a given object is being suppressed, and prints the status message using the assertTrue method.
SUMMARY
This method is used to test if the `azMgr` supports the `design` feature.


44800271		checks if a user is authorized in the system by verifying the current agent and qualifier.

This method checks if the current agent is authorized on the given qualifier by checking if the qualifier is of type org.osid.shared.Id.
44800273		tests the getOsidContext() method by printing the test result, retrieving the returned Osid context, and printing the result.
SUMMARY
This method is used to retrieve the Osid context for testing.


44800359		generates a cache key by concatenating the IDs and the specified filter string and returns the key as a string.
This method returns the concatenated string of the Ids and Storage from OAS and OASAPPers, or
44800959		checks if two PersistentNode objects have the same private identifier and user node ID values, both of which are persistent objects.

This method checks if two PersistentNode objects match, implementing optional basic functionality.

This method processes a
44801042		tests the creation of a hierarchical node. It sets up a mock node and its to be able to create it. Then it calls the testCreateNode method and clears the hierarchy.

This method calls the testCreateNode method, which creates
44801457		initializes an object using a SymbolTable and Data, then it initializes the object as an AttributeMap that represent the name of the object, this method adds the symbol to an AttributeMap, fills in any values or invalid values,
44801469		reads input from a file and returns it as a string. It reads each line from the file until a newline character is encountered.

This method then attempts to read characters until a newline character is encountered, using the contents item (
44801646		loads a MIB (Message Boards): file, MIB/MIME, or MIB directory from a given source.

This method compiles the MIB/MIME directory by loading each MIB directory.

This method
44801904		prompts the user to select a file to load using a file chooser dialog to load and display the selected file. If the user selects a file, the method creates a new Mibs object and loads them into a GUI, passing
44825375		handles changes to the state of the first/second zoom radio button menu item. It calculates new zoom levels based on the current zoom level, enables or disables zoom between two models, and sets the model's model zoom levels and model model
45004161		retrieves the current bid amount associated with a specific player by searching through a list of current bids and retrieving the bids that the player can bid on. It then returns the bid amount for that player.
SUMMARY
This method
45004503		clears all disconnection tracks from all players in a game. It runs multiple threads to wait until all players have finished running, using either a buffer reader or a player object to read the next buffer. Finally, it returns whether all connections have
45004512		compares two LongOperation objects based on their IDs and returns an integer indicating their relative ordering.
This method determines the order of the arguments passed to it.
This method splits the arguments based on the arguments passed to it if the order is
45004528		validates the shortcut attack for a player's army and returns any failures as a string.

This method performs the quick-short-attack required by the army, allowing them to access the army options if they are not currently in combat.
45004600		takes a Point object and iterates through two lists of LongOperation objects to find the highest's longID at a specified point. If no high uses are found, it returns -1.

This method checks if an element in an
45004628		returns the player's ID of that attacker in this SPlayer if they are the attacker it joins.

This method returns true if the player has already joined the game.
SUMMARY
This method is used to determine the
45004871		checks whether the player can take on a specified maximum possible market for a particular trade. It checks if any potentialmA needs to be saved and meets certain conditions, including market price, market price limit, and market outcome.


This method determines
45004892		removes a possible defender with the specified name from the list of players.
This method stopsLooking a thread with the specified defender name.
This method stopsLooking a thread with the specified name.
This method stopsLooking a thread with the
45004901		returns a String containing information about a job, either followed by the job ID (jobID), the completion status (completed, orFINISHED), or the status of the job (waiting, completed, or running).
S
45005016		is used to process incoming messages and responds to the command based on the command type. It can optionally send text or chat-to-room chat messages and prevent sending chatRoom messages. The method also handles the termination of the communication if the user
45005018		sends a command to a client to authenticate a user with the provided string and credentials. It returns an authentication object that was created using authentication and is used to control the GUI to use.

This method parses the command strings from
45005028		checks if a given userId is already in the process of being added to. If so, it returns true. Otherwise, it waits for a specified number of seconds before removing the user record from the list at the given time.
SUM
45005210		returns the next available ID for a unit.
This method gets the next available ID for a unit.
SUMMARY
This method is used to give them an ID to one of the available units.


45005235		calculates the Battle Value (BV) of the list of attackers for a specified Campaign, taking into account any potential BVs that will be attackers in the controlled faction.

This method checks if a CampaignAdder can
45005356		retrieves access levels for a CampaignData object by checking if it contains any of the available access levels. If one does not exist, it attempts to retrieve the access levels. If successful, it saves the access levels with the updated information.
45005385		returns the number of users in a group. If the list is disabled, the method will return 0. Otherwise, it iterates over the list and filters the current list to add users and all users whose dedicated users join "[n
45005393		loads an image based on an image name, image width, and height, increasing the width and height if the image name is "". It loads the image if none is provided, and includes additional information about whether the image needs to be loaded from
45005423		sets server data, tokenizes the command to be used, and initializes data structures for BBM and bicopair lists. It enforces the client and sends commands to servers. If the command is blank or empty, a message is
45005473		sets the hangar data to the given string, if the string does not contain some characters, it calls the setHangarData method with the string as an argument.
SUMMARY
This method is used to update thehang
45005478		updates all units with data from a StreamTokenizer, preserving their properties. It adjusts the unit data if necessary to keep them randomly. If the data line was in BOL code, it updates the data line in the process. If the
45005484		removes an army from a player when the army is removed.

This method removes a player from the list of players.

This method sets the active player for a specific army in a unit if one is not null.


45005664		activates a planet or planet if a checkbox for checking for disabling its planet status is unchecked.
This method updates the network panel with the current planet and displays the most detailed information for the planet.
SUMMARY
This method
45005671		activates a planet with unit types selected from the unit combo box. It first sets the planet in the ui to the chosen planet type. It then activates the planet in the world, center it on the world, and then returns.

45006332		checks if a unit is currently in a locked army by iterating through a list of armies. It iterates through all armies, iterating through all units within the army to check if the unit's name matches the name passed in. If all
45006394		sets the base roll of various combat attributes based on the ownership of a weapon weapon at a given location, crit value, mech value, and Malfunction is being used. It also sets the base roll rate of the weapon based on the percentage
45006446		handles user actions performed by various other buttons and menu items. It ends a dialog with a flag indicating cancellation.

This method creates an action listener for a button. This listener is executed when the button is clicked.

This method
45007098		reads a list of environment data from a zip file given a BufferedReader parameter. It contains the buffer of width is the total size of the file and all the necessary data is read using the ZipFile method. It iterates through the contents
45007154		returns a string representation of the object, including information about the unit's ID, including factors, units, and other factors.
SUMMARY
This method is used to provide a value as a string for the type of unit (
45007322		updates influences based on various factors such as house IDs and the total number of shards.

This method updates influences based on house IDs and the total number ofHCs.

This method modifies influence values relative to other houses.
45007726		checks if the game is over and considers nearby attacking teams with less than 20% of their lost points. 

This method assigns a random number to the number of attacking participants to determine the combat end time. 

This method retrie
45007743		returns the smallest continent that contains the specified number of terrain at the lowest xholon and exists in the current continent and if the third operator is equal to the last operator.

This method is used to find the largest continent that is
45007791		returns a planet by its name or null if not found.
This method searches for a planet by its name in the database.
This method searches for planets by name in the database, but only for planets with the specified range, and
45007801		returns the largest number of networks in the specified network that have been linked to a specified unit.

This method counts the number of nets in the c3Network. It uses the getUnit method to get the unit and the getConnect
45007807		adds a planet to the system and updates various attributes of the parent planet based on the planet's attributes.

This method prints the current time of the current test case to the console if it is running.

This method adds a
45007842		adds a new faction to the house and updates its association with the faction's ID or name.
This method adds an association between two factions in their map, maintaining their IDs.
It updates the house's associations based on a given house
45007905		encodes a collection of integers into a binary output using a binary writer object and writes it to a buffer.
This method encodes a collection of integer IDs into a binary output using a binary writer object and writes it to a buffer.

45009384		updates the game by setting the tick counter, processing ticks, and updating game state by updating the progress bar.

This method moves a point one unit forward, and updates game states by resetting the position, marking markers, removing markers
4502402		is a listener for the fire engines event, and it dispatches a message to the driver listener, passing the school name as the parameter.

This method is a listener for the fire engines event, and it dispatches a message to the
4502419		returns the value at the specified row and column index, or null if the value is not found.
SUMMARY
This method is used to retrieve the value at the specified row and column index, or null if the value is
4502456		sets the admin details for the FireEngine via the Service class using the Point address, Method ID, and Point type.

This method, `getRepositoryDetails`, creates a new `FireEngineServiceStub` with the local service
4502506		sets the admin details for the ambient service using the stub and the setAdminDetails method.

This method sets the admin details for the ambient service with a set of points from the location.
SUMMARY
This method is used
4502757		deactivates an object, sets its status to inactive, and returns true.

This method deactivates an object.

This method deactivates an object.

This method deactivates an object.
SUM
4502763		registers a listener that updates the water sprite when the user clicks a radio button, the water sprite name provider updates the name value, and the water sprite UI updates the name value.
SUMMARY
This method is used to add
4502987		sets the location and dispatch service location for an Ambulance Dispatch Service.

This method sets the location, and sets the dispatch service location to a string.
SUMMARY
This method is used to set the location and dispatch
4503026		sets the status to OUT and notifies the ambulance that the fire has been out.
This method sets the status to "OUT" and notifies the ambulance that the fire has been out.
SUMMARY
This method is used
45046765		calculates the number of uncompressed files in a specified archive.
This method retrieves the size of the archive's uncompressed ZIP entry and returns it as a long integer.
SUMMARY
This method is used to determine
45047021		checks if the specified XML schema root element represents valid for XML components by validating its root name, file system and associated variables. Based on the root path, it evaluates the root element, checking if the root element is a system or an executable
45047083		exports a Document object as an XML file with the specified file name and adds an indentation.

This method takes a Document object and a text string as input and exports the Document object as an XML file with the specified file name.
45047344		opens a connection for testing and registers a database with a specified username, password, and collection name. It then handles exceptions related to database access, invalid connection failure, and unavailable data.

This method opens a connection for testing and initializes
45047397		takes a given collection of TP versions, a parent TP ID, and a filter field. If the collection is not empty, it queries for the size of the collection and returns the result as an Integer. If the collection is empty, it
45047404		retrieves the number of versions of a transaction that a user is a member of. It takes the transaction ID, owner for the user, the owner of the user, and a filter of the properties of the transaction to the collection provided.
45047418		retrieves the TR versions of a given TExt object based on specified TPExt ID, TPExt with ID number, and Temp TP v number. It also filters out unassigned TPExt versions that are not those specified
45047427		returns the number of bytes needed by all transfers for a download based on the specified type and start and end timestamps.

This method sends the provided number of bytes to the transfer log in ASCII format.

This method sends
45047565		exports a validation report as an XML file using the XVR library. It creates an XMLSerializer and a JAXBElement, sets the comment to null, imports the report data as a String to the XML document, and sets the
45047585		exports a valid reports XML file into the specified XML location using the M4X library.

This method compiles a vReport as an InputStream and exports it into the specified context.

This method obtains the File object
45048200		generates a new XML document from a test profile version and its nodes. It creates a Document object from the Document and sets the root element to the Node object, which includes all of the attributes and text content of the Document object.


45048262		adds a simple element into the parent using the given element name and value.

This method adds simple elements to the given parent element.

This method adds simple elements to the given parent element using the given element name and value.
45048278		adds a CDATA section element to the given parent element with the specified name and value.

This method adds complex element with the specified name and value.
SUMMARY
This method is used to add a CDATA section
45048486		executes a multipart request with the specified request handler attributes, authorization status, and security control code.
This method calls the execute method to process the request with the provided parameters.
This method calls the execute method to process the request with
45048499		sends a message containing the QOD validator result for creating a new Jess script within a selected user.

This method creates a new Jess script for setting the user's information.

This method creates a new Jess script for confirming
45048518		checks if an XML document is valid by attempting to parse it using the XMLReader class. If successful, it returns true. It throws an ExecutorException if there is an IO or SAXException. If an ExecutorException is caught during
45048592		reads the contents of a file and returns the file path as a string.

This method reads the file using a FileReader and returns the string containing the record.
SUMMARY
This method is used to return the file path
45048613		removes CSS special characters from a string by replacing them with their corresponding HTML entity codes.

This method processes a given string by removing HTML entities and returning the remaining HTML as a new string.

This method replaces HTML entities with their
45048672		takes a starting file and copies its contents to one of the previous contents. It returns the new contents as a string.

This method takes an initial destination and adds a change log record to the system. It searches for the last modified
45049269		returns the result of a test case execution at the specified execution time, result number, and error number, including the maximum number of errors in the execution time and an optional error number in the execution time.
SUMMARY
This
45067772		tests the normalization and validity of size and position of a Container object using JUnit assertions.

This method validates the size of a Container object using JUnit assertions.

This method validates the validity of size and position of
45067773		tests the isAncestorOf method of the Container class by creating Container objects with different parent keys and asserting that their ancestors are retrieved correctly.

This method tests the isAncestorOf method of the Container class by creating Container objects
45067807		removes the specified component from the container at the specified index, otherwise it throws an exception.

This method removes the icon at the specified index. If no icon has been set, it removes the default icon. If the container is not
45068820		retrieves the value of the key as a string, returning null if the key is not found or if the value cannot be cast to a string array.
SUMMARY
This method is used to retrieve a string value stored in
4511970		dispatches a trace 2D changed event to all registered trace 2D listeners.

This method iterates through all registered listeners and notifies each listener of the change.

This method also notifies listeners of a change.

4512023		removes the current element from the buffer, updates the circular buffer, and handles circular buffer space.

This method reads objects from a GIS input stream and returns them as a `Object` array.

This method removes a `
45130284		returns an iterator of statements that match a given subject, predicate, object, and graph to determine which attributes to evaluate with.


- This method takes a subject, subject of an individual in an individual iterator.


- This method
45130285		returns an iterator over all statements with default statements added to it.
* This method takes an ExactIterator, a subject, and an object as input and returns an iterator.
* This method takes an Iterator of statements, a
45130286		takes a subject, predicate, and object as input and returns an iterator of statements, or throws IllegalArgumentException if the subject is a URI or literal.

This method gets all the statements for the given subject and predicate from the
45130291		checks if a subj has a statement predicate. If it does, it returns true. Otherwise, it attempts to create a statement with subject, predicate, and object for the subject. If a statement cannot be created, it returns false.

45130320		executes an RDF query on a RDF repository and returns the resulting RDF graph.

This method initializes the process by executing various RDF statements and returning a new graph resulting in a new list of statements.

This
45130344		evaluates a given value and gets its value.  
This method applies an operation to the given value and gets the date.
SUMMARY
This method is used to evaluate a given value using a converter and set its minimum
45130347		evaluates a value, casts it to a Literal, converts its month to an integer, and throws an ExternalFunctionException if the month value is not an integer.

This method attempts to load a value from a file, and returns
45130349		checks if the given object is contained in the RDF Binding Row.

This method searches for the first occurrence of the specified object in the list that matches the given search string, ignoring case.

This method searches for the first occurrence
45130352		evaluates a value without throwing an ExternalFunctionException if the value is not an instance of Literal.

This method verifies if the field type is a DateTime, then checks if the value has a specific column identifier.


45130358		evaluates an ExternalDFSLink based on a provided String value and throws an exception if the value is neither a Literal nor a Number.

This method evaluates the URL and creates a URLConverter object, converting it if necessary
45130370		evaluates a string value against a specified range, returning the result as an integer.

This method converts a string value to an integer, throwing an exception if the string value is not a double.

This method converts a string value
45130378		evaluates the value of a given string by checking if it needs to be understood and if not, it checks the type of the value.

This method checks if two string values are equal and if they are not equal. If they are
45130399		compares two strings and returns an integer indicating their relative order.
SUMMARY
This method is used to extract individual substrings from inner String values of varying literals and to compare them using a converter.


45130402		evaluates an array of values as a string, allowing for the evaluation of literals to be concatenated.

This method converts an array of literals to a regular value object.

This method retrieves the literal value of
45130442		returns an iterator that can be used to iterate over the testIterates with nested statements.

This method returns a test iterator for each statement in the collection.

This method returns the iterator for each statement in the collection,
45130788		casts the input Literal to a Boolean, throwing an IllegalCastException if the label of the literal is not either "true" or "false".

This method checks if the literal has an unspecified type, throwing an IllegalCastException if
45130803		takes a literal as input and casts it to a boolean type, throwing an IllegalCastException if an attempt to cast a string to boolean cannot be cast to a boolean type.

This method casts the given literal to a boolean value,
45130810		casts a String to a Float value and returns the integer value converted to the appropriate type. If the String cannot be cast as a Float, it throws an IllegalCastException with a message indicating the type and error.

This method casts a
45130820		casts a literal to a boolean value as a boolean and returns a CASImpl object with the result.
This method casts a literal to a boolean value as a boolean and returns a CASImpl object with the result.
This method casts a literal
45130823		casts a given literal to a long value, throwing an exception if the cast fails. If the literal cannot be cast as a long, it throws an exception.

This method tests the casting of a given literal to a base-10 numeric
45130827		casts an instance of a parameterized type to a given type using a string representation and throws an exception if the data type cannot be cast as a string.

This method casts a string literal to a float from its type.

This
45130831		returns a ConstraintLogic object that represents the conditions of a triple. It takes a TripleConstraintData object `data` and checks if the subject and predicate expressions are literals. If the result is "_literal,"
45130837		casts a literal to a boolean value.
If the literal is not a boolean value, it casts it a real one.
It then tries toCast to cast the first argument as a boolean, then casts it to a float one, and
45130842		casts a string literal to a float type and throws an exception if the casting fails. If the cast fails, an IllegalCastException is thrown.
This method casts a string literal to an Integer type.
This method casts a string literal to
45130844		evaluates a reference expression using an external function from the RDF binding and returns the evaluated expression. If an external function exception occurs, it returns null.

This method executes a relational expression on an object and returns the result as a reference
45130864		casts a given Literal to a DateTime value, given a Java class that implements the DateTime class.

This method casts a parameter to a Object, given a Java primitive type. If the type is a DateTime object, it
45130865		returns an optional constraint logic object based on an optional constraint data object and a SPARQL value factory.

This method takes in an optional constraint data object and a map of constraint data to their parameters and then calls the superclass's
45130871		casts a string to an a number, and if that number is not an integer and not a difference, it casts another number and returns the cast as a string. Otherwise, if the cast is not possible, it throws an IllegalCastException.
45130891		casts a string literal to a DateTime value, which is a date/time literal with the default date format. 

This method creates an empty SPARQL statement by converting a literal to a literal with the datatype URI.
45130893		casts a literal to a Boolean data type.
This method casts the first character of the given expression to the correct type.
This method casts the first character of the given expression to the correct type.
This method casts the first character of
45130900		casts a literal Literal to a Double value, then gets the Datatype it is defined as a date factory, and finally checks if the datatype is double. If it is not double, it throws an IllegalCastException.

45130910		evaluates the provided RdfBindingRow binding result to evaluate if it has a value that is one of the selectors provided.

This method evaluates a table row with values.

This method evaluates a table row with values,
45130948		evaluates a boolean value to the expected type and returns the result.

This method is used to convert a boolean literal to a corresponding value type. The value type is determined by type specifications and can be used to infer the value type.
45131043		promotes a number value into a double, replacing double numbers with their original values.

This method creates a literal from a decimal number and returns the double value.

This method reverses the multiplicity of a literal's double value
45131046		promotes a literal's label to a float value. If the label cannot be promoted, it throws a TypeError.

This method prompts the current depth for the current field to perform an action on the field. It first calls the promote
45131049		promotes a literal representation of a number to a decimal type, taking into account any values falling into decimal types. It catches exceptions related to non-numeric and non-decimal operands, converting them to appropriate data types and returning them
45131203		retrieves the value associated with a given variable from the value set.

This method retrieves the value associated with a given variable from the value set.

This method validates whether the given object is of type E and is
45131435		takes an integer value and a minimum length and returns a string representation of it with a specified number of decimal places.

This method formats and adds text to a given parent element, maintaining the presence of integer digits, valid units, digits
45131620		builds RDF data by iterating through the manifest file and adding each entry to the RDF data that has been visited.
SUMMARY
This method is used to add RDF data to the RDF data when an end
45131662		handles a GraphStatement by adding it to the store. If the context is not null, it loads the subject, predicate, and object from the statement into this store. The statement is added to the store before the entry is stored. This
45131782		adds a data file to a list of data files for a particular data file.

This method adds the specified data file to the list of files associated with the current data file.
SUMMARY
This method is used to
45147629		returns the name of the player as a string.
This method generates the name using the "Player" object, it checks for a name prefix, and if so, throws an exception.
This method performs an action based on the command
45147733		automatically positions a list of fielders by creating an array of positions and adding it to each fielder.

This method is the entry point of the test case which asserts that the correct positions are created and that the positions in the
45147736		This method checks if every fielder on a given position is valid by finding a valid position with a non-empty value for each fielder.

This method disables or enables all moveable fields and all available cells on the board,
45147782		initializes the player's turn based on their role. If the player is aCAPTURN, it checks to see if the turn is still in sea and if it is, it sets the state of the world to OPEN. If the player
45147819		initializes the drag source using a default drag gesture object and a dock listener
45147826		overrides the `paintComponent` method, draws image heads or tails on the component based on input codes.

This method calls the superclass's `paintComponent` method, then by calling the `paintComponent`
45147857		updates the state of the program by calling the update method on the super method. If the ballot component is rotated, it calls the rotateBall method to rotate the ballot component.
SUMMARY
This method is used to update the
45147862		places a square on a game board at a given position, adding a game piece to track of the position and checking if the game pieces list is empty.  This method shifts a square horizontally and moves it in the next player and place it at
45147874		clears all fields from the specified board.

This method sets the position of theAutomaton to the left.

This method sets the position of theAutomaton to the right.

This method sets the position of theAutom
45147888		initializes the UI for the application by loading the default folder for testing, creating a keyboard interface, adding a board panel, and initializing the player's interface. 

This method initializes the UI for the application by loading the default
45239994		starts the game engine, logs in to other users, and continuously sends players and events to the game for each input.

This method sets up the controller to listen for incoming packets.

This method waits for a specified time until
45240205		delays the removal of an object within the specified delay in a game.

This method shows another player character if their game status is not GAME_BREAKNING.
SUMMARY
This method is used to send a delayed
45240284		initializes an items container by registering various items based on the player's current location. If the player does not have an item equipped with an item or is the main node, the item is scheduled to start monitoring the interface. If only one item
45240313		unregisters players, changes the game state, removes players, and closes the game, freeing up connections, and resetting combat flags.
SUMMARY
This method is used to unregister players and reset them.


45240314		reads an integer value from the data and returns it.
This method reads the first byte of the buffer and returns it, if the buffer is empty, it returns -1.
This method reads the 4 bytes of the buffer and returns them
45240448		retrieves an NPC by its ID based on its minimum and maximum X and Y coordinates, and then checks for the presence of the NPC. It then searches for the NPC object in the game units and returns the NPC object if found. If
45240544		expands capacity to account for the first 20 bytes of a payload. It copies the existing payload to the new payload and increases its length to accommodate the new capacity.
SUMMARY
This method is used to prevent the sum of a
45240570		displays the current bank, which then has a custom bank info list.

This method adds player data to the player list, including those that have information about the current player's bank size, amount to be applied, room status, and
45240636		sends a list of friends by sending a packet to add to the game.
This method verifies that a player can send a friend list to the server, and sends a packet to remove a friend from the server if the server cannot process
45240774		sends all equipment currently equipped within the player's location.

This method sends all equipment from the player to their server.

This method sends all equipment from their server to the DMA if the player is the DMA.

45376983		retrieves the temperature of a device, creating a new device if it does not exist or updating an existing one.
This method updates temperature information in the preferences. It validates the input, then checks for valid values, throwing exceptions if
45376984		returns the value of the "high" attribute for a given item, which represents the temperature of the item.

This method calculates the value of "high" attribute for an item by first converting the item to a string, converting those
45376989		retrieves the low temperature variable in the XML format, checking there is an atomic unit named "units" and ignoring it if no unit has a lower temperature variable.
SUMMARY
This method is used to convert the low temperature
45458930		returns the JFrame instance if it exists, otherwise it creates a new JFrame instance and sets the JMenuBar and JTabbedPane attributes.
This method returns the JFrame instance.
SUMMARY
This method
45459025		returns a JMenu object named the "File" menu, which contains two JMenuItem objects for displaying the "About" dialog.

This method returns a JMenuItem object named "Show TPS" menu item, which displays
45459096		returns the content pane of the about frame, which includes the JTextArea object with a custom version.

This method returns the content pane of the about frame, which includes the JTextArea object with a custom version.
S
45459233		returns the JPanel object jPanel1, which is initialized if it is null, using the values from the standard properties and the default properties if the panel object is null.

This method is the entry point of the program, it
45459355		returns a JPanel that contains various JTextField objects added to it, including "Add BlankRow," "Input," "Blast Input," "Blast Output," "SaveBlastBlast," "Blast Pipe Data," "
45459427		returns the JPanel object, setting its layout to a rectangle with 2 labels, x-coordinate, and y-coordinate for each component in the panel.
SUMMARY
This method is used to initialize a JText
45459439		returns a JLabel that displays the text "Output Properties" (if the label is not null), with a specified size, location, and enabled status.

This method checks the data in the appProps object if it is not
45459500		creates and returns a JPanel object that contains three buttons: a JLabel with the text "Stopbla", a JButton with the text "Start" and sets its enabled property to true.
SUMMARY
This method
45459536		returns a JButton named jButton8, creating a new one if necessary and setting its bounds, text, and an action listener.
This method returns a JButton named jButton8, creating a new one if necessary and setting its
45459691		returns the JPanel containing the JTextField for the E-value component. If the JPanel has not been initialized, it initialises a new JLabel with the default value and sets it to an empty rectangle. It then adds the
45459698		returns the JPanel which is a panel that contains a separator, options, and other components. It creates the panel if it does not exist, and sets its layout and border.

This method initializes the labels JLabelJ
45459706		returns a JTextField object with properties such as size and disabled text. 
This method initialises the field with the name "3D" and the size and bounds of 90 by 36 pixels. 
This method initialises the
45459717		retrieves the JPanel named jPanel8, initializing it with a new JLabel, setting its font, bounds, and border.
This method returns the JTextField named jTextField8 if it is not null, otherwise
45459769		returns a JPanel with a GridLayout of 7 rows and 1 column.
This method returns a JPanel with a titled border of "Output" and a true value for "Continue", the same size as its text, and the text
45459782		This method gets or creates a `JTextField` object if it does not exist. This method is used to set the text of the JTextField. This method is used to initialize the `JTextField` with specific properties, including
45459880		returns a JButton object named jButton14, which is created if it doesn't exist.
This method creates a new JButton object with the text "Parse" and the bounds of 536, 30, 29, and an
45460059		returns a JPanel object that contains a label with two text nodes and two combo boxes.
SUMMARY
This method is used to create and configure a JComboBox object with the specified names and bounds within the JPanel
45460386		This method creates a JPanel with a nested table and two JLabels, before returning it.
This method defines another JPanel with a nested table and two JLabels, in the center of the BorderLayout layout manager, and the
45460542		retrieves or creates a JComboBox component with the label "Type" and a specified dimensions and a bounds. If the component does not exist, it creates one with the given name and adds it to the container with the specified options
45460629		initializes and returns a JLabel object that displays various options for selecting URLs, including either "lca" if the location is "LEVELLEVELLEVELLE", the label, or "lcsa". It also includes commented out
45460654		returns a JPanel with two JLabels and four JComboBoxes added to it and added to it.

This method returns a JLabel object with the message "JLabelStatus".

This method returns a J
45461668		returns a JScrollPane that contains a JTable widget with the specified table model. If the JScrollPane has not been built, it is created and initialized. The JScrollPane is then called to display the table in
454707		returns the ApplySettings object, checking for the presence of a matching header name and adding the appropriate ApplySettings object to it.
SUMMARY
This method is used to retrieve the ApplySettings object that matches a matching header name.
454708		retrieves the layout settings for the application, checking a list of layout settings blocks for identical blocks.
SUMMARY
This method is used to retrieve the layout settings for the application by iterating through a list of layout settings blocks
454709		retrieves the ColumnormapperSettings. It checks if the settingsBlock exists, then iterates over the block fields and if the field starts with ColormapperSettings.class.getName(), it, it checks if the field is a
454710		returns the GraphicsSettings object matching the specified header by searching through the `GraphicsSettings` objects one by matching the header's type. 

This method saves the model settings by reading the model. 

SUMMARY

454711		retrieves the BrowsingSettings object by searching for the matching header in the blocks of theINGSettings object. If no matches are found, it returns null. Otherwise, it parses the BrowsingSettings object from the parsed elements
454713		returns the movie settings by querying a list of movie settings objects found in a string.

This method retrieves and sets the movie settings for the given list of movie settings objects. It initializes the movie settings object if it is
454745		converts a coordinate to a time value in the specified time format using the specified coordinate conversion option. The conversion is calculated using the coordinate conversion conversion data format.
SUMMARY
This method is used to convert a coordinate to a time
454747		handles mouse click events, it checks if there is an error data and assigns the current active layout and current slice index.
This method processes mouse clicks on a component and determines the action to be taken based on the event, such as opening
454792		adds a new layout property to the layout components of the object by creating a new JButton and string from the name, setting the text and icon when the button is clicked, and creating a new JPanel and assigning it to the object.
454798		sets a text property in a JTextField to a double value by extracting the value from the specified property name.

This method sets a property of the axis to a given JComboBox and adds an empty cell to the plot model
454855		is an action listener that responds to button events and responds accordingly, executing different actions based on the button that triggered the event.

This method sets the color to the specified color of the cell.

This method disables or enables the
4549084		sets the opacity of the object while ensuring it does not exceed the maximum limit for the opacity value. It also updates the opacity value.

This method gets the opacity of the object.

This method checks if the opacity value is different
454911		displays a specified file using a FileDialog window and prompts the user to select a file handle to open. It then stores a handle into the program and returns it.
SUMMARY
This method is used to get the input name
454938		changes the current slice number to the specified number if they are valid, or displays an error if either of them is invalid.
This method allows a user to change the number of slice amounts.
This method checks if the current slice number is
454972		sets the coordinates to the specified sliceNum using the corresponding XCoords for that slice.

This method clones the layoutSlices.

This method processes a layout slice for the object, updating the coordinates to set the slice.
454985		navigates to the next step in the game, it checks if it is a step in time, if it is, it cancels the move, calls reset to prevent multiple moves, centers the node, marks it as moveable, sets
455106		saves the current network as a .sop file using a BufferedWriter with a FileWriter and PrintWriter.

This method saves the network as a .sop file.
SUMMARY
This method is used to
455180		This method sets the text to "x" and checks if the row count is greater than 0. If not, it sets the row count to 1 and shows the "x" text in the west yellow preview.
SUMMARY

455255		calculates the squared distance between two sets of slices, where each slice has a distance of 0.001 cm.

This method calculates the normalized sum of the differences between the 1st and two other diagonals, and returns a
455400		is responsible for drawing the score sequence with a custom color and ticker.
It then restyle all the sprites and draws the controllers in the correct order.
SUMMARY
This method is used to draw the score sequence with a
45550058		returns a string containing the display name of a metric based on whether it is a Java rule or a project, a descriptor, and a flag indicating whether it is a project breakpoint.

This method tests the getMetricName()
45550273		sets three property values with the given prefix and the properties passed in that are of type IPropertyStore using the given input. It then writes the property values to the property store using the write method.
SUMMARY
This method is
45550274		reads the permissions of the current resource and its sub-resources recursively. It iterates through the resource's permissions and reads the corresponding subject or resource's individual resources.

This method reads data from a resource and populates a map
45550275		Sets the values of properties in the given IPropertyStore object to the corresponding values in the includePublic, includeProtected, and includePrivate properties from the IPropertyStore object.

This method copies the values of the given property from
45550293		adds an array of Java problems to the baseline, removing any existing one before adding.
This method fills each baseline with the data from the provided scanner, returning the final result.
This method gets all the data for a given resource.
45550307		This method first reads an IPropertyStore, then utilizes a ContextPropertyStore to set the context for each rule. If the context is not empty, it reads any enabled properties and then stores them.
SUMMARY
This method is
45550311		retrieves fix capabilities for a given rule key, throwing errors if the rule is unknown or if the key does not exist in the environment.
SUMMARY
This method is used to obtain the fix capabilities for a given rule key
45550499		logs a problem with a given ASTNode and arguments. It creates a new JavaProblem object and adds it to the manager. It then returns the problem.
SUMMARY
This method is used to add a problem to the manager
45550504		takes a user-specified key. If the key is not valid or throws a MissingResourceException, it retrieves the value associated with the key from a properties object. If the value is not valid, it converts it to an array of
45552168		sets the priority of a rule in the store depending on its severity level. If the priority is valid, it stores the preference to the store. If the severity level is changed, it initializes the map and sets the priority to the entire set
45552194		returns an image for a given marker priority, either NORMAL, IMPLICIT, or KEEP.

This method checks if the marker is for priority low.

This method checks if the marker is for priorities high.

45552195		sets the filter names using an array of selector names.

This method sets the default filter.

This method sets the filter names using an array of selector names.
SUMMARY
This method is used to set the filter
45552294		creates an HTML input field with the specified label and returns the text formatted as Java elements.

This method creates an HTML input field for the specified label and returns the text formatted as Java elements.
SUMMARY
This method
45552295		creates a password text component with optional image and text input boxes for username, password, and whether or not LDAP login is permitted to access an LDAP directory.

This method returns a panel representing the containing controls for LDAP authentication
45552297		creates a label with the specified text, margin, and font. It sets the color and margin of the label to read-only and the font can be loaded into the specified font.

This method sets the bounds of a label.
45552321		removes files matching the specified filter from the current image source using an ImageFilter object.

This method removes matches for the specified filter from the current image source using an ImageFilter object that matches the specified file name.

This method
45552418		returns a TokenIterator object obtained from the specified range of the text, after setting the range to null. It begins by finding the first Token in the Token List starting at the specified start index and using the end index to find the last Token
45552645		tests the concatenate method from the StringUtils class by concatenating strings in a single collection of strings with semicolons.
This method tests the concatenate method by concatenating strings in a single collection of strings,
45552647		tests that there are no differences between two strings. It creates two arrays of text strings and one arrays of diff strings, and then uses the assertEquals method to assert that these two arrays have the same value.

This method tests that
455671		gets the value associated with a field name from the class. If the field does not exist, it returns "null" instead.
SUMMARY
This method is used to get the value associated with a field name from the class.
4556918		generatesIERDabilities for each layer in the map by calculating the error at the minimum and maximum Erodability (adjusted to the minimum).

This method generatesIERDabilities for each layer in the map by calculating the error at the
4557021		is used to process mouse events. Depending on the source of the event, handles different actions based on the source of the event, such as filling the list, finding the Landform, and restoring selection.

This method defines a mouse click
4557151		sets the viewpoint with the given translation.
This method centers the given ViewPlatform on the view platform.
This method sets up the viewing platform with a given view.
This method sets up the viewing platform with a given view.
This
45572071		calculates the victory bonus for a player by summing theBWs per SSBN in the player's bsb.

This method creates a new Player object with the specified name, age, and health, calculates the victory bonus by
45572078		calculates theICLE for a specific player in a sequence, based on the player's position as an extraimeter.

This method calculates theMAL for a specific player in a sequence based on the player's position in the normal box and
45572110		This method sets the current player in the game by finding a player in the list and updating the frame accordingly
45572233		saves the player lists to a file. If a list has not yet been saved, it saves all the lists and then saves the player database.

This method prompts the user to save one or more in the file before exiting the application
45572278		checks if a given object is a Player object.

This method compares two Level objects based on their name, balance sheet value, category, and active league.

This method compares two Rules based on their name, and if the player
45572344		adds tabs to a tabbed pane containing PlayerRecordPanels, PlayerListPanel, and SinglePlayerPanel.
This method creates a new player list panel and adds them to the tabbed pane.
This method updates the player map by
45575942		calculates the dot product between two matrices represented as arrays of objects.

This method calls a function to calculate the dot product, it takes two matrices as parameters, an index of the calling function as an argument.


455761		takes a String representation of a RGB color as input and returns a Color object. It parses the string into RGB values and converts them to names. It then creates an array of the correct colors in the ColorTable based on the parsed RGB
455875		parses an arc header string in the format 'arcHeaderValue\\'.
This method parses an arc header string in the format 'numColsPerRow' and assigns it to the corresponding integer variable 'numColsPerRow
455895		parses the attributes of a CSSParseNode object and sets various attributes based on the attributes.
This method returns the value of an attribute if it is of the correct type, otherwise it returns null.
SUMMARY

45703715		initializes the layout and size of the tabs by creating a GridBagConstraints object, setting its properties, and adding it to the layout.

This method sets the type of the object to the singleton value.


45703806		returns a JPanel that contains a JSplitPane with a divider location and two other panels, 2, with a top and left panels, horizontal and vertical directions, and one at a time.
SUMMARY
This
45703820		This method returns the JPanel object, if the JPanel object is null and the JLabel object is set to "Programma". If the JPanel object is not null and the JLabel is set to "Programma". It then returns
45703841		returns a JPanel that contains various other panels related to trading suggestions.
SUMMARY
This method is used to get a JPanel for graphical user interface related to trade suggestions.


45703874		returns the JPanel for the east edge of the graphical user interface. If the JPanel has not already been created, it is created and configured with a BorderLayout, size, and location for the label and a JTextField.

45703913		initializes and returns a JPanel containing three buttons: Print, andVoeg.
This method initializes and returns a JPanel containing the three buttons: PrintButton andVoeg.
This method initializes and returns a JPanel containing
45703952		returns a JPanel called funktiePanel, which includes labels for displaying information about the selected transfer speed and the current transfer rate.
SUMMARY
This method is used to retrieve the combobox for the third time.
45703994		returns the select dialog content pane. If the content pane is null, it creates a new one, adds the select dialog scroll pane, selection text, and select button to the center and bottom of the content pane, setting the preferred size.
45704006		creates or retrieves a JPanel variable `jPanel2`. If it has not already been created, it initializes it with a GridBagLayout, sets the constraints for the buttons, and adds two more buttons to the panel.
45704108		creates and returns a JPanel object with two buttons for selecting the starting vertex.

This method returns the JToolBar component named "Stereickeren" if it has already been created, if not, it creates a new
45704141		returns a JPanel object that is a `GridLayout` object that supports multiple components. The panel is created with a `GridBagLayout` created by calling `addComponents()` and `getJPanel()` methods
45704203		gets or creates a JTable for selecting the player's starts with an auto-resizing scroll.

This method returns the starting portion of the table.

This method refreshes the starting portion of the table.

This method
45704249		returns the JPanel that contains the graphical user interface elements for the configuration.
SUMMARY
This method is used to create the JPanel that contains the buttons for the configuration.


45704326		returns the south panel of the GUI. If the north panel is null, it creates a new JPanel, sets its layout to GridBagLayout, and adds three buttons to it: the "OrtEinsatz" and "
45705435		returns the OkCancelPanel, which is a JPanel that contains the OK and Cancel JButtons.
SUMMARY
This method is used to retrieve the OkCancelPanel from the class.


45706769		returns the JPanel for the hide units text field if it's null, otherwise it returns the existing JPanel.
This method adds a JTextField to the specified JPanel.
This method adds a JScrollPane to the
45706814		returns a JPanel that contains information on the "ValPerc" field, with labels for "N", "Val", and "N" as well as text fields for inputting the percentage and type of percentage used.

This
45706862		returns the main panel of the window, and if the panel does not exist, it creates a new panel and adds another panel to it.
SUMMARY
This method is used to provide a grid bag layout to create the main
45707011		returns a JPanel named jPanelOpClassifiersEquals if it has already been created, otherwise it creates a new JPanel, sets its layout to null, and adds a JCheckBox named "All classifiers identical?" to it
45707129		creates and returns a JPanel object named jPanel12 if it doesn't exist, with a 5-column GridLayout with 3 JLabels, a 1-column GridLayout with 2 JComboBoxes, and a 1-
45707287		returns a JPanel named jPanelPreList, initialise it if it is null, and then add a label and combo box filled with the preprocessing values.

This method initialises a new instance of the JComboBox
45710372		adds an element to the queue and returns its position. If the queue already contains an element, it returns its index.

This method updates the index of the current object to the index of the new element.

This method swaps
45750712		checks if the collection contains the specified element.
This method iterates over all the elements in the given range, or until all the elements are empty.
This method checks if the given partition contains the specified value.
This method iteratively
45750725		checks if the current Range object is equal to another Range object based on specific conditions. If the other object is null, it returns false. If the other object is not a Range, the method recursively checks if the other object is contained
45780539		reads an integer from a stream. If that fails, it skips the starting of the stream, reads more integers until e encounters or reaches and increments the count. 

This method reads an integer value from an input stream. It sk
45780544		reads a string from the input stream and returns it. If the string cannot be read, an IOException is thrown.
SUMMARY
This method is used to read a string from the input stream by reading both characters into a string
45788903		takes a string as input and returns the string without any comments, adding space and commas to the string.  This method is invoked when the string starts from the input. The method removes leading spaces from comments from the line and replaces them
45790812		decodes an object using Base64 or null. It loops through an array of objects, calling the decode method first based on the type of the argument. If a valid object is found, it decodes it. If no valid object is found
45791172		sets the value of a specified property using reflection. If the property is read-only, it does not have accessibility and the method will be private and the property value will not be changed. If the method returns void, it will be used to
45847474		sets the endpoint address of the specified port with the given role name and web service name.
SUMMARY
This method is used to set the endpoint address of the specified port with the given role name and web service name.


45847890		tests if empty data cannot be read into a buffer or printed to a buffer when an exception is thrown.

This method closes a buffered stream and asserts that the stream has no more data to read. If the stream has more data,
45847893		tests the functionality of the BufferedStream class for exceptions thrown by the stream methods.

This method tests the read method for short buffering.

This method tests the read method for double buffering.

This method tests the
45884403		returns the notification timeout value from the preferences object saved in the session context, or a default value if the preference is not set in this object.
SUMMARY
This method is used to return the notification timeout value from the preferences
45884554		sets the duration of the application/timer, calculates its current day and hour and minute, and sets the start time and duration of the timer based on the provided duration, date, and period.

This method sets the duration of the timer
45884832		is used to initiate the search process for the search result view. When the search is finished, it sets the search result to the given result and shows the search progress. Otherwise, it starts the search process.
SUMMARY
This
45885081		fetches the salt of the current person's name from the database.

This method fetches the current person's email address from the database.

This method populates the location list in the database with the details of the location associated
45885088		deletes the existing salt, stores the updated salt, then inserts the updated salt into the database.

This method takes a string argument and stores the original salt in the database.

This method takes a string argument and stores the original
45885105		returns the current session key stored in the session object. It checks if the session is present in the cache and returns it if found, or null if not.

This method checks if the session is contained in the cache and returns it
45885254		retrieves the expiration time for a given package from the database. The method creates a new block to read a cipher from SQLite database and handles any errors that may occur during retrieving the information. If a pool is unavailable, it creates an
45886081		sets the empty text of the list.
This method sets the empty text of the list.
This method sets the text of the list of items to the specified image.
This method sets the empty text of the list.
SUM
45886318		generates the data from the internet, adds any content that already exists in the provided data, and returns the final data as a ContentValues object.

This method creates a new ContentValues object from the provided internet.

This method
45886321		schedules a task to run sequentially to be executed repeatedly at specific intervals until the object has no waiting time or conditions are met.

This method creates a Timer that checks the current time in milliseconds and schedules a task to run
45886383		The method compares two SensorEvent objects for equality.

This method compares two SensorEvent objects for equality by comparing integer values.

This method compares two SensorEvent objects for equality by comparing integer values.

This method finds the relative
45887990		retrieves the name of the application, or "?" if the package name is not found.
This method creates an instance of the TestReceiver class, which allows you to send data to another application.
SUMMARY

45888022		checks if the given Version object is greater than the current Version object by comparing the version code and version name attributes.
SUMMARY
This method is used to check if the current Version object is less than the version code and version name
45888292		posts an event to the system, processes the message, posts the event, and captures the event lock.

This method posts an event to the system, processes the message, and records the event lock.

This method posts an event
45888315		returns the contact 'contactToShow' from the LaunchActivity, including the icon for the last contacted user.

This method sets the previous location hint in the LaunchActivity to display the contact info of the last shown contact.


45888377		hides the soft input for a contact and opens and starts a search activity to contact data.

This method takes a Contact object as an event and starts a search activity to search for the user.
SUMMARY
This method
45888474		loads a interaction type from the contents of the database in the specified cursor.

This method loads data from a cursor into the current object.

This method loads data from a database into the current object.
SUMMARY

45888493		converts an ImageEvent and an Event source to an ImageView.
This method calls the toImageView method.
This method calls the loadImage and loadImageSource methods to set the event source to the event source if the event source
45888514		opens a cursor containing a list of results of a SQL query executed on a Cursor object. It fetches all the rows from the Projects table based on a filter argument and displays them in a TextView. For each table, it adds the
45888524		opens a cursor that selects the rows from the Sources table where the AUTHORITY column matches a provided Uri and updates the value of the ACTIVE column accordingly.

This method retrieves the SourcesTable object at the specified cursor position using the Data
45888532		checks if a given contact has any filter options, with a single selection option.

This method retrieves contact lookup conditions for a given application, contact, and table.
SUMMARY
This method is used to retrieve contact lookup
45888952		retrieves the most recently used theme from the database by querying the notes cache. If the note is being cached in the database, the method retrieves the latest theme from the cache and uses it to determine which theme should be used.
45889084		searches for tagged content by iterating through a query, searching for matched content with an uri tag and matching a content URI with a tag with a content URI.

This method updates the referenced URI content by finding matching resources within
45889306		picks an item from the database using a cursor to access the result.

This method initializes an object array with two single IDs and tries to pick the specified item from the database.

This method initializes an object array with
45889654		adds a category to the current news based on a provided category ID and sets the same category ID immediately.
This method adds a category to the current news, where the category name should be the concatenation of the categories names already stored
45889746		checks if an Eula has been accepted and handles the launch intent accordingly. It logs debug information and then initiates an Eula activity if the "Create Eula" option is selected.
SUMMARY
This method is used to
45889801		saves the current page to a file.

This method takes the current page, length from the source page, the source type, and the destination type.

This method takes the length from the source page (i.e.,
45890010		retrieves the user's default import policy and displays it in the import policy.

This method displays the import policy on the screen.
SUMMARY
This method is used to display the import policy on the screen when the
45890123		takes a fraction representation of a color stops, calculates the intervals, and gets the corresponding colors.

This method takes two Paint objects as parameters and uses them to interpolate colors.

This method takes a Paint object as parameter and
45890305		takes a filename and appends the full filename to the shared medium if it is not already present.
This method appends an extra filename to the filename.
This method creates a file object if the new filename is not already in use
45890390		displays the 'Artists' activity for a given packagename. It gets the app info, creates a statement to run and execute a query, and retrieves information from the database to retrieve specific data. If there is no results,
45890406		sends a message to the current activity indicating that the sensor recording has started.

This method returns the content of the activity.

This method checks if the device is currently setting the "settings" mode and if so, displays a
45890413		This method fetches author information and displays it as either authors or dates.

This method displays a message about setting the author status when an activity is first started.

This method displays a status about setting the author status when an activity
45890435		displays users in a view, displaying comments, attachments, and their parts. It includes action if provided, or display the list of comments.

This method initializes links and text views for a text activity, including image, text,
45890451		displays either the license information or metadata information based on user input from the menu items.
SUMMARY
This method is used to display copyright information in a text view based on the parameter specified in the Intent.


45890467		creates a new database table named "SENSOR_DIMENSION" in the "DATABASE" database table called "DATABASE_CONTEXT.SENSORS" with three columns, to create the table
45890468		displays theInternallyShareDocers activity for a provided document and package name.
SUMMARY
This method is used to display a list of docs or documents by package name.


45890504		displays recent changes retrieved from the About or About device. If no records were found, it displays the home information. If the device is an Album device, it displays the album info. If the device is an Activity-Internal device, it
45890507		establishes a Telnet connection to the specified port.

This method connects the socket to the specified address and port.

This method connects the socket to the specified address and port.

This method connects the socket to the
45890558		is the main method of the program and it uses a FileRunnable object to run faster emulation of time. It includes program identification, simulation information, and progress information. Based on the command, it executes it and shows a file dialog to
45890626		displays the program name and version of the current activity.

This method updates the display of the program name and version with the name and version provided in the intent.

This method displays the name and version of the current activity,
45890799		displays a website link based on the packet number and intent message type provided by CursorHelper. It extracts the package's IP address, title, and website name from the intent message and displays them in a linker widget or search link widget
45891169		removes a StateViewSmall from the screen by setting its visibility to false and removing it from the scenario.

This method handles key typed events and checks if the Ctrl+A to move the view to the next view, sends events to
45891192		shows a big view to the specified state model by setting the small view and updating the view from the underlying model.

This method displays abig view in the UI, returning true if successful.
SUMMARY
This method is
45891430		prepares to play the simulator controller, initializing statistics including the time, elapsed time, and state.

This method sets the sensor to play and starts playing if the controller is valid.

This method checks if the controller is active
45891465		creates a new list if the name parameter is null or empty, by checking if there is a name and checking if the list name exists. If the list name exists, it switches on the position, opens the save image, loads the layout
45891555		renames a shopping list with a new name provided if valid. It checks for empty names in the new name string and displays an error message if not. It then updates the display name and checks for refresh frequency. If a refresh frequency is provided
45892517		establishes a connection with a Telnet server with the provided information.
This method throws a telnet exception if the ConnectionStatus code is incorrect.
This method connects to the Telnet server.
This method displays an information message with
45893808		updates the settings from a file, plays the data, and updates the slider values. If the file does not exist, it displays an error message.
SUMMARY
This method is used to update the slider values when the replay
45929468		retrieves the RSS feed items associated with a feed item.
SUMMARY
This method is used to retrieve the RSS feed items associated with a feed item.


45930509		takes two integers and a 2D integer as input, it calls another method with the three integers as parameters to get an array of feature vectors.

This method takes three integers and checks the values at each position and increment.


45931054		returns the log weight of an OCL log partition.
This method calculates the log-likelihoods between two entities in an array.
SUMMARY
This method is used to calculate the log-likelihoods between two
45931269		takes two SimpleHClass objects, c1 and c2, and returns a SimpleHClass that intersects with c1.

This method computes common superpositions between two SimpleHClasses, returning Integer.MAX_
45931573		tests the size of two collections by invoking the `size()` method on an `ArrayList` and asserting that the size is 10 and the size is 5.

The method is identical to `size()` by asserting that the size
45931578		tests the weight() method of the class.

This method asserts that the weight returned by the class's raw() method has the correct weight and is equal to the expected values.

This method asserts that the weight returned by the class
45931584		tests the base data set and base data set by creating a RawSubset, Subset, and Subset2 instances, calling various methods on their base dataset instances, the final subset results in a long value of 1, ensuring they are now
45937832		renders the game visualization by clearing the display, calling the render method, and setting the interpolation to the specified value.

This method draws the game state.

This method encodes a scene into the renderer based on the
45956229		This method converts a specified person into an integer value, writing them as either a text or a string, depending on the `organization` object's type.

This method prints a contextmenu to the specified Java object, including the unit
45956520		sets the content type of the HTTP response based on the specified output format for a specific HTTP servlet response.

This method handles HTTP GET requests, initializes the form bean, then sets the content type for the HTTP response based on the
45956629		returns a Properties object representing the message bundle associated with the given language, with the keys being the message name and the values being the actual message.
SUMMARY
This method is used to retrieve a Properties object for a given language
45956637		loads properties from a resource file and returns them as a Properties object, loading the properties in a separate thread for UI notifications.

This method loads properties from a resource, returning them in a Properties object, or null if the file cannot be
45956666		This method saves a validation report to the database.
This method saves a validation report to the database, it first checks if the user has sufficient authentication and expects to accept the format.
SUMMARY
This method is used to validate
45956692		initializes the endpoint for endpoint generators. It checks if the signatureservice object is not null and if so, it gets the signature service endpoint. If the endpoint is null, it gets the request context and adds the service name to the request
45956745		takes a list of units and builds a plain text string by adding the unit description and highscore identity to the line break.  
This method rebuilds a list of units by building a single line break with each unit description. 
45957093		removes outdated units from the search result list if they are not older or different from their current end date.
This method applies the units to the SikSearchResultsList by iterating through the units and extracting the SikSearchResultList
45957109		This method checks if the given URI is a valid URI by ensuring it starts with "#" or "*/" and returns true if it does.

This method ensures the URI is similar to any previous checks, and also ensures it does not
45957119		retrieves a person object from the database by its vgrId.

This method starts the phone application, creating and populating it with data. It then starts fetching data again, and it queries data for the phone number and
45957314		prunes folders specified by the path attribute in a LDAP entry, then retrieves a person from the LDAP server using the provided DN and returns its information.

This method returns the person associated with the givenDN from the LDAP
45957364		adds a new entry to the syndicated feed, ensuring that it is not already in a specified location.

This method creates an entry in the corresponding feed.

This method adds a syndicated entry in the specified feed, returning
45957369		adds a unit to the grid, and if the grid is not empty, it checks if the unit's length and data does not contain any spaces.

This method checks if the length of the grid plus the decimal digits has been reached
45957377		adds a user's username and surname to the user's name list.

This method adds a given name and surname to the user with the given username and surname.

This method displays a dialog with the given username and password,
45957381		adds a name-value pair to a map if the key does not already exist.
This method takes a list of strings and clones an object to create a new object, creating an instance of the class if necessary.
This method takes
45957457		initializes database tables and populates maps with code tables and values.
This method initializes the model by retrieving data from a configuration file, updating the configuration, and setting the root model as the current model. 
This method initializes
45958688		returns the additional information as a string, containing the objects in the additionalInfo list, if it exists.
This method returns the name of the object as a string, if it exists; otherwise, it returns null.
This method returns
45958861		returns the name of the first employment of a telephone number, separated by whitespace.
SUMMARY
This method is used to get the telephone number of the first employment of a telephone number.


45958868		returns the mobile number of the first employment in the employment list.

This method returns the mobile number of the first employment as a string.

This method returns the mobile number of the first employment as a string.
SUM
45960284		checks if the label is valid by checking if it has already been assigned a URI, if not, it checks if it is a literal-indicated label. If both conditions are true, it checks if the URI uses a different value as a
45961155		checks if an object has aimum healthcare type to determine if it is critical.
This method checks if an object has acritical type to establish a healthcare between two levels.
This method checks if an object has multiple healthcare types
46022442		changes the username and password or if the username and password are not empty, updates their user in the database.

This method alters the username and password hash of a user session. It loops through the users in the model, creates a new
46025850		decodes the value of a given string by using a UTF-8 encoding. It uses a string conversion library to decode the character sequence and decode the value of the first argument. If successful, it decodes the value by calling another decode method
46025875		shuts down the application, loading configuration, and repainting the UI without saving property changes.
This method catches and displays Exception's stack trace in a dialog box.
SUMMARY
This method is used to save the initialized
46026030		changes the current screen card to the specified card number, updates the default button of the content pane, and ensures the default button is selected.

This method changes the current screen card, updates the content pane, and sets the default button of
46026032		shuts down the game manager by shutting down all game engine instances stored in the global game properties and setting the global game properties to null.

This method calls the shutdown method of each engine in the engine array, passing the engine object,
46026097		adds a console log to the view.

This method adds a console log to the view but only if the console logo is not null.
SUMMARY
This method is used to add a console log to the view.
46026152		returns the current ARELine in the ruleopt. If the speed option selection has invalid values, it sets it to the max ARELine in the ruleopt.

This method calculates the absolute line by delegating to the get
46026159		returns the delay for a line based on its speed, speed type, and ruleopt settings. If the speed has lines above or equal to positive lines, it is divided by that direction.
SUMMARY
This method is used
46026383		checks if a box is a partial lock out at the specified coordinates.

This method iterates through the data and checks if any of its blocks have another blocks that have the same type (either filled or non-filled).

This
46026411		checks if a field can be placed to the visible area of a specified frame row and the specified row resizes, y, and rt values.

This method takes four integer parameters (x and y) and returns a boolean indicating the
46026430		checks that the computed ranking is within the allowed range for a given mode and time. If the mode is the last mode, it returns -1 or checks the ranking for the goal type and time. If the mode is the previous mode, it
46026504		This method opens a file using a File object and reads the line from the file using a BufferedReader. It then parses the actual line of the file. The method handles the loading of different game type based on the current game state.
46026508		saves the settings defined by the GetOrderManipulationMethod and the PovReflectGetterToHook objects to a file.

This method saves the settings of the genericOrder order by setting the order attribute to the value
46026669		This method sets the GameMode of the Engine to "tiles" if the game is starting from a tile.

This method loads the last scale, view scale, level scale, jumpScale, startlevel, and version properties from a
46026677		saves a game metadata by creating a hashtable of game data, setting various other game properties such as player author, teams, players, a set of team members, team level, length, and length modifiers. It then saves the meta-
46026682		initializes the game engine and its player, setting game ID, player ID, player class, and displaying fields.

This method sets the game attributes for the game engine.

This method sets the game attribute for the game engine.
46026713		calculates the clean flag for a T-volume trait.
SUMMARY
This method is used to calculate the clean flag for a T-volume trait.


46026813		returns the height of the highest block empty in the line given its position on the screen.

This method calculates the specified number of blocks with breaking among the y values of the 'lineFlag' field.
SUMMARY

46026841		checks if the game's engine over the game by the specified player and updates the game state accordingly based on the results. It supports conditional and block passing and checks for unused board boards. It also considers if the game can block up into allowed values
46026848		calculates the y-coordinate of the lowest Y (Y grid) coordinates of the y-axis of all blocks in the block rectangle to determine whether to delete the given block.
SUMMARY
This method is used to
46026857		checks if the stage has completed, sets the engine's end time, updates the game state accordingly, and marks the game status as clean. 
This method sets the engine's last block flag, engine's end time, and stage.

46026948		takes in a engine and draws a string on the engine's text field, based on the engine object, using the provided engine object.

This method gets the receiver, field display position X from the owner's text field.


46027013		This method updates the game engine's display and data for clients over performance statistics.

This method resets the game engine's position and velocity.

This method resets the game engine's position and velocity.

This method sets
46027042		adds a single hole to an array of holebooks with the specified height and number of lines, color, skin, and multiple lines.

This method adds a single hole to an array of blockbooks with the specified height, color,
46027075		adds a bottom copy in place of a color, whether skins are available, and number of lines to become empty. It takes three integers, color, skin, attributes, and lines. It then moves the pixelsForward, moving to the next
46027341		handles changes in state for room screens, updating the display based on the changes made.

This method updates the display based on a given room ID, setting the current view detail screen type and changing the current screen card.

This
46027498		saves the settings of a game to a new CustomProperties object.

This method saves various game settings to a new CustomProperties object.

This method saves game settings to a new CustomProperties object.
SUM
46027680		converts a table of attribute rows into a string representation.


46027698		exports a start date to the database, compressing it within a pre-year 8-Year character boundaries. It sets the object as read-only and stores it in a hash map. If the object is not marked for deletion, it
46027730		copies the properties of another NetSPRanking object to the current object.
This method is used to copy the properties of another PRRankings object to the current object. It then creates a linked list of NetSPRanking objects
46027741		removes a player from a game by comparing the player's name to the player's name. If they match, it removes the player from the player's group.

This method removes a group file from a game by removing it from the
46027778		copies the values of an object to the current object by skipping over the fields with the same values in a field-value pair, ensuring that any double fields are copied otherwise.

This method also deserializes an object into the current
46027784		exports custom statistics if they are not null and have not already been cached.

This method creates a string buffer from the current CustomStats object.

This method checks if the string buffer is null and, if not, calls the
46027786		is used for importing a custom stats from a given string into a linked list of strings. It checks if the transfer type is "INVENTORY_INVENTORY" and if not, it sets the transfer type to INVENTORY
46027813		returns a net record if the mode and game type match specific parameters. If matching the parameters are not found, it returns null.

This method tests if the NetSPRecord enumeration and listRecords ArrayList, is sorted by
46027817		registers a record and updates the record type if necessary.

This method registers a record if the list record type has already been registered. If not, it checks if the record type is already registered and if was the regular record type,
46027824		sets custom status values for a given name by appending a semicolon to each object in the list if it's already in the list of custom stat values.

This method adds line numbers along with the line numbers after each colon to
46028647		takes a game engine and an player ID as input and returns the field position for the given player ID on the field display. It checks if there are more references to other characters in the player's display, and if not, it creates random
46028649		calculates the coordinate for a given player's field display position in the game engine's game.
SUMMARY
This method is used to obtain the coordinate for a given player's field display position.


46029027		deletes a room by deleting its ID, name, and description, and removes it from the room list if it is not found in the list of rooms.


This method adds a room to the chat history, adds the room's description
4606808		validates a password hash by calculating a digest and comparing it to a known correct md5 hash. It handles MD6 and detected hashes, logging the hash and passing the hash as a result.
SUMMARY
This method is used
46078347		executes a test call and handles any exceptions that may occur during the execution. It then validates and restores the result and table result.

This method sets up the test environment for the program. It calls three other methods: singleTest
46078415		checks if the table has enough rows to display the first row and if not, throws an exception. It then checks if the row list size equals 2 and throws an exception if it does not. If the row list size is not equal 2,
46106668		adds a string to an array of lines, with a specified color, at the beginning of the array if the length of the array is greater than its minimum capacity.

This method takes three parameters (mText and mColor) and
46106677		uses OpenGL graphics library to draw text on the screen, with specified margins and color. It also updates the timestamp if the g2D object is not null.

This method updates font, size, and color based on the user's input
46106714		handles mouse release events, clears the mouse over status, and sets the focus and selected status. If the mouse is being dragged or drags over and the state is STATE_MOUSE_DRAGGING, it fires a method
46106729		broadcasts a keyboard action to all focused windows when a key is pressed.

This method interacts with a key listener, and takes a key code and character as parameters.

This method sets the key mode to control, which is equal
46106732		is used to send key released events to the window when a key is released in the current focus widget when the focus is on the currently focused widget.

This method is used to send key released events to the focused widget when there is no
46106736		releases a modifier key event or a key released event. Then, it cycles the child widget list and sends the keyReleased event.
SUMMARY
This method is used to send the keyReleased event to all registered event listeners.
46106743		sets the alpha value of the geometry.
This method sets the opacity of the geometry.
This method sets the alpha value of the geometry.
This method sets the alpha value of the geometry.
SUMMARY
This method is
46106746		draws a background, title, or an image with the specified text centered on a node, at the specified position on the node's display.

This method draws the text of a node on the top of the canvas and handles the text
46106781		sets the focus to the value of the private variable `focus`, sets the focus state of the input object to 0, and moves the focus to the next child widget in the sequence.

This method sets the focus to the value of the
46106794		updates the position of the line and an action when the left mouse button is released.
This method checks if the event is a mouse button down event, and if it is, it removes the hover from the widget. It then updates the
46106829		sets the tooltip text for the specified object and updates the font and time interval.

This method is used to draw the text on the screen.

This method is used to draw the text on the screen.
SUMMARY
46106919		updates the current time, and if the time elapsed since the last update is greater than the delay, records the stop time; otherwise, it turns off the loop if the repeat interval is negative, it updates the duration and current animation.

46106978		draws an image with a hot spot at a specified Y coordinate, adjusts its background, and optionally draws high hotspots.

This method draws hotspots for a graphics context, applying a visual effect to the image.

This method
46107012		outputs information about the Windows 2000.0 v.0.4.2/4.0.3.4. The method iterates through the internal lists of OpenGL displays, removing any that are not using a list of GLHotSpot
46107058		draws an image at a specified location and an alpha value.

This method draws an image at a specified position. It includes calculations based on hotspot coordinates and draws the image in the correct position. It also calculates the dimensions, translates
46107106		creates a cloned copy of the current modal dialog, including creating new instances for visible and hidden frames, and clones the list of frames, cloning any associated frame lists and highlights, updating the visual attributes such as size and highlight time,
46107119		draws a hot spot animation by calling the draw method of each animation in the animationsList. If it is not empty, it iterates over each position of the animation, drawing the position onto the screen using the specified alpha value and the current
46128169		retrieves the stack of ports for the USB output port. It reads ports from files and stores them in an array, which is then passed to each command. If there are no arguments, the stack will be empty.
SUMM
4627652		retrieves a RoleTO object based on a provided ID, or creates a new one if it does not exist.

This method loads all roles from the database and sets colorings and objects for the roles view. It also sets up
4627658		reads a resource with the given name from the system by attempting to read the resource from the REST API and returning null if no such resource exists.
SUMMARY
This method is used to obtain the value of a specific resource with the
4627667		creates a user schema for a given kind using the RestTemplate and sends it to the WebLogic client.

This method uploads the specified file to the server.

This method creates the schema XML file for the specified kind
4627670		reads a connector instance into a ConnectionInstanceTO object by calling the connector's read method and returns the object.

This method sends a READ command to the server to initialize the connection.

This method sends a READ command to the server
4627673		reads a user schema by name using an anonymous mechanism and returns the results as a SchemaTO object.
SUMMARY
This method is used to check the synchronization of a user schema asynchronously.


4627680		updates a user schema with the given request and response objects. It checks for errors and sends a notification email if errors occur.
This method takes an interface name as an argument and updates the schema by taking the old schema information from the server
4627681		updates a configuration using a remote protocol client. It returns a boolean value indicating if the update was successful or not.
SUMMARY
This method is used to update a configuration using a remote protocol client.


4627685		deletes a schema from the restTemplate file.
This method accepts a file containing a schemas list, adds or deletes it based on the provided boolean, and returns the modified list as a JSON string.
SUMMARY

4627690		creates a derived schema for a given kind and base URL. It sets values for URL, name, and other attributes.
SUMMARY
This method is used to create a derived schema for a given kind and base URL.


4627703		updates a derived schema by requesting its URL for updating, and if an error occurs, it logs the error and throws a custom client with a redirection of "failure".
SUMMARY
This method is used to update a
4627717		deletes a derived user schema if it exists from the database.

This method deletes derived schemas by first deleting extracted files from the folder. If an exception occurs, the method logs the error.

This method handles exceptions by
4628180		generates code to populate a table by printing generated imports and columns to the report as a summary table.
This method generates code to compile a schema and writes it to a file.
This method generates code to compile a schema and writes it
46310540		reads an SGIP response from the local machine and registers it with the processor.

This method requests a new SGIP response, establishes its associated data stream, checks for errors, and starts the timer.

This method sends a response
46319963		starts a loading process for the application including starting the simulation, creating a serializable queue data variable, and creating a core threads for other processors.

This method starts the simulation by calling the doorman object to start the simulation.

46320067		is called `endIoOperation` and it calls `endIoOperation()` in a synchronized block to perform various operations related to program execution.

This method processes `IoConverter` objects in the `IOThread
46334828		This method attempts to retrieve a concern by finding an existing one with the given ID parameter and returning it if found. If not found, it tries to retrieve the projector and its associated concern. If the project does not exist or the concern does not
46391461		handles a GET request by reading the response from a GET client, extracting the query string, and extracting the parameters. It then checks if there is a "expect" header and if so, it retrieves the user role-in-
46582681		initializes and returns a `Graphics2D` object with specific rendering hints, such as antialiased text stroke, stroke width, and rectangle fill and polygon fill color.


This method returns `javaUtils()`, it
46583153		tests if the encryption and decryption process works correctly when supplied as a string.

This method tests encryption and decryption functionality using SimpleCryptoUtils.

This method tests the conversion of a byte array to a string, comparing
46583293		sets the value of an ID to the specified integer if it has been persisted and has different hash codes than IDs, or to 0 if they have different hash codes. If they have not been persisted yet, it calculates the ID based on different IDs
46584243		This method retrieves the list of the name of all the drinks in the session, if the list is not already set, it creates a new list with all the drinks in this session's drinks and adds it to the list.

This
46584245		initializes the choice tie selection tab by setting the choice row, maximum number of rows, and the selected item in the choice item list.

This method initializes the search panel and sets the model.

This method sets the choices
46584249		sets the scroll pane layout, adds the frame and controller panels to the center panel, sets the center panel as the center panel, and adds a window listener to the frame, which when the window is closed, the application deactivated by clicking the
46584370		creates buttons for email, customer, transaction number, and employee order payment. It adds selection listeners to buttons and adds checkboxes to buttons based on those listeners.

This method initializes the values of the two entries in the payment record
46584434		initializes components of the component by adding various figures to it such as labels, buttons, and feedback listeners.

This method initializes the graphical user interface by creating an instance of the JFrame class and setting the components' layout before creating
46584438		initializes the layout of the window by instantiating a GridBagLayout.

This method sets the size of the window to (1024x768), sets the content pane of the window to the JPanel. Otherwise, it expands and
46584616		returns the full Java class name of an association type, following either TypeParameter or CollectionType.

This method populates the class name table with the specified class, including its superclasses and implemented interfaces.
SUMMARY

46584650		checks if a property object has an instance of a factory for it and calls the maybeExpandFactory method to maybe expand it.
SUMMARY
This method is used to ensure that a property object has the appropriate name in order to
46586737		returns the table model, initializing it if it is null by using JTable's getTableModel method.
This method initializes the table model using the data from the model.
This method returns the data from the model.

46586743		returns the editorScrollPane object, initializing it with a JTable and setting its properties.

This method loads the editor data from a file into the object before passing it to the superclass's load method.
SUM
46586748		returns the JPanel "productButton10", which is a JButton that is used to create and interact with the corresponding product.
This method takes a JToggleButton as an argument and creates a JRadioButton with the text
46586807		returns the raw IP address of the local host.
This method returns the local TCP transport address of the external IP address.
This method uses the constructor to create the local IP address by extracting the formatted IP address from the local host and
4660345		initializes the game by setting the player ID and setting the current controller.

This method sets the clock display to a window with an internal frame layout.

This method creates a window with a focus list and sets its title.

4661305		disposes of the server by closing all input, output, and socket streams without holding an open connection.

This method runs a loop, reading data from a buffer and handling it. It reads data from a buffer and supports communication with a
4661347		returns the first available client with a break statement. If the timeout has been exceeded, it returns null. Otherwise, it uses the busy connection and logs the client ID associated with that connection indicating the busy connection. If there is NO available client
4661390		will continuously increment the number of entities that have been deployed every 10 seconds to execute until they become a context that is closed. This method initializes a concurrent monitor to ensure thread safety and checks the status of internal data for deploy status and attempts to
4662985		reports OpenGL errors found at the specified location or displays a warning message if there was a lack of OpenGL errors.
SUMMARY
This method is used to display a warning message if there was a compilation error.


46700356		overrides the `getLoggingLogger` method to retrieve the Logger with the specified name.
This method creates a new Logger instance if one does not exist and sets the name of the Logger to "test."

46700359		returns an empty string and will return the string "Hello World!" if the m_logger is in debug mode. Otherwise, it will log if debugging is enabled.
This method checks whether the default string is empty.
This method
46700371		returns a string representation of a DefaultBlock object. It includes a nested object into an XML element, including its name, version, version label, and current time if applicable. It also logs debugging information about the object if debugging is enabled.
46700377		returns the qualification of the object, and logs the start time, end time, status, and success message of the operation.

This method retrieves a Qualification object with the specified ID. It first reads the object from the database
46707372		retrieves the contents of a bag. 
This method calculates the size of the bag. 
This method retrieves the contents of a bag.
SUMMARY
This method is used to decode the data of a bag
46707415		sets the archive directory by creating a new directory with the specified name, setting the directory name, and setting the namespace of the directory to the specified name.
This method sets the identifier environment variable `env` by loading the system provided via reflection
46707428		returns the naming type of the distribution point with the given name.
This method returns the distribution point names as an ASN1SequenceOf object.
This method is the entry point of the program.
This method gets a distribution
46707537		sets the value of an encoding certificate, using a given octet array (X.509Value) to encode it to an output stream.
SUMMARY
This method is used to encode an octet array to an IoC-
46707786		sets the next update for the response to the same value as the given last update.
This method updates the response values according to the in-between expiration dates and calculates the negative date for the dates that match the given dates.
This method
46708767		is used to handle a timer when either a timer id is not equal to the timer id they are currently stored in. If the given timer is valid, it checks if the timer's timestamp has changed since the last call. If not, it
46708800		removes the root behaviour from the waiting list and then restarts it if the method has a superclass that is not the root. Depending on the method's results, it simply removes the root behavior from the waiting queue, and updates the timer
46708875		writes a two-byte array to an object, within a specified range, and updates the object's metadata ID.
4. This method writes two bytes to an object, the offset must be 0 and the length is greater than the dimensions
46709377		activates all behaviours or sends an interrupt if the state is not "suspended" and sets the state to "ACTIVE".

This method fires an event to the registered listeners about an activity.

This method executes an event to
46709449		wakes up the embedded thread, activates all behaviors, assigns the state to the active state if the current state is not WAITING or WAITING
This method synchronized if it has been previously acquired.
If this is true, it
46714175		initializes various resources within the application, including environment variables, registers service providers, services to be deployed and started, and starts the server when the "start" method is called.

This method handles the startup of the servlet by retrieving
4673807		updates the event source by checking the validity of the new value at the new path. If the new value is valid, it fires a path changed event. If the new value is invalid, it fires a child changed notification. If the new
46794139		returns the value of the attribute with specified name of the source directory.

This method, test_getSrcDir_isDirectory, checks if the source directory exists and is a directory.
SUMMARY
This method
46794380		searches for a connection between two elements in the context.

This method searches for a provided connection name within the namespace.

This method searches for a preferred connection name within the namespace.
SUMMARY
This method
46794581		checks if a session with the word "d" exists in the cached response. If the session ID exists or if the previous document ID is greater than the previous document ID, the method returns true. If the session ID does not exist or the
46794916		saves changes made to text editor by prompting the user to save changes.

This method clears the target text and tool text and calls the doSave method of the save manager.

This method updates the value in text editor and ensures
46794919		saves the edited string to the input and updates the text editor page as the new input.

This method throws an exception if the text editor is a standard text editor.

This method throws and displays standard error messages if the editor
46794962		This method creates a text document contents string and writes it to a file. It then updates the file itself, expecting a specific exception to be thrown with an appropriate message. Finally, it writes the file to the specified location.

This method
46795013		This method checks if the root is null, if it is, it returns. Otherwise, it creates a TreeViewer object from the root of the root object and gets its output. If the output is null, it creates a CodeElement object
46795034		finds the target node name by finding the node with the name `name` in the node child node with the `name` attribute found. If a match is found, it returns the node value. If no match is found, it returns
46795206		takes a property object and returns a string containing its metadata.
This method gets and returns the property metadata by invoking `getPropertyMetadata` and adds it to `null` if `null`.
This method creates a temporary string by
46795214		returns a string containing the metadata of a field. It contains the field's name, number of fields, flags, and other metadata.

This method returns a string representation of the field. It first invokes the superclass's get
46795242		returns a string representation of a Type, including its type metadata and its attributes,
46795252		recursively retrieves all content members of a directory and adds them to a set of strings.
SUMMARY
This method is used to find all content members of a directory and add them to a list of strings.


46795286		calculates the number of dots in a string to leave in decimal degrees.

This method calculates the dot level of division by zero.

This method calculates the dot level of division by zero.

This method calculates the dot
46795322		takes a string and attempts to extract the Type attribute from it, returning the extracted Type value as a string.
This method parses a string by name and returns the Boolean value of the attribute.
If the attribute is not found,
46795339		takes a string and calculates the dot percentage of the string, removing any leading or trailing spaces by splitting it into segments or dots and removing any trailing semicolons.

This method splits a string into a list of strings and returns the
46795357		builds a string representation of an object with its fields including its number, date type, and whether it is an instance of a method, instance of a class, array, class descriptor, and list.

This method updates the list of
46795360		compresses trie with LZFOutputStream and puts it to HashMap groups.

This method creates a trie and puts it to HashMap groups and group keys to IGACompress. It also compresses the IT
46795376		extracts an object from the input stream and assigns it to the variable `object` if it is not null.

This method converts a byte array into an object and assigns it to the variable `this` if it is not null
46795393		adds a key and its corresponding boolean value to a HashMap based on a provided project name. It checks for empty strings, increments the hash map if null or empty, and then adds the key and the value to the HashMap. If
46795450		returns a linked list of all variables of the document offset that are used to invoke the internal code.
SUMMARY
This method is used to return a linked list of all variables of the document offset that are used to invoke the
46795453		returns a vector of the parameters of a method's doc offset. It stores the signatures of the method's parameters and additional parameters for reference.

This method checks if the signature of a method has been done.

This method returns
46795458		finds the least entry for a given key within a trie data structure. The method recursively performs a bitwise exclusive search on the trie data structure to find the most entry in the trie data structure, skipping the given key
46795504		handles the selection of a component and updates the action accordingly, it also updates the selected file if a certain type of event occurs.

This method initializes a selection event listener, which triggers a selection changed event, updates the target document
46795659		calculates the prefix subtree of a NameNode's key using bitsets stored in an AbstractBTree object.

This method transforms a preference value to a list of values and returns a PrepostValues object.

This method
46795698		checks if a key is present in a Trie data structure. If the key is not present, it returns false. If the mapping contains the key, it checks if the Trie is sorted. If the Trie is sorted, it returns
46795775		initializes the Debug preference page, loads its default settings, creates a new BackendDebug instance, and initializes default settings for Remote Launch. It constructs the specified configuration and registers it. If the initial startup is successful, it starts the shell
46795992		retrieves the class string for a given CodeElement. If the class name is empty, it returns an empty string. Otherwise, it uses a process template to create a unique class name and then gets a derived name from the element's code
46796072		tests the code element type, including elements.

This method tests the ability of the CodeElement class to generate code elements for various data types.
SUMMARY
This method is used to generate code elements for different data types.
46796178		terminates a breakpoint by calling its terminated method and then calling the terminated() method for its instance variable.

This method ends the parsing for a given thread by clearing the thread list and clearing the value associated with the class name, calling
46797721		searches for the leftmost occurrence of a character in a Trie and advances the cursor to the next occurrence.
This method returns the next occurrence of a Trie node in a Trie, if present, or null if no T
46797769		follows down a TrieEntry stack up to the specified node, returning the node that the entry is following.

This method takes a TrieEntry tree and looks for the TrieEntry nextNode in the tree that is contained in
46816226		creates a thread and adds it to the work queue. If the thread is already in the queue, it throws an IOException. If the thread is in the correct state, it creates a worker to run and adds it to the thread map
46816233		translates the bits in a byte array based on a pivot value.

This method generates the binary search array based on the number of bits performed, padding part of the binary search array with zeros to a specified size if necessary.
46816357		completes a worker thread with state machine termination. It signals a master signal if the current worker is waiting and the last worker is the last worker in its state indicating the termination of the environment. Finally, it releases the lock and unlocks the
46816535		removes an edge from the graph by removing it from its start node, maintaining the links by neighbors. 
This method removes an edge from the graph that is connected to the new edge, and the links by edges.
This method removes
46816676		stable the queued items and updates the status of the completed tasks if a task is queued. It tries to stable their status and ensures there are no tasks that will be queued using more than 100%, stopping the busy tasks if any
46816953		checks if the owner of a node is a critical node and if not, sets the node to zero, and if all subsequent nodes have low priority, sets the node to the next node in the heap if it becomes the last node in the heap
46970893		determines if an object can be renamed, based on the name of the object.

This method checks if the object has a variable with the name "_oldVar" and if so, renames the object to that of the object
46970926		executes a series of scripts within a while loop that asserts a condition condition and executes certain scripts within the provided output if possible.
SUMMARY
This method is used to perform a set of scripts while executing a script within a while
46970936		reads a file line by line and returns it in a string as a string.
This method returns the value at the specified row and column of the table.
SUMMARY
This method is used to read user input from a Random
46971001		expands the current string field to the specified minimum length, ensuring that it has enough capacity to store it.


- This method expands the length field of the current string field with the specified minimum size. It updates the current length to the
46972847		centers the shape on the curve by calculating the midpoint of the given x and y values and updating the x and y coordinates accordingly.

This method handles mouse dragging events by checking the mouse button and performing actions based on the button's
46997326		adds a number to the current object, considering the maximum available capacity and handling various conditions such as double values being non-specified or is unrequested. It handles range adjustments, ranges and auto-adjusting, and requests for the new
46997550		sets the buffer size and fires a property change event if the value is different from the previous value.

This method sets the buffer size to the specified value and fires a property change event if the value is different from the current value.

46997651		sets the log timestamp format to a specified format, but only if the specified format is different from the current value. If the specified format is different, it fires a property change event.
SUMMARY
This method is used to change
46997802		sets the polling interval of the sensor and fires a property change event if the polling interval has changed.
This method tests if setting the polling interval of a sensor is accepted by the controller.
This method tests if setting the polling interval of a
46997804		reads the next data block of data, processes it with the superclass's handle method, and notifies any listeners of thechange.

This method reads the next data block of data, processes it with the superclass's notify method.
46997938		checks if the provided string is a valid peenna using the pexb parser. It iterates through the pexb parser until it finds a non-terminal character (pexb) or a special character (pexb) followed by a right
46997953		skips spaces in a string by ignoring spaces wrapped by spaces.

This method appends the requested file path to a buffer in a way that records the number of bytes that will be read.

This method sets the byte buffer's
46997962		finds the index of a parameter in a string. It performs a combination of a number of matches to determine the number of combinations to include. This method also calculates the minimum and maximum characters of a parameter and continues until an alternative number is reached
46998113		sets the operator of the object using the specified operator, taking into account the type of operator and the number of arguments
46998216		calculates the scale of the preferred size of containers.
This method finds the available space for the preferred size of components, or returns the default scale if the layout is not yet complete.
This method removes components to reduce the height of
46998303		installs property change listeners, selection listener, and property change listener to the underlying component.
This method creates and installs mouse listeners for the component.
This method creates and installs property change listeners for the component.
SUMMARY

46998388		handles the action performed when the edit selection of a field is changed or an input type occurs at a user's input or text field.

This method handles an action event on a field to edit the current value field.
SUM
46998390		handles actions performed by the JMenuItem used to create or delete a page, updating the pageable object, and performing actions based on the button clicked.

This method creates or deletes a page object from a JPrint preview pane
46998414		removes the ActionListener from the Print preview for the component that triggered the event.

This method is an ActionListener for the Print preview button and executes the "exportButtonActionPerformed" function when the button is clicked.


46998444		uninstalls the listeners on the specified PagePane, such as the selection model, mouse input listener, mouse motion listener, and property change listener.

This method uninstalls the listeners when the component is detached and the component is
46998597		returns the start node of an XML file for a given timestamp, considering the end date and the end date range.
SUMMARY
This method is used to get the end date, which is necessary for calculating the end node of
46998796		takes in a subexpression and the current operation and returns a SubOperatorPostorder.

This method takes in a SubOperatorPreorder and returns a SubOperatorPostorder created from an operand representation.

This
46998989		returns the result of either arg1, arg2, arg3, arg4, or return lists for arg3 depending on whether arg2 is a variable and an atom is a constant, atan, iacotan or has been
46999441		This method takes an expression form, variable name, and value of an argument form and divides it into two numbers and returns a division by {(exp: 1 2 exp: 2)}) where the first number is divided by them.
This
46999568		returns a string representing the derivative of the coefficient function evaluated from the given variable and value.

This method overrides a function in its parent class to derive the derivative of the coefficients entered by the user.

This method evaluates a
46999723		obtains the derivative of a given expression using a multiplication operator, a variable as the argument, and a constant and a plus sign. It then applies the multiplication to the expression and returns the result as a string.
SUMMARY

47000065		This method skips spaces from the beginning of a string.
This method pads within a string by spaces and leading or trailing spaces.
SUMMARY
This method is used to pad the string with spaces from the beginning by wrapping the
47000122		finds the first occurrence of a phrase in a string that matches a given regular expression and replaces any invalid characters with their corresponding symbols, returning the length of the resulting array.

This method resolves a given string by replacing occurrences of parentheses with
47119584		returns the total number of points earned by various tasks by iterating through a list of sprint filters for tasks and adding the total points of the story that is not sprinted as a substate of the estimate to the sum.
S
47122119		deletes a file with the given file name from the directory and returns true if the file was successfully deleted, and false otherwise.
SUMMARY
This method is used to delete a file with the given file name from the directory and
47122386		performs check passes on the given IndexFormatDefinition object and its contained CFSFileDefinition objects to the accept method of the IndexFormatDefinition class.

This method also performs check passes on the given IndexFormatDefinition object as the second argument
47135299		takes an array of strings and converts it into a single string, separating each element with a separator and returning one past the desired separator ("\n").

This method uses the boolean constant `tokCoded` to generate
47135349		requests a media from the specified ID and handles them accordingly, printing errors to the console if an exception is generated.
SUMMARY
This method is used to request a media from a client that increments a media slot by one.
47135366		closes the connection by shutting down both the socket and reader and setting both to null.
SUMMARY
This method is used to close the output stream, socket, and reader that executed the Java method.


47135679		converts a long integer representing a number in seconds to a string representation in different formats (hour, minute, second, and decimal places). ZSpace format is used to represent the date and time in minutes. GMT or on different time zones.
47135690		closes the current window after opening a fixed-buffered video.
This method parses the content of a G2DTileCode object and processes the model data by converting it to audio/audio and setting various flags and elements based on
47135704		stops the media playback, resets their media time, and updates the track title. It sets the value and state of other controls based on the current media playback status.

This method changes the current playback format by first stopping any previous
47181930		This method is a test method that prints "testExecQuery" and calls the `execQuery` method of the `ConnectionMySQL` class.
This method calls the `ExecuteQuery` method of the `ConnectionMySQL` class
4723160		sets the pixels of the image into the specified dimensions, with the specified width, height, model, and pixels as input. The method also calculates offset and scansize and sets the pixels of the image.

This method supports changing the color
4723163		checks if the string argument matches any of the patterns specified by the pattern and returns true if it does and false otherwise.

This method decodes the next "url" attribute from the user into a new URL object and returns it.

4723167		sets the color and size of the pixels in one image to the specified color model.

This method sets the pixel's current color to a specific pixel at the specified location.

This method draws the specified image at the specified location with
4723192		initializes image variables if they are not already initialized.

This method creates a buffered image.

This method creates a BufferedImage object.

This method creates a DICOM image.
SUMMARY

47266168		sets keyboard bindings for the specified API version and api. It also sets key bindings for the "forward" and "backward" and "turnRight" keys on them.

This method sets the hotkey for the given API version.
47293076		checks if there are any new messages in the server after a successful request. It checks if the user is the owner of the channel and, if so, waits for the corresponding message to be sent. If not, it also checks if a file
47294511		checks if a user is blocked and can be logged into if they are. If the user is logged in or doesn't have blocked editing permissions, the method adds new edits to the map if none are have available. If the user is blocked or
47294697		takes an input string and removes any HTML tags, cvd ISO code characters on their beginning.

This method decodes characters within a HTML document and updates the document accordingly, handling special characters, and replacing strings with their HTML entities.
47294710		This method processes sentence content by adding the remaining text to a string buffer and discarding any whitespace to the end. It then parses and cleansup the content by removing certain whitespace or commas and replacing certain text with appropriate HTML formatting
47294769		sets the content type and encoding for a URL connection. It also prints debug information to the console if enabled. It also sets cookies for the connection and default response type.
SUMMARY
This method is used to set cookies for the
47429473		creates a database using either the JDBC driver or the SimpleDBStorage class.

This method updates a database.

This method updates a database.

This method creates a database.

This method creates a new table
47429539		uploads a server to a PDF document.

This method checks if an entity with the specified path exists and then saves the changes.

This method uploads the document to the specified path and prints out the size of the uploaded data
47429540		sends a file to a specified path using an OutputStream. If the sending was successful, the method sends the file as a byte array. If there is an exception, the method prints and returns false.
SUMMARY
This
47429542		attempts to receive a file from an input stream in secure mode, returning true if successful and false if an exception occurs.

This method reads the InputStream from a specified path and loads it into the configuration value.

This
47467904		returns the runtime classpath entry for the jbot console launcher.

This method returns the J2EE runtime classpath entry for the jbot launcher.

This method iterates over the entries in the jbot launcher's property
47468058		adds a new option to a combo form with the given name, label, choices, and value using the specified page, setting the label option for the new option as the label for the original form.

This method tries to register and
47468059		validates that the option field is not null and that it is not empty in the list of required options. It then checks if any required option is already assigned the name of the option to be assigned and throws an exception if any are does.
47468076		returns the text value of a string option, selecting variables if necessary and enabling event handling.

This method handles the end of an attribute with the given name.

This method handles the end of a tag.

This method
47468453		retrieves the resource bundle associated with the specified model.
This method returns the bundle associated with the specified model, if it exists.
SUMMARY
This method is used to return the bundle of the bound bundle model associated with
47468812		returns the stored value for the given scope context. If the scope context is not visible, it either ignores top scope or stores the value in an array.
SUMMARY
This method is used to retrieve a locally stored value for
47468871		determines if a given application needs to be applied to all other projects.
This method checks if a project has any project-specific settings, including all the settings specified in the fManager parameter.
This method validates all project-
47468980		This method initializes the list of controls for an input field. It takes two parameters: a composite, an array of labels and two objects, and two integers representing the tab kind. It then creates a List of Key objects and iterates through
47469148		creates a ScrolledComposite widget with a single row, a column, and a wrap behavior to fit the widget.

This method creates a ScrolledComposite widget that moves the widget horizontally and vertically within the parent composite
47469158		adds all selection changed listeners to the selection manager by using the provided widget and listener list to set the selection listeners.

This method sets the dirty flag to true and adds viewer and content listeners to the selection manager.
SUMM
47469171		removes all selection changed listeners from the current viewer.

This method overrides the onSelectionChanged method and handles changes to the selection in a set of models, such as selection changes, in a text editor and tree viewer. It
47469266		returns the container of the scrolled composite that contains the specified object. It iterates over the scrolled composite and checks if the parent of the element is an instance of ExpandableComposite. If it is, it returns the corresponding
47469318		handles events for drag and drop and set data operations by checking the drag type and action ID. If the drag action is a copy, modify, or delete action, actions accordingly. If the drag action is a delete action, actions are detected
47469507		performs user selection of a background group or element and updates the background group and element of the model if present.
This method replaces a foreground check button with a new one when the check button is pressed.
This method removes a foreground check
47469548		persist the expansion state of all custom columns in the dialog settings to the dialog settings in the dialog settings object.

This method adds a custom row if there are no custom columns.

This method adds a view row with a custom
47469584		restores the expansion state of all dialog related components.
This method checks that the last two columns are a square, and then restores the expansion state of those components.
This method checks that the last two columns plus one is even square,
47469597		handles switching between bookmarks to either showing plugin objects or pages to plugin buttons based on the selection of checkboxes. It does this by calling appropriate methods for pluginGroupSelection and pluginListSelection.
SUMMARY
This
47469701		determines the next selection in a TOCObject hierarchy by recursively determining the next sibling of the parent and adjusting it to the next sibling. If the previous sibling is not null, it determines the next selection based on the value of
47469778		handles actions that occur when the add button is clicked, displaying a wizard dialog to update the state of the project and add the specified targets to the state.

This method handles the finish button press for adding targets to the project.

47469942		creates a container in the parent composite with a single column and no content and a vertical span, and a tooltip with an image and tooltip text.
This method suppresses unchecked warnings.
This method creates a tree with a specified number of
47469976		retrieves the customization information of the product, and if it's not available, it creates a new one from the product's product model.

This method initializes the IEditablePart object with the default set of properties and sets
47470258		fills the context menu to remove an edit action for a table cell by filling the menu with the appropriate actions for the object and its children.
SUMMARY
This method is used to fill the context menu with the appropriate actions for
47470980		returns the IPluginModelBase obtained from the IPluginModelBase of the formEditor. If the IPluginModelBase is not `null`, it returns the IPluginModelBase. If the IPluginModelBase is not `null`,
47471103		synchronizes the outline page. If the active page is an instance of PDESourcePage, the method synchronizes with the current source page or the form outline. If the active page is an instance of IDEDestPage, links the
47471205		removes a given TocObject from the tree, adjusts the underlying model, updates the content provider, and updates listeners.

This method refreshes the TreeViewer based on changes to the affected objects.

This method handles changes
47472267		determines the location of a dropped item relative to a specified label. The method then checks if the drop event allows dragging, checking if the target is in a draggable area within the bounds of the container. If the drop event is
47472492		sets the value of the path entry point based on the top-relative path of a given file, which is determined by the order of the input conditions set to the largest common ancestor.

This method loads the file for the JavaDoc using
47472934		returns an instance of IInformationControlCreator that overrides the createInformationControl method to create a control for the outline presenter, with information for the partition id and a help message.
SUMMARY
This method is used to
47472946		adapts the user preference changes to the selected node, checking if it has any preferences recently and adjusting the cursor accordingly.

This method applies the new values for the attributes of the node, either using pre-caches or by enabling auto
47473157		This private method removes an object from the model. It checks if the removed object is an instance of the CtxHelpObject and update its action accordingly. It also updates the remove action with the selection.
This method updates the remove object action
47473540		sets a string matcher for a given pattern based on the search index and an optional boolean flag, throwing an exception if the index is out of range on setting the matcher.

This method overrides the setMatcherString method and
47474376		checks if the drag operation started and removes the selection listener from display if it exists. If the event is generated and the target is a valid file or file system, it sets the drag operation event to move to a target system. If the event
47474480		generates files using a template location and a shared branding location, or for the splash screen location if available.

This method calls the generateFiles method with specified progress monitor.

This method invokes the callback to handle the generated files
47475768		creates composite elements for the first page of an import wizard using labels. It creates group names and radio buttons for each group. It also creates checkboxes for the enablement and import precedence settings. Finally, it calls the superclass method to
47476309		initializes the object with a context help model by creating a context from the model and setting its ID to "widget", and adds its topic to the model.

This method initializes the object with a context help model and parses the
47476403		executes the conversion process by attempting to run it multiple times within a specified timeout. It logs progress, checks if a project is being replaced, and invokes the run method of the project resolver.

This method overrides the super
47478165		finds the path to the source libraries in a plugin base path. It iterates through the libraries, searching for those that match the source algorithm-specific algorithm, and applies them to any associated locations. These locations include extensions, classes, and
47478307		searches for a specified path in a given relative path by iterating through the list of user locations and their full path and checking if the path is valid. If the path is valid and is found, it returns the absolute path of the
47478323		searches for a specified file location within the source format of a given resource. If the file exists, it recursively searches for the file's file name as extension locations in the hierarchy and returns the path of the file. If no
47478359		parses the text containing source locations, removes file separators, and replaces them with the source locations if there are any.
This method parses the text from the specified coordinates, replacing any line separators in the text, and it
47478381		parses the location of a file to a SourceLocation object. If the file is a directory, it recursively searches for it within the source directory.

This method parses a SourceLocation object into a SourceLocation object.
47478478		checks if a given folder is interesting by determining if it is subscribed to a workspace by verifying its name and parent.

This method checks if the given folder is within the workspace.

This method checks if the given folder is subscribed to
47478590		searches for a feature import by a given feature ID by a valid version and a match. If the import is not found, it returns null.

This method returns an object of type IFeatureImport. It takes a list of
47478599		resets changes to the model provider, firing a state change event for name changes (name or null).
SUMMARY
This method is used to reset the state of a model provider to its previous state.


47478600		searches for a feature model given an ID and version. It initializes the search and executes the query, and then finds the first valid feature model to work with.

This method takes two parameters, the language by finding the feature
47479268		returns a collection of all the sources found in the PluginPackage object.
SUMMARY
This method is used to obtain a collection of source locations for plugin bundles.


47479282		returns a set of all source roots for a specific plugin or plugin version by iterating through the classpath and copying the source roots of all class path entries.
SUMMARY
This method is used to retrieve all source roots for
47479685		takes a URL and calculates the version number by parsing the plugin information within it.
This method takes a plugin location and parses the plugin info for an author.
This method takes a plugin manifest ID, the name of the plugin,
47480323		sets a description for a node in the model, which can be either a null or a data type, an empty string, and a null value.

This method sets a string description to the list of descriptions.

This method fills
4750108		flushes out the base 64 encoded data to the output stream. It does this by processing each line of the data as it will still be ready and to ensure space for efficient data structure. If the buffer has already been filled, it is last
47570673		sorts the chat window by adding all items to the inventory of chat clients. It then scrolls the window by getting the scroll position, scrolling to it, and then updating the inventory based on the input value.

This method sets the scroll
47570689		shows the login content panel.

This method sets the visibility of the login text field to the specified value and hides the reset login dialog.
SUMMARY
This method is used to show the login content panel.


47570692		sets the visibility of the logo to false, sets the text of the login button, and creates the components for the registration login and password fields. It then sets the location of the panels relative to the main panel and makes the title visible.

47570750		closes a session and closes all players, potentially setting game status to disconnected, the server list to null or "disconnected".

This method invalidates the current player, calls close, and then makes the game client invisible, sets the
47571124		runs a Runnable object that sends a message to the client sender over a semaphore.
This method iterates through a list of commands stored in a map and runs the command until the end of the list is reached.
This
47571219		returns the highest number of people who meet a specific criterion for the time opponent.

This method is a test method that calculates the maximum weight at all people on each phase of a team by ensuring that all people have the maximum weight,
47571245		generates a randomly generated species from a map of potential species scores.

This method generates a list of the species returned by the getSurfSpecies method.
SUMMARY
This method is used to generate a list of
47571554		retrieves the NonPlayerChar at the specified coordinates (x, y) if it exists in the quest. If not, it returns null.
SUMMARY
This method is used to identify a NonPlayerChar at the specified
47571597		checks if a given location is within the appropriate wish map region and the specified coordinates are walled. If so, it creates a new location using a cell, sets its free X and Y coordinates, and returns a locative tile. If that
47571713		saves the class information to the specified file. It catches any thrown FileNotFoundException by printing the stack trace.

This method stores the field comments, public code, system code, and field modifiers into the classinfo file. It
47571922		retrieves a StatusEffect from a list of status effects based on a lock.
This method returns the lock status of the specified object.
This method returns the lock status of the specified object, either normal or exact.
SUM
47572226		removes a status effect from the session based on the provided effect, or removes it directly if it doesn't exist.
SUMMARY
This method is used to remove a status effect from the session.


47572403		switches the parties in the party array based on the value of the `selectedOption` parameter.
If the focused party has more than 0 party members, it removes the first party member and switches the current party.
Otherwise, it adds
47572552		switches the current Pokemon in a party if the first two passes the steps of the game.

This method takes a winner's name and a number as the names and either waits for first 5 or waits for the second to ensure that the
47572602		initializes the client bag, sending initialization packets for each bag in the bag container.

This method initialises a socket connection to the client and sends a purchase request, or a purchase update request based on the message type and availability. If
47592592		updates the visuals when each object's property changes and refreshes the superclass.
SUMMARY
This method is used to update the visuals when the changes are made on the children of an EditPart.


47619221		This method initializes the data providers and sets the counters for the following call to the superclass's _init_ and _init_ variables, making sure that each DataProvider have the corresponding DataUtils classes.
SUMMARY

47628769		sets the class of the view. If the object implements the InternalAction interface, it uses the superclass to set the view selection model. If the object is not an instance of InternalAction, it calls the superclass to set the view selection
47628860		sets the searchable property, resets the last index to -1, and fires a property change event with the old and new values.

This method creates an array of objects to store searches and sorts the results by date.


47629678		sets the callback method for the specified callback. It splits the callback method name at the decimal digits and validates the callback function name. It checks if the callbacks list is not empty and if the handler class is the appropriate class before calling the
47629915		retrieves the password associated with a `user`, either from the password store and a `server` or from the singleton password if there is no associated `user`. If no text is found, the password is retrieved using the `get
47631587		updates the selection and row mappings while calling the superclass method of the given TableModelEvent.

This method updates the selection and row mapping during a table selection change event, updates the row selection with the given row mapping, and
47634329		retrieves a cell renderer for a given column class on a table by first checking if the default renderer for the class has already been set by the renderer manager. If not, it attempts to create an instance of the specified class
47639277		adds a request to a given request and associates it with a View, allowing the addition of a connection edit part.

This method checks if a request is connected, and if so adds a request to a given request and associates it with
47641936		creates a group containing tools for creating an entity in a diagram.
- This method first creates an ActivityFinalNode6Group object.
- Finally, it adds the created tools to the group.
SUMMARY
This method
47651682		This is a recursive method that adds a new property descriptor for the role property of the role work product association. It first checks if the item property descriptors are null and then adds them to the list of property descriptors for the superclass.
47651686		adds a property descriptor for the work product feature of a RoleWorkProductAssociation object, indicating whether the associated RoleWorkProduct object represents the work product.


This method overrides the beforeCreate method and returns a list of property descript
47651708		adds a property descriptor for the task feature to the list of item property descriptors.

This method returns a list of item property descriptors.
SUMMARY
This method is used to add a property descriptor for the task
47658883		initializes a Dialog's container by creating a composite with a label and a label control, and setting its layout.

This method initializes a Dialog's container by creating a composite with a label and a label control, and setting
47658891		creates the graphical user interface for user interface (GUI) components. It sets the layout, size, and adds various labels and text fields, including labels for user key, username, password, and database list. For each label, it creates
47660940		creates a palette drawer for the 2 options elements within the workflows diagram. The drawer must have a title, a description of "View", and a group containing three predefined tools. This method determines which element to draw by creating a group
47661022		adds a property descriptor for the "transformationAssociations" of a code.

This method adds a property descriptor for the language of a code.
SUMMARY
This method is used to add a property descriptor for
47661038		adds a property descriptor for the code associations feature of the TransformationRule class. It calls the superclass's getPropertyDescriptors method to get the property descriptors. If the itemPropertyDescriptors field is null, it calls the
47661044		adds a profile-association property descriptor to the itemPropertyDescriptors list.
SUMMARY
This method is used to add a profile-association property descriptor to the itemPropertyDescriptors list.


47661051		adds a property descriptor for the UML model associations feature.

This method adds a property descriptor for the transformation rules feature.
SUMMARY
This method is used to add a property descriptor for the UML model associations feature
47661053		returns a list of property descriptors for the given object, including descriptors for task, target, description, and source.

This method calls the superclass method to get the property descriptors for the given object.

This
47661056		adds a property descriptor that allows the user to specify which transformation type to use for the object. This information is retrieved from the adapter configuration model based on the object's transformation type.

This method overrides the default behavior of the get
47661087		adds a property descriptor for the workproduct feature of the AssociationRoleWorkproduct class to the list of property descriptors for the specified object.

This method is used to add a property descriptor for the workproduct feature of the AssociationRole
47661092		adds a property descriptor for the type of the current item to the item property descriptor.

This method obtains the property descriptor list for the given object and adds property descriptors for the description, concept, and association roles of the current
47661098		adds a profile property descriptor to the list of property descriptors.
This method gets the property descriptors for the given object.
This method adds a profile property descriptor to the list of property descriptors.
SUMMARY

47661103		adds a transformation property descriptor to the itemPropertyDescriptors list for an object.
This method adds a transformation property descriptor to the itemPropertyDescriptors list for an object.
SUMMARY
This method is used to
47661124		adds a property descriptor for the task association feature of the Role object.


47661129		is used to add a property descriptor for the workproductAssociations feature of a Role object.


47661133		adds a property descriptor for the class type of an object.

This method overrides the base class's implementation of determining the list of property descriptors for an object. If the base class does not define the descriptors for the class
47661159		adds a property descriptor for the role associations feature of a Task object to the itemPropertyDescriptors list.

This method overrides the superclass's implementation of getPropertyDescriptors to add additional property descriptors for a Task
47661165		returns a list of property descriptors for an object. See the superclass method to get additional descriptors for additional specific properties.

This method adds a property descriptor for the roles feature to the item property descriptor list.

This
47661169		adds a property descriptor for the available workproducts feature to the itemPropertyDescriptors list.

This method adds a property descriptor for the workproducts feature to the itemPropertyDescriptors list.
SUMMARY
This
47661170		adds a property descriptor for the field taskUses to a list of property descriptors for the given object.

This method overrides the default behavior of the getPropertyDescriptors method. If the method cannot be overridden,
47661178		adds an itemPropertyDescriptor to the itemPropertyDescriptors list.

This method is used to create a list of IItemPropertyDescriptor objects, which provides additional property descriptors for the specified object, including add
47661199		adds a property descriptor for the code feature of the Association Transformation Code.

This method returns a list of property descriptors for the given object.

This method adds a property descriptor for the method's name to the given object
47661209		adds a property descriptor for the "discipline_nodes" feature of the DisciplinePackage class.

This method checks if the itemPropertyDescriptors field is null, if so it calls the superclass's getPropertyDesc
47661233		adds a property descriptor for the specified object.

This method overrides the super class's method and adds additional property descriptors based on the class of the specified object.

This method adds an additional UmlModel property descriptor to
47661261		returns a list of property descriptors for the given object.

This method overrides the default behavior of the getPropertyDescriptors() method, adding additional property descriptors for tasks and context.
SUMMARY
This
47661275		adds a client property descriptor to the list of property descriptors for a specific object.

This method adds an action property descriptor to the list of property descriptors for a specific object.

This method adds an on rule property descriptor
47661290		This method checks if the itemPropertyDescriptors is null, and if so, calls the superclass's getPropertyDescriptors method from the superclass. It then adds the iteration property descriptor to the list of property descriptors.

47661297		adds a property descriptor for a decision element to a list of property descriptors for an object.

This method is used to add a property descriptor for a decision element to an object. If the property descriptor has not been set, it
47661327		adds a guard property descriptor to the list of property descriptors for an Android association's behavior.

This method adds an expression property descriptor to the list of property descriptors for an Android association's behavior.
SUMMARY

47661343		This method gets and returns a list of property descriptors for the object.
This method gets and returns a list of property descriptors for the object.
This method gets and returns a list of property descriptors for the object.
This
47661348		This method adds custom property descriptors to the list of property descriptors for the given object. If the `itemPropertyDescriptors` field is null, it calls the superclass's `getPropertyDescriptors` method and then adds
47661349		This method adds a property descriptor for the association decision of the initial state of an initial state.

This method adds a property descriptor for the association decision of the current state.

This method adds a property descriptor for the composition of the
47661350		adds a property descriptor for the associations task use descriptions of the object.

This method overrides the `getPropertyDescriptors` method and returns a list of property descriptors for the object.

This method adds
47661354		adds a property descriptor for the associationsDecisionToDecisionSource feature of the DecisionElement type.

This method adds a property descriptor for the actions_DecisionElement class.

This method adds a property descriptor for the environment
47661379		adds a property descriptor for the associations task to the given object.

This method adds a property descriptor for the associated tasks to the given object.
SUMMARY
This method is used to add a property descriptor for the associations
47661382		adds a property descriptor for the association task to the task target property of the given object.
SUMMARY
This method is used to add a property descriptor for the association task to the task target property of the given object.


47661390		adds a property descriptor for the assigns task use decision feature to the itemPropertyDescriptors list.

This method overrides the default behavior of the parent class. It adds an item property descriptor for the assigns task use decision feature.
47661396		adds a property descriptor for the decision feature of an AssociationInitialStateToDecision object. If the property descriptor is already present, it is added instead of calling the superclass's method to add the property descriptor.

This method overr
47661398		adds a property descriptor for the state of an association decision element to a list of property descriptors.

This method calls the superclass method to get the property descriptors and then returns the list of property descriptors.
SUM
47661400		adds the initial state property descriptor to the list of properties of an object.
This method adds the final state property descriptor to the list of properties of an object.
This method adds the done property descriptor to the list of properties of an
47661428		adds a property descriptor for the task use feature of the AssociationTaskUseToFinalState class.

This method adds a property descriptor for the task use name feature of the AssociationTaskUseToFinalState class.

This method adds
47661430		adds a source property descriptor to the item property descriptors if it does not already exist.
This method adds target and source property descriptors to the item property descriptors if it does not already exist.
SUMMARY
This
47661455		adds a property descriptor for the task use of an AssociationInitialStateToTaskUse object.

This method overrides the default implementation to determine which property descriptors to return, if none, it calls the superclass's implementation.

47661456		adds a property descriptor for the aggregation phase iteration feature to the list of property descriptors for the specified object.
SUMMARY
This method is used to add a property descriptor for the aggregation phase iteration feature to the list of property
47661510		defines a list of property descriptors for a given object. It checks if the list of property descriptors has already been done, and if not, it calls the superclass method to get the default descriptors and then adds one for the
47661513		returns a list of property descriptors for the specified object. If the descriptors have not been initialized, the method calls the superclass method to get the descriptors, then adds additional descriptors for the uses property, and finally returns the
47661519		This method overrides the default behavior of the getPropertyDescriptors method and adds a "generates" property descriptor to the list of property descriptors for the given object, returning the result.
This method overrides the default behavior of
47662431		creates a label's property descriptors for a given object.
This method adds a phase property descriptor to the list of property descriptors.
This method adds a task property descriptor to the list of property descriptors.
This method adds
47662461		adds a property descriptor for the process feature of the ProcessPhaseAgregation class. It first checks if the itemPropertyDescriptors list is null and, if so, calls the superclass's getPropertyDescriptors method. Then,
47662474		adds a property descriptor for the method content feature to the list of property descriptors for the given object.

This method adds a property descriptor for the method content feature to the list of property descriptors for the given object.


47662536		adds a property descriptor for the transformation rule of the Task Transformation Rule Association object. If the property descriptor has not been initialized, it sets the property descriptor to be the default property descriptor.

This method overrides the default behavior of
47662607		adds a property descriptor for the "model" feature of the TaskModel class in the TaskDiagram.
This method adds a property descriptor for the name property of the TaskDiagram class.
This method adds a property descriptor for the
47662609		adds a property descriptor for the referTo feature of the TransformationCallsTransformationRuleAssociation class.

This method populates the itemPropertyDescriptors field with the property descriptors of the given IItemPropertyDescriptor
47662614		This method, getPropertyDescriptors, overrides the parent method to add a property descriptor for the referenced feature of the TransformationCallsTransformationRuleAssociation. Ensure that it does not already add a new property descriptor.

This
47662640		adds a property descriptor for the package variable.
This method adds a property descriptor for the full class name.
This method adds a property descriptor for the dependency.
This method adds a property descriptor for the association.
This method adds
47662702		adds a property descriptor for the file path of an object, which is used to describe the object's properties as Java objects.

This method adds a property descriptor for the name of an object, which is used to describe the object's
47662770		adds a property descriptor for the "step" feature of a task step Aggregation type to the list of property descriptors. If the list is already present, it simply returns the existing list.
SUMMARY
This method is
47665164		adds a property descriptor for the dependencies attribute of a decision element to the itemPropertyDescriptors list.

This method overrides the superclass's `getPropertyDescriptors` method to add additional property descriptors to the item
47665173		adds an "final" property descriptor to the object. If the property descriptor has not been added, it delegates the creation to the superclass. The method then returns the property descriptor list.
SUMMARY
This method is used
47669841		creates a palette drawer containing a group. It is used to represent the tools used in the graphical user interface. The group starts with a title. It then adds an association to the group using the createAssociation5Group() method, adds
47671543		creates a palette drawer that allows users to specify and creation of various features (diagram elements, patterns, and parameters) within the diagram.

This method creates a palette drawer that allows users to specify and creation of various features within the
47671836		adds a property descriptor for the opposite target feature of the feature type to the list of property descriptors.

This method overrides the default implementation to add a property descriptor for the given object to the list of property descriptors.

47671846		retrieves and adds a property descriptor for the opposite source of the feature.

This method overrides the superclass method to get a list of implemented interfaces that can be called within a feature's type.

This method adds a
47672461		creates a new SWT Composite named "fileListComposite" with a Bordered GridLayout of both horizontally and vertically. It sets the layout setting to GridLayout GridLayout 1D.Horizontal and GridLayout 2.Horizontal
47693092		This method processes a file and extracts information such as a version, URL, title, author, number of files, and non-blank header lines from it. It parses the header lines for the name of the file and extracts the file name
47693120		executes a specified number of times by executing until a specified value, preventing infinite recursion. If the execution region is valid, the method checks the execution values. If the execution is undefined, the method throws an IllegalArgumentException.

47693137		concatenates the full scan vector pattern for the action vector.
SUMMARY
This method is used to concatenate the full scan vector pattern for the action vector.


47693174		retrieves the real parameters at the specified index from the history list and merges them into a single SVFParameters object.

This method merges a list of SVFCommands into either a single SVFParameters or
47693278		initializes and calculates effective parameters for a command from an SVF object by finding a command list and iterating through its commands to calculate effective parameters.

This method initializes an SVF object and sets its parameters based on an SVF
47693509		reads lines and statements from a connection and returns them as a string.

This method returns the next statement from a given token stream.

This method reads a node and returns it as a string.

This method reads a statement
47694077		adjusts the buffer size by applying the provided buffer size, copying old values, and performing index overflow checks.

This method applies the buffer size to the buffer, ensuring that the buffer size does not exceed the original buffer size.


47694334		opens a file and throws an exception if the file is null or an unsupported method is encountered. It sets the file and calls `openFile` with the file object. If the file opened the method throws an exception, it calls `closeFile
47695205		retrieves the preferred span for the specified axis for the component.
This method returns the preferred width of the component.
This method returns the preferred height of the component.
This method returns the preferred horizontal spacing of the component.

47942073		sends a string of data to the crawler. If the string is not null or empty, it parses the string and throws exceptions if the string has exceeded the maximum length or the crawler exceeds the maximum size.

This method
48003623		handles messages received from the server and calls the corresponding method based on the type of the received message. It prints the type of the received message and handles the corresponding event accordingly.

This method handles the use of null values for different event
48003648		opens a Payment Method (PAYM) (Payment Method) dialog, allowing the user to enter the receipt number.

This method retrieves a user account associated with a recipient or their pay payment method, and if applicable, displays
48003659		takes an object as input and performs a series of actions to hide a book if the key is released.
If the key is not available, it creates a new message with the key to hide, excluding reserved data and status.
It
48003661		This method gets a change catalog by creating a new one, setting the changed catalog, adding pages to the catalog, and adding articles.
This method gets a change catalog by creating a new one, setting the changed catalog, adding pages to the
48003670		takes a changedCatalog as input and books three emails with a subject. It prompts the user to enter a number if a NumberFormat is provided or empty if no input is provided.

This method tests the bookLinkToSubject method by
48003700		toggles whether or not to hide the book by querying the persistent storage and saving the changes before returning the result of the shift operation.
SUMMARY
This method is used to request a hiding from a book after a user has
48003706		checks if a user can submit a review and if so, sets the state of a review to 1.
SUMMARY
This method is used to check if a user can submit a review and if so, sets the state of a
48003761		handles book details about a message by checking if it's not in the allowed book and validating the message type.

- This method sends the book details of each item in the message and calls the message handler to display it.

48003769		deletes a book from the database with the specified ID. It reads the response from the client and processes it as Parameter checks. Specifically, it compares the value of the 'isbn' parameter with the input value and returns a new Book
48003779		retrieves a genre object from the cache, adds it to the database if it is not already there, and returns a success message or a failure message depending on the success of the operation.

This method checks if the retrieval of a
48003800		adds a subject to the mailer and handles any exceptions that may occur during the process.

This method adds a subject to the mailer and returns a success or failure message.

This method adds a subject to the mailer
48003805		deletes a subject handler by checking if the deleteSubject instance is of type Subject. If it is, it calls the deleteSubjectHandler method to delete the subject. Otherwise, it prints an error message and returns a successful or failure message.

48003820		processes a given value, requesting a new request to review a list, listing all of the reviews, and handling incoming GET requests.

This method, then changes the values of a request map based on a received query.
It iter
48003842		returns a JPanel named `jPanelGenres` with a list of labels, buttons, and a size of 130x150.
This method returns a JPanel named `jPanelAlbums` with various other components added to
48003843		This method initializes the JPanel jContentPane if it is null, using label for the HTML label, icon, and text for the label.

This method adds the JButtonAddNewSubject to the JPanel.


48003844		returns a JPanel object with a JLabel, JTextField, and JButton added to it. If the JPanel does not exist, it is created with a null layout, text field bounds, and a JButton added to it
48003852		saves a book object to the database, checks if there are any book values returned, and returns an appropriate message based on the outcome.
SUMMARY
This method is used to save a book object to the database as a response
48003900		This method creates a JTextArea with a specified column size and sets the text and border for the JTextArea. This method also initializes a new JCheckBox and JButton, sets the model to a CheckBoxModeModel object and
48004166		responds to an action event by executing different actions based on the source of the event, including adding a new node to the catalog, downloading the main journal, adding a subject to the catalog, navigating to the AddGenre and AddSubject tab
48004597		removes the first view from the application if the application is the last view.
This method then sets the application as the last instance of the application's view and displays its details in the console.
SUMMARY
This method is
48023206		sorts a real type population using the specified sorting algorithm.

This method checks if minimums on the current fitness of the population matches the overall fitness of the given population.
It uses the fitness sort algorithm to prepare the population for further
48023207		sorts the individuals in the population based on the specified boolean value `sign` within a `IntegerTypePopulation` object.

This method sorts a pop-up panel based on the selected fitness value in the population.

This method
48023365		takes an IntegerTypePopulation, a Simulation, and an array of Objects as input. It synchronizes the population with the population, sets the fitness to the calculated fitness in the first population, and returns false.
SUMMARY

48104679		returns a print representation of the data tree given the taxa.
This method implements the 'printData' method for the 'Taxa' class, which then returns a PrintWriter representation of the tree.
SUMMARY

48104729		creates a shallow copy of the current Format object by cloning it.
This method demonstrates the normalization of characters that are also base64 characters.
This method responds to an XML document being parsed with the DTD requirements, validating the
48104759		checks if two taxa objects are equal by comparing their associated IDs.

This method compares two objects for equality based on their name/key pairs.

This method compares two objects for equality based on their taxa IDs.


48104762		checks if the given map is an instance of OrderedMap, is one-to-one relationship and is not virtual and is a collection.
This method takes a Map of keys and values, and a Map of node labels, and converts
48104770		clones an Traits object, creating a new one if the object does not exist.
This method returns a new NonEmptyTraitType object.
This method clones an array of Trait objects.
This method adds a NonEmpty
48104780		This method merges two individuals' neighbors with the same local and reverse direction if both individuals are the same. If both individuals are the same, the method ignores the cloning of their neighbour.
SUMMARY
This method is used to
48104848		adds a tax set to a specified set of taxa or categories, creating a copy if the specified category is not valid according to the given conditions.
SUMMARY
This method is used to add a specified taxa on a
48104858		resets the symbols in the datatype column to the values in the dataset.

This method reverts the color based on the current mode for the legend.
It also computes row colors based on data from the dataset and sets
48104872		creates a copy of the object with the same name and identity
48104879		returns a new array with the transpose of the original array by transposing each element in the original array using the transpose method at each step.

This method translates the calling Array2d to the transpose of the calling array
48104891		generates random numbers within a specified range for each column in a matrix. It first calculates the maximum value for the column and then calculates the standard deviation for the maximum value. It then generates random numbers within the specified range, adding them together to
48104901		scales all elements in an array, either in ascending or descending order, to a specified minimum and maximum amount. It allows for the length of the scale to be multiplied by a constant value.

This method multiplies each element in an
48104946		creates a cloned copy of an instance of the Assume options object, including some of its fields.

This method clones an instance of the Assume class, including its name, description, and option.
SUMMARY
48104979		converts a partition object into a string representation.
SUMMARY
This method is used to convert a partition object into a string representation.


48104980		executes the ESM algorithm on the given trace list. It then calculates the total SS, trace, and adjusted Lagged sums using the weighted sum between the traces. It returns the calculated value as a double.

This method calculates the
48106569		retrieves a character from a sequence at a site based on a sequence and an optional substitution flag.

This method verifies that the result code can be interpreted as a function type.
This method generates code from a stream of arguments
48107203		adds a label to the end of the calendar to ensure that it has enough capacity to display a field.

This method sets the date value with the given string and initial date string, with the specified length.

This method formats
48107339		restores the formatting states of the given result by iterating over the string, combining characters with their replacement through the internal escape format.
SUMMARY
This method is used to restore the formatting states of the given result by iterating
48107561		clones an object of the class 'BaseElementValue' by first cloning it and then cloning its attributes.

This method tests the cloning functionality of the StringAttr with a sub tag.

This method tests the cloning functionality of
4812919		returns a Document object that represents the content of a temporary file given a File object.

This method returns a string containing the text in the "jTextArea1" . .

This method builds a LinkedList of HTML
4813004		This method determines if a given coordinate is either the left or right direction in a line segment. It takes a new coordinate as input and returns a boolean based on whether the coordinate is currently being dragged. If the coordinate is not being dragged, it
4813350		removes a placeable item from a team in a game.
This method deselects all figures within a given space.
This method checks if there are no figures under the given ID.
This method removes an item from the given
48209630		sets the discount percentage for a course based on the number of successful discounts. If the discount percentage is greater than 0, it throws an exception. If the discount percentage is less than or equal to 0, it calls the method sets the
48209632		This method validates the display of the food popularity for validating data objects by updating the values of specified menu items to include the user who created it.

This method validates the display of the food popularity for non-existent items in
48209636		tests the display with or withoutWARN display pretty popularity.
SUMMARY
This method is used to test the display with or withoutWARN display pretty popularity based on the availability ofwic buildings, buildings, and countries.


48209794		adds an internal frame to the desktop pane. If the internal frame is in the desktop pane, it checks if a given range is contained within the internal frame. If the range is not contained within the internal frames, it adds the internal frame
48209810		sets the text of a button to the string representation of the title and the amount of stock. It also handles button text, including checking for open courses, adding a button, and ensuring a value at a specific row.
SUMMARY
48240798		sorts a list using a property and a comparator and throws an exception if the property is less than 0.

This method, sort, optimizes the list in an array before sorting it.

This method, sort, optim
48240816		returns the DataItem corresponding to the given filter name.

This method checks if a value is a value of a specified type.

This method checks if the given value is a collection.

This method checks if the given
48242134		gets the column override of a specified column by iterating over an array of column override names and matching the specified column name with the column name of the current column.

This method iterates over the columns of an editable column override map
48242159		returns a SQL Map document constructed from an IntrospectedTable if it exists, otherwise it creates a new document and calls the Gen.java method to create a string representation of the table.
This method returns the value of the Prepared
48242252		returns the mapping package for a given class and container. It first checks if the container has any sub-packages, and if so, it appends the fully qualified table's sub-Package. If there are no sub-packages, it
48242406		calculates the root type of all fields declared in aullyqualified Java type based on whether to generate record and base record types.
This method returns the fully qualified Java type for all fields declared in aullyqualified Java type.
This
48261786		adds a node to the list of nodes if the ID value is greater than 0 and only the first child node is true. If the ID value is not less than 0 and the node already exists in the list, the method throws an exception
48261903		fills various objects in a linked list by traversing them into a specified depth, starting at a specified index, within a specified limit, and returns that number of objects within the list.

This method fills objects in a linked list by
48261928		prepares a connection by reading the first address from the buffer and then reads the address by creating a Storage object, adding data to the Storage object, and updating the Storage object. 
This method prompts the user with a dialog box to save
48261955		searches for a node with a specific meta value in a linked list and if found, returns the corresponding child node. If the meta value is not found, it returns null.

This method retrieves all objects in a linked list
48261967		returns the parent of the specified type. 
This method accepts a source object, a data object, limit, and a limit. It calls the query method to create a list of objects that satisfy the filter. 
This method takes
48383869		checks if the request is the active request, and if not, it removes it from the in_requestList and sends the request in the queue.

This method is used to handle events that occur when events occur on the current component.
48384030		removes file items and their children from the file grid if they have not already been processed.

This method executes the remove button on click event.
SUMMARY
This method is used to remove file items or their children from
48384461		adds a new event to the end of the queue, shifting the queue to the next event if necessary.
This method adds a new event to the internal queue, shifting the queue to the next event if necessary.
This method adds a
48384547		gets the position of the task in the pane, ensuring that it is within the bounds of the task in the pane, by using the TaskPane.getTaskProgress, TaskPane.getTaskRemainder, or TaskPane
48384721		computes the tasks height, sets the task bar height to the integer value minus 3 for each taskbar, and updates the tasks height if it becomes equal to the minimum.

This method checks if the minimum tasks height is less than the
48401698		sets the resolve method for the class, attempting to find the methods named "resolve" on the class and catching any exceptions that occur.

This method sets the resolve method for the class, attempting to find the methods named "resolve
48401704		returns the minimum number of termination depths required to zero, which is the total duration of the termination and the maximum number of termination depth allowed since the time it will terminate.
SUMMARY
This method is used to return the minimum
48401731		sets the display internal form of a symbol with the provided set of symbols and their visibility.
SUMMARY
This method is used to set a boolean value '_conatinsNonTerminal' to false, indicating whether the symbol
48445690		reads a string line and splits it into tokens, then handles the situation when the string is not empty by verifying the data type.

This method reads an attribute line and checks if it contains a quote character. If it does, it prints
48445724		extracts a row from a matrix based on parameters including column values, row types, and location. It first checks if the row is valid, then formats the row list. If the row is allowed, it calculates and checks the row validity
48659065		takes in various parameters and an integer as arguments and it delegates recording a mail with error level and prints messages received from the client.

This method requests a mail from a player named user named player.
SUMMARY
This
48659074		activates an account by sending an email with the provided info, the account's email token, user profile URL, and logout URL to the server.
SUMMARY
This method is used to activate an account.


48659115		adds an application counter to a specified application and with a given name.
This method removes an application counter from the current application.
This method saves a count of applications in a database.
This method removes a counter from a specified application
48659117		resets the password for a given account, checks an old password against the new password, and notifies waitingFor password status changes.

This method resets the password for a given account for a given user.

This method res
48707757		is used to disconnect a database connection and potentially disconnect its sub-table.

This method attempts to reconnect to the database if it is not connected.

This method closes the Statement and Connection resources.

This method checks if a
48714335		handles an HTTP request and response. It validates the request, retrieves the user session, filters owners, and manages owners to access. The method also stores the user's details and forward to a view.

This method handles an
48714641		takes a Component component and a definition string, reads properties from the component into a sets base, and returns the set definition.

This method overrides the method in a parent class and reads properties from a JSON component.

This
48714912		reloads a module by calling the reloadModule method with the specified parameter. It first attempts to reload the module using the ModuleOperationInput class, displaying an error message if the reload is unsuccessful and catching and rethrowing the exception. If the
48714932		retrieves the root element of an XML document associated with the resource, taking into account the module's ID and element.
This method returns the root element of an XML document.
This method returns the root element of an XML document from
48714942		retrieves the name of the current module element from the provided definition element using the module ID generator's ID generator.

This method removes any named attributes within the module attributes element that are no longer referenced within the module element and also replaces
48714949		repairs modules, retrieves the operation state holder, retrieves the root module definition, and creates a new module definition. It then calls themediate repair method of the repository, passing null as the output signal.

This method updates the
48714969		returns true if the current module is available, false otherwise.
SUMMARY
This method is used to determine if the current module is available for writing.


48714978		removes a module from the system. If the operation is not successful, an error message is displayed. Otherwise, the operation is executed, and returns true.
SUMMARY
This method is used to remove a module if successful and
48714995		verifies that the selected row in the table is valid by calling the addModule function and then calling the addNewModule function.
SUMMARY
This method is used to add a new module to the system.


48715261		returns the ApplicationContext containing the specified bean name, or null if not found.
This method returns an entry point for the bean after attempting to find the context associated with it.
This method returns an entry point for the bean after attempting
48715493		populates the dependencies of a vertex in a module by filtering its start module, next module, and a period in its module definition.

This method tests the functionality of the populateVertexDependencies method by creating a vertex with dependencies
48715848		This method returns the URL for the specified resource by searching for it in the local locations and searching for the specified resource name. If no such resource exists, it accepts the use of JAR files, loads the webapp resources from the locations,
48715871		finds and returns a resource at a specified path within a class loader. The method first tries to locate the resource in the classpath, and if it cannot find it, it falls back to a default resource otherwise. However, if the file
48715872		attempts to find a resource in the local JAR file by checking the "classpath" parameter, and if it's a Java application specific library class loader and a custom library class based on the specified name. If no matching loader is
48716060		tests the ability to read, write, and close LockableContext objects, ensuring that an exception is thrown when needed for testRead() and tries to hang while in read-protected state.

This method calls the `readLock` method
48717462		retrieves the value of a property with the specified name.
This method checks if the property is supported by the JSF system, specifically it supports setting the user object's value.
SUMMARY
This method is used to
48861766		This method serializes a Response object into an HTTP Response object, including only the headers generated by the client. It includes header information such as the HTTP status code, error stream, content type, client and protocol version, and version information such as
48959145		determines whether a guest is Empty or Out ofbag for a cell based on its located, neighboring neighbor, and other information. It sets the cell's location to the guest's location, removes the cell from the board, and continues testing
48959172		retrieves a cell at its coordinates (x, y) under a 2D rectangle, returning the last encountered cell.

This method takes a cell, x-coordinate, and y-coordinate as parameters and returns a Cell
48959178		returns the guest's base character based on the provided x and y coordinates, where positions that fall from valid points: negative, zero, positive, and zero.

This method tests the guest type of a character by calculating a guest for
48959239		is used to exit the program, checking its invariant, quitting it, disposing the viewer, and setting it to null.

This method, testExit(), sets up the program to run, executing the program, and then exits.
48959251		tries to open a BufferedImage to load it from a file. If the file does not exist, it uses the ClassLoader to get the image.
This method loads an image into the image field. It checks if the image is
48959270		This method paints the state of the game board by drawing grid lines and cells based on the provided map configuration and drawing lines for a line path overlay. It also draws any stored textured images, colored squares, and individual cells.
SUM
48959318		sets up the game and initializes the game engine,observer, and test class. If the game is already initialized, it also sets up the testing engine.
SUMMARY
This method is used to init the engine based on
48959336		This method performs the undo operation on the board in a test case, ensuring that the undo order removes and expands the board model while preserving the order.

This method is an action listener for the "Exit" command, which closes the current
48959344		tests the undo functionality of the AISCreator class by creating a new AISCreator, moving a player face, creating a new AIgame instance, and checking whether cells can be removed from the new AIgame.

This method
48968287		restarts the application by saving and ending all active modules, initializing commands, and setting windows properties.

This method sets windows properties and initializes those necessary properties before running a command.
SUMMARY
This method is used
48968504		returns the JList named "content" that contains the previous, next, page, and next buttons of the application's GUI.
This method adds the previous, next, page, and next buttons of the application's GUI elements: a
48977531		returns a JPanel named "jPanelCheck", which contains check box buttons for checking if it is enabled.  If it already exists, it returns the existing panel. Then, it adds several sub-panels to the overall panel,
48977535		creates and returns the JPanel named "jPanelCall" if it is not already initialized, with the name "jPanelCall". It initializes the name of the JLabel, name of the JButton, and adds it to the
49065368		handles the mouse release event for a drag-and-drop operation. It determines if the mouse button was released and releases the dragged square when it was not released. If the mouse button was also released, the method checks if the dragged square
49111824		throws an exception if an exception is encountered while retrieving data from a container. This method copies a data source object to another collection and returns a JSONString of the updated data.

This method iterates through the grid based on the request
49111978		takes an InputStream as input and returns a String.

This method constructs a String representation of the InputStream.

This method takes attributes from an XML element and returns a URL based on the class name of the attribute.

49121415		creates a dataset with the specified dataset name, number of rows, and number of columns. It uses a provided tolerance to update the dataset with the specified number of rows and columns, and returns the updated dataset.

**setMatrix**
49250619		sets the content of the article object to the specified string, handling null pointers if the String parameter is null and logging an error message if the parameter is not null.

This method logs an error message if the articleContent parameter is null and
49250660		sets the backlinks for articles in an abstract wiki file. It checks for null values and throws an exception if they are null. It also throws an exception if the article list is null and sets it to the article list parameter if the list is
49250661		returns the name of the first file in the wiki file if it exists or without its extension.
SUMMARY
This method is used to return the name of the first file in the wiki file when a user is able to call
49250673		retrieves the next file extension based on the current file name. If the file extension is not provided, it returns null instead.
SUMMARY
This method is used to retrieve the file extension of the file name as a string
49250696		flattens attribute namespaces on the current role of the refactor.

This method is responsible for flattening namespaces and logging activity notifications. It attempts to flatten the namespaces using the flattenNamespace method of the configuration
49250706		removes empty name space directories and their contents.
This method removes empty name spaces, including metadata files and new images.
SUMMARY
This method is used to delete empty resource files and their associated directories.


49250707		extracts the file extension from a given file name.

This method loads a properties file with the given file name and type.

This method returns a list of extension options for the given file name.

This method returns
49250725		takes an article link as input and returns the description of the top-level or simple atom structure that is the only content in the article link.

This method takes and parses article links from openDocument tags to determine the type of
49250848		returns true if the text URL contains the email hyperlinks, otherwise it returns false.
SUMMARY
This method is used to check if the email link is valid for email links.


49262079		handles events by checking the event type.
This method handles a button click.
This method handles error scenarios and performs actions based on the button clicked.
This method handles a button click.
This method cancels a user's action
49262308		listens for changes to all the user interface components. If the master is the current case, it tries to change the track to the match. If that fails, it sets the current case to the match. If the active case is the current
49262334		retrieves an image from the file system. It uses a BufferedImageIO interface, first trying to convert the file path to a specific file location and then attempting to parse it for the image. If successful, it returns the image.
49262461		converts the world coordinates of a point on the screen according to the given y value. It calculates the calculated value based on the given latitude and longitude.ained on lines, minutes, and seconds. In additional adjustments made by 3-byte
49328145		creates a CapabilityException object with a warning message and a non-zero usage message.

This method creates a new ZtexState from a Ztex1 object.
This method creates a new CapabilityException object with type SC
49328166		initializes a ZtexScanBus1 object using the specified parameters.

This method initializes an array of ports with an array of buses containing USB modules.

This method displays the list of USB modules.
SUMMARY
49328253		claims a USB interface and throws a UsbException if the interface fails.
SUMMARY
This method ensures the interface claimed by checking if it exists and is different from the current interface.


49328455		resets the EZ-USB while ensuring that all devices are in the SAVENT_NUMSUM02 block, is not busy.

This method checks if the device is busy after a reset in the USB. If the device
49329395		is the entry point for the application and calls the EEPROM service, and handles receiving and deserialization exceptions.

This method restores the installation service state, which is necessary if necessary. It simulates the service demand by calling the
49329486		performs an EEPROM operation on a stream by reading data from the USB device using a direct read operation and throwing exceptions if the operation fails or if the data is invalid.

This method sets the EPROM, enc, and
49330284		returns the debug current size of the USB. 128.8 high levels debug stack if debugValue is valid and the debug Stack Size is not 0.

This method sets the debug Value to the value of the debug variable.


49330865		resets the USB, but throws exceptions when illegal parameters are provided. In case of lack of 1 or 2 USB status, it forces, sends with WSC values, sets device variables, and sets up the NXT capabilities. In case of an
49331732		performs a mutation on a specific address that is used for writing to the application. It prints an error message and attempts to perform a mutation. It expects to catch a CapabilityException and InvalidFirmwareException.

This method calls
49332084		returns a string containing warning information about the API capabilities of the interface.
SUMMARY
This method is used to get a string of device interface capabilities (if any) that match certain criteria from the system
49332581		executes the read procedure in MAC EEPRESSOM, passing in the address and the length of the packet.

This method creates a DatagramPacket object to accept the data to be sent over the UDP datagram. It loops through
49332859		performs a MAC read operation with 16 bits in order to read a byte array of USB firmware content.

 This method stores an array of bytes in a buffer.

 This method updates the contents of a buffer with a data magic value.


49676330		takes a Class object as an argument and iterates through a list of IBeanClassLoaders to find a match for the specified interfaceClassName in a list of registered loaders. It then calls the getBlueprintVersion method on
49717760		creates a tooltip text in HTML format, including information about the transaction.
SUMMARY
This method is used to create a tooltip information string with information about transaction being created.


4980509		compiles a PDF report format using a Jasper report, using a byte array as input. It retrieves the logger instance, compiles the report, then returns the compiled report object.

This method compiles a PDF report using a byte
4980550		fills a report using JasperReports, iterating through the report elements, adding the appropriate JasperPrint settings to a map. It handles various actions related to storing, displaying process data, creating reports within various reports, and canceling reports. The
4980642		sets the current module for the object by instantiating the class specified by the input parameter.
This method instantiates the class specified by the input parameter by calling the class constructor with the input parameter.
SUMMARY
This method is
4981201		Sets the control data for a control object if the base object associated with the control object is an instance of JbsObject.

This method updates the control data for a class that matches the current object.

This method updates the
4981204		retrieves control data from a control object if it exists.
SUMMARY
This method is used to retrieve control data from a control object if it exists and the object is compatible with a JbsObject.


4981218		saves the data entered in a form by calling a method that saves the data, then sets pnEditJbsObject and pnList properties and loads the ToolPane.

This method updates a list with data from a J
4981690		refreshes the rows in theita columns by removing the current columns and adding the columns from the current rows.

This method removes all previous columns, iterates through the vita rows, adding each column to the specified columns and then
4981978		returns the VAT sum of the specified article at the specified VAT.

This method takes a VATSet and a VATType parameter and returns the VAT sum of the VAT type, according to the specified VAT type, otherwise it returns null.
4982038		determines if a given payment exists in a set of payments by comparing the IDs of the payments and each one to those IDs. Both iterators reject and reject IllegalArgumentException exceptions.
SUMMARY
This method is used
4982265		adds a dunning template object to the list of dunning templates, if the dunning template does not already exist.

This method initializes a HashMap of dunning templates by iterating through the days of the dunning template
4982613		checks if a company belongs to a library by any other company with specified ID based on a passed JbsCompany parameter.

This method checks if a company has the specified ID in a JbsCompany object.

This method checks if
4982774		clears the list of ids in a list.
SUMMARY
This method is used to clear all ids in a list if the list is not null.


4982785		returns a list of datasets based on specified criteria, including filter, order fields, and search. It uses a JbsDAO object to execute queries for find orders. It creates a Criteria object and sets all the properties of the Crit
4982804		returns a list of datasets that match the specified query and minimum result count.

This method overrides the getDatasetsByQuery method and returns a list of datasets that match the specified query and minimum result count.

This
4982827		executes native queries with a transaction manager, containing a given query string, and handles any exceptions that occur during execution.
This method executes a native query to retrieve all of the records associated with the records table.
This method executes a native
49829971		displays a search form and hides the search and prepare buttons.
This method overrides the showSearch Method and displays the search form if already shown, otherwise it displays the prepare form.
SUMMARY
This method is used to
4983332		returns the first starting row of a table, given a start index.

This method divides the given index by the number of rows per page.

This method returns the sum of the new ranges the given index reaches.


4983336		retrieves a list from a server at a specified index, sets the start and end indexes, and retrieves data from the server. It generates a list list model using the provided start and end indexes, and applies the model
4983342		retrieves a specific position of the sequence or list based on the provided sequence number, the order specified, and the number of arguments.

This method retrieves a list of objects that match the specified pattern and arguments.

This
4983531		retrieves a language string from a given language object.
This method sets the language string for a new object.
This method returns true if the object has been modified since the last time it was processed.
SUMMARY

4983552		sets the lang strings of the object to the values provided in the translation.
This method sets the languages of the object to the values provided in the translation.
This method sets the language strings of the object to the values provided in the translation
49855070		adds an object to the table, storing the hash code of the object.

- This method registers a long press listener to the keyboard with the keyboard action.

- This method registers a double click listener to the keyboard with the
49866769		fills the data in the titleText view and the checklists list view by fetching all checklist statuses from the database, adding them to the view, and setting the list view as the adapter for the list.

This method takes
49866798		fetches a checklist from the database based on a provided list ID and returns a Cursor object containing the result.

**public List fetchChecklist() Method:**
This method retrieves a checklist from the database by its ID.
49866799		takes an integer ID as input and copies a checklist from a given content provider to a new cron entry. It checks if the ID is valid and gets the IDs from the content provider's ID map to determine the type of copy, and
49866805		updates a checklist by setting its name to the specified value and inserting it into the database.
This method updates a checklist if it does not have an ID associated with it, and then updates the checklist if the ID has changed.
S
49866808		retrieves a list of checklist items by first fetching one from the database based on the given list ID. If the list ID is followed by "and not", it returns "yes!" in case of a MalformedListIDException,
49866813		retrieves a cursor to iterate over the checklist items in the database. It executes a database query to retrieve each checklist item, where the range of values is specified by the KEY_ROWID. The result is then used to create
49866815		creates a checklist item in the database for a specified list ID, the item name, and a boolean indicating the creation of a done status.
This method inserts a row into the checklist table with the specified values for the name, item,
49866817		updates a checklist item in the database by setting the item and process, and returns a boolean indicating whether the item was updated.
SUMMARY
This method is used to update an item in the database which includes the item's
49866820		creates a checklist item if one doesn't already exist.
If the entry is already open, it immediately returns. Otherwise, it initializes a singleton ChecklistItem instance and sets its label.
It then sets the selected item text
49866823		copies the checklist item to the specified position in the cursor.

This method allows the user to edit a checklist item with the given ID. If the ID is 0, it prompts the user to confirm the copy of the checklist item.
49870507		prompts the user for input and aborts the process if the input is empty or does not contain "quit", and it gets the filename and length of the input. It then tries to get the list name from the input using xpath
49874692		joins and joins elements of an array using a specified separator.

This method copies the elements of two lists a and b into a new list.

This method checks the validity of the provided string by comparing both lists, ensuring
49893647		sets the request line of an HTTP connection if the line starts with "GET". Otherwise, it sets the request line to the line. Otherwise, it sets the method, request URI, and status.

This method sets the request line of
49893996		receives and processes incoming data from a selector. It checks if a receive exception occurred during the process and accepts the data to be processed. If the receive exception occurs at the end of the callback and the read buffer is terminated, the event
49894182		queues an entry to the cache by executing an X11 key pair command and returning the result. If the key is already present and it is out of than the cache size, it creates new entries and adds them to the first entry. If
49894493		is the main method for the HelloServlet class and it tests the WebServer by connecting to a remote server using 'any' and then calling it with the specified command and response parameters.
SUMMARY
This method is used to
49899442		executes an `sql` statement and returns the number of affected rows, while reading and processing data until the end of time occurs.

This method checks if the current user is a member of a group by comparing their names.


49899445		executes a query on the database using the provided SQL string and returns the results as a query result.

This method creates a new statement and executes the provided SQL string to create a new SQL statement.
SUMMARY
This
49931896		takes a string as an argument and returns a truncated version of it if it exceeds the length of the string.
This method checks the properties of a given name and constructs a Variant object using the data in that name.
This method
49932170		adds a new record to the queue, checks if the record name is unique, and if not, adds it to the queue. 

This method adds serialized record entries, fires an event by setting the record name, updating the
49932334		checks if a request can be aborted, and if so, it rolls back the current version and then performs the backup.

This method checks if a request can be aborted, and if not, rolls back the current version and then performs the
49933311		converts a ByteBuffer into an XByteBuffer using a CharBufferAdapter that can be processed by a Thread.
This method reads data from a channel and populates the system property with the data.
SUMMARY
This method
49935513		tests the global and local listener functionality.

This method puts the dummy data into a map and then calls the global and local listener test.

This method puts the dummy data into a map and then calls the global and local listener test
49936544		returns the session of the current object by using an Hibernate session factory and the session factory to create the session.
This method checks if the session is null, if so, it finds the corresponding session factory and if it exists
49936592		returns an enumeration of all attribute names in the current object or its inherited attributes.

This method returns an enumeration of all attributes in the current object after adjusting the session's internal calendar to match the attributes.

This method
50025833		retrieves the reply status and compares it to the provided result code. 

This method returns a flag indicating that the execution has been interrupted, if it has received a signal indicating that the result queue is stateless. If not,
50025872		sends a Credential message and waits for a response back to an exception, restoring the session state and disconnecting the socket if the message is not received successfully.

This method overrides the sendCred method and retrieves a
50025943		retrieves the TextFile associated with the specified index from the selected tabbed pane.

This method adds a file to the model by concatenating the source code of the file name with dimensions and labels.
SUMMARY
50025948		creates an interface in the DOM using the provided introspect data. If the DocHelper implements DOMConfiguration, it creates a DOM Element with the specified name, root, and attributes. If the DocHelper implements DOMConfiguration, it creates a DOM
50026101		retrieves a dynamic proxy object for the specified DBus interface name and object path. If the object path is valid and does not exceed the maximum length, an exception is thrown.

This method attempts to locate the object in the X
50026147		appends the signature of the provided object to the beginning of the object, using a char array to identify the signature type.

This method creates a string buffer by iterating over the data array, appending each byte to the string buffer
50026221		ensures that the bytes in the wiredata array is up enough to hold the desired number of bytes that can be allocated to the buffer used by the application.

This method initializes the array of bytes to the needed available bytes. It
50026324		Pad out the byte counter at the specified type, with each number padded ahead a 12-bit value smaller than the previous pad type. 

This method pads the byte counter to the next byte counter, and decrements the padding counter if
50038643		resets the hibernate version to its original state, either paused or suspended, by starting and then resuming multiple old versions.

This method initializes the object with the given task group, task name, user, task manager,
50038649		sets the statistics implementation for the session.
This method attempts to set the statistics implementation for the session using the provided object, throwing a NoSuchFieldException if the field is not found.
SUMMARY
This method is used to
50038689		sets the filters of the class using the sValue.
Finally, it sets the filtered flag using the filtered value.
SUMMARY
This method is used to load filters into the class and set them to be taken based on flow
50069503		returns the maximum number of requests and statistics needed when a URL execution is completed and counted up by 2.
SUMMARY
This method is used to calculate the number of requests and statistics needed when a URL execution is completed.


50101680		initializes the Jscripture chat client with the specified host, port, and user ID to the text fields and the Jlist component to update the UI.

This method adds listeners to the chat text area and update the UI accordingly.
50101772		stores the cache by calling other methods to store the content, write out the cache, and flushing the stream.
SUMMARY
This method is used to persist changes made to the cache by writing the bean to a file.


50101828		This method sets the value of the vrnl parameter if the variable isSigned. Otherwise, it creates a URL using the vrnl parameter and then sets the parameters using the call method.

This method sets the vrnl
50102124		displays a chapter in an HTML view at the specified position.

This method scrolls a vertical scrollbar around one step forward in the internal XML editor.

This method scrolls a horizontal scrollbar around one step backward in the internal XML
50104527		adds a Bean implementation bean to a collection ofReferences and sets its reference ID. If the bean or reference ID is equal to zero, it sets the next reference ID to be able to be set for the new bean implementation.

This
50104528		replaces a placeholder bean with a new one in a map of WeakReference objects, followed by a reference to the new object.
SUMMARY
This method is used to create a WeakReference that associates the new object with the specified
50105341		verifies that a collection of mail addresses is not null, contains at least one element, and contains an array of mail addresses. If both checks pass, it throws a MessagingException.

This method verifies that a collection of mail
5012871		sets the text of the component and attempts to replace it with the provided text. If the replaceText method fails to do so, it sets the text to an empty string instead. If the replaceText method returns false, it attempts to replace a
5013746		populates the zout array with zeros and then copies the values of a line every 80 bits to a new line.

This method fills the zout array with zeros and then copies the values of a line every 80 bits to
50142710		returns a string representation of the object, including the minimum and maximum x and y values.
This method returns a string representation of the object, including the envelope and the number of points.
SUMMARY
This method is used
50351952		sends an email to a specified user, filtered through a list of events and a count of the total number of events filtered. It reports progress, publishes the notes of the event, and publishes a list of articles for the last article to the
50352057		iterates through a list of listeners and calls their onEndMatch method with the same arguments.

This method calls the onEndMatch method of each listener with two strings, two integers, and a specific point.

This method handles
50352096		writes the saved games object to a file named "savedgames.ser".
This method takes an object as a parameter and logs the data of the calling method. It then writes out the names of all the saved games in reverse order
50352098		returns an "saved games" message indicating the count of successful and unsuccessful saves or no save games for a specified user.

This method returns a message indicating the number of saved games that were not incremented.

This method
50352099		takes a player and annotates an ontology session with a new ontology. It takes a players and a user as inputs.
It takes an ontology session and an ontology schema and saves the ontology data. It iterates
50352134		sets the alert status of a server using a given username.
This method authenticates a user with the given username.
This method checks if a user with the given username exists.
This method unlocks a user.
This method updates the
50352189		handles a timeout by attempting to perform a fib operation by establishing a control request, sending a "time" control event, and performing implicit commands which can occur within a timeout period. If a cipher block was lost or added successfully, it not
50430539		tests the method testRemoveContact() by adding a contact to the book, then removing the contact and verifying that the size of the book is correct.

This method tests the removeContact() method by adding two contacts and then removing items from
50430544		This method tests the addition of contacts to a book, ensuring that the contacts list contains the same number of contacts.

This method tests the addition of empty book, verifying that the updated list contains the correct number of contacts.

This
50430610		creates and adds a table of the selected messages to the mailbox queue panel, using the specified list of messages.
SUMMARY
This method is used to configure the table of the mailbox queue panel by setting the data, model,
50430724		tests that multi-part, email, and content information messages are not equal to content information and does not set custom date for sample messages.

This method tests that an exception is thrown when message statuses are not set for specific users.
50430757		adds a folder to the current folder.
This method checks if a folder with a given name already exists in the folder manager.
This method creates a new folder in the folder manager with the given name.
This method adds or updates
50430761		removes a folder from the folder manager based on its name. If the folder is not a core, the method returns. Otherwise, it removes the folder from the folder manager and updates the folder manager.

This method updates the folder manager
50430768		This method attempts to load files from a folder structure based on whether virtual or virtual folders are present and if all folders have subfolders.

This method attempts to load files from a folder structure based on whether virtual or virtual folders are present
50430773		sends a file using the SMTP server with no specified parameters.

This method sends a single file with a specified name to the SMTP server.

This method sends email with optional attachments to the SMTP server.


50430834		removes a message from an object if it exists in the list of messages, if so it compares the message names to determine if the object is a share or not. If the object is a share or not, it checks for any illegal attributes
50430847		searches for a specified email address in a contact list and returns its index or -1 if the email is not found.

This method returns the email address of the contact.

This method returns the index of the contact in
50430921		adds an address to an email message. It initializes the email message field by a temporary variable and loops through the list of addresses to add to the email. It then adds each address to an array of recipients field and adds it to the
50575080		retrieves a new instance of the SQL adapter's `String` object by appending the `ADM_APP` property to a SQL string buffer. If there have already been an existing string for the new string key in the previous method
50575263		takes a message string, splits it into parts, and returns a String with line breaks to return.
This method removes HTML markers (LTR) from the message by finding line breaks away.
This method removes both tags (TM)
50698354		listens on a client and adds events to the server, then enters a loop that continuously accepts client connections. It then displays a waiting screen, starts a game using the first player of the client, and continues the loop until a player is connecting
50698406		calculates the best move for a given piece of sight (king) using the beta-beta algorithm. Within a loop, it attempts to get the best move from each node until a match is found or a negative rating is returned, which
50698409		retrieves a rating value based on a given prune and sets it for the maximum depth feature. It also calculates the alpha and beta rating values for the node.
SUMMARY
This method is used to retrieve the alpha or
50698414		calculates the minimum possible alpha rating for a node based on its parents and recursively computing their values and maximums it until it reaches the maximum value of the alpha prune.

This method calculates the minimum possible alpha rating for
50698417		calculates the beta rating based on the probability beta prune and the closest nodes to a given product and the set of tags.

This method returns the next probability beta prune in the specified probability beta product.
SUMM
50717447		returns the graphics that needs to be drawn to the form after submitting a form, which will be locked and the form waits until the form is done waiting.

This method waits for a specified time to be entered.
SUMM
50717503		retrieves the input or output stream from the socket after opening a connection. If the client socket is null after all servers have been created, it attempts to retrieve information from the new session options. If successful, it sets the current session options
50717769		returns the size of a layout that needs to be reordered and calculated based on the components provided in the container. It then adjusts the positions of existing components in the grid to maintain the grid's size.

This method returns the preferred
50717806		This method is a private method that gets a remote directory by getting the list of command-line arguments, parsing them, and calling the remoteDir's executeCommand method to get the remote directory.

This method formats the entry file in a
50717835		writes a spreadsheet containing the names of the vertices and normals in the given array list and a line separator to the file.

This method writes a footer to a FileOutputStream and initializes it with a ByteArray
50717880		retrieves info about the MMBR size of a remote message in 8-bit integers.  For the address, the size is set if the MMBR size is not set. If the MMBR size is not set,
50718231		processes key events by checking if the key event is consumed and handling it accordingly.

This method processes key released events by updating the selected component with the current mouse position over the component and processing events based on the key event type.

50718306		loads saved configuration settings into a map. The method first checks if the user has permission to allow restore, and if not, it returns. It then processes the retrieved values of a properties file and adds them to the map. Finally, it clears
50718593		loads the string attribute of a given SpooledFile into the row of a Vector. It throws an Exception if there is an error loading the attribute.

This method is used to add a string attribute to a Vector of Strings.
50718597		loads integers-separated attributes from a SpooledFile object into a Vector row.

This method handles the actions performed on a SelectionEvent. It receives a SelectionEvent and performs a series of operations based on the source of the event
50718602		takes a Spy spy file and parses it as XML using JAXB and creates a TableBuilder with a MediaBuilderFactory object. It then creates an XParser object, parses a SpyXML string to a String object, and
50718608		handles the EXPORT operation, executes a dialog box with the title "Exporting...", and performs specific actions based on the name of the action that was executed. It then calls the doExport method.

This method checks if a
50718868		returns the preferred size of the component, with insets and width smaller than the component's size.

This method is similar to the previous one and divides the preferred size by twice the maximum among the two.

This method is
50718912		creates the necessary components for the GUI. It includes a border box for the "About" panel, containing the JTextArea for displaying the message, copyright, and copyright text. However, it includes a titled border labeled 'About' that
50719234		returns the currently focused session.
This method draws the component using the specified graphics context and rectangle, and then draws the label.
This method draws a line between two points using the specified graphics context, both of which have the same coordinates
50719454		determines the name of a tab based on the session GUI, including the current device name, allocating a new device for the current session, and assigning the actual device name to the tab with a fallback number.
SUMM
50719466		calculates the layout size of the container according to the sizes of its components and the insets.

This method checks if there is a border, and if so, calculates text position and adjusts the under line accordingly.

This
50719469		calculates the preferred layout size for a container by adding the preferred sizes from its center and right members and ensuring that they meet the requirements.
SUMMARY
This method is used to calculate the preferred layout size of a container's
50719526		translates the start position of the point relative to the view, taking into account any defined conditions, and returns a Point object with the translated start position.

This method translates the start position by offset the specified point, taking into account
50719985		takes a string and a JComboBox as input and returns a string containing the value of the first 'choice' variable.
This method takes a string and a JCheckBox as input and returns a string containing the selected directory.
50720863		iterates over listeners and calls the onScreenSizeChanged method for each listener with the specified indices.
SUMMARY
This method is used to notify registered screen listeners of changes to a screen size.


50756381		creates a new QuestionPK object, validates it has a correct type and returns it.
This method calls ejbCreate on the bean instance.
This method ensures that the superBean is not null.
This method sets
50852407		retrieves a list of types that can be used as any of the options being specified in the map. It iterates over the options and checks if they contain the collection name property. If a match is found, the method returns the types
50852778		sets the shade property of the object and resets the text of the object to the specified value.

This method sets the shade property of the object and increments the width of the object's text line, applies the shade value to the width
50853226		searches for a specified substring that matches a specified pattern within a string, and returns the result of the search.

This method iteratively consumes characters until a specified pattern is found or the end of the string is reached.

50853283		reads input from a stream, discards found newlines, and skips a character between the beginning of the buffer.

This method continues reading characters until the specified offset is found. It iterates through the buffer until it finds the new
50891748		is a test method that sets and gets the body content of a basic tag object.
SUMMARY
This method is used to test the set and get methods for the body content of the basic tag object.


50891753		tests the setBodyContent function of the tag by adding a string with a newline character and then setting the string as the content of the tag to "So this is some long multi-\n".

This method sets the string for
50891779		is a test method triggered by the test method of the Tag class that is called by the constructor of the class MockClass.


This method asserts that the getDescription method of the class returns the correct description for the given name. It prints
50891783		tests the setDescription() method of the tag program by setting a description and then asserting that the description is correctly set to the command-line help message.

This method creates a tag reader with the given prefix, namespace URI, and description
50891790		This is a test method for the Example class which adds and removes attributes to an XML node.
SUMMARY
This method is used to test the functionality of the Example class by setting and removing example string attributes.


50891793		tests the main functionality of the program by adding elements to an object and performing comparisons and asserts the results.

This method tests the functionality of the setExample method of the tag class. It sets an example string and verifies that it matches
50994916		sets the photo of the window by updating its UI, clearing the text field, and validating the photo. 

This method sets the photo from the model. If the photo is null, it sets the photo as the default. Otherwise
50995054		notifies tree model listeners of changes to nodes in the tree.

This method checks if an entry is selected in the tree and if so, adds a new concept that corresponds to that entry.

This method checks if an entry is
50995095		handles list selection events and sets the selected photo in the photo list if one is selected.
This method updates the list button's foreground color based on the selected row of the selection.
This method updates the list button's foreground color based
50995118		returns a string containing the keywords of the object, separated by the end-of-line key if there is more than one keyword.
SUMMARY
This method is used to obtain a list of keywords separated by a specified separ
50995155		saves the current window position, size, and other attributes to a preference file. It also adds an IPreferenceStoreListener if it exists.

This method saves the frame size, maximum size, min size, and cancel actions to a
50995164		displays all photos by creating a new PhotoImporter object and passing an array of PhotoImporter objects to get photos. It then calls the delegate's viewPhotos method with the list of photos.

This method handles user interactions with the
50995194		retrieves the selected section, searches for photos on the section, and if found, invokes the selectedForViewing method with the corresponding photos.
SUMMARY
This method is used to show all photos in the section before
50995324		creates the cache file for a photo by serializing and saving it to a file within a specified cache file. It reads various properties including album, photo, thumbnail, thumb, tags, duration, and userId. The method also converts the
51012200		iterates through a collection of publications filtered by a given filter type and prints out information about the results, including the number of filtered publications, the number of removed molecules, and the number of mappings that match the given filter.

This
51012621		adds citation information to the SVN node with the specified value.
SUMMARY
This method is used to add a publication to a node with the specified value, or create the publication if it doesn't exist or there is
51012838		finds the DataSource object corresponding to a passed in CV name. It first checks if the category is correct, and then checks if the concept is provided. It also checks if the concept is valid. Finally, it handles any exceptions that may
51013811		takes a string representing an Attribute and determines the Class and Instance variables based on the Attribute's data type. It calls specific methods from either its superclass, other methods, pre-determined types, or methods for the Att
51013813		returns the local name of the given concept, including its ID and name, or the URI or PID of the concept itself if it is null.

**getLocalName**: This method retrieves the name of the concept, taking
51013831		copies the contents of one file to another at a specific time, ignoring duplicate files.

This method overrides the next method and clones a vector of cells to the destination file.

This method copies the text from one string array
51013936		creates an ONDEXConcept with its taxid and external concepts, sets the taxid and external concepts as values, and adds it to the taxon table. It throws an exception if any of the taxids are invalid.


51013977		writes a raw XML element "Notes" and a raw XML element "Body" with a "lang" attribute "en". It attempts to retrieve the note from the database using the unique username and store a note object in the database. If
51014148		takes a collection of strings, a delimiter, and a flag determining if there is only one string in the collection. If there is only one string, it concatenates them into the first string of the collection. If there is only
51014150		throws an exception indicating that a required argument was found for a class that doesn't specify a string.

This method validates an object passed as a parameter as a parameter and throws an exception if it is not.

This method
51014248		takes an integer as input and returns a GO value in the form "GO :" representing the number of steps taken. It creates an array called goStr with a total number of 10 characters. It then gets a new GO value from the
51014370		retrieves the value of the input field by extracting the text from the current date if it starts with "H:mm" or it does not have a "H:mm" prefix. It handles both decimal and sign compatibility by removing spaces
51014416		determines if two doubles are equal, or if one is greater than the other. It handles cases where the input is not one of the strings, and if it startsiffets with the same port as the other. If either of the
51014454		computes and sets the e and theta values of the given node. The e's left and right child nodes must match the current lexeme and can not jump from parent if not the lexeme is null, or if the lexeme is
51014552		retrieves the RelationType by name and returns it if it is not null.
This method validates an ontology object by checking if all properties and annotations are present.
This method validates all properties of an ontology object
51014560		This method removes trailing commas and numerals from the input string, optionally removing another "." from the beginning and end of the line.

This method converts the "line" string into a string by splitting the line by single a delim
51014571		parses a line of text and extracts field name and any related information such as name residue and value, if present. It also parses the following tags: description, type, isotope, charge, charge year, charge type, isot
51014770		sets the endpoint address for the specified port name in the JAX-WS service.

This method sets the endpoint address for the port name in the specified port.

This method sets the endpoint address for the port name in the specified
51014970		sets the value of the variable `of_type_fk` to the value of the parameter, after checking that the value is a valid integer before assigning the value to it.

This method checks if the `of_type_
51015917		creates relations for sets in a graph using a HashMap of pairs of pair keys and integers. It then iterates over the pairs, creating an ONDEXRelation for each pair, connecting the relation and attribute, and finally logging the
51016264		calculates the coverage sequence for a query coverage analysis by excluding ACA or ASN, adjusting the query sequence length, and determining if the query is a nha-terminate term. The method then calculates the number of overlapping sequences and
51016269		calculates the weight of the target coverage sequence of a given object based on its length and length query. It divides the result by three. It checks if a quality attribute exists, and if so, calculates the quality value and calculates the maximum
51016347		initializes error rates for each experiment in a list of experiments.

This method iterates through a list of experiments, initializing error rates for each experiment. If the experiment does not have random beta, it is initialized, and if the
51016361		initializes a map called graphIndices with an initialized set of Network objects. If the input list is null, it initializes it with items mapped by their graph indices. It then calls the lazyInitGraphIndexMap method to reflect the modifications
51016369		updates the map by recursively updating the nodes and edges for the specified graph. If the graph is empty, it inserts and deletes edges at the end. This method visits the graph, using adding and extracting nodes.
SUM
51016377		creates a sample graph by iterating over all edges connected with each supporting evidence and adding them to either a partial graph or a sequence graph based on whether random needs to be randomized.

This method removes support evidence from an intermed
51016412		returns a Reader object that contains the input stream for the file "psimi2ondex_metadata.tsv" in the current directory.

This method returns a Reader object that contains the input stream for the file "psimi
51016720		takes a directory and an ONDEXConcept as input and returns the directory under which it is stored in the ONDEXConcept.

This method generates the directory path for an ONDEXConcept.

This
51016799		retrieves the primary reference's value for a specified XrefType.
This method extracts the id of the primary reference term, or if the term is OID, it returns true, if it is not OID, it returns false
51016804		retrieves the weight of an ONDEX relation, ensuring it is not modified by another accession or equivalence.

This method checks if there is a convergence to it and returns true if there is not. If the convergence is
51016823		checks if a DbReferenceType is a PSI BioLocation Reference (MI:0488) or a PSI Biological Activation (MI:0488) based on its mime table and reference type.
SUMMARY
51016859		recursively processes each child of a PathNode tree by marking the children and then calling itself recursively on the children of the other nodes. If no child is found, it directly trims the links to their parent.
SUM
51017098		sets a single input URI for the Taverna, ensuring it is not null or empty.

This method sets the URI string for the Taverna.

This method creates and adds a task to the graph, asserting that the task is
51017104		retrieves the URL of the desired workflow. If the user enters a valid URI, it marks the current line as non-comment and starts a new worker thread to show the URL. If the user enters invalid URIs, it opens an
51017663		compares two Attribute objects for equality based on their type, value, and whether their default type are indexed. If both are null, it returns false, otherwise, it compares their doIndex attributes to those of the first Attribute object.
51018115		scan a zip file to extract files and class names to add to a set, initializing a new HashSet, checking for exceptions and adding classes to b, and executing the scan method on the class directories, as long as it is not a
51018290		downloads a file with a given name and URL from a given directory, returning the file if successful or null if there is an error.
SUMMARY
This method is used to download a file from a given path.


51018625		calculates the score of a given entity for hits. It calculates the distance between two vertices, accounting for vertices if their scores are less than or equal to 1 and the number of hits is less than twice the total number of vert
51018873		closes an index, including metadata, and throws an exception if the index does not exist or an error occurs while closing the index.

This method throws an exception if the index is locked and closes the index if the index does not exist
51019044		calculates the relative ranking of the comparison using the base and relative values.

This method evaluates the fitness of a matrix given an array of attribute names, a list of values, and a comparison method.

This method returns the
51019142		calculates the distance between two GO terms for a given ID and a given cutoff value.

This method gets the distance between two GO terms for a given ID.

This method updates the distance between two GO terms by calculating the
51019162		traces the root node of a given term in double format, with a specified cutoff value.

This method calculates the cost of efficiency by creating a cost matrix, generating vector data, and calculating the root of the tree model.


51019192		calculates the Information content for a given GoID by converting the goName into an int and setting it on the InfoContent object.
SUMMARY
This method is used to calculate the Information content for a given GoID.
51019207		returns an evaluation for a given set of concepts, checking if the compared sets match the first set and if so, returns the first evaluation of the sets only. It sorts the elements in the set based on the fuzzy result and then compares the
51019250		sets the ONDEXGraph for an MDFAssociationDescription object and fires an event to indicate that the change has been made. It also sets the graph for the object to the same as the one identified by the provided argument.


51019251		calculates the score for a given gene and name using a feature vector, and initializes the log score if necessary.

This method creates a case by finding the occurrence of the given gene in the x-axis, evaluates the x
51020122		retrieves a set of related concepts from a given concept object and returns a response with the results in a new ONXL response object.

This method updates a response with information about the relations between two ONXLS concepts by identifying
51020371		checks if a MouseEvent is a right-click and opens a dialog box to display the text associated with that component.

This method is used to get the TransferHandler that displays the menu if the provided element is an instance of a J
51020651		sets the view and scaling for the graph control. If the input in direction is "INPUT_ROTATION" and the graph is null, it sets the graph's view to "VIEW" instead of "INPUT_ROTATION
51020820		handles action events for the GUI and performs various operations based on the source of the event: it changes the type of measurement (connective or derived) of the graph, or the text field (pass attribute or percentage value) of the element
51021082		builds the graphical user interface (GUI) components for the application. It sets the layout and adds panels for editing data, selection data, and data columns, and uses components within the GUI.

This method creates a panel for editing data
51021275		recursively visits all neighbors of a given ONDEXConcept and returns a list of objects that are those neighbors in a list. Based on the specified direction, it filters and executes the nearest neighbors method for consistent indexing, returning the
51021337		populates a JComboBox with the names of the vertices and attributes of a Graph object.

This method populates a JComboBox with the names of the vertices and attributes of a Graph object.
SUM
51021338		adds attribute names to a list if they are comparable or iterable and have at least one concept. If the list remains empty, it adds an "Missing Value" attribute name to the list.
SUMMARY
This method is
51021401		sets the text of the errorReport field to the specified string, then displays the error report, if there are no errors recorded in the file.
SUMMARY
This method is used to display an error report as a pop-up
51021435		annotates nodes using the given mapping.

This method tests different aspects of mapping between attribute names to numerical values for nominal and numeric attributes.

This method tests mapping between attribute names to numerical and numeric values.
SUMMARY
51021479		updates the button's enabled state based on the selected index in the concept class list.

This method sets the list of concepts. It iterates over the selected items in the list and adds each concept to the concept class list, then
51021612		sets the size of the vertex based on the provided node size.

This method iterates through the vertex's edges and fills the edge height with the height of each edge.
SUMMARY
This method is used to create vertex
51021618		updates metadata by clearing edges and vertices, retrieving meta data, and creating edges if certain conditions are met. It also synchronizes existing concept classes/relation types and creates vertices if certain conditions are met.

This method handles the
51021820		adds attribute names to a graph. If attribute names still exist, it adds them to an ArrayList.

This method creates a list of attribute names. If the graph does not contain any attribute names, it calls the superclass method
51021938		loads a configuration file into the given Properties object by reading the entry located at the specified file.

This method loads an algorithm configuration from a properties file.

This method loads a configuration file from a properties file.

This method
51022193		updates the minimum and maximum values of a collection of numbers. It removes any existing elements with a minimum and maximum value. If the collection is empty, it adds the minimum and maximum values. It then iteratively sets new values for the minimum
51022217		creates a tabbed panel with four swap buttons that are between fwd and bck, and a line containing four swap buttons that are either left or right of fwd.


This method returns the modified panel as a JPanel.
51022280		retrieves the full name of the variable or the constant value of the corresponding object's type.
SUMMARY
This method is used to retrieve the variable's full name if it is an AttributeName, ConceptClass, Rel
51022306		removes a row and shifts all rows in a table below it by one.
This method shifts the selected row down by one.
This method shifts the selected row up by one.
This method logs a trace message when a row is
51022539		takes an old concept and its new concept, inserts a new one and a new concept with a new PID added by an abstract event thread, copies all other concepts from the old concept to the new one, and asserts that the new concept was
51022543		takes an instance of ONDEXConcept and creates it with a new DataSource, otherwise it updates the DataSource's existing Concept with the new one.

This method takes an instance of ONDEXConcept and clones it
51022548		creates a new concept with a given concept, superclass, and original concept class, clones it to be equal to another concept, and returns the cloned concept.

This method clones a concept, with all its concept classes updated.
51022552		copies all attributes except concepts from the current concept and returns a new list of concepts.
This method copies everything else (NONE) over in a two-level concept and returns a new list of concepts.
SUMMARY

51022555		copies all the tags from "old concept" as an edge within an ONDEXConcept and adds the tag associated with the old concept to the "old concept" of the next relation.
SUMMARY
This method is
51022561		displays a centered internal frame within the desktop. It checks if the internal frame is maximizable and if it is, it sets its properties such as preferred size, dimensions, location, and maximizability. It then displays the frame and optionally
51022563		creates a JPanel containing buttons for applying configuration options and canceling.

This method creates the buttons panel.

This method creates the buttons panel.

This method creates the buttons panel.

This method creates the buttons
51022573		sets the visibility of nodes in the graph to be shown or unseen, respectively.
This method is used to show strings in the graph.
This method is used to show graphs in the graph.
This method is used to show graphs
51022594		toggles the visibility of edge labels in the visualization, adds edge labels to the meta graph panel, and updates the menu bar.
This method updates the menu bar and repaints the visualization.
This method updates the meta Graph panel, edge
51022667		creates a JMenuItem with a provided text and action command. If the text is not null or empty, it will throw an exception. If the action command is null, it will throw an exception.

This method returns the J
51022715		adds a menu bar to the window with various menu items, such as deselecting and adding items such as nodes, edges, and nodes in reverse order.

This method populates the selecting menu for the current object.
This
51022763		sets the font for the edge formatter and the fonts in the concept graph.
SUMMARY
This method is used to set the font for the edge formatter and the fonts in the concept graph.


51022781		performs the simulation of a simulation step that calculates the inverse overview of distance equations. It creates a StateEdit object with the label "All". The method uses the showAllRelations method to show all relations. The method repeatedly calls the showAll
51022847		scales an image to the specified scale factor.
This method retrieves an ImageIcon from the given image file and scale factor.
This method scales an ImageList to the specified scale factor.
This method scales an ImageElement to the
51022986		takes a server URL request and returns a new file string. If no server URLs are available, it creates a new string with the server's first image URL, an array of predefined file names with the names of the files in the server
51023038		submits an issue by creating a new issue using a service and submitting it to the project.

This method creates a new issue with the specified parameters and displays an error dialog with the issue details.
SUMMARY
This method
51023057		initializes the visual table with a list of available relations and a list of relation types.

This method initializes the visualization's appearance by providing options, such as loading data from a file and adding rows to the model.

This
51023162		initializes the "specialisationOf" JLabel with a set of Unique Items (Unique Items) of Each Case Insensitive MetaData (MetaData)s found in a given database and enables or disables it. It first retrieves all
51023171		takes a path and a texture path, validates them, and then creates an ImageIcon object with the base file location, texture URL, background image, and border attributes.

This method takes a path and initializes map elements based
51023192		sets up the ControleMenuBar with various components, adding various options to the menu, and setting the menu bar to the parent frame.

This method sets up the ControlePane by setting up the menu and adding the ConsoleEditor
51023248		takes an ONDEXConcept object and returns its ID by extracting its concept name or PID from its parent, assigning it to a variable, or assigning it a unique ID if no concept name is provided.

This method returns a
51023421		adds a relation type to the list of relations and sorts it alphabetically based on a comparator using sortOrder. It then fires a change event to notify listeners that the size of the list has changed.

This method initializes the
51023444		adds a concept class to the concept class list and sorts the list with new concept classes, then notifies listeners of changes.

This method initializes the tabbed pane component by creating a concept interface panel and adding drop targets based on
51023448		adds an AttributeName to the list of attributes to be added, sorts the list, and notifies any registered listeners of the changes.
This method allows editing of a set of rowData, which includes editing a single row. Otherwise
51023466		updates the menu bar mode on the latest version of the application's properties. It ensures that the toolbar is in full-screen mode and updates the view by obtaining the `JMenuBar` of the application's menu bar and updating the menu
51023486		rescales the visviewer when the scrollbar value changes. It ensures that redrawing the viewer is enabled after the user can scroll up or down. It then scales the viewer, checks if the renderer is empty, and scales
51023527		updates the color of a graph node based on the strategy to evaluate how it is being evaluated. It checks if the strategy has alpha channel and if it does, it sets it to black, otherwise, it sets it to black, and then
51023562		This method writes the namespace declarations for namespace types and prefixes, as well as the graph type namespace XML namespace. It also adds namespace declarations for typed and typed items and qualified namespaces, to the XML stream writer.

This method writes
51023611		sets an edge color selection strategy and updates the visualization.

This method sets an edge color selection strategy to the specified edge coloring strategy.
SUMMARY
This method is used to display a colorizing strategy to visual the visualization based
51023663		sets the edge shape of the object and saves it to the Config.visual configuration.

This method sets the edge shape of the object and if the shape is HILL, it connects the connector to the connector_set with the shape parameter
51023907		adds a deep root to an object by recursively adding the root to the object itself, as well as recursively adding the default root, super classes of the object, interfaces of the object, and general subclasses of the object
51023915		adds aDeepRootMethod to the list of overloaded methods, taking in Method objects and ClassInfo objects as input. It then iterates over the method objects and for each non-null parameter, adds the ClassInfo object to a tree structure
51023918		adds a function method to the class with the specified name and owner, throwing an exception if there is an error.

This method also adds the specified function method to the internal list of function methods if it is not already present.

51023950		loads an OndexKB Graph from a file specified by the fileName parameter and assigns it to the graph variable.

This method stops the loader, resets the logger, and prints a success message.
SUMMARY

51024019		initializes and builds the Lucene index on the Graph for the Ondex graph. If there is a non-existent file, the method adds the file to the list of open graphs and retrieves the name from the file path.

51024126		sets up the content pane of the window and its input parameters, including a border, layout, input object, and a titled border.

This method initializes the input data object, and then sets up the content pane with a label indicating
51024212		creates and registers a MetaDataWindow for a graph node with the provided file.

This method initializes a new MetaDataWindow for the graph with the provided graph descriptor information. It creates an anonymous inner window (or a graph of
51024224		returns a GraphTraverser object for traversing the model, using a state machine traverser to parse the input stream and the DOT file in the model.
SUMMARY
This method is used to retrieve a graph traverser
51024258		returns a JFileChooser with custom file filters for exporting asTSV files ('.' or '*') when the user accepts a file.

This method creates a file chooser that allows the user to select an MP3 and
51024274		This method returns a node that corresponds to the specified ConceptClass.

This method returns a node that corresponds to the specified ConceptClass except for the root concept but different of the supplied ConceptClass.
SUMMARY
This method is
51024303		centers the desktop frame on the screen.
This method centers the desktop frame on the screen and centers thedesktop frame on the desktop.
This method centers the desktop frame on the screen to fit the desktop view.
This method centers the
51024313		creates a JPanel named "panelButtonPanel" and adds six buttons to it, each with a FlowLayout and a JLabel to it.
This method creates a JPanel named "panel", sets its layout to a BoxLayout with
51024330		creates a search panel that contains a list of components for querying identifiers based on user input. The list includes a label for the query's ID, a text field for entering the ID, and a label for the query's name, a
51024344		returns the TreeSelectionListener instance. If the tsl value is null, it creates a new instance of the DefaultMutableTreeNode class and sets its value to that instance. It then calls the getTreeListener method and returns it
51024346		creates a JComboBox component with the names of available node IDs and adds it to the panel, populating it with values from the config file.

This method creates a JLabel component displaying the name of the node.

51024353		creates a panel in the GUI for configuring the field selection, allowing the user to select a neuron.

This method sets the field selection to true, sets the field to the selected neuron, and displays the neighboor panel.
51024357		takes a string as input, parses it, and updates the data structures and objects accordingly based on the parsed input. It handles sequences, roots, and a comparator function.

This method takes an array of strings as input and
51024419		sets the focus on a new concept class based on its ID, including changing the cursor, updating the sub-classes, and setting the preferred size of the buttons. Additionally, it sets the focus on its constraints panel.
SUMMARY
51024430		saves a collection of edge mappings to a file with the provided document with the appropriate file handle and whether or not to create the top level layout.

This method saves a collection of submappings to a file in XML format,
51024433		initializes the editor by calling `init` to create an editor shell and the superclass init method, which creates the cell and updates its label provider.

This method sets the focus on the editor's label provider.

This method
51024448		returns a string representation of the object. It first creates a StringBuilder object, then appends the text from the getPath() and getName() variables to the StringBuilder. Finally, it finally returns the StringBuffer object as a string
51024484		takes in two strings, a concept class and an object list, and splits the concept category and concept class into the new input string.
This method creates a new string corresponding to the concept class and concept matrix.
This method takes a
51024533		performs an undo operation on the current operation by restoring previous values and firing undo events.


This method handles the undo operation for a document, removing all edits and inserting new ones. It also handles undoable actions and undo permissions.

51024580		performs a revert operation on a variable, reverts the variable to a previously undone variable, restores the undo state, and performs undo and redo operations on the variable.
SUMMARY
This method is used to redo the
51024976		saves the current document to the source file passed in. 
It returns a string indicating the file type requested.

The method checks the file type to ensure it is a valid XML file and ensures that the appropriate file type is displayed
51025055		executes a JavaScript file and saves the contents in a file, prompting the user for input before running it.

This method executes a JavaScript file and loads the contents into a file.
SUMMARY
This method is used to
51121702		closes the database connection, clears the list, and sets the open variable to false.

This method fetches all the statements from a cache.

This method deletes all the statements from the cache.

This method loads
51122108		initializes the constraints and properties of a form.

This method initializes an object to be displayed in the GUI.

This method initializes an object to be displayed in the GUI.

This method initializes an object to
51122320		returns the value of the field as a string, either from a specific column or from the result set vector if possible.

This method returns the name of the field from the specified parent form.

This method returns the field value
51122387		returns the message of the ExceptionUtils class.
This method returns a concatenated string of all message components in the form of a list.
This method returns a string representation of this exception.
SUMMARY
This
51122440		returns a string for HTML input field that includes a hidden field name and a text input field to set or form data according to the value of the getPattern() method. A hidden field name is specified and is defined and the value is rendered
51122461		looks up a config object by its name and returns it, returning null if the object is not found.

This method initializes the servlet with data and form data, throwing an Exception if the method was called from an exception that
51122628		sets a field as an object at a given index in the system object list, validating row validity and handling an exception if found.
SUMMARY
This method is used to store the given object as an object in the system object
51122660		returns the key of the original table, whose key is obtained from the superclass's getKey method with the table name and the original from column of the original table.

This method returns a Vector containing all of the table keys.
51122718		retrieves the key values for a table or parameters input stream, decodes the key and logs it, then returns it.
SUMMARY
This method is used to retrieve the key value for a table or parameters input stream,
51122750		returns a string representation of the list of property descriptors, including the class name and information about the fields and their values.

This method sets the value of the property of the property descriptor bean to the provided boolean value.


51122774		retrieves a connection from the connection factory if the isFactorySetup parameter is true, otherwise it calls the populateConnectionFromFactory method to retrieve a connection from the queue.

This method returns the Connection object associated with the current connection.
51122872		retrieves the EventInfo object associated with an event ID from the event information map, but if the map contains a non-null event ID, it returns null. Otherwise, it checks if the event with the given ID exists in the map
51122895		determines whether an action can be kicked and its related information, such as updating the key info event, signing, or deleting the key.
SUMMARY
This method is used to determine if an action can be killed based
51122947		attempts to create an instance of a class by invoking MBeanUtils.invoke. If the invocation fails, the test passes.
Finally, invocation is null.  

This method calls another method of the MBe
51122960		retrieves the content type for the specified input field name. If the field list is empty, it will return an empty string. Otherwise, it will traverse the list and get the file corresponding to the field name and return its content type.
51122972		returns an InputStream for the specified file or null if the file is not found, containing a resource wrapper for the file parameter.

This method tests the getFileInputStream method by attempting to retrieve the InputStream from a LocalFile
51122988		retrieves the file name associated with a file by its handle within its name, or returns null if it's not found.

This method retrieves the filename associated with the given handle, or gets the file name from the handles object
51123002		converts a Document object to a String by transforming the Document into a DOM4J string.

This method transforms the Document from one Node to another. It takes an XSLContext, a relative XSLLocation, and an XSL
51123005		takes a string called data. It converts it to a ParsedRow object. If the ParsedRow object is not null, a new Document object is created and added to the current document. Otherwise, a new Document object is created and
51123151		rolls back any changes made to a result set to the connection after encountering an exception.

This method calls the commit method on a connection if autoCommit is disabled.

This method rolls back any changes made to a result set
51123169		initializes application resources, including the resource class loader, Application Resources, and other configuration.
SUMMARY
This method is used to initialize the Application Resources class, enabling sub-class initialization if necessary.


51123336		tests the time difference in milliseconds between the running time represented by the "TimeInMillisApproximate" method is greater than or equal to 15, then asserts that the date difference is earlier than the run time specified by the class Diff2
51123340		tests whether a nulls pass a null input using a utility method and asserts that the output is null or not null.

This method tests whether a null input is null using a utility method and asserts that the output is null.
S
51124355		sets the table name for the object and checks if the table exists. If it does not exist, it throws an exception.

This method sets the table name for the object, reloads the table, and updates the table's properties.
51124559		returns a string representation of the object. It includes the name, id, column array, and any fields it contains.

This method generates a String representation of the matrix. It first calls the toString method of the superclass to
51169773		generates the seed integer value of a randomly generated number using a loop to set and randomize the seed. If the seed is large, it shifts the long values by 16. It then calls another method to seed the generated seed.
S
51210655		recursively retrieves a file or directory hierarchy starting from a given file and adds it as it embedded to an ArrayList of files.

Please also collect all the directories and files within the directory with a given extension and have a higher
51210660		sets the values within a file based on a string, then performs string parsing and processes error messages before setting the lines and error messages.

This method initializes the file name field with a length equal to its first entry, if the input
51210687		reads a file or an input stream with a file name and cache ID. If the file or input stream is not found, it returns null. If the input stream is found, the cache is retrieved. If the cache size is less than 10
51210711		calculates a effective address based on the base address and index, calling the appropriate method, or a default address if the index is null.

This method performs an update on a specified buffer if the buffer is null. Otherwise, it
51210716		clears all elements and resets the offset values to 0.
This method iterates over a set of registers and asserts each register's value.
This method creates a new integer and then loads a word and sets the value of the Integer
51210758		takes a byte array, a size and the word address as arguments and performs a binary search on the given word address using the data provided by the method to perform operations on the array.

This method takes a short an unsigned byte array
51210820		deletes a file and updates the directory to reflect the changes.

This method initializes the HADO cluster, sets up its main GUI, which is a GUI for displaying messages, setting a log level, and adding an ActionListener
51210828		saves the number of variables, registers, registers info, registers a status indicator to the output stream, and assigns variables.

This method writes a message to the output stream and returns a boolean value.

This method writes the list
51210986		sets the address of the Java heap to "dirty" if the current address is not marked as "dirty" or "dirty" and the memory has a size of "size" minus 1.

This method notifies all registered NodeN
51217132		sets the current help keyword to the specified text, refreshes the current help, and sets the focus to the clicked help.

CONTEXT
This method responds to user events from the "About" button, prompting the user for confirmation before
51421009		ensures that the state of the machine has its state equals the current state, and if so, updates the parent region, adjusts actions for move or moveup/down actions, and updates the state component.

This method synchronizes the
51421189		creates a new subregion within the current region if it does not already exist or returns the existing subregion if it does not. If either subregion is already supported, it returns the existing subregion. Otherwise, it creates the subregion
51421257		ends the current region, reverts the region if necessary, and reverts the region after the name or a new state depending on the presence of the name.
SUMMARY
This method is used to end the current region, re
51468963		calculates an investment statistic for a given number of invoice numbers.

This method handles a request for market payment.

This method calculates the investment income.
SUMMARY
This method is used to calculate the investment income
51469010		sets a parameter from a map and if it is null, it sets all parameters in the map to null, which will become false. Otherwise, it calls the parent method setParameter with the parameter.

This method sets the name parameter in
51469016		initialises all the necessary components for the class, setting their properties, and potentially adding additional components based on the class it's defined.

This method initialises a test model by creating a new instance of the model, setting the name and
51469151		calculates and returns the cumulative probability variance of a given period in proportion to a specified performance variable. If the period length exceeds zero, it throws an exception. If the time period is less than a certain limit, it calculates additional cumulative probabilities
51469809		calculates the total number of children for a given ModelNode object by summing up the calculated value of its children.

This method returns a string containing all descendants of the specified ModelNode.
SUMMARY
This method
51469855		calculates the total value for a given result based on the child models, including their children, their model, and returns it as a double.
This method calculates the total value for a given result based on the sum of all the child
51516131		sets the endpoint address for a specific port in an application's port storage.
This method sets the endpoint address for an axis by creating a new StAX document and adding the object to the document.
This method sets the endpoint address for a
51576844		adds content to an HTTP connection, converting base64 and encoding dates. It also appends information such as URI, HTTP protocol, and status code.
SUMMARY
This method is used to add content to an HTTP connection and
51576882		generates a URL based on a target URL string, but throws a WorkloadException if the URL length exceeds a specified maximum size.

This method transforms a class using a specified transformation, optionally converting namespaces or URIs.
S
51577053		adds a primary key column to the table. It takes a primary key column name, a name, and a table name as input and adds it to the table. If the table does not exist, it throws an exception. If the table
51690119		splits the top two slots into smaller slots: one for a single kill, the other for all other Kill slots, and for that single kill.

This method merging a kill from a list of slots that are not present in another.
51690136		merges locals and stores the result in a collection, adding their runtime info to stop states and assigning a new KillSet to the variable killing.

This method merges gen kill states by removing those that are not present in thekill set
51690940		determines if a given operator can be used to predict matches of input operators based on their operands.
SUMMARY
This method is used to determine if an operator exists based on input operators and their sub-expressions.
51728031		guesses the Composition Rule to be used and executes it, which involves applying any necessary transformations and evaluating the solution.
This method executes the RuleList. The rule uses rule-based validation and can be specified with the parameters in the list
51728282		checks if a variable is a constant and throws an exception if it is not.

This method throws an exception if it is not a constant, otherwise it calls the checkVariable() method.
SUMMARY
This method is used
51728301		creates a clone of the current IdentifierTyper object.
This method creates a deep copy of the current IdentifierTyper object.
This method clones the current IdentifierTyper object.
This method clones the current Identifier
51728322		checks if the application has started by iterating through all exercises in the group and checking if any of them have been started.

This method iterates through all exercises in the group and checking if any are currently playing (currently) as default
51728324		checks if any exercise is processed based on whether any groups have completed their conditions to be completed.

This method returns the condition that the exercise has a cancellation.

This method returns an array of QuestionExercise's questions.


51728328		returns a list of exercises from a set of group iterators.
SUMMARY
This method is used to construct a new list with a list of exercises from each group of the group iterators.


51728448		takes an Expr object as an argument, checks if it is a FunctionApp, and then calls the newFunction method. It then translates the Expr object to functions, gets a function expression from the function expressions array, and reifies
51790601		creates a local cache directory and its associated properties. It attempts to create the directory based on a properties file and catches IOExceptions that may occur
51790656		returns an Image object from the source code.
This method sets the graphical object of the view to the specified object.
This method handles key down events.
This method handles key up events, it loads an icon, and sets the
51791367		takes a suffix to access, logs the suffix, opens the image page URL, and if it finds one, sends an image request to the page.

This method takes a file to be performed and sends an update request to the page
51791511		initializes the contact list by calling the superclass's initialize method and populating it with the contacts associated with the Flickr system.

This method recursively initializes the contact list by iterating through the public contacts of the Flickr system
51793342		checks if the buffer contains a given short value.
This method determines if the buffer contains the given value, taking into account the presence, lower and upper end positions.
SUMMARY
This method is used to check if a collection
51793350		checks if a map contains a key of type short by iterating over the entries and comparing each element to the key, adding length or hash to the map if key is not found.
This method adds a short value to the map, if
51825348		loads a DBRC file into the database. It parses the XML content of the file, and reads the sub-elements with the tag name "DBRCNAME" and "CBLogOut" to determine which properties this class
51825371		converts the non-"system string representation of a ResourceState object to a string with each user's name followed by a space and last character if there are any subsequent characters in the `str`.

This method converts the resource state into a
5250622		checks if there is at least one unit and if that's the end of the main job. If the current unit is the main job, it removes the customer from the list. The method also checks if the customer has finished a job and removes
5250671		adds a selection to the selection list and updates the GUI to reflect the new selection.

This method clears the selection list, adds a selection element to the selection list, and updates the GUI to reflect the new selection.

This
5250675		clears the old components, sets the set of selections for the tree, and updates the GUI.
SUMMARY
This method is used to modify the selected tree and any previously selected selections.


5269013		removes triggers for a specified Bot.

This method renames an imported trigger in the scheduler.
SUMMARY
This method is used to remove triggers for a specified Bot.


5269066		stops a botlet gateway based on an input parameter that is not a valid number.

This method logs an error if the stopBotletGateway method fails.
SUMMARY
This method is used to log an error
5269080		logs off the specified bot.
This method determines the correct token based on the authentication operator and request information provided.
If the authentication operator is invalid, the method tokenizes the request and applies the request as the session token.
If
5269121		moves an image file from one location to another in a feed, merging them if possible.
This method increments the size of the feed history.
This method adds a file to the history list.
SUMMARY
This method
5269122		sends an email containing a history of messages to a specific recipient, using the message's properties and a specific botlet's session ID.

This method periodically processes incoming chat commands and sends them asynchronously.

This method sends
5269174		checks if a user is logged in by either allowing access to a resource or the stored user if the user is restricted.

This method checks if a user is logged in to an address.

This method checks if the resource is authorized
5329643		indexes a lesson by creating an XML xmlWriter and adding tags.
This method adds a Lesson object to the lesson using the index method.
SUMMARY
This method is used to index a Lesson in a Java General
5329645		indexes a card by creating an IndexWriter and adding a card to it, then deleting the written card.

This method checks for unreadable characters in a text string and deletes them if they are found.

This method handles
5329667		calculates the number ofcise cards in the processing chain that have been previously unprocessed.
This method returns the number of unprocessed cards in the processing chain.
SUMMARY
This method is used to calculate the
5329678		extracts and removes all LongTermBatch objects from a collection, then trims them by removing each one, and returns the collection.

This method trims a collection of LongTermBatch objects.
SUMMARY
5329764		sets whether or not the side of the text is wrapped and resets the preferred and current size of the text area.

This method sets whether or not the side of the text is being edited.

This method sets whether or not
5329867		takes a Card object, a set of cards, and hides the front or reverse side of the specified card in the user interface. It also switches tabs based on the card's operator, target, target type, target type, target's current
5330073		resets the options panel by calling the reset method of the editCardPanel, clear the similarCardsListModel, and set the location and preferred size of the paukerFrame.
SUMMARY
This method is used to
5330128		updates the expiration of cards in a deck by checking if any expired cards are available and then updating them if they are available.

This method populates a hand label with the "name" and "Card" marks the card as either
5362512		creates and returns a control panel with a flow layout with a card layout, a control panel, and a background color. It then adds a load and load thread to the thread queue and creates a new Button object for each data entry in the
5362514		does not support constructors of a generic type, it takes an object type, a factory classes, an array of objects, a constructor, and a type and returns null.
This method tries to instantiate it if possible and return its value
5362559		adds a listener to the event topic that is selected as a listener in the view. It first checks if the label is already registered, then adds the listener to the listener topic if it is not already registered. Otherwise, it sets the type
5362609		removes and returns the first element of the queue. 

This method removes only the elements from the queue using a time interval.    This method takes a TaskAttemptInfo object and attempts to delete the task using the task.
5439420		initializes the registry with the provided host name and IP address.
This method gets the real and current instance of the ApplicationFactory.
This method locks the registry by access to the AccessLock.
SUMMARY
This method is
5439461		retrieves an InputStream associated with a resource with a given URI string. If the resource is not available, it returns null.

This method returns the URL for the given resource string. If the resource is not available, it tries
5439464		returns a URL object for the resource located at the given URI.

This method tries to obtain a URL resource associated with the given URI. If the resource is found, it returns its input stream. Otherwise, it tries to find and
5439481		returns a ServletOutputStream indicating the input stream for writing to the response. If the stream has already been initialized, it does so and returns it.

This method returns a new ServletOutputStream for writing to the original stream
5439489		returns the writer object for writing characters to the servlet response.

This method returns a new instance of the servlet with an opened buffer size and the current response.

This method sets the writer object for writing characters to the
5439520		sets the locale for HTTP objects and supports basic functionality such as setting the ISO country, language, and content type.

This method sets the locale for other objects to default and handles any encoding exceptions that may occur during this process.
S
5439548		returns the character encoding of the HTTP mime message as a string if the content type is GIF. Otherwise, it returns the default character encoding.

This method reads the PNG file header for the PNG file and returns it. It first
5439604		adds or updates an attribute with a given name and string value to the servlet context and fires appropriate events based on the parameters.

This method sets an attribute with the given name and value in the servlet context, firing a serv
5439616		retrieves a principal object from a HashMap with a specified username.
This method takes a string as an argument and returns the principal object corresponding to that string.
This method tests the getPrincipal() method by comparing the returned principal
5439643		checks if the "WebResource" collection matches a given method and URI by calling its "match" method. It returns true if the collection is empty, and false otherwise.

This method takes two arguments, a method and a URI,
5439660		returns the security role associated with the request, if the role is accessed; otherwise, it retrieves the role name.
This method allows a user to change the role associated with the request. If the user unmodifiable, the role
5439749		asks the user with a confirm popup message using a separate thread that prompts the user for confirmation before deploying a component.

This method handles a key release event.

This method handles focus lost event.

This method handles the text
5439853		adds a resource loader to a collection identified by a given locale.

This method sets the localizer for a given locale to the specified resource root.

This method sets the URL for a given locale to the specified resource root.
5439900		creates a JMenu with the label "Look & Feel" for a given JMenu. It adds the JMenu to the JMenu and adds a button to the Look & Feel JMenu.
This method sets the tooltips for the
5439994		creates a new I_JoSession object and returns it. If it's not already created, it sets the current session to the specified session by fetching the appropriate factory based on the specified factory key. It also checks if the session has
5440061		returns the ID of the active SMT session.
This method returns the username of the selected SMTP session.
This method returns the password of the password input field.
This method returns the session ID of the active SMTP session
5440169		returns a clone of the object, and if the parent of the object is an instance of ServletClassLoader, it clones all of the delegates for the URL in the parent.
SUMMARY
This method is used to clone
5440179		removes all objects from the map that match a specified object, and if the object matches the specified pattern, it updates the target for the object.

This method removes all objects in the list associated with the specified object and iterates over
5440180		removes all occurrences of an object from a map, only if the object's metadata value is a string.
This method takes a map as input and takes an object and an element as input. It uses the data structures to accumulate and rem
5440235		initializes an OutputStream for writing data to an OutputStream in a JoServletResponse.
This method returns true if the OutputStream has been closed successfully.
This method returns true if the InputStream has been closed successfully.
This
5440247		writes to the output stream and flushes the data if it has not already been written.
This method writes a byte to the output stream and starts writing a new line at the current line.
This method writes a string to the output
5440266		returns an enumeration of parameter names.
This method returns an enumeration of parameter names for the given model match, if the model match has no input parameters, or generates parameters for the model and check.
SUMMARY

5440341		processes HTTP requests, including retrieving attributes from links, and populating a hashtable with attribute names and values.

SUMMARY
This method is used to populate the request attributes map with attributes from the input request object.


5440379		initializes the servlet by configuring the parser and element, setting the SSIPage, appending the call log, and initializing the listener.

This method is used to load a sample cache object from a given file and data
5440406		returns a host object from the given hostname, either from the getHost method if it is null, or using the ((I_JoHost)hosts.get(aHostname)) method.

This method returns the host
5440415		returns an instance of I_JoHost, it first retrieves the host from the request header.
Once a host is found, it determines the second character of the host name and sets it as the host in the HttpHost object
5440508		returns a small image icon for a component, using a small image icon if the icon exists in the classpath.

This method attempts to get an image source for the component, checking for errors and returning the size if no source is
5440509		retrieves the large image icon associated with the object if it exists in the classpath. This method first checks if the largeImageIcon variable is null, if it is, it initializes the icon using the createImageIcon method. If
5440598		adds a security role reference to the domain object, storing it in either a map or a list map.

This method tests the addSecurityRoleRef method.

This method tests the addSecurityRoleRef method in the DomainObj
5440682		retrieves the realm mapping associated with the JBoss security manager. If the realm mapping is null, it will access the security manager through the Java Naming and Directory Interface (JNDI).
SUMMARY
This method is
5440706		returns the name of the object after splitting and removing whitespace, and skipping white spaces.

This method returns whether the input field should be validated as a normal date, with the provided year, month, and day of birth.

5440720		enlarges a buffer by one position, reusing at least the previous position to ensure that at least one position is at the end of the buffer.

This method normalizes or encodes a byte array into character arrays, throwing an
5440742		sets the reference ID for a node in the servlet context. If the node is null, it logs a warning message indicating that resource references are not supported yet. It also closes the window and calls the parent class's doPostCreate method.
5440773		returns a PageContext object initialized with data from a delegate server and application chain, and initializes it with provided parameters.
SUMMARY
This method is used to initialize PageContext at request/response/system.
SUM
5440799		serves as a service that requires precompilation conditions. It checks if the request is precompiled and if not, calls the super service method. If the request is precompiled, it attempts to preload the request and calls the
5440858		sets the scratch directory by normalizing the given directory name by removing any dots in the name. It then builds a new file object with the modified name.
SUMMARY
This method is used to ensure that there is no non-
5440996		writes the end of the page and related field of each write field method.

This method overrides the processWriter method to write the word break after the given Java code writer.
SUMMARY
This method is used to
5441019		sets the current session's ID and checks if the log is frozen. If not, it removes the existing session, adds it to the context, and sets the maximum inactive interval for the new session. If the log is frozen, it checks if
5441023		returns the current Principal session object.
This method returns the Public Access Control List (ACL) header field.
This method returns the Session Attributes List (atts) in the current request object.
This method returns the Session Attributes List
5441101		returns an integer value representing the starting position of the tag. If the tag is complete, it creates a Tag object, sets its attributes, and writes it to the JspWriter. If the tag is not complete, it sets the total
5441132		increments the value of the current repetition and checks if it is less than 0. If so, it writes the outer tag to the enclosing writer. If successful, it sets the body content to the value returned by the method.
This
5441225		creates and returns a new session object for remote communication. Messaging systems is incomplete.
SUMMARY
This method is used to generate a new session object for remote communication.


5441226		adds a provided session to the list of active sessions associated with the connection. If the session already exists, it throws an exception. It also determines whether to use caching for efficient read/write operations. The method then iterates over the array
5441323		tries to parse an input stream using a given PushbackReader, skipping after encountering an '<'. If it encounters an end of the stream, it parses input data until the end of the stream is reached.
SUMMARY
5441390		adds the specified classpath to the class path if the given path is valid. If the given path is not valid, it returns an error stating that the path cannot be added.

This method creates a cache of all possible paths specified
5441441		checks if the system is restartable by iterating through all listeners and checking if any of them have the necessary port and group IDs.

This method creates a socket and a data sink for incoming connections and starts the thread for sending.

5441509		returns a string containing the date, error, and cause of the exception.

This method converts a throwable message from a date and time format to a string.

This method converts a throwable message to a string.

5441521		sets the level of the logging and notifies all listeners of the log control.
SUMMARY
This method is used to notify all listeners of a log control.


5441540		sets the maximum number of connections a connection can connect, creates a connection state panel with attributes from a connection state command, sets an attribute on an end-of-band connection, and updates the maximum handler threads value.

This method ensures
5441547		sets the minimum number of threads a queue is running.

This method replaces the listener field with the maximum handler thread.

This method increases the maximum handler thread count to the ceiling of the maximum handler thread count.

This method
5441553		expands the capacity of the char array to a specified minimum.

This method copies the contents of the char array start index to the new array start index, and then calls the superclass's copyElement method.

This method copies
5441580		appends a string to the UnSyncStringBuffer, expanding the buffer if necessary and updating the string at the end. 
This method throws a TextException if the input is null or if the count is less than the maximum length and the
5441586		appends an array of characters to the UnSyncStringBuffer.

This method returns the String value of the getTaggedValueData() property.
This method returns the tagged value data for the getTagData() property.
This
5441593		appends an array of characters to the end of the current string buffer. It expands the capacity of the current string buffer to accommodate the given number of characters. It then inserts the given new characters into the current string buffer starting at the specified offset
5441642		takes a path as input and normalizes it by removing any commas, adding trailing dots, and splitting quotes.
SUMMARY
This method is used to normalize a path by removing import-like syntax.


5441667		deletes a substring in the provided source string. If the delimiter is not finished, it returns without doing anything.

This method deletes a substring in the provided source string. If the delimiter is finished, it returns
5441680		deletes the character at the specified index in the UnsyncStringBuffer, and throws a StringIndexOutOfBoundsException if the index is out of bounds.

This method swaps the entries in the two ArrayLists sorted by a
5441784		resolves an entity based on the public ID and system ID provided.
This method reads an entity using a provided entity and returns the first valid entity found.
SUMMARY
This method is used to read an entity using a provided
5441814		writes an attribute list to the output, including any named tag attributes.

This method writes an element's attributes, including its name, value, and namespace.

This method writes an attribute list to the output, initializing it
5441818		writes a processing instruction node to the output, adding the processing instruction (?) with the appropriate indentation depending on the value of the 'indent' flag.

This method writes HTML markup for a given document, including properties and
5441835		adds a character to the string at the specified offset. If the new character is not in string, it replaces the existing character with the specified character.

This method removes a character from the string at the specified offset.

This
5441971		reverses the order of the char array representation (STRINGBUF) by removing the specified range of characters.

This method deletes a specified range of characters from a string representation.

This method inserts a character at a
5441972		sets the chunk file extension to the specified value, converting the first character of the value to "ASCII".
This method reads the default charset and assigns it to the reader.
This method sets the chunks extension to the specified value.
5441982		finishes writing data, including headers, compressed data, and trailer. It closes the block file and writes it to a byte array output stream.

This method closes the file output stream and throws an IOException if an error occurs.

5442019		returns an enumeration of parameter names for the given map of parameters.
SUMMARY
This method is used to retrieve the names of parameter names from the map of parameters.


5442042		retrieves an integer value from the HTTP response based on the specified method, name, and data.

This method updates the integer header at the specified index with the given integer value. If the value is the default value, it sets
5442044		reads a response line from an input stream using a servlet input stream, throwing an exception if the line exceeds the bound length.
This method reads a UDP Data-Length-Length stream from an input stream, throwing an exception if the stream
5442047		retrieves the value of the specified date header as a long. It first checks if the value is null and if so, returns. It then gets the HTTPDate from the header string and returns it. If the date is null, it
5442112		stops all services, removes them from the array of service instances, and sets it to null.

This method stops all services using a service factory.

This method stops all services.

This method stops all services.

5442113		rebuilds the service object using the provided metadata.
This method rebuilds the listener with the specified entity class name and base value.
SUMMARY
This method is used to rebuild the listener with the appropriate metadata.


5442114		builds and registers a proxy for plugin scripting. It reads metadata from the configuration service and starts a new thread to run the services on that thread.

This method launches a debugger from the Jetty server. It parses the specified plugin
5442235		tests that invoking the 'correct' method of 'requestLine` throws an `HttpException` when an unknown method is not supported in the invoking class. 

This method then invokes the 'expectedMethod' in the 'handler'
5442305		initializes the servlet by setting the servlet configuration, calling the super class's init method, and then getting the host and to, from parameters from the servlet configuration.
SUMMARY
This method is used to initialize the
5442317		retrieves the value of the resource "method." mapped to the multi-method name in the HTTP request.

This method returns the value of the multi-method name in the HTTP request.
SUMMARY
This method
5442331		initializes the servlet by retrieving initialization parameters from their configuration and extracting the status code, location, and status message.

This method throws a ServletException if any required initialization parameter is missing, or an error message is logged when the
5442340		This method sets the HTTP request and sends the request as the response by calling its doGet method. It sets the MIME type to "text/html", then prints the head and body of the response. It also prints the footer and
5442358		returns a string that includes the creation date and a link to the recipient email with text "My Password : java.lang.System.gc();"; it appends the name and email of the emailMessage object to the end of the string
5468195		adds imported packages to the system by popping elements from the stack, pushing their name to the "used" stack, and converting each element's name to its corresponding package name into a string.
SUMMARY
This method is used
5549044		finds and returns the value associated with a given key in a map, or returns a default value if the key or value is not found.

This method looks up a method in a map by name and value, passing the name and
5549055		handles errors by displaying a message and logs exceptions.

This method logs an error in a JSTL handler, then returns the default error handling class.
SUMMARY
This method is used to log errors in a J
5549114		converts an object to an Object. If an exception occurs during the conversion, it throws an ConversionException with the message "Cannot find" followed by the file path.

This method retrieves a File object from a context object.
5549148		returns the session ID of the current thread.

This method retrieves the session ID from the HttpServletRequest object.

This method asserts that the session indicates that the current user was not logged in.

This
5549179		calculates the total price of a book based on the total price of its holders and total amount returned.

This method calculates and returns the sum of the total prices in an order.

This method throws an exception if the '
5549180		iterates through all items in each list and calls the destroy() method on each item. If any errors occur, it prints the stack trace.
SUMMARY
This method is used to remove all items from a list after the clear
5592284		creates a new document from a provided wpXSDEngine object and returns the resulting document.

This method creates a new XML document using the provided xmlSchema object. If the xmlSchema object is null, it
5592346		gets the child node at the specified index within the parent node.

This method adds a button to the end of the node.

This method finds a node at the specified index in the data series. It iterates through the data
5592356		takes two nodes as input and returns a boolean indicating whether the sources have valid identifiers.

This method splits a string into two parts (three identifiers), one with the first being a string "sources"; the other is a string "
5592383		inserts a node before the reference node in its parent node.

This method inserts a new node before the given content node or as a reference node if the content is null.

This method inserts a node before the content node or
5592423		determines if a node is a leaf node by checking whether its children have no children and if it has attributes.

This method checks if an object is a leaf node by checking if it has any attributes.

This method takes
5592426		returns the number of child nodes for a given XML node, considering attributes and nested nodes.

This method recursively counts and returns the number of children of a given node in a tree structure, excluding tags.

This method
5592440		returns a string representing the file extension of a file, separated by slash.

**getDescription**: Returns the description of the file.

**getErrorDescription**: Returns the error description of the file.

**
5592445		shows an editor based on the menu item that was triggered and initiates the editor popup.
This method checks if the event is a popup trigger and displays a popup menu if it is.
SUMMARY
This method is used to
5592473		saves a list of tab views that are not altered to the focused frame, to the last focused frame, if any of them exist.

This method prompts the user for a file name, then creates a FileWriter to write the view
5592501		Renames a tab if it exists in the system by replacing the existing tab with the new one given the old file, the new tab, the tab name, and a custom title. It also checks for the existence of the old tab before ren
5592506		returns a Reader object that can be used to build or read whitespace from a Reader. If the document does not exist or the scan reader cannot be opened, it throws an exception. If the document is not null, it opens it.
5592510		overrides the getReader() method and returns a StringReader object. If the getDocument() method returns null, it calls the getReader() method to obtain the text of the document, and then returns the string Reader object.
S
5592516		handles events by calling the handleEvents method depending on the type of event.
SUMMARY
This method is used to indicate that a specific event has occurred.


5592524		returns the title associated with the specified tab.

This method loops through the tabs in the tab list and returns the title associated with the matching tab.
SUMMARY
This method is used to convert the tab match to a
5592526		sets the active tab in the tabTable to the specified index, and updates the action.

This method deactivates the selected tab in the tabTable, clears the list, closes the toolWindow, and sets active for the current window
5592529		adds a window to the menu bar and creates menu items for different actions based on the window's title.

This method creates a menu model using the menu model manager and adds an "Gantt" separator to each menu item
5592544		updates the number of tabs in the tabbed pane with the specified number of tabs.
This method tests the updateScanner method by updating the scanner with various input values and expected output values.
This method tests the updateScanner method
5592554		loads an XML document, extracts the elements, sets the properties of the model, updates the tree model with the data, and adds a listener to the tree view to find and replace the root node.

This method sets the XML document,
5592561		sets the next window to the specified workbench window and throws an exception if there are no more projects open.

This method does not return any value.

This method sets the current window to the specified workbench window, so that
5592567		sets the text of a component by configuring a timer from the parent class, then sets the text, and repeatedly sets the text on the component based on a property.

This method redoes the action by setting the text of a component
5592614		displays a dialog for the user to select a setting, prompting for a value if necessary.
This method creates and returns a dialog box for the user to input their options, allowing they to navigate between options channels.
This method creates and
5592616		adds a listener to the document in DOM mode.
This method adds a DOM object as a DOM listener to the XPath.
This method adds a DOM object as a DOM listener to the XPath.
This method adds a DOM
5592622		takes an XPath query string and a document object as input, and returns a NodeSet. It iterates over the nodes in the document, applying the XPath to each node, and appending the resulting NodeSet to a string buffer
5592626		performs a deep copy of all nodes in the graphical representation and repaints the component.

This method copies the selected node into the canvas.

This method copies the specified node into the canvas.

This method copies the selected
5592630		loads and displays an XML file containing a tab. It loads the tab from the specified file if it exists, or loads it from a new file if it does not.

This method loads a tab into the GUI by retrieving the tab model
5592634		loads text from a Reader object into a tab using the iText library, and handles exceptions that may arise during the parsing process.

This method loads a tab given a Reader object as input.

This method loads the tab given a
5592636		parses the grammars consumed by the recognizer and the wpGrammarVector.  If the wpGrammarVector is valid, it validates it and parses it if it is not null.  This
5592658		converts a WPNodeN to a list model by iterating through the children of the WPNodeN
5592664		edits the document model if editMode is true.
This method edits the document model if editMode is toggled.
This method edits the document model with a new edit mode.
This method saves the document to a file.
5592666		executes the treeSelect method of the domEngine object when a treeSelection event occurs. If the selection event occurs or the root node has not changed, it sets the action to SELECT. It then gets the parent node of the selected node
5592669		updates the action based on changes in command-line arguments and updates the GUI and masks with the new actions.
SUMMARY
This method is used to prevent multiple keystrokes and process the results of a mask changes.


5592709		populates the fields in the GUI with the specified String array. It also handles enabling or disabling the zoom function and checking for equality of the fields in both arrays.
SUMMARY
This method is used to populate a JCombo
5592765		converts an object to a `DefaultListModel` if it is not null. If the `ganttType_] is a `GanttTypeSelection` instance of `WpGrammar`, it converts the `
5592780		generates and returns a string representation of the object, including the name and file extension.

This method creates a string representation of the object. It includes the value of the file variable index, comma, and the formatted value of the corresponding
5592786		resets the reader by setting the stop and resetting the reader, starting the segment, after checking if the reader is valid, marking the start and resetting the reader.
SUMMARY
This method is used to reset the reader
5592791		discards the data at the current segment, then reads it and checks if the current position is at the offset.
If the current position is not at the segment, it loads a new segment.
If the current position is at the offset
5592793		reads a segment of an array and returns it. If the length of the segment is greater than the bounds of the this array, the method sets the length and length to 0 if the segment is `null`. If the length is -1,
5592845		takes a JAXBContext and an InputSource as input and attempts to retrieve the contents of the document root. If the document root is not set, it loads any libraries. It then loads each library into a collection and puts it
5592867		updates the user interface with changes made to the application's current document. It checks if the document has a new name, and if not it prompts the user to enter a new name for the document. It then updates the name field and the
5592877		returns the current offset text in the target element by getting the current caret position and calling the getMain method.

This method returns the end offset of the target element by retrieving the current caret position if the target element has a
5592911		renames a file by renaming it with a remote file if it exists.

This method prompts the user to confirm the action, either prompting the user for a confirmation or confirming with the user. If confirmed, the method recursively
5592938		sets the file action default stat of a mask event.
This method notifies a mask handler that the file action has changed.
SUMMARY
This method is used to notify a mask handler that the file action has changed.


5592945		prompts the user for a file to save, creates a temporary file, and exits the program.
This method closes all windows and removes any associated frames, if any.
SUMMARY
This method is used to exit applications
5592953		saves the current project as an XML file if no project is saved and checks if any project is altered.

This method checks if the project is alreadyaved, and if not, it saves the project as it is. If it is
5592954		sets the default action for the tab action. If the variable tabActionDefaultStat is less than zero, it sets the tab action default stat. If the variable tabActionIndices is greater than 3, it copies the tab action indices for the
5592958		sets the default values for the editor action, including the base action, the user-entered mask, the editor action to the default status, and any associated editor action mask.
SUMMARY
This method is used to update the
5592989		sets the default window action stat for the specified window and triggers a mask event indicating that it has changed.
This method sets the default window action stat for the specified window and triggers a mask event indicating that the window has changed.
SUM
5593012		sets the default desktop action stat for the specified action index.

This method sets the desktop action for the specified action index by firing a mask changed event.

This method sets the desktop action for the specified action index by invoking the set
5593059		sets the default action for the specified project and projects.
This method displays a dialog for the user to configure the projects and sets the updated flag to true accordingly.
This method shows a dialog for the user to open a file based on the
5593092		adds or updates the DOM action that has no default value.

This method sets the base actions for a mask, then populates an event with the default action. Since it is not defined, this event is then added to the event
5593135		sets the XML action default status and fires a mask event based on the current active mode.

This method sets the XML action default status, adds an XML action index, sets the xML action default stat, and iterates through XML action
5593178		sets the default values for the help actions when they are the current state.

This method replaces all occurrences of the specified command in the provided array with the action command stored in the field.

This method fires a mask change event and
5593206		sets the transformation actions and default stat values for the viewer and fires a mask event.
SUMMARY
This method is used to fire a mask event.


5593222		handles the changes in mask and enables or disables the corresponding actions based on the mask's group.
This method updates the active mask state based on the input mask.
This method updates the active mask state based on the input mask.
5776165		iteratively calls the moveCreatures method on all chunks in the chunks_ map, then iterates through the states vector to check for equal states and call moveCreatures or moveAll with the corresponding states.

This method tries to call
5776472		This method draws a shape, moves the path, and iterates through the cover, drawing the shape, and finally calls the draw method on the rounded shape with the given offset coordinates.

This method draws a shape at the specified offset and
596288		notifies the registered CellEditorListener when there is data to be edited.

This method iterates over the listeners registered with the listener list, notifying those that are interested in the event.
SUMMARY
This method is
596352		sets the row height of the JTreeTable to the specified value.

This method sets the layout and row height of the component to the specified integer value.

This method adds the component to the container.
This method sets the
6220660		appends a node to the current node in a sequence by appending the path to the current node in different ways depending on the direction. Any parallel steps in a loop may be broken and the final node may be merged with the current node.
6220690		retrieves a specified type of elements from a list of entities and returns them as an array of objects.

This method returns a collection of elements that can be used by the entity.

This method checks if the specified name is
6220793		compares two Sentence objects for equality by checking if their id, vrno, last update, document, and collection items are equal. If all objects are equal, the method returns true.

This method compares the id, v
6220967		returns an ArrayList of the nodes that have not been used.
This method returns an ArrayList of all nodes in an Environnement.
This method returns an ArrayList of all nodes in an Environnement that are
6220979		retrieves all the sentences in the SimTime object and returns them as an ArrayList of Sentence objects.
This method returns the year of the current time.
This method returns the month of the current time.
This method returns
6221215		serializes the content of an object to disk.

This method serializes an object to disk using a FileOutputStream.

This method serializes a new object to disk using a FileInputStream.

This method serializes
6221236		compares two Corpus objects for equality based on their sentences, IDs, identifiers, and order.

This method returns a boolean indicating whether the given object is the same as the current object.

This method handles different types of objects,
6248374		checks if a resource is shared or not and the resource is not contained within an OMTK's compilation unit, taking care of both the type and static fields.

This method checks if a given resource can be compiled to a resource,
6248384		returns true if the resource being checkedAsResource is an instance of the IResource interface, and the resource passed in is an AntlrCoreProject, otherwise, it returns false.

This method locks a resource and, if the resource
6248401		clears the list of controlled resources, clears the tree set and selection, and updates the GUI of the interface.

This method is called when a property in the GUI property changes. It first checks if the dirty flag or dirty state of
6248405		returns the string representation of the object by first attempting to use a getURI() method to get the value, then using the default toString() representation to return the value.

This method returns a string representation of the object.

6248489		checks if multi-file mode is enabled by reading configuration parameters from the XSD file.

This method returns whether multi-file mode is enabled.

This method retrieves the value of the attribute "MODE" from the configuration XML
6248515		traces the execution of the method and passes information about the model object and its state change to all registered listener objects.

This method notifies all registered listeners that the resources have been changed.
SUMMARY
This method is
6248545		checks if the content of the resource has been changed and prints the changes to the status page if there is an exception.

This method checks whether the resource has changed and print the changes to the status page if it has.

This
6248547		posts LabelProviderChangedEvent changes to the registry by generating the corresponding event classes. It also adds this list of events to the event classes.
SUMMARY
This method is used to asynchronously post LabelProviderChangedEvent changes to
6248567		creates the view of the editor, ensuring that it has a valid Table parent.

This method creates the partner link text field and JButton, setting its layout, tool tip text, image, and text.

This method creates
6248599		creates a SWT label with the specified text and adds it as a child component. 

This method creates a SWT-specific SWT composite with a specified layout and adds it to the composite. 

This method tests
6248600		creates a progress monitor part for the given parent composite and composite layout. It sets layout data, horizontal span, and text for the progress monitor. It then returns the created part.
SUMMARY
This method is used to create
6248608		creates a button container for a button widget that allows users to input a number to ensure it will be entered.

It creates a text field named "number" and sets its layout data.

Finally, it returns the text field
6248612		creates a group with the given parent and text and returns it.

This method initializes an OS shell using the `createShell` method and sets up input and output streams for communication with the shell.

This method creates a
6248749		tests the unlockOrdering functionality of the sequenceIOHandler by calling different methods to retrieve sequences. It then unlocks a user based on the specified order by setting the order based on the lock value and the order type. It also asserts that the lock
6248752		tests the service's ability to add a sequence number to multiple lines of a document and check if the expected sequence number is returned for each line.

This method tests the behavior of the service when a line is added to multiple lines at a
6248754		is a test method that calls the testInsert method while also catching any exceptions that may occur during execution. The method asserts that the sequence number is incremented by 1. It then retrieves the inserted documents using the service and asserts that the document
6248755		tests the functionality of the deleteLine method in the service by verifying that a specified sequence number is present in the given document and that the deletion is successful.

This method asserts that the service does not return a value when called with invalid parameters
6248756		tests the updateLine method by updating both the line numbers and their details before and after adding a new line to the document. It then verifies that the sequence number of the updated line is correct after the line number is added and the new line
6315264		searches through a tree of tree items and returns the first matching tree item within the specified tree item ID.

This method searches through a tree of tree items, searching for a node with a specified ID within the specified tree item,
6316275		selects an item in a tree view using the specified package name, displaying the selected item in an element.

- This method displays the main page of a project, including its name, summary, and other details.

- This
6316602		builds a function object based on the type of a given FunctionNode. If the FunctionStack is not empty, it populates the Function stack and sets the first child of a parent. It then sets the current property of a given StackComponent
6350640		disconnects from the client, sends debug messages to their associated children, reads XML data from each body, and waits for a response to the client.

This method is a part of a game application, where all player and other player
6424547		generates a hash code based on the source, parameters, and parameter count for an object.
This method returns the hash code value for this object.
This method returns the hash code value for this object.
This method returns the hash
6424616		adds an instance of a plugable to the framework, first checking if the registry has a plugin class with the specified name and adding the instance to the registry if so.

This method adds a plugable to the registry if it is
6424617		removes a plugin by taking in a string array of plugin names, the integer value for the plugin type, and a boolean indicating whether to delete old plugins or not. It attempts to get an iterator for a list of plugins, iterates over
6424624		defines the actions that occur when an event occurs while listening for incoming events. It retrieves the source of the event and the given key for the event. If the source is found, the method attempts to cast it to a Plugin and then
6424632		creates a new manifest by setting the manifest file and adding the plugin class name to the manifest.
This method is the main method of the program, it is done by calling a separate method called createManifest_1, passing in the
6505311		refreshes the attributes of an MBean named MBeanInfo by retrieving the information from the MBeanInfo, initializing the attribute attribute map, and getting the values of the MBean attributes.

This method sets
6505315		refreshes the MBean-style operations for all managed components.

This method calls the refreshOperations method on the object with the object's type.
SUMMARY
This method is used to refresh the MBe
6505385		retrieves the value of a specific attribute from an object by its name.
This method returns an array of values from the attribute nodes referenced by the superclass in the method.
This method returns an array of values from the attribute nodes
6505419		sets up the viewer control using a given parent composite. If parent is null, it will return. If it is not null, it checks the parent hierarchy to determine if one is larger or equal to the current object type. If not, it
6505425		This method handles the context menu when a viewer is represented by the menu manager. It checks if the viewer is a JmxView, and if so, it calls the hookContextMenu method on hooking the context menu with the viewer.

6505494		hooks a selection change listener to a viewer if it is not null and the first element is an instance of Server, and enables another action if the first element is not an instance of Server or it is connected.

This method registers key
6509043		tests various scenarios of the ArrayIterator interface, including Iterating over an arrays, validating the remaining elements, and iterating over another array.

This method tests the Iterator interface, including resetting and moving elements to the beginning of
6522402		removes a portlet window session with the specified window ID and logs the removal if trace logging is enabled, then returns the removed session.
SUMMARY
This method is used to remove a portlet window session with the specified window
6522410		sets the URL generator for the object and logs the start and end of the operation, then validates that the URL generator has been set.
This method sets the URL generator for the object and logs the start and end of the operation, then
6522519		returns an instance of the Logger class created using the given class and properties.

This method instantiates an instance of the Logger class created using the defaults.

This method uses the given property name to look up the corresponding
6522563		generates an active handle for the specified URL and increments the counter.

This method generates a unique password.

This method generates a unique handle.
SUMMARY
This method is used to generate a unique handle for a
6522596		deregisters the object if it can be deregistered, otherwise it throws a WSRPException.

This method logs the deactivation of a producer when deregistering the object.

This method logs the deactivation of
6522606		checks if all of the parameters map elements are defined in the portlet context and returns true if all are defined, otherwise false.
This method checks for duplicate portlets in a portlet context and throws a MissingParametersFault exception if any
6522612		checks the DestroyPortlets request object for the DestroyPortlets instance and throws a fault if it exists.

This method is used to check the DestroyPortlets request object for the DestroyPortlets instance and throws a fault if it exists.
6522636		checks if the object is empty and throws a MissingParametersFault exception if it is. It then validates the input object by calling the check method with the object's properties and returns false if the validation fails, indicating with a failure.

6522676		checks if an UpdateResponse object is valid, throwing a MissingParametersFault exception if it is not.
This method checks the UpdateResponse object's session ID, portlet ID, and window states.
This method checks if the UpdateResponse
6523307		returns a portlet by ID, first checking if it's not already created, then using GroupPortletLocalServiceUtil.getPortletById and throwing an exception if it's not.
SUMMARY
This method is
6524643		is used to compare two MyUrl objects for equality by their respective URLs and descriptions.

This method is used to compare two objects for equality. It first throws exceptions if either object is null or not an instance of MyUrl, not an
6525293		checks if two NewsNoteData objects are equal by comparing their titles.

This method checks if all the fields in the class are equal and returns a boolean value.

This method compares two NewsNoteData objects based on their subject,
6525800		returns the repository path for a given class.

This method generates a title from the repository path provided in the configuration.

This method checks that the repository path returns the expected wiki anchor string when given the class name and wiki name
6526359		checks if a category belongs to another category or any of its children.

This method retrieves the category type associated with a category.

This method determines if a category belongs to another category based on whether it has a custom category type
6526536		calculates the number of pages and returns an integer value.

This method gets the number of pages it contains in a list of hits.

This method updates the bookmarks with the bookmarks for some more pages on the currently
6527329		takes a URL and parses it into an RSSFeed object. It sets the RSSBean object of the RSSBuilderImpl to the RSSBean for the StringBuilder.
SUMMARY
This method is used to create an
6527353		retrieves the link content for a portlet based on its ID and content ID, version, and layer ID. It constructs the link in HTML using predefined page parameters and links it to the specified content using WML formatting, displaying the
6528540		checks in a content and throws an exception if it fails to check it.
This method checks in a versionable content and throws an exception if it fails and the version is not allowed.
This method checks an author's name and throws an
6528551		recursively checks out a specific node.

This method retrieves a list of content based on a checkin action.

This method tears down a content management system.
SUMMARY
This method is used to retrieve
6528563		calls the call_checkOutById method with the specified id, throwing a runtime exception if an error occurs. If an error occurs, it logs a warning and throws a CMSRuntimeException with an error message.

This method starts
6555612		updates a MBBan object after calling a listener's onBeforeCreate, onBeforeUpdate, onAfterCreate, and onAfterUpdate methods. It then iterates through the listeners and calls either the onBeforeCreate, onBeforeUpdate, on
6558552		returns an instance of the friendly URL mapper. If the friendly URL mapper class is not specified, it throws an exception.

This method returns an instance of the friendly URL mapper. If the friendly URL mapper class is
6558628		returns an instance of a URLEncoder, first checking if it has already been initialized, initializing it if needed, and returning it.

This method returns an instance of a portlet context if it exists and if so,
6558706		returns an instance of the PortletDataHandler for the portlet's ID. If the object is not found, it is created using the PortletBagFactory. The PortletDataHandler is then used to populate the PortletData
6558887		returns an instance of the component MessageListener. If the component MessageListener does not exist, it creates a new instance and adds as a listener to it.
SUMMARY
This method is used to get an instance of the component
6558997		returns an instance of the SocialActivityInterpreter class. If the instance is already cached, it is retrieved from the ObjectCache or returned from the portlet bundle.

This method returns the instance of the social activity interpreter. 
6559085		returns an instance of the SocialRequestInterpreter class, obtained from the portlet bag if it already exists it is returned. Otherwise, it creates a new instance with the specified class and initializes it.

This method returns the
6559370		returns an instance of the WebDAV storage class. If no class name is specified, a new instance will be created. Finally, the class from the cache is retrieved from the instance pool and returned.

TODO:	
6561058		checks if a given portlet has a specified portlet mode.
This method gets a list of columns and iterates through them to determine whether they should be filled with portlet settings or not in the list.
This method adds a header
6561333		returns the context path for the current portlet, taking into account the virtual path and portlet name if the context portlet is a WAR file.
This method resolves the virtual path of the current portlet, taking into account the port
6584325		sets the `b` array to all instances of `DayAndPosition` created with its `byDay` field to the value returned by `getByDay`.
This method updates the `byDay` field to `null` if the
6584326		checks if two Calendar instances return true for each of the values of the instance variables dtStart and dtEnd. If either of the values are non-null, it returns true; otherwise, it returns false.
SUMMARY
6605968		returns an instance of the SocialActivityInterpreter interface, either from the portlet bag or from a string pool, depending on the connectivity of the portlet.
This method creates a new instance of the SocialActivityInterpreter instance
6606047		returns the instance of the SocialRequestInterpreter class for the portlet if the user is a WAR file, otherwise it returns null.
SUMMARY
This method is used to obtain an instance of the SocialRequestInterpre
6628564		sets the start date of the month.
This method sets the start date of the day.
This method checks if the start date has changed and if so, saves the change date of the day.
This method checks if the start date
6647204		returns a List of all the portlet modes.

This method adds all service portlet modes to the object, including portlet modes and resource modes.
SUMMARY
This method is used to get the all portlet
6833636		sets the size of all the JButtons to match the preferred size of the button. It then finds and adds an array of Swing components for each one. The array of Swing components is arranged using a CellConstraints object that specifies the
6833647		This method processes events from a drag and drop operation, transfers data to a JTextPane, pastes the inserted text, and refreshes the display.

This method pastes the selected text after the transfer is handled by the Transfer
6833673		takes a cursor position and an array of tokens, and iterates over it, applying either text or paragraph styling rules to each token based on its type (dirty, bolded, or escaped).


6846181		This method, method, _populateSingleTagPositions, populates the list of tag positions with the integer values read from a given file at a specified line and starting index. This method also contains a switch statement and four private manipulate methods
6846186		replaces the form name in a string with a new name specified in the argument, throwing an exception if the input is invalid.

This method takes a string line and replaces all instances of "name=" and "id=" with corresponding HTML
6846236		returns the end index of an attribute within a given tag by searching for occurrences of the attribute on the first occurrence of the tag with the attribute name "att".

This method checks if the given tag matches specific criteria, such as "
7063051		removes a WSRP channel by name and verifies the existence of the channel.
If the channel does not exist, it creates one using the given channel name and checks if the portlet is still inactive.
If the portlet
7314769		returns the diameter associated with the specified branch count or head count.

This method updates the direction of the call for the specified call count.

This method creates a new list of contacts.

This method sets the list header
7314833		takes in a pipe, a parallel number of elements, and a name, and returns a cutsheet info object. It populates a parameter with information about a PipeFitting object, based on the provided Pipe's provided port and data type
7314870		swaps the signs, writes the signature, and swaps the ends of the attachments, returning the number of to strings written.

This method swaps the signs and signs of the provided ByteBuffer, it starts with one and compares the sizes of
7315104		adds an entity to the drawing area associated with a specified drawing area and entity. 
This method initializes and renders an entity to the drawing layer.
SUMMARY
This method is used to add an entity to the drawing
7315357		returns the adjusted target hole for the given BigDecimal, adjusting the thickness of the target pipe if necessary to avoid ties beyond 10%. Otherwise, an exception is thrown.

This method calculates the adjusted thickness of the given target coefficient by
7316071		initializes a "Close" button with an exit key and defined button handle.

This method initializes a "closeButton" within a "General" object.

This method initializes a new button with a specific label and action
7316081		initializes the tabbed pane for the program, which is used to display information about the product's software, such as the version, release date, and memory usage. It also initializes the tabbed pane for the program details.
S
7316383		sets the author of the user based on a string with spaces in the correct format. It logs the input string and sets the author field to the decoded URL if the trimmed URL is valid.

This method sets an authorized flag to the
7316417		returns the details of the protected publication as a string. If the publication is not public, it returns an empty string. Otherwise, it appends the data between the pub and pub details to a buffer.

This method returns a formatted
7316438		specifies the name of the name variable, with a default value of an integer if the specified plural number is 0 or if the plural number is 1.
This method adds the given field name to the name variable by replacing any caractors
7316474		initiates the beginning of a new publication for creating a new user for an author's publication entry. It ensures that it is not started before an authorization entry needs to be created. It then adds the author, publication details, and pages to
7316528		ends the addition of publications and commits them if not in auto-commit mode.

This method adds publications to a data structure, starts adding publications, clears the vector at the beginning, and commits the changes.

This method adds publications
7348898		overrides the default serialization mechanism and attempts to convert the object, then sets the formatted value to the string representation of the object if necessary. It then copies all the fields of the original object into the calling object. The method continues until
7349034		adds a line to a list of directed lines, stores their coordinates, and sends a change event.

This method adds a link between two vertices and adds a line of the polygon to the list of directed lines.


7349054		emits an event for a specific type of change signal, including updating the notification and broadcasting a change event.

This method emits a change signal to the given diagram if the diagram node is not null.

This method returns the diagram
7349072		calculates the length of a box using its bounds.
SUMMARY
This method is used to calculate the number of sides on a line segment that the given node will take into account the tree's size and positions.


7349184		sets the database information for the object and notifies of listeners.

This method sets the database information for the object if it is not null.

This method sets the parameters of the object if the single parameter is not null, otherwise
7349212		retrieves a diagram from a list of diagrams based on its title.
SUMMARY
This method is used to get a diagram with a specified title from a list of diagrams.


7349219		adds a Diagram2D object to a project by creating a new LocalModel object, converting it to JComponent, and then adding it to a list of diagrams.

This method adds a Diagram object to a Project's Di
7349342		calculates the total size of the `Resident` object in the database.
SUMMARY
This method is used to calculate the total size of the `Resident` object in the database.


7349354		calculates the extent size of an object by iterating through its objects and summing the sizes of their connections. The resulting extent size is then adjusted for alignments to fit within the minimum extent.
SUMMARY
This method
7350597		returns the index of the highest element index in the ChiSquare array greater than or equal to the specified maximum value.

This method returns the ChiSquare value in the ChiSquareArray, which is the value at that index.

7350654		returns the nested diagram at a given position. If the position is 0, it returns the simple diagram, the nested diagram recursively, and not the simple diagram at the end. If the position is not 0, it returns the nested
7350691		calculates the maximal size of the Hashtable that contig's contents, considering the number of constraints and enabling tab stops.

This method returns the maximal size of the Hashtable that contig's contents, considering the number of constraints
7370284		extracts tags of a file from a given ASF file and the given result string or string, and stores them in a variable called result variable. It then converts the file to XML format before returning the result as a file.
S
7370287		extracts the bookmark files for all tables in the database. It checks if a specific file exists and is a directory, and if so, it attempts to extract the database file and append the file name to it. If the file exists and
7370321		writes data from input BufferedReader to output BufferedWriter.

This method creates a list of unique IDs by reading lines from the input reader.

This method closes the input reader and renames the BufferedReader object to
7475445		receives all parameters from the given element, performs a data action, and performs a switch action based on the type of action requested, including playing audio, videos, and using or decoding the state of the corresponding command, for example.

7475492		takes a MessageDigest object and returns a String representation of its message digest. It converts the MessageDigest object into a hex-encoded string.

This method converts the method name of the message digest into its corresponding method name
7475528		sets various properties based on the values passed in as parameters.

This method evaluates values passed in as parameters and sets properties accordingly.

This method evaluates values passed in as parameters and sets properties accordingly, based on the values passed in.
7475547		opens a connection to an URL using the specified URL for HTTP POST, with options for a back parameter, back parameter, and a refresh parameter.

`open` method is used to open a connection to an URL using some specified parameters.
7475577		retrieves the type of the active online network (Wifi) and initializes variables to set the network info.

This method resets and returns whether the connection has been established.
SUMMARY
This method is used
7475614		sends an SMS message to the specified recipient with the given text message.

This method allows the user to view the SMS text.

This method allows the user to list the SMS recipients.
SUMMARY
This method
7475813		resets the contents of the view by removing its view and resetting its layout.
SUMMARY
This method is used to reset the layout after removing the current view.


7479356		sets the endpoint address for the specified port name.
This method sets the endpoint address for the specified port name.
This method sets the end point address for the specified port name.
This method sets the endpoint address for the specified port name
7483700		searches a message for a specified language in the bodies of a given message.
This method retrieves the body associated with a given language from a list of bodies.
This method returns the body of the message with the specified language.
7484956		sets the current chat state to a new state. If the chat state is null, it throws an exception. If the new chat state is normal, it sets the new chat state and state to the current chat state. If the new chat state
7485850		creates a new XMPPConnection object, sets the host and port, and configures the connection config.
This method is designed to test that the createConnection method returns a null connection.
This method creates a new XMPP
7485890		tests the creation of a local error by attempting to create an XMPP error with a condition of "item-not-found".

This method creates a local error with a specific value, verifies that the error's code is not
7485954		tests sending a roster message to a user. It sends a presence message, and then checks if the message is in the appropriate format. It asserts that the message contains the expected number of roster items and that the roster is unmodifiable to make
7485987		tests that executing the `testDiscoverPublishItemsSupport` method in the `ServiceDiscoveryManager` class can publish all items using the `getServiceName()` argument.

This method is part of testCanPublishItems method
7485995		sets up for testing a user with XML files with XMPP connections, asserts that a connection is established, logs in as a test user, and adds a password to a test account.

This method overrides the tearDown method of
7486140		creates and initializes a media session with a specified payload type, remote transport candidates, remote channel, and Jingle session.
SUMMARY
This method is used to connect a MIDI media session to a remote channel, using a
7486438		initializes and waits for the chat request to be signed if specified, otherwise it prints an error message.

This method initializes, waits for the chat request to be signed if specified, otherwise it prints an error message.

This
7486505		processes an incoming Jingle event of type Jingle and checks for reserved peers.
If the event is of type Jingle, it checks for reserved or unavailable candidates and starts offer candidates if none are found.
SUMMARY

7486512		handles incoming Jingle events, extracting data from the event and performing specific actions, such as starting or stopping TransportCandidates, handling IOExceptions, and updating XMPP connection properties.
SUMMARY
This method is used
7486650		sets the specified state to the new state, calls the `beforeChange` and `afterChange` methods of all `JingleSessionStateListener` listeners, and calls the `setState` method for all `JingleSessionStateListener`
7486706		adds a session to aningle and iterates through a list of listeners to notify them about the creation of a new session.
This method adds a session to aningle and triggers the session created event for each listener.
SUMM
7486735		installs connection listeners and listeners upon connection closure from an XMPP connection.
This method locks the service, retrieves XMPP connection, unregisters XMPP service instances, creates a new XMPP session, runs it
7486800		takes a JID and waits for an outgoing session to become available.
This method returns a JingleSession that is available for further processing.
This method adds an outgoing invitation listener to a Jingle session and sets the current state of
7486803		rejects an incoming Jingle session, provided the request is not a normal session.
This method receives a Jingle request. It checks if the request has a "accept" parameter and removes it if so, otherwise it creates a reject
7486868		terminates the session with a reason associated with the user.

This method terminates the session with a reason provided in the form of Jingle exceptions.

This method terminates the session with a reason from the reason.


7487967		adds a resource to a configuration, either locally or remotely, by reading and parsing the resource name and class loader.

This method resolves a mapping by reading the class loader of a resource and then adding it to the configuration.


7487974		adds the configuration to the hibernate mapping helper for a given persistent class.

This method attempts to retrieve and read the mapping files to create classes.

This method creates classes and appends them to the configuration.


7524730		adds a whiteboard to the local whiteboard array if it is not already there.
This method updates the whiteboard array tracker and calls the setWhiteboard method.
SUMMARY
This method is used to update the white
7700652		sends a private message to the map with the given key and object. It creates a KeyedObject and a Storeable object, enqueues a call to the DHT, and dumps the key-value pair to System.out.
7701050		adds a property with a key and a compressed value to the HTML document. If the value is null, it throws an IllegalArgumentException. The comment is appended to the end of the comment, followed by a "if" and
7701078		puts a boolean value with a given key and a null terminator into the hash map, returning false if the value is less than 0, otherwise it returns true.
This method first ensures a specified language and checks for validity before assigning the
7701085		adds a 32-bit compressed long-long to a hashtable, first checking that the value is greater than 0. If it is less than or equal to 0, an appropriate exception is thrown. If the value is greater than or equal
7701105		This method returns a byte array representation of a provided key. If the key is null or the encoded value is null, it returns the encoded value without encoding. It sets the returned byte array to the parsed key or, if it's not null
7701112		retrieves an integer value associated with a key, checks several scenarios for exceptions, and returns the result as a String.
SUMMARY
This method is used to retrieve an integer value associated with a key, optionally checking for exceptions
7701120		returns a long value associated with a given key, throwing exceptions if the key is not found or the data is invalid.

This method takes a string parameter, the key and the value. It then gets a long value from the database
7701176		purges the database by clearing the database. It gathers all system table and all tables, and retrieves the system tables from the application. It then purges any entries that do not meet the specified criteria. Finally, it sets the database to
7701692		writes the server's internet address, port, and IP address if the socket address is an IPv4 address and not an unresolved InetSocketAddress.

This method writes a line by line to the output stream followed by a header.
773404		creates a control in the preferences group with a layout containing two sub-groups: _General Info 1, _General Info 2, _General Info 3, _General Info 4, and _General Info 5. It also creates a control in
773456		imports a node of a document from another manager XML element into a new manager XML document.
This method imports child nodes of a given parent element into a tree, recursively checking child nodes of the parent level.
This method starts
773557		starts the bundle by dynamically loading a parser class, gets the resources to test, preloading DOM parsers, and initializing parsing nodes for a test case.

This method logs any errors encountered during the deserialization process.

774013		adds a new entry to the feed, optionally appending and checking for undefined feed titles. It also compiles any undefined article IDs or valid articles, and adds the entry to the list of entries.

This method validates the provided
774230		sends an event multiple times, throwing exceptions if either the framework is empty or the event has a timeout. It also sets the framework to maxQueueSize and sleeps for the maximum queue size, then checks the status in the expected case. If
7751561		returns a StringItem object named "stringItem1" if it has been previously initialized, otherwise it initializes it with the specified string and adds a command to it before returning it.
SUMMARY
This method is used to
775462		is a test method that asserts an instance of a serial object by serializing it as a serial instance, loading it again, and then comparing the loaded object to the original.
SUMMARY
This method is used to load a serial
775592		loads and parses an input stream containing a Java registry, an inner class declaration list, the outer classes, and the inner interfaces. It then loads the registry and asserts that the registry also retrieves the inner classes, inner methods, and interfaces
7822416		sets the caching policy for the HttpServletResponse to none if it is not caching.

This method checks if caching is enabled, sets the caching headers, and sets the content type.

This method sets the HTTP version to
7848890		is a paint method that paints the program for printing. If the console is enabled, it initializes the canvas, font and draws a series of colored shapes. For each printing section, every static print statement is drawn. Each section of code is
7848915		draws the control score using the p4vj Java program for real animation.

This method draws the game board using the p4vj Java program for real animation.

This method draws the simulation board using the p4
7849017		sets the size of the camera and the camera configuration, and then retrieves the camera configuration from the p.stream and extracts the scale factors. It sets the camera configuration to the values parsed from the scale factors.

This method initializes
7917952		updates the list of possible relay IDs by getting a list of possible routes, getting each possible relay ID, and updating the routes based on the type of relay found. If the type is "relay1", "relay2", or
7919161		This method sets the notification text field to blank, creates a new table cell editor object, and sets it as the table cell and adds it to the table.

This method listens for mouse clicks on the table and starts listening for changes to
7919183		updates the GUI with the current state of the network and informs all connected peers.

This method updates the GUI with the current state of the server and the application's state. It also logs the new state to the console.


7941400		returns a class with the given name, either from a cache or by creating a new one.

This method gets a list of all classes in the repository, returning an empty list if the repository is empty.
SUMMARY
7941486	:	compares two objects for equality based on the signature of their i_signature fields. If either object has a difference of the signature of the current object, it is contained in an array, otherwise it's not contained. If either object
7945235		returns the DB4Object in which the model will be initted or created. If the model is not a DB4Object, it attempts to create the model using this object. If the model is null, it attempts to create the default
7950747		takes an array of Byte objects as input and asserts that each element in the array is equal to the corresponding value in the wrapper array.

This method iterates over the wrapper array list and asserts the equality of each element in the array
7954954		enhances a database using a source directory and a target directory with BLATL's translational activation and reflection data for regression report.

This method installs Java packages from the classpath.

This method installs Java functions from the class
7955602		loops through the keys in the IndStore map and prints out the key-value pairs as values, which are passed as arguments or to their respective 'exitCommand' and 'showStore' methods.

This method first prints out the
7955604		This method displays both the value of the indswz variable and the value of the variable. It then checks that the indswz array has a non-zero size. If the indswz array has a length of 0, the method
7956015		traverses the source block and transforms it using a cfg if there are any exceptions.
SUMMARY
This method is used to transform the source block using a cfg if there are any exceptions.


7956132		writes the data to the specified output stream, optionally including local variables and indices for each local variable.

This method writes the start location of the local variable list.

This method writes the start location of the local variable list.
7956174		overrides the default toString() method to return a string representation of the code object.

**toString() method:**
This method overrides the default toString() method to return a string representation of the code object.
7956292		returns an OutputStream for the specified filename.

This method creates a File instance for the specified name using the appropriate classname, then writes the contents of the given file to the String output stream.

This method delegates the creation
7956317		This method reads the attributes of the attribute vector from the given DataInputStream.
SUMMARY
This method is used to read the attributes of the attribute vector from the given DataInputStream.


7956559		checks if a set of instructions contains a category of interest that is always an allowed category, giving a specific error.

This method returns the first element in the set of instructions, i.e. if the categories are okay, or 0
7956699		visits a static field expression if the global flags of the program are set to compile locally. If the match count is greater than 0 and a non-volatile flag matches any of the expression's static fields, the field is released. Otherwise
7956756		adds a long branch to the local variable table, either in the local variable table or in the local variable table by defining the correct variable.

This method adds a long branch to the local variable table.

This method adds a
7956759		takes a PrintWriter and an indent as parameters and prints out one or more root nodes represented as root nodes with a full-print of indentations.

This method iterates over the roots of a TypeNode and prints out each one
7956760		adds a label to the code array and increments the branch count.
This method adds a branch to the code array by adding the maximum instruction and the line wrapping rule.
This method adds a label to the code array and increments the branch
7956764		adds an opcode to the bytecode, handling both endian, and optionally generating end instructions.

This method adds an opcode to the bytecode, based on the boolean passed in. It handles tableswitch and tabswitch
7956768		adds a byte to the pool of ByteCells in a circular buffer. If the pool has reached its maximum size, the method creates a new array and adds it to the linked list. Otherwise, the array is represented as an array of
7957324		creates a new local variable in the current code block if one is defined. It initializes the local variable location, sets the modified flag, adds all necessary information, and returns the new local variable.

This method adds a local variable
7957344		adds an instruction to the code, optionally checking for deletions and handles errors.

This method handles an error for a try-finally block, ensuring it throws the exception associated with the caught exception.

This method adds an
7957370		adds a phi clause to the source clause. It checks if the clause is null, sets the parent of the clause to the current clause, and if the place is null, it creates a phi join statement to be executed instead of
7957373		adds catch phi of a given block to the list of catch phis for the current block.

This method visits switch statement, creating multiple register indices and pushing the variable and expression to the program.

This method initializes
7957374		adds a phi block to the code structure, either by adding a ret phi or assigning it a value

This method adds a new register to the register list, which is a single-inlined version of the value.

7957378		This method reads a file and prints it out to the console. It first checks if the program is locked and the file name is valid. If not, it prints "Running checks file" to the console. If the program is locked, it
7957397		compares the type of two objects and returns true if they are both CLASS, STRING, FLOAT, LONG, DOUBLE, UTF8, or FIELD_REF, or false if they are not.
This method returns
7957420		loads a class by name from a file. It creates an editor, defines a Java class, and sets the file's directory. It then reads the class into a byte array and attempts to get the class file. If the class file does not
7957592		recursively visits a graph node, counts the number of nodes in its successor and the predecessor and the predecessors, and then calculates the maximum number of edges in their edges. It then updates the node count and checks to see if any of the
7957602		prints instructions in a Java program, including methods for printing a simplified expression, converting symbols, and performing code generation.

This method visits a generated statement, updates statement variables using an expression to create a list of phi variables, and prints
7957674		removes an edge between two blocks in a process, first removing the edge name and then removing the source block.

This method removes edges from the graph, removing them from the graph and also removing them from the graph if the graph is
7957682		takes two BlockNodes as input and cleans up any unreachable blocks in the operand, removing those that have no phi-related statements. It also removes any targets from the operand, and adds the instruction code to the new
7957684		finds the largest child of an existing node by iteratively traversing the children of the parent node and handling any paths that may occur during the traversal.

This method also updates the parent node of the given node in a sorted-
7957686		allows for the deletion of an element from the tail of a binary tree. It first checks if the current element is less than the element in itself and if the neighbors are equal. If either of these conditions is false, it removes the element and
7957692		adds a real expression to a worklist, saving its position, and printing the worklist's string representation if debug mode is enabled. It also initializes the list and adds real expressions to it.

This method processes a real expression
7957792		creates a new block by copying the current block by creating a new block with the same first branch as the original block and setting it to a copy of the previous block. The copy operation includes cloning and recursively clones through statements within the
7957825		prints the HTML representation of a throwable object to a PrintWriter.

This method prints a header to a PrintWriter, including the file name and the line separator.

This method prints the HTML representation of a throwable object
7957940		removes a range of elements from a list and cleans up stored statements using the cleanUp method.

This method removes a field with the specified name from the list. If the field is newly indexed, it is removed and the list is
7957957		returns a collection of operands that are referenced by both operands (of type T).

This method verifies that the operands of a simple infix expression are also included in a set of valid basic blocks.

This
7957985		iterates through the children of a rectangle and calls the specified TreeVisitor on each child.

This method visits each child of a rectangle, and calls the specified TreeVisitor on each child using a provided TreeVisitor.
S
7958230		allows for the merging of two expressions, where the first expression is replaced with a replace method that takes an array of arguments and an object that the operator is applied to. The method then attempts to generate a new expression for each object in the array
7958237		adds a statement after another statement.
This method adds a statement to the tree.
This method adds statements to the tree with the given statement.
SUMMARY
This method is used to add a statement before another statement to
7958262		adds a statement before a given instruction. This method calculates the branch position of the jump before the given instruction and puts it in a map. Finally, it increments the mapping of instruction counter and invokes the necessary methods.
SUMM
7958842		visits a store instruction and translates potential goto operands.

This method visits a load instruction and translates a value.

This method visits a invoke instruction.

This method visits a load instruction.

This method visits a
7960728		visits and handles JSR expressions, pushing the return address after popping the value from the stack.
This method populates the stack and adds a ReturnAddressExpr.
This method adds the return address to the stack and pushes the value
7961202		visits an operand by extracting dimensions from an operand and creating a new array expressions that are divided into two integers. The method then loops through the dimensions of the operand and pushes each dimension onto the stack as a new array expressions.
7961289		uses a TreeVisitor interface to traverse a tree tree and determine the types of nodes in an abstract syntax tree (AST).

It visits nodes in an abstract syntax tree, ensuring their statements are visited and semantic predicates.

This
7974560		establishes a client connection and connects the service if the service is available, otherwise throws a DCOMException.
SUMMARY
This method is used to establish a client connection if the service is available, by connected to the server
7974586		Initializes the MSF logger with all logging levels and configures it with the specified context.

This method sets the logger level to Level.ALL and includes a filter that filters MSAUDIConfig based on configuration type.

8003687		draws either a quotation or a line based on the specifiedformation. If the planning mode is false, it draws the quotation, line, or circle according to the planning mode. It also draws the rotation and size in the vertical direction.

8033485		retrieves the LoginEntityFacadeLocal instance by performing JNDI lookup using the InitialContext object.

This method returns the LoginEntityFacadeLocal instance found in the InitialContext, creating a new one if necessary.
S
8033488		looks up and returns the Users entity facade.
This method initializes the UsersEntityFacade local and the Connection pool, looks up the UsersEntityFacade local, and initializes it.
SUMMARY
This method is
8033492		looks up and returns the local instance of ScripsExchangeEntityFacade, which is a local instance of the class NewsApp service.

This method uses a facade to get the instance of ScripsExchangeEntityFac
8102879		loads data from a word list into the GUI, including the list data, word, hyphenated and indented whitespace, and other user-specified fields.
SUMMARY
This method is used to load and update a list
8119607		authenticates a user and generates a vote for the login. It retrieves the username and password from the username and password input, and uses them to log in the user.
This method authenticates a user using a password. If the login
8155712		sets the alignment of a component based on the specified integer value. It adjusts the alignment based on the value of the integer parameter.

This method translates the content of a rectangle within a specified rectangle to a specified rectangle center. It sets the
8208288		displays a document view by showing the document detail view, including the details and key of the document, and adding a new panel to the main view with the document details, key, and key.
SUMMARY
This method is
8208306		processes changes to TextBoxes and sets the okay button state accordingly, canceling the operation and adding an empty string as the isEmptyField flag is not triggered.

This method sets a value on an eventable object.


8242037		logs out the current user by logging in and calling the logout method of thelc variable, and then setting lc to null.
SUMMARY
This method is used to log out the current user.


8252771		adds a child TrackNode to the current TrackNode.
This method adds a child TrackNode to the current TrackNode.
This method gets the next TrackNode.
This method removes the current TrackNode as it is about to be
8252825		takes a string input and returns the corresponding IP address of the input, prioritizing the database case.

This method returns an IP address determined by the compareWithAnchors method, with "dbSorting" property set to true
8253309		adds an eye translational transform to the viewpoint transform group.

This method sets the viewpoint transform from the view transform group.
SUMMARY
This method is used to set the viewpoint transform from the viewing transform group.


8342046		creates and retrieves the JPanel control for setting the size of the intervall and actual panel, it also adds three sliders to the control based on the selected slider and its firing value.

This method returns the JSl
8342053		returns the start button, creating one if it does not exist and adding an ActionListener to it.
This method returns the time slider, creating it if it does not exist and adding a ChangeListener to it.
This method returns the
8381657		adds a WeaveBasicObject to a map and stores it, checking whether it already exists before inserting it. If an exception occurs during this process, the method inserts the object again and logs a warning. The method then throws a SQLE
8381677		configures the object by getting the configuration file property, resolving the enumeration "MESSAGE_VAL_PREFIX" property, and then resolving the system property "DTR_VIEW_ROOT_NAMES_DIR"
8381683		closes the Berkeley db connection, closes the environment store, and closes the datastore.

This method, second, tests the close operations of the datastore, loading a normal file from a temporary file, closing the environment store
8422392		converts a string containing data to a Byte object with a specified locale and throws a ConversionException if the conversion fails.
SUMMARY
This method is used to convert a string containing data to a Byte object with a specified locale.
8422452		adds a descriptor to the list of providers if it does not already exist.

This method sends a plugin descriptor to the server using the specified channel name.
SUMMARY
This method is used to add a descriptor to a
8422487		takes a URI string and normalizes it by removing any trailing slash character from each URI string. It then returns the normalized string.

This method normalizes a URI string by removing any trailing slash characters from each empty string.


8474791		adds a URL to the list of starts currently in an audio source, adding it as a separate Source object to avoid cyclic references and formatting the view.

This method checks for illegal characters in a URL buffer and throws an exception if
8474801		checks if a content type is "text/html" or "application/xhtml+xml" based on whether it starts with "text/html" and sets the content type to "text/html" or "application/xhtml+
8474819		sets a link for a webpage and notifies any waiting threads.

This method is for the onSubmit function, it dispatches an event with the source of the page object and the values.
SUMMARY
This method
8474866		updates the user interface with the previous state of the model and invokes the stateChanged method with a ChangeEvent object.

This method handles the changes to the preview section of a tabbed pane, displaying the previous and next sections,
8474987		initializes the status-level filter settings by parsing user input from JOptionPane and configuring the filter.
This method parses user input from JOptionPane and sets the status, maximum, and minimum limits.
This method
8490064		sets the spell index for a document and creates a new searcher.

This method formats a directory with a meta tag with a prefix indicating the root directory of the document.

This method creates an index of the directory in the database
8490090		adds a word and a list of kgrams to both an index, both indexed and unindexed.

This method overrides the "randomDel" method and logs information about the word and iterates through a list of words
8490217		returns a duplicate of the original NormalizedCounter-Counter by converting the Normalized Counter with a sum of its prior.

This method generates a nested representation of the Normalization Record and returns it as a normalized record.

This
8490226		returns the first argument with a maximum value from the map. If the map contains all the arguments, it returns the result of the function call with this map as the first argument, else returns null. 

This method demonstrates the execution
8506000		appends a given string to the existing prefix if it exists, otherwise it creates a new prefix and appends it to the existing prefix.

This method converts a string to a string by iterating through an enumeration, appending each
8573606		returns the title of the activity, creating it if it does not exist. It sets the content pane to a JPanel and adds a title, title label, and right panel.

This method initializes and returns a JPanel containing
8602575		assigns rounds to players in the game.

This method shifts the rules of a board to their score.

This method creates a player with the given dice rolls and assigns it to the current player based on the turn.

8602585		returns the number of armies received by a specific alien from a ship. It assigns the number of armies calculated by a method call to the getNumArmies() method, and then sends the number of armies to the ship.

This
8602717		establishes a connection to a server using a socket, reads lines from the client until a line is detected, and adds the line to a list of chats.

This method sets up three clients, one for the current chat and another
8602719		creates a thread that continuously listens for incoming connections. If a connection is established, it establishes a connection to the server and adds it to a list of connected clients.
This method is similar to: before sending some data over a connection and
8602741		updates the interface and calculates the turns based on the string passed in as an argument.
This method updates the interface based on the object passed in, specifically the parameters passed in as an argument.
This method updates a board game if the
8737136		returns the path to the file containing the test classes.

This method checks if the current user is the creator of the test class.
This method returns the file path of the test class.
SUMMARY
This method
8752972		retrieves a list of message chains from a connection, which can contain the reason why the message may not be registered, the connection type is either REGISTER, or MOVE. 
The method takes the status of the connection and,
8798058		returns the JPanel named "jPanelEvents" if it has been previously created, otherwise, it initializes it by creating the JPanel, adding JTabbedPane components to it, and finally returning it.
SUMM
8798189		calculates the time consumption factor in seconds between two sets of events as a long integer.

**makeEvents:** This method splits a provided string into events and adds them to the class.

**endThread:** This
8798209		returns a JPanel that contains various other JPanels used for text input and list functionality.

This method initializes the frame by creating all input components and assigning them to one of the used components.

This method sets the
8798257		loads an image using data from a specified file or XML resource. It accepts a file using a provided XML file as input. If the file is not found, it loads an image using a provided XMl resource provided as input.


8798278		loads an image using the ImageIO.read method.

This method loads an image. If the image is not found, it tries to load the image as a bitmap and then, if successful, creates a new ImageProperty instance to
8798770		replaces all instances of a string with another string in a string.

This method takes two strings and replaces the first string in the second string with the second input string in the third string.

This method takes two strings and replaces
8820730		sets up the offscreen buffer for the component to the specified size and coordinates, sets the color to white, and draws the graph.

This method sets up the offscreen buffer for the component to the specified coordinates and dimensions, then fills
8821085		sets a new graph layout cache, clears any previous model, and validates and repaints the graph.

This method changes the layout cache based on the model, updating the cache and displaying the changes if the cache is different from the current
8821603		sets the parent SCInstance and gets the root SCInstance and its thread factory.

This method sets the SCInstance for the current thread and sets the thread name to the value at the current location in the stack.

This method sets
8845373		returns the history text pane which is a JLabel with formatted text and a blue square icon.
- If the history text pane is null, it initializes it with a new JTextPane object and sets it as an instance variable
8845396		takes a file as input and attempts to load a script from that file. If the script is successfully loaded, the current script is parsed and the modified status is retrieved.

This method loads a script from a file, checking that it
8845422		evaluates a given command on a given line of input. It reads the output a command and evaluates it. If the output is "Undefined" (optionally incompatible), it returns the result of executing the command. Otherwise, it returns the
8845457		extracts a macro block from a given input, starting at the given offset, and of the end. If the macro block is not found, an error is thrown. If the macro block is now in a valid state, the method returns
8848428		creates a new MyTagMap object and initializes it with a MyElementTag("mytagmap","myelement","mytagmapDoc","<!-- Insert here DEBUG -- END -->"), then initializes the cache and cacheElem map
8849491		checks if anFive00Code already exists in the database with the given AimsAlliance, if it does not return a value.

This method gets the reminder list of the logged-in AimsAlliance. It checks if the
8850490		accepts an input stream, width, and height as input and checks if either the width or height in them are valid. If they are, it returns true. Otherwise, it returns false.
SUMMARY
This method is used
8867639		builds a spatial query string by concatenating various variables including latitude, longitude, and radius. It uses string templates to create individual queries, such as circles, and spatial queries. The query is then constructed using the SPATIAL query
8868216		tests the paging functionality of the General library by counting the number of pages and assigning the page availability to a document. When over all the pages this is the case, it asserts that the number of pages is equal to 10.

This
8868463		initializes a Solr server instance if the Solr server instance does not already exist.

This method initializes the Solr server that will be used for execution.

This method initialises the Solr server instance if the Sol
8868661		writes a TvShm object to the file, including the TvShm, includingten/midi, lastId, count, and dateLines.

This method writes a TvShm object to the file
8868745		returns a ModelAndView containing a list of WebService objects, after retrieving it from the cache or creating one if it does not exist.

This method iterates over the list of WebService objects, retrieves the ISO codes from
8868795		retrieves a provider message by its key from the provided properties and HttpServletRequest and HttpServletResponse objects. If there is an exception, it throws a ModelAndViewException.

This method retrieves a provider
8868860		adds XML output header and body as a response to the client.

This method overrides the doPost method of the HttpServlet class and handles the HTTP POST request.

This method calls the handleUIAction method
8869115		shuts down the storage by performing a harvest operation on the "org.mortbay.HttpIdentifier" resource using the parameters provided in the "params" map and then calls the "harvest" method with the "name" and "
8869699		prints the statistics for an object, including direct match, alternate name match, searchable, clean name match, clean nsmatch, mustMatch, name match, mustNameMatch, upToSearchMatch, alreadyAddedToNub, duplicateIn
8869848		creates a nub with the specified data resource ID and taxonomic priority if they are not already present, it fetches the data resource using the data resource DAO and creates it with the specified parameters. If there are no data resources associated
8869862		denormalises the taxonomy for a given data resource id in seconds. It logs the denormalising of the taxonomy and updates the log file when the operation is completed.
SUMMARY
This method is used to normalise
8870514		retrieves an Yahoo Request document containing a list of users in a specified country, based on user inputted username, POST code, and country. It attempts to authenticate the user and returns a Google Document if successful.  
This
8870538		checks if a given latitude and longitude is in any of the marriage trees. It does not care, it returns true.

This method returns true if a point is present in any of the marriage trees.

This method returns true
8870587		initializes the bean factory, loads the bean configuration files, generates a SQL statement for loading data from the data source, and writes the SQL statement to the file system.

This method retrieves the data source for the data source configuration.
8870751		tests the getYear() method of the 'StringRecordDates' class to ensure it returns the correct year.

This method tests the `-buildOccurrenceRecordDates` method of the 'StringRecordDates' class to
8871682		generates an SQL statement for searching uids in a database, optionally excluding generated IDs. The method returns the SQL statement as a string.

This method writes the SQL statement to a specified table and columns.

This method writes the
8872191		combines the int value of a string ID and returns a corresponding string value for the passed ID. If the ID is either 1001 or 1002 it returns "AFD," if the ID is 1003 it returns "APC," if
8872213		takes an ID as an argument, looks up the corresponding rank mapper based on the ID, and returns the kind of rank as a string.

This method calls the super.updateData method, fetches the data from the database
8872431		searches for neighbors in a given taxonomy and a given taxon ID, potentially preventing multiple results.

This method searches for records in a given taxonomy to identify families, excluding records that cannot yet exist to avoid discursion.
8872505		This method verifies whether a givenRankType meets the specified rules for synonyms, with a maximum of four criteria. It checks for search by rank, maximum, and maximum of two criteria.

This method verifies that no parameters are
8872758		compares two names by calling `doSciNamesMatch` and `makeSciNamesMatch` on both objects, returning `false` if any objects are null, and `true` otherwise.

This method takes two strings,
8872806		retrieves the value of the "reallsid" field from the element in the index by extracting it from the String value of the argument. If the value cannot be extracted, it returns a blank string.

This method calls the
8873294		sets the endpoint address for the specified port in a web service client, based on the given port name and address.
SUMMARY
This method is used to set the endpoint address for a given port name in the web service client.
8904739		returns an array of Map `cjson` representing the server response if an exception is thrown, otherwise it creates a JSON representation of an exception to be passed to a query from the client.

This method creates a JSON representation of the
8937075		reads a character from the input stream and advances the input position by reading characters until the end of line is reached. This method re-reads characters until the end of line is reached, it resets the scanner to the previous one and checks for
8937214		integrates an ASTInspector object with variables, sets flags for basic, boolean, and double types. It sets node names, types, and types for various Abstract Syntax Tree (AST) nodes extracted from the input ASTInspector
8938054		creates a new include class by using a superclass to add, or to first create a new include class, then adds it from its parent to the module's parents if it exists.

This method adds a new module to the Ruby
8938256		sets the visibility of the specified methods, considering if they are set to: allowing, allowing, dependent, allowing too, hidden, hidden, dependent, hidden, custom, constructor, or native.

This method prepares an Object array for method
8938775		reads data from the data store using a buffer and then stores the result in the data buffer.

This method first gets the bytes from the data store to the specified offset.

This method then gets the bytes from the data store to
8938776		writes data from a given ByteBuffer to the file or input source and returns the number of bytes written. 
This method checks the validity of a file. 
This method returns the size of a data store. 
This method
8939355		creates a RubyModule object for the specified library name and checks its validity and reloadability.

This method retrieves the module with the specified name if it is not in the specified scope.

This method opens the Ruby source if
8939419		initializes the method principal by checking if it has already been initialized. If not, it defines a waypoint, module, name, and other parameters in the waypoint statement. It then creates the error map and calls the superclass's init
8939911		closes the descriptor and flushes a write, then sets the buffer to an empty value. It throws an IOException or BadDescriptorException if an error occurs.

This method closes a descriptor and flushes a write, then
8939914		returns a Java mode string if the resource is writable, create, truncate, or wr is not null, otherwise it returns "rw" to indicate that the resource is writable.

This method outputs an indirection for the
8939927		flushes the buffer to the underlying store and attempts to write any buffered content to the buffer. If successful, it marks the buffer as non-blocking and notifies waiting threads.

This method marks the buffer as non-blocking and
8939936		creates a duplicate of the current `ChannelDescriptor` object, adding the `clone` method to its superclass and returning the new `ChannelDescriptor` object.

This method removes an element from the list and returns
8939938		creates a new channel descriptor with the same file descriptor and direction as the original descriptor. It increments the reference count, gets readers from the file descriptor, sets the file descriptor for the descriptor, gets a reader from the file descriptor and synchron
8939949		writes the data directly from the last page to the underlying data file. It checks for full data and sets the position of the file if required. It finally writes the data to the file channel.

CONTEXT
This method takes a
8940179		calculates the hash code for the object based on the hash codes of the size, type, and vals.

This method encrypts the input by converting it to an array of integers, using a buffer array to format the length
8940188		returns the index of the first occurrence of the specified integer within the specified range, or -1 if the value was not found.

This method returns the index of the first occurrence of the specified character within the specified range, or -
8940235		checks if a URI starts with a given internal string.

This method checks if a URI path starts with a resource.

This method checks if a URI path starts with a substring.

This method parses a range of
8940403		returns a Java string representation of the object.
This method checks if the object is a RubyString.
This method checks if the double value equals zero.
This method checks if the equals method returns true.
This method checks if
8940456		converts a Ruby object to a string representation using the current context and an invocation helper to invoke it.

This method converts a Ruby object to a string with quotes in their real parts.

This method converts a Ruby string to a
8940461		checks the validity of a string type by converting it to a Java string and raising an exception if the conversion fails.

This method converts string to Ruby type if it is not empty and conforms to Java.
It then creates a Ruby
8940577		evaluates the arguments passed to the method within, given that they are arguments of specific context to perform the same action, the context and the source file, or the line number.

This method handles the evaluation of a callable, returning
8941114		prepares an annotated method for wrap Java by setting the class, its arity, and methods, and setting the call configuration if the Java version is 5 and the interface method is public.

This method sets various properties for an interface
8941308		is a callable function that takes as parameters a Ruby object and a Ruby module, and calls the call method of the given module with the given name and block as arguments.

This method is the main function of the class, it calls
8941309		This method handles callable arguments and returns the result of calling another method with parameters, with arguments optionally including returning the object. It returns true if the call is successful, otherwise it returns false.

This method calls a single method with custom
8941314		calls another method with the given object as an argument within a specified context and its specified name, with an optional block as the first argument.

This method takes "self" as an argument and returns an IRubyObject. It
8941315		takes three arguments, a self object, and three blocks of those arguments, and calls another method with these arguments on the given object.

This method takes three arguments, a self object, a self name, an array of arguments,
8941316		takes a context, field selector, object selector, block and calls the call method with two string objects as arguments. It also returns the name of the method if a block is being replaced, else returns the original name.

This method
8941395		updates the frame with the options specific to the self processor.
This method updates the frame with the errors for the self processor.
This method updates the frame with the help for the self processor.
This method updates the frame with information
8942016		sets a constant value from the current Ruby code object or uses a static definition if one is defined in the current scope.

This method replaces all occurrences of a specified operator in a given Ruby object with a new constant value in the current scope
8942025		creates a caller trace of a specified level for a given Ruby runtime. It adds backtrace elements to the runtime array and returns the resulting Ruby array.

This method overrides the createConstructor method in the parent class and calls
8942093		deserializes the current object from an input stream by calling the default object read method and then calling the `read` method for each `IRubyObject` in the `array`.
This method initializes an array of subarrays
8942432		sets the node information for the function argument node to "function", as well as means the function argument is special, meaning this is a special case.

This method changes the arguments node, it assigns a default value, if the argument is
8943374		This method visits a node in a tree, processing it if it has any child nodes, or by pushing parentheses and indentation if necessary.
This method creates a String containing XML code for a table if the tree cannot contain any child nodes.
8943929		checks if a pre-break statement node is a break statement based on the node type, which can only be an instance of GetNode, CodeStatement, AStatement, ERRORNode, AStatement with a break instruction that may follow the breakloop
8961850		tests the functionality of the Mattern class by opening a new window, adding a message to the window, and then asserting that certain values are set correctly.

This method tests the Mattern class's ability to override the default value behavior of
8961906		adds a PC name to the list of stored PC names.

This method adds the PC name to the list of stored PC names when the new PC name has higher precedence than the current player.
SUMMARY
This method
8961907		releases a child in the Proxy hierarchy, ensuring that only child objects can occur as far members and owned by other objects in the hierarchy. 
The method first calls the super.releaseChild() method to release the child and then checks if
8962048		processes incoming messages, logging them once they are interested in, processing message types, logging the message types and handling them in specific ways.

This method logs a message to the caller if debug logging is enabled.

This method first
8962147		retrieves the path to the installation page for the current system. If the path does not start with "c:/". When "c:/".And the path is absolute and does not start with a slash, it is added; the path
8979436		sets the type of an object, validates it, and throws an exception if it invalid. It also checks the type of the object and throws an exception if it is neither "JvYAML" nor "yaml4j".
8979553		scales a single-value string in YAML format to a specified format, throwing an exception if the data type is malformed.
SUMMARY
This method is used to convert a string value to a YAML format
9009680		increases the capacity of the array `elementData` by the specified amount. It ensures that the length of the new array is 64 by 32 and gets the old array.

This method ensures that the capacity of the array `elementData
9009848		This method reads an object input stream and initializes the object at the specified index.
This method reads in an array length that has been specified to grow a 2-element array to wrap.
This method initializes the object at the specified
9010867		builds member comments for methods in a configuration, including their static, abstract, and interface type. It checks for documentation comments and builds custom annotation methods for documentation tags, documentation, annotations, and annotations.
SUMMARY
This method
9010915		creates and writes the code for every constructor comment in the parameter, including comments and methods.

This method iterates through a list of constructors and calls the buildMethodComments method on each one.

This method builds constructor comments
9010949		builds various data structures to generate Java code to represent the fields of a Java class, including fields with special handling for non-prepose Java, instantiate and destroy methods, and only those named fields.

This method retrieves the
9011211		takes an OutputStream as an argument and returns a PrintWriter object that will write a newline.
This method initializes an output stream and checks if a path exists.
If it does, it attempts to read the log file and
9011965		reads a source file and returns the input file as a CharSequence, throwing an exception if there is an error during reading.
SUMMARY
This method is used to read characters from a given file.


9014068		searches for a specific language, country, and variant within the Locale object, and returns an array of LanguageEnum objects if found.

This method determines if a given language and country combination is relative to any other language or
9014184		sets the starting package path for the program, ensuring that only .html files can be parsed, and iterates through the templates to parse the main XML files.

This method sets the documentation path and path for the root element, if applicable
9014360		retrieves the constant value of the current scope, and if it is not null and the type of the constant exists, it returns the constant value, otherwise it returns the default value.

This method returns the boolean value of the type
9014454		adds a URL to the database if the URL does not already contain that entry.

This method starts a server to iterate through the active sessions and for each active session, it sets the session status for each connection and logs the connection
9014464		This method sets the number of seconds that the message will take. It considers whether to specify the max duration of the message. If no maximum duration has been specified, it sets the number of seconds to specify the preferred maximum.
SUMM
9014466		adds a picture to the controller, starting with a new picture if it is null, and adding it to the background thread.

This method runs a thread to capture text and draw a double, timeline, or an image.

9014490		sets the visibility of the status bar in the status bar pane.
This method adds listeners to the specified JComponent object, also when the component is selected, calls the appropriate method based on the type of component.
SUMMARY

9014569		returns the row number of the cursor, which is calculated by checking if the cursor's position is less than the line start position, and if so, it returns the regular expression pattern. The method then advances the cursor to the position in the
9014639		updates the URL property to a new value, firing a property change event if the URL is different from the current URL.

This method is used to ensure that only one property change occurs for the current URL.
SUMMARY
9014652		displays an about dialog with information about the software.

This method creates an About object for a given software ID.

This method adds a URL to the source code.

This method adds an About button to the source code
9014706		unretrieves the character at the current cursor position from the source.
This method puts a double value at the specified position.
This method returns the next character from the source.
This method parses a string and sets the result
9014716		retrieves an attribute from the page data and ensures that it is empty. It then iterates through the attributes, including characters, attributes, names, and values, and checks for non-null values. If no valid values are found,
9014719		checks if the page has a valid value and is present within a valid range, returning true or false accordingly.

This method checks if a text field is valid, and returns a boolean indicating the validity.

This method is used to
9014735		searches for an attribute with a given name within a set of attributes, returning the attribute if found, otherwise returning null.
SUMMARY
This method is used to search for an attribute with a given name within a set of
9014739		adds a new URL to the history list viewer, but only if the URL is not already present in the history list. If the URL is already in the list, it does nothing.

This method adds a browse button and a toolbar
9014790		retrieves the text content of the cursor at the specified index. It attempts to parse the string returned by mSource and handle any potential illegal argument exceptions. If the parser detects an IOException, it throws an IllegalArgumentException in case
9014807		generates HTML code based on the XML element. It includes information about the tag and its attributes, such as the tag name, type, and namespaces and any missing child elements.

This method generates HTML code that creates an HTML element
9014812		returns a string representation of the object in a compact format.

This method returns a string with details about the object, including its name, text, paragraph position, and header information.

This method returns a string with details about
9014908		accepts an array of nodes, a field filter, and a boolean indicating whether to use recursion. It checks if filtering should be used, and in which case it gets all of all nodes that match the given filter and recursively calls
9014981		modifies the button's selection state based on the provided boolean value and sets the selected state of the button accordingly.

This method sets the selected state of the button based on the provided boolean value and sets the border to a TitledBorder
9014987		searches for a child node of a specified parent node within its parent node's children nodes if found.
SUMMARY
This method is used to search for a child node of a specified parent node within its parent node's children
9014994		notifies listeners that the structure of the model of a tree path has changed.
This method updates the path of the specified node.
This method sets the node name to the value of the specified parameter.
This method sets the value of
9014998		Returns a tag node created from the given start and end index. If the tag has not already been created, it creates a new tag node with the given start index, end index, attributes, content, size, class URL, start index and
9014999		converts a TextNode tree into a string for presentation in plain text format. It maps a regular expression to the output text, handling various special characters and escaping characters as necessary. If it encounters an end-of-line character, it removes
9015023		creates a node for a remark based on the given start and end positions. It handles various tags (e.g., for, for, comment, optional, end) based on the contents of the tag, such as closing the comment)
9015024		lays out the components in the container vertically by adjusting the dimensions of the constraints.

This method calculates the number of visible components in the container and sets the values accordingly.

This method calculates the preferred size of each visible component by
9015083		inserts filter filters into the filter panel at a specified point, or at all if no filters exist.

This method inserts filters into the filters panel at the specified point, either by adding the filters as the start or the end of the
9015113		handles an action event and creates a new text field for entering a locale and adds it to the owner.
This method sets the read-only property of a component.
This method trims the text field to the specified size if it
9015161		This method executes an HTTPGetCommand on a server socket. It enters a loop which reads input from the client and processes commands based on the command received. It parses date and time of the request, creates a data object, and adds it
9015182		takes a URL as input and returns a string that contains the formatted characters from the URL, with spaces added in front of other characters in order.

This method takes a URL as input, and if the current URL is null, it
9015210		checks if a given link is within HTML (Format: text/html) format by checking the validity of its first element and its first child elements. It then extracts specific values for `type`, `url`, `className`, `target`,
9015260		opens a file dialog to specify that the program will open a file located at the specified file path.
This method sets the image location for the program and opens it if a valid location is specified.
This method initializes the GUI components for
9015627		sets up mouse listeners for various filters.

This method modifies the filter by setting up a mouse listener and mouse motion listener on each of the filters.
SUMMARY
This method is used to set up a mouse listener as
9015644		sets up drop targets by iterating through an array of filters, retrieving all enclosing filters and using them to create a DropTarget object for each filter. For any remaining filter, it validates it, ensures it has the name of the type
9015657		sets the value of the tree.
This method expands various fields of the table based on the selected filter and set it to allow a recursive search.
SUMMARY
This method is used to set the expanded state of a filter,
9015697		moves the specified location within the filtered list.
It iterates over the filtered list and moves any enabled filters according to their location and direction.
The filtered list becomes the last filtered list.
It also updates the selection count and transfers
9015729		displays the coordinates of each child frame in the world middle of a given parent frame. It adjusts the coordinates of the frames based on the difference in values between each and its previous centers. If necessary, it adjusts the coordinates of each frame based
9015997		recognizes drag gesture events, obtains the component and an icon, then attempts to select the component's transfer data and drag the drag gesture.
SUMMARY
This method is used to attempt to decode and apply a drag gesture to
9016172		moves a frame down by a specified amount. It displays the frame centered in the frame.

This method displays the frame left by a specified amount. It moves it to the left or right based on the frame position.

This
9105697		sets the endpoint address for the port specified by the portName parameter. If the portName is "ServicoAgendamento", it sets the endpoint address to "RUC" in theplementants of the service using the port name provided
9294248		initializes the graphics to be used by the object, sets the font, draws text, scales the graphics, draws a vertical circle, draws the text, or calls the reset method of the superclass.

This method draws a white-
9294250		switches a pallete to a new one, changing the current pallete index and notifying the listener of the change.

This method requests buffered pixels by creating a work array, copying pixels from the input buffer into the work array
9308592		invokes the doJUnitTest method while sleeping for 2.5 seconds.
SUMMARY
This method is used to prevent blocking other threads from sleeping when there is not already a queue in a queue.


9308805		opens a file for writing, using a FileWriter to append an object to a file with a specified name, and may create a JCheckBoxList to select only one unsaved object when all objects are read.
SUMMARY

9308821		This method initializes a new JMenu by setting the text, orientation, and dimensions of the menu based on the values in the GUI and the properties file. It then sets the current manager to the current manager and updates the value of the current
9308836		handles the actionPerformed event and delegates the execution of other methods in the same order based on the eventType instance.
SUMMARY
This method is used to display a dialog box for searching a file for plugin startup and then
9308839		initializes the plugins by setting the menu options if the plugin file is available, adding shortcuts for adding a new plugin, changes to a backup, and optionally kills the plugins.

This method attempts to load a program profile, setting the program
9308842		performs an action when an item is clicked in a JMenu. It extracts the name of the clicked item, parses the plugin ID and main class, and then attempts to create a plugin instance from the right menu item. If successful,
9309003		copies the keys and values from one map to another and ensures that the transformed puts the keys and values are equal.
This method clones the given map and ensures that the resulting clones are equal. It then iterates through the original maps,
9309004		copies the values from one map to another, prepending the parent range to each value in the original map. It then gets a list of instances that are instances of these classes from the other map object, combining rules, and adding them to
9309010		This method initializes the properties of a class by using a private accessor to set the fields of the class, then calls its super methods and a private setter method. 
It uses a protected accessor to access the constructor of the
9346032		handles the selection of a directory browse button and adds it to the User Interface UI. It closes the file dialog, sets the initial selection, and sets the size, cursor text, and tooltip text of the UI.

This method initial
9346036		returns the context directory path in the Java project's properties file.
This method checks whether a directory exists at a specified location using a FileDialog to prompt the user to select a directory.
This method updates the context directory in the Java
9346475		sets the endpoint address for the given port name and address.
This method sets the endpoint address for the given port name and address.
This method sets the endpoint address for the given port name and address.
This method sets the endpoint address
9485469		checks if aspect mode is enabled in the local mbean server by calling getAspectInfo.

This method returns false, indicating that aspect mode is disabled as the proxy will not be explicitly checked in the MBean server.


9507513		builds a list of storage elements by creating a new list if necessary and populating it with integers representing the number of bytes to be built.

This method builds a list of storage elements by clearing the list, setting all elements to an
960717		takes a List of NameValuePair objects as input and returns a String of the Enumeration-Type parameters in the format ";name=value".
SUMMARY
This method is used to generate an HTTP method for
960722		initializes an HttpClient object with specific parameters including host and port, sets the default proxy, and configures it for network connections.

This method initializes an HttpClient object with the given host and port, adds additional parameters
962231		connects to a manager by email and password, and if the user is authenticated, it checks the company by entering a company name. If a company is not found, an IllegalAuthenticationException is thrown.

This method simply connects to
9773879		decodes a logon packet, extracting the source, destination, and timestamp, and sets the necessary headers and cookies accordingly. It also handles potential errors during decoding when invalid or missing source and target header information, including a valid SEND stream header
9795137		checks if the control is dirty based on the project location. If all of those checks pass, it forces the synchronization to complete with a false value. If only one is selected, it adds it to the cache. If only one is selected,
9795348		closes the table editor with the specified condition, condition, sheet, and grid color.

This method closes all cell editors and variables that were previously set.

This method sets the class of the data editor to the specified action and
9795638		adds a Node to a list of nodes in a GenericObjectEditPart, sets the size of the parent figure to 200 pixels wide and 60px high respectively with black.

This method retrieves the location and size of a given figure
9795653		sets the figure container's layout manager and installs the edit policy to the GESXY layout manager if it's active, otherwise installs it if the figure container is not active.
This method sets the vertical grid layout constraint for the container. If
9795717		opens an editor in focus on the table cell if the current cell in the table is not null.
This method opens the editor in focus by setting the appropriate button actions based on the current focus row and focus cell.
SUMMARY
9795947		sets the selection of the specified component using the specified row and column indices.
This method scrolls the component to the specified row in the table.
SUMMARY
This method is used to scroll a component horizontally to a specified row in
9795972		determines if a cell at the specified row and column is deselected.
This method validates a cell with respect to its location and focus state.
This method validates the specified cell with respect to its location and focus state.
9808159		sets the default layout for a Java Swing application. It creates a new JFrame and sets its layout properties, defines the default properties, and adds three tabs to the frame. It then removes all tabs from the frame and adds them to the frame
9834213		overrides the doCompile method of the delegate class and takes in a URL and a String alias and executes the assembly. It first checks if CSS is enabled and then checks if the alias ends with ".css". If thealiases list
9834246		returns true if compile is needed based on whether the tree is not null and the last build is not modifiable, and has been modified.

This method returns the reason for the compilation. It considers whether the compilation is not allowed.
9834260		returns the source name for a given selector, checking if a path is present and returning the corresponding selector or alias if not present.

This method gets information for a page viewer, including the locale, source name, and editor path.
9834278		returns the URL for the specified path relative to the current directory and saves the relative path if it has been changed.

This method retrieves the URL for the specified path relative to the current directory and updates the relative path if successful.
9834431		initializes a GraceletPhaseListener and sets its listener, cname, href, restricce, and current object. For each application and server applications, it creates attributes for graceful requests, including phase, status, and redirect messages. For
9834455		initializes controllers for Gracelets
9834531		initializes the libraries. If the libraries variable is null, it creates new instances of DynamicCompositeTagLibrary and for each URL found in the libSources, compiles the library. Finally, it compiles all the libraries in the libraries
9834800		performs cleanup tasks before the request phase, including recompiling sources if necessary.

This method calls the afterPhase method of the superclass, iterates through the getMessages() list, sets the message for each message's severity,
9834828		initializes the component, saving stack traces if in trace mode, ensuring that it is initialized, then resuming execution by delegating to a separate method.

This method resets all event handlers for various component objects in the event chain.
9842463		prints an object to the console, where the object can either be an ItextParentObject, ItextChildObject, or a string.

This method prints a message to the console using the provided string parameter. If the message string is
9842674		associates a child object with a given reference name with a parent object in a meta.
This method associates a parent object with another object in a meta.
This method creates a new MetaObjectManager, associates a component with a bean
9842688		invokes the super method, applies its attributes, and returns the result.

This method applies the attributes to a given object, and then calls the super method.
SUMMARY
This method is used to apply attributes to variables
9845319		returns the class name of the script for executing further actions, considering the classpath, filename, and warning messages. If the class contains the help icon, it adds the help menu item to the text area. If the class requires configuration,
9846891		retrieves the controlled class such as the "controls" MetaProperty and assigns it a value based on the read-only status of the meta-property.

This method retrieves the controlled class from the MetaObject, and if
9846957		includes a resource in a Groovy file. It first retrieves the source location, computes the load time, computes the number of visits, and then includes the resource using that number of visits in the source. Based on the specified load
9846969		prints a serialized input object with output data using a serializer on the given writer. If the context is active, it prints the data using the serializer on the wrapped result using the context-writer builder.
SUMMARY

9847617		renders a Java component, adding child content, into the current page, if necessary, recursively recursively calls the superclass method, render method, and character method.

This method overrides the encodeBegin and encodeEnd
9915507		sets the root ID of the relationship using the given long value. If write is true and the resultSet is not null, it updates the root ID in the resultSet with the given meta data and closes the result set after committing the transaction.
9915601		is used to format a SQL query by appending the sql From clause.

This method appends the query to a StringBuffer, first checking if the SQL writer is null.

If it is null, it calls the sqlFrom
9924358		accepts two arrays of strings, param1 and param2, and iterates through the array starting at "country:". If the first string is in the array starting at "country:", it will return the substring between the second and
9924435		generates a message string based on a specified locale and optional parameter. If the message is localized and specified; otherwise, it throws a separate exception.

This method converts a string to an integer, checking for null and format. If there
9924438		returns a Field object at a specified position, calculated based on the specified block size and total size.

This method prints all unknown fields within a directory starting at a new position.
SUMMARY
This method is used to
9924450		compares a given pattern with the given parameter with the current pattern. If a condition is met, it iterates through a loop, calling another compare method to compare each byte, until a match is found or the end of the loop is reached
9924462		paints the logo with the provided graphics object.  It calculates the bounds of the logo, stores the x and y coordinates of the horizontal, sets the background color of the graphics object, and sets the foreground color to black.
SUM
9924467		centers a component within the frame.

This method checks whether the frame remains visible.

This method sets the frame value.
SUMMARY
This method is used to center a component on the screen.


9977798		returns the JSplitPane that contains the vertical split pane. If the vertical split pane has not been created, it is created and added to the split pane's center and right component.
SUMMARY
This method is used
9985738		performs a cascading cut operation on a specified node. It first checks if the node cannot be deleted, then if the node is marked for deletion, it does so. It then iterates through the list of predecessor nodes for duplicating its
9999950		terminates the GM shutdown process, updates the active character, and aborts it, and queues the exit for the GM shutdown action with the total command name and type. If the active character is the main character, it aborts the GMM
