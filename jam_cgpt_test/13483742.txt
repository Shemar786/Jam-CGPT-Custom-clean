TDAT:     public void replace(int depth, Expr expr) {
        for (int i = stack.size() - 1; i >= 0; i--) {
            Expr top = (Expr) stack.get(i);

            if (depth == 0) {
                stack.set(i, expr);
                return;
            }

            depth -= top.type().getSize();
        }

        throw new IllegalArgumentException("Can't replace below stack bottom.");
    }

COM:replaces an expression at a specific depth in a stack of expressions, throwing an error if the desired depth is below the bottom of the stack